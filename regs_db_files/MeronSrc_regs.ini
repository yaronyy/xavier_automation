[DIRECT]
>>BANK_DESC = 1 h00000001


;'>>autodetect_reg=0x80000000 0x01FF0000 0x00A10000


;'[SPACES]
;'VL_Soc_regs 0x8000 16
;'VLSOCReset_regs 0x8001 16
;'MeronSrc_top_regs 0x9000 16
;'MeronSrc_sticky_regs 0x9001 16
;'Meron_Source_dsp_regs 0x9002 16
;'MeronSrc_AFE 0x9003 16
;'MeronSrc_link_regs 0x9004 16
;'ACMD_regs 0x9005 16
;'I2cMstrTadp_regs 0x9007 16
;'qspi_master_regs 0xa800 16
;'MeronSrc_csi_regs 0xc000 16



; REGISTER version_reg Address h80000000
_version_reg = 2147483648 0 32 b00000000000000000000000000000000 RO
version_data = h80000000 0 32 h0 RO HEX
; Desc_version_data Chip Version



; REGISTER rif_intc_1_clear_reg Address h80000018
_rif_intc_1_clear_reg = 2147483672 0 32 b00000000000000000000000000000000 SC
rif_intc_1_clear = h80000018 0 32 h0 SC HEX
; Desc_rif_intc_1_clear Enable Debug Port Access to secure places



; REGISTER rif_intc_2_clear_reg Address h8000001c
_rif_intc_2_clear_reg = 2147483676 0 32 b00000000000000000000000000000000 SC
rif_intc_2_clear = h8000001c 0 32 h0 SC HEX
; Desc_rif_intc_2_clear Clock Source for system clock select



; REGISTER rif_intc_1_status_reg Address h80000028
_rif_intc_1_status_reg = 2147483688 0 32 b00000000000000000000000000000000 RO
rif_intc_1_status = h80000028 0 32 h0 RO HEX
; Desc_rif_intc_1_status generate interrupt by SW. bit 0 corresponds to bit 5 (i2c slave int) in the VPE0 vector, and so on up. Accordingly bits 59:63 are not used.



; REGISTER rif_intc_2_status_reg Address h8000002c
_rif_intc_2_status_reg = 2147483692 0 32 b00000000000000000000000000000000 RO
rif_intc_2_status = h8000002c 0 32 h0 RO HEX
; Desc_rif_intc_2_status generate interrupt by SW. bit 0 corresponds to bit 5 (i2c slave int) in the VPE0 vector, and so on up. Accordingly bits 59:63 are not used.



; REGISTER rif_intc_1_clear_1_reg Address h80000030
_rif_intc_1_clear_1_reg = 2147483696 0 32 b00000000000000000000000000000000 SC
rif_intc_1_clear_1 = h80000030 0 32 h0 SC HEX
; Desc_rif_intc_1_clear_1 clear interrupts in interrupt controller bits [31:0]  for VPE0 - write 1 to clear a specific interrupt source (generates internal clear pulse)



; REGISTER rif_intc_2_clear_1_reg Address h80000034
_rif_intc_2_clear_1_reg = 2147483700 0 32 b00000000000000000000000000000000 SC
rif_intc_2_clear_1 = h80000034 0 32 h0 SC HEX
; Desc_rif_intc_2_clear_1 clear interrupts in interrupt controller bits [63:32] for VPE0 - write 1 to clear a specific interrupt source (generates internal clear pulse)



; REGISTER rif_intc_1_status_1_reg Address h80000040
_rif_intc_1_status_1_reg = 2147483712 0 32 b00000000000000000000000000000000 RO
rif_intc_1_status_1 = h80000040 0 32 h0 RO HEX
; Desc_rif_intc_1_status_1 mask interrupts in interrupt controller bits [31:0]  for VPE0: mask = 1



; REGISTER rif_intc_2_status_1_reg Address h80000044
_rif_intc_2_status_1_reg = 2147483716 0 32 b00000000000000000000000000000000 RO
rif_intc_2_status_1 = h80000044 0 32 h0 RO HEX
; Desc_rif_intc_2_status_1 mask interrupts in interrupt controller bits [63:32]  for VPE0: mask = 1



; REGISTER SI_Int_status Address h80000048
_SI_Int_status = 2147483720 0 32 b00000000000000000000000000000000 RO
SI_Int = h80000048 0 6 h0 RO HEX
; Desc_SI_Int read which interrupts set in interrupt controller bits [31:0]  for VPE0
SI_Int_1 = h80000048 6 6 h0 RO HEX
; Desc_SI_Int_1 read which interrupts set in interrupt controller bits [31:0]  for VPE0



; REGISTER gpio_int_status_0_reg Address h80000120
_gpio_int_status_0_reg = 2147483936 0 32 b00000000000000000000000000000000 SC
gpio_int_status_0 = h80000120 0 32 h0 SC HEX
; Desc_gpio_int_status_0 read which interrupts set in interrupt controller bits [63:32]  for VPE0



; REGISTER gpio_int_status_1_reg Address h80000124
_gpio_int_status_1_reg = 2147483940 0 32 b00000000000000000000000000000000 SC
gpio_int_status_1 = h80000124 0 32 h0 SC HEX
; Desc_gpio_int_status_1 clear interrupts in interrupt controller bits [31:0]  for VPE1 - write 1 to clear a specific interrupt source (generates internal clear pulse)



; REGISTER gpio_int_status_2_reg Address h80000128
_gpio_int_status_2_reg = 2147483944 0 32 b00000000000000000000000000000000 SC
gpio_int_status_2 = h80000128 0 32 h0 SC HEX
; Desc_gpio_int_status_2 clear interrupts in interrupt controller bits [63:32] for VPE1 - write 1 to clear a specific interrupt source (generates internal clear pulse)



; REGISTER reset_configuration_bus Address h80000154
_reset_configuration_bus = 2147483988 0 32 b00000000000000000000000000000000 RO
reset_configuration = h80000154 0 32 h0 RO HEX
; Desc_reset_configuration mask interrupts in interrupt controller bits [31:0]  for VPE1: mask = 1



; REGISTER RIF_UART_RX_INT_status Address h80000158
_RIF_UART_RX_INT_status = 2147483992 0 32 b00000000000000000000000000000000 RO
rif_uart_rx_interrupt = h80000158 0 4 h0 RO HEX
; Desc_rif_uart_rx_interrupt mask interrupts in interrupt controller bits [63:32]  for VPE1: mask = 1



; REGISTER RIF_UART_TX_INT_status Address h8000015c
_RIF_UART_TX_INT_status = 2147483996 0 32 b00000000000000000000000000000000 RO
rif_uart_tx_interrupt = h8000015c 0 4 h0 RO HEX
; Desc_rif_uart_tx_interrupt read which interrupts set in interrupt controller bits [31:0]  for VPE1



; REGISTER rif_00_rif_uart_status Address h80000220
_rif_00_rif_uart_status = 2147484192 0 32 b00000000000000000000000000000000 SC
rif_00_rif_uart_err_cnt = h80000220 0 16 h0 SC HEX
; Desc_rif_00_rif_uart_err_cnt read which interrupts set in interrupt controller bits [63:32]  for VPE1
rif_00_rif_uart_tx_fifo_ready = h80000220 16 1 h0 SC BIN
; Desc_rif_00_rif_uart_tx_fifo_ready read which interrupts set in interrupt controller bits [63:32]  for VPE1
rif_00_rif_uart_rx_fifo_ready = h80000220 17 1 h0 SC BIN
; Desc_rif_00_rif_uart_rx_fifo_ready read which interrupts set in interrupt controller bits [63:32]  for VPE1



; REGISTER rif_00_rif_uart_status_1 Address h80000224
_rif_00_rif_uart_status_1 = 2147484196 0 32 b00000000000000000000000000000000 RO
rif_00_rif_uart_tx_fifo_used = h80000224 0 6 h0 RO HEX
; Desc_rif_00_rif_uart_tx_fifo_used Status of Current Interrupt Request
rif_00_rif_uart_rx_fifo_used = h80000224 16 6 h0 RO HEX
; Desc_rif_00_rif_uart_rx_fifo_used Status of Current Interrupt Request



; REGISTER rif_00_rif_uart_fifo_data Address h80000228
_rif_00_rif_uart_fifo_data = 2147484200 0 32 b00000000000000000000000000000000 SC
rif_00_rif_uart_rx_fifo_data = h80000228 0 32 h0 SC HEX
; Desc_rif_00_rif_uart_rx_fifo_data interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 1 to 5



; REGISTER rif_01_rif_uart_status Address h80000240
_rif_01_rif_uart_status = 2147484224 0 32 b00000000000000000000000000000000 SC
rif_01_rif_uart_err_cnt = h80000240 0 16 h0 SC HEX
; Desc_rif_01_rif_uart_err_cnt interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 6 to 10
rif_01_rif_uart_tx_fifo_ready = h80000240 16 1 h0 SC BIN
; Desc_rif_01_rif_uart_tx_fifo_ready interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 6 to 10
rif_01_rif_uart_rx_fifo_ready = h80000240 17 1 h0 SC BIN
; Desc_rif_01_rif_uart_rx_fifo_ready interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 6 to 10



; REGISTER rif_01_rif_uart_status_1 Address h80000244
_rif_01_rif_uart_status_1 = 2147484228 0 32 b00000000000000000000000000000000 RO
rif_01_rif_uart_tx_fifo_used = h80000244 0 6 h0 RO HEX
; Desc_rif_01_rif_uart_tx_fifo_used interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 11 to 15
rif_01_rif_uart_rx_fifo_used = h80000244 16 6 h0 RO HEX
; Desc_rif_01_rif_uart_rx_fifo_used interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 11 to 15



; REGISTER rif_01_rif_uart_fifo_data Address h80000248
_rif_01_rif_uart_fifo_data = 2147484232 0 32 b00000000000000000000000000000000 SC
rif_01_rif_uart_rx_fifo_data = h80000248 0 32 h0 SC HEX
; Desc_rif_01_rif_uart_rx_fifo_data interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 16 to 20



; REGISTER rif_02_rif_uart_status Address h80000260
_rif_02_rif_uart_status = 2147484256 0 32 b00000000000000000000000000000000 SC
rif_02_rif_uart_err_cnt = h80000260 0 16 h0 SC HEX
; Desc_rif_02_rif_uart_err_cnt interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 21 to 25
rif_02_rif_uart_tx_fifo_ready = h80000260 16 1 h0 SC BIN
; Desc_rif_02_rif_uart_tx_fifo_ready interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 21 to 25
rif_02_rif_uart_rx_fifo_ready = h80000260 17 1 h0 SC BIN
; Desc_rif_02_rif_uart_rx_fifo_ready interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 21 to 25



; REGISTER rif_02_rif_uart_status_1 Address h80000264
_rif_02_rif_uart_status_1 = 2147484260 0 32 b00000000000000000000000000000000 RO
rif_02_rif_uart_tx_fifo_used = h80000264 0 6 h0 RO HEX
; Desc_rif_02_rif_uart_tx_fifo_used interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 26 to 30
rif_02_rif_uart_rx_fifo_used = h80000264 16 6 h0 RO HEX
; Desc_rif_02_rif_uart_rx_fifo_used interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 26 to 30



; REGISTER rif_02_rif_uart_fifo_data Address h80000268
_rif_02_rif_uart_fifo_data = 2147484264 0 32 b00000000000000000000000000000000 SC
rif_02_rif_uart_rx_fifo_data = h80000268 0 32 h0 SC HEX
; Desc_rif_02_rif_uart_rx_fifo_data interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 31 to 35



; REGISTER rif_03_rif_uart_status Address h80000280
_rif_03_rif_uart_status = 2147484288 0 32 b00000000000000000000000000000000 SC
rif_03_rif_uart_err_cnt = h80000280 0 16 h0 SC HEX
; Desc_rif_03_rif_uart_err_cnt interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 36 to 40
rif_03_rif_uart_tx_fifo_ready = h80000280 16 1 h0 SC BIN
; Desc_rif_03_rif_uart_tx_fifo_ready interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 36 to 40
rif_03_rif_uart_rx_fifo_ready = h80000280 17 1 h0 SC BIN
; Desc_rif_03_rif_uart_rx_fifo_ready interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 36 to 40



; REGISTER rif_03_rif_uart_status_1 Address h80000284
_rif_03_rif_uart_status_1 = 2147484292 0 32 b00000000000000000000000000000000 RO
rif_03_rif_uart_tx_fifo_used = h80000284 0 6 h0 RO HEX
; Desc_rif_03_rif_uart_tx_fifo_used interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 41 to 45
rif_03_rif_uart_rx_fifo_used = h80000284 16 6 h0 RO HEX
; Desc_rif_03_rif_uart_rx_fifo_used interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 41 to 45



; REGISTER rif_03_rif_uart_fifo_data Address h80000288
_rif_03_rif_uart_fifo_data = 2147484296 0 32 b00000000000000000000000000000000 SC
rif_03_rif_uart_rx_fifo_data = h80000288 0 32 h0 SC HEX
; Desc_rif_03_rif_uart_rx_fifo_data interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 46 to 50



; REGISTER i2cm_00_I2C_fifo_read_mst Address h80000370
_i2cm_00_I2C_fifo_read_mst = 2147484528 0 32 b00000000000000000000000000000000 SC
i2cm_00_i2c_mst_mon_data = h80000370 0 9 h0 SC HEX
; Desc_i2cm_00_i2c_mst_mon_data interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 51 to 55



; REGISTER i2cm_00_I2C_fifo_status Address h80000374
_i2cm_00_I2C_fifo_status = 2147484532 0 32 b00000000000000000000000000000000 SC
i2cm_00_i2c_mst_mon_used = h80000374 0 5 h0 SC HEX
; Desc_i2cm_00_i2c_mst_mon_used interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 56 to 60
i2cm_00_i2c_mst_gen_used = h80000374 6 5 h0 SC HEX
; Desc_i2cm_00_i2c_mst_gen_used interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 56 to 60
i2cm_00_i2c_mst_gen_ready = h80000374 12 1 h0 SC BIN
; Desc_i2cm_00_i2c_mst_gen_ready interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 56 to 60
i2cm_00_i2c_mst_mon_ready = h80000374 13 1 h0 SC BIN
; Desc_i2cm_00_i2c_mst_mon_ready interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 56 to 60
i2cm_00_i2c_ins_data_req = h80000374 14 1 h0 SC BIN
; Desc_i2cm_00_i2c_ins_data_req interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 56 to 60
i2cm_00_i2c_mst_mon_int = h80000374 15 1 h0 SC BIN
; Desc_i2cm_00_i2c_mst_mon_int interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 56 to 60
i2cm_00_i2c_mst_mon_clear = h80000374 5 1 h0 SC BIN
i2cm_00_i2c_mst_gen_clear = h80000374 11 1 h0 SC BIN



; REGISTER i2cm_int_stat_reg Address h80000380
_i2cm_int_stat_reg = 2147484544 0 32 b00000000000000000000000000000000 RO
i2cm_int_stat = h80000380 0 2 h0 RO HEX
; Desc_i2cm_int_stat interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 61 to 63
i2cm_00_i2c_ins_data_req = h80000380 0 1 h0 RO BIN
i2cm_00_i2c_mst_mon_int = h80000380 1 1 h0 RO BIN



; REGISTER rif_uart_tx_int_stat_reg Address h8000038c
_rif_uart_tx_int_stat_reg = 2147484556 0 32 b00000000000000000000000000000000 RO
rif_uart_tx_int_stat = h8000038c 0 4 h0 RO HEX
; Desc_rif_uart_tx_int_stat interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 1 to 5
rif_uart_tx_int0 = h8000038c 0 1 h0 RO BIN
rif_uart_tx_int1 = h8000038c 1 1 h0 RO BIN
rif_uart_tx_int2 = h8000038c 2 1 h0 RO BIN
rif_uart_tx_int3 = h8000038c 3 1 h0 RO BIN



; REGISTER rif_uart_rx_int_stat_reg Address h80000390
_rif_uart_rx_int_stat_reg = 2147484560 0 32 b00000000000000000000000000000000 RO
rif_uart_rx_int_stat = h80000390 0 4 h0 RO HEX
; Desc_rif_uart_rx_int_stat interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 6 to 10
rif_uart_rx_int0 = h80000390 0 1 h0 RO BIN
rif_uart_rx_int1 = h80000390 1 1 h0 RO BIN
rif_uart_rx_int2 = h80000390 2 1 h0 RO BIN
rif_uart_rx_int3 = h80000390 3 1 h0 RO BIN



; REGISTER i2c_sl_status_2_reg Address h800003ec
_i2c_sl_status_2_reg = 2147484652 0 32 b00000000000000000000000000000000 RO
i2c_sl_rx_fifo_used = h800003ec 0 6 h0 RO HEX
; Desc_i2c_sl_rx_fifo_used interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 11 to 15
i2c_sl_tx_fifo_used = h800003ec 6 6 h0 RO HEX
; Desc_i2c_sl_tx_fifo_used interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 11 to 15



; REGISTER i2c_sl_status_reg Address h800003f4
_i2c_sl_status_reg = 2147484660 0 32 b00000000000000000000000000000000 RO
i2c_sl_rx_data = h800003f4 0 9 h0 RO HEX
; Desc_i2c_sl_rx_data interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 16 to 20
i2c_sl_addr_data = h800003f4 9 8 h0 RO HEX
; Desc_i2c_sl_addr_data interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 16 to 20
i2c_sl_rx_req = h800003f4 17 1 h0 RO BIN
; Desc_i2c_sl_rx_req interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 16 to 20
i2c_sl_tx_req = h800003f4 18 1 h0 RO BIN
; Desc_i2c_sl_tx_req interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 16 to 20
i2c_sl_addr_req = h800003f4 19 1 h0 RO BIN
; Desc_i2c_sl_addr_req interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 16 to 20
i2c_sl_sr = h800003f4 31 1 h0 RO BIN
; Desc_i2c_sl_sr interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 16 to 20



; REGISTER i2c_slave_int_stat_reg Address h80000408
_i2c_slave_int_stat_reg = 2147484680 0 32 b00000000000000000000000000000000 RO
i2c_slave_int_stat = h80000408 0 4 h0 RO HEX
; Desc_i2c_slave_int_stat interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 21 to 25



; REGISTER i2c_sl_wd_stop_addr_reg Address h8000040c
_i2c_sl_wd_stop_addr_reg = 2147484684 0 32 b00000000000000000000000000000000 RO
i2c_sl_wd_stop_addr = h8000040c 0 7 h0 RO HEX
; Desc_i2c_sl_wd_stop_addr interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 26 to 30



; REGISTER Ethernet_Mac_Status_0 Address h80000428
_Ethernet_Mac_Status_0 = 2147484712 0 32 b00000000000000000000000000000000 SC
mci_intr_o = h80000428 0 1 h0 SC BIN
; Desc_mci_intr_o interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 31 to 35
pmt_intr_o = h80000428 1 1 h0 SC BIN
; Desc_pmt_intr_o interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 31 to 35
sbd_pwr_down_ack_o = h80000428 2 1 h0 SC BIN
; Desc_sbd_pwr_down_ack_o interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 31 to 35
mac_speed_o = h80000428 3 2 h0 SC HEX
; Desc_mac_speed_o interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 31 to 35



; REGISTER Ethernet_Mac_Status_1 Address h8000042c
_Ethernet_Mac_Status_1 = 2147484716 0 32 b00000000000000000000000000000000 SC
mac_ram_rx_used = h8000042c 0 10 h0 SC HEX
; Desc_mac_ram_rx_used interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 36 to 40
mac_rx_error_cnt = h8000042c 10 8 h0 SC HEX
; Desc_mac_rx_error_cnt interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 36 to 40
mac_rx_packet_cnt = h8000042c 22 5 h0 SC HEX
; Desc_mac_rx_packet_cnt interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 36 to 40



; REGISTER Ethernet_Mac_Tx_FiFo_Status Address h80000438
_Ethernet_Mac_Tx_FiFo_Status = 2147484728 0 32 b00000000000000000000000000000000 SC
mac_ram_tx_used = h80000438 0 10 h0 SC HEX
; Desc_mac_ram_tx_used interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 41 to 45



; REGISTER Ethernet_Mac_Tx_Pkt_Fifo Address h8000043c
_Ethernet_Mac_Tx_Pkt_Fifo = 2147484732 0 32 b00000000000000000000000000000000 RO
mac_tx_packet_cnt = h8000043c 0 5 h0 RO HEX
; Desc_mac_tx_packet_cnt interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 46 to 50



; REGISTER Ethernet_Mac_Tx_Status_Fifo Address h80000444
_Ethernet_Mac_Tx_Status_Fifo = 2147484740 0 32 b00000000000000000000000000000000 SC
mac_tx_status_data = h80000444 0 24 h0 SC HEX
; Desc_mac_tx_status_data interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 51 to 55
mac_tx_status_ready = h80000444 24 1 h0 SC BIN
; Desc_mac_tx_status_ready interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 51 to 55
mac_tx_status_cnt = h80000444 25 5 h0 SC HEX
; Desc_mac_tx_status_cnt interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 51 to 55



; REGISTER Ethernet_Mac_Rx_Status_Fifo Address h80000448
_Ethernet_Mac_Rx_Status_Fifo = 2147484744 0 32 b00000000000000000000000000000000 SC
mac_rx_status_data = h80000448 0 32 h0 SC HEX
; Desc_mac_rx_status_data interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 56 to 60



; REGISTER Ethernet_Mac_Rx_Status2 Address h8000044c
_Ethernet_Mac_Rx_Status2 = 2147484748 0 32 b00000000000000000000000000000000 RO
mac_rx_status_ready = h8000044c 0 1 h0 RO BIN
; Desc_mac_rx_status_ready interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 61 to 63
mac_rx_status_cnt = h8000044c 1 5 h0 RO HEX
; Desc_mac_rx_status_cnt interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 61 to 63



; REGISTER Emac_Mac_Register_8 Address h80000480
_Emac_Mac_Register_8 = 2147484800 0 32 b00000000000000000000000000000000 RO
Emac_Mac_SNPSVER = h80000480 0 8 h0 RO HEX
; Desc_Emac_Mac_SNPSVER interrupt controller 0: defines shadow set of registers for interrupts 1 to 8.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_USERVER = h80000480 8 8 h0 RO HEX
; Desc_Emac_Mac_USERVER interrupt controller 0: defines shadow set of registers for interrupts 1 to 8.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER Emac_Mac_Register_9 Address h80000484
_Emac_Mac_Register_9 = 2147484804 0 32 b00000000000000000000000000000000 RO
Emac_Mac_RPESTS = h80000484 0 1 h0 RO BIN
; Desc_Emac_Mac_RPESTS interrupt controller 0: defines shadow set of registers for interrupts 9 to 16.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RFCFCSTS = h80000484 1 2 h0 RO HEX
; Desc_Emac_Mac_RFCFCSTS interrupt controller 0: defines shadow set of registers for interrupts 9 to 16.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RWCSTS = h80000484 4 1 h0 RO BIN
; Desc_Emac_Mac_RWCSTS interrupt controller 0: defines shadow set of registers for interrupts 9 to 16.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RRCSTS = h80000484 5 2 h0 RO HEX
; Desc_Emac_Mac_RRCSTS interrupt controller 0: defines shadow set of registers for interrupts 9 to 16.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RXFSTS = h80000484 8 2 h0 RO HEX
; Desc_Emac_Mac_RXFSTS interrupt controller 0: defines shadow set of registers for interrupts 9 to 16.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TPESTS = h80000484 16 1 h0 RO BIN
; Desc_Emac_Mac_TPESTS interrupt controller 0: defines shadow set of registers for interrupts 9 to 16.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TFCSTS = h80000484 17 2 h0 RO HEX
; Desc_Emac_Mac_TFCSTS interrupt controller 0: defines shadow set of registers for interrupts 9 to 16.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TXPAUSED = h80000484 19 1 h0 RO BIN
; Desc_Emac_Mac_TXPAUSED interrupt controller 0: defines shadow set of registers for interrupts 9 to 16.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TRCSTS = h80000484 20 2 h0 RO HEX
; Desc_Emac_Mac_TRCSTS interrupt controller 0: defines shadow set of registers for interrupts 9 to 16.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TWCSTS = h80000484 22 1 h0 RO BIN
; Desc_Emac_Mac_TWCSTS interrupt controller 0: defines shadow set of registers for interrupts 9 to 16.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TXFSTS = h80000484 24 1 h0 RO BIN
; Desc_Emac_Mac_TXFSTS interrupt controller 0: defines shadow set of registers for interrupts 9 to 16.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TXSTSFSTS = h80000484 25 1 h0 RO BIN
; Desc_Emac_Mac_TXSTSFSTS interrupt controller 0: defines shadow set of registers for interrupts 9 to 16.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER Emac_Mac_Register_14 Address h80000498
_Emac_Mac_Register_14 = 2147484824 0 32 b00000000000000000000000000000000 RO
Emac_Mac_PMTIS = h80000498 3 1 h0 RO BIN
; Desc_Emac_Mac_PMTIS interrupt controller 0: defines shadow set of registers for interrupts 17 to 24.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_MMCIS = h80000498 4 1 h0 RO BIN
; Desc_Emac_Mac_MMCIS interrupt controller 0: defines shadow set of registers for interrupts 17 to 24.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_MMCRXIS = h80000498 5 1 h0 RO BIN
; Desc_Emac_Mac_MMCRXIS interrupt controller 0: defines shadow set of registers for interrupts 17 to 24.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_MMCTXIS = h80000498 6 1 h0 RO BIN
; Desc_Emac_Mac_MMCTXIS interrupt controller 0: defines shadow set of registers for interrupts 17 to 24.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_MMCRXIPIS = h80000498 7 1 h0 RO BIN
; Desc_Emac_Mac_MMCRXIPIS interrupt controller 0: defines shadow set of registers for interrupts 17 to 24.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_MMCTXIPIS = h80000498 8 1 h0 RO BIN
; Desc_Emac_Mac_MMCTXIPIS interrupt controller 0: defines shadow set of registers for interrupts 17 to 24.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER Emac_Mac_Register_65 Address h80000564
_Emac_Mac_Register_65 = 2147485028 0 32 b00000000000000000000000000000000 RO
Emac_Mac_RXGBFRMIS = h80000564 0 1 h0 RO BIN
; Desc_Emac_Mac_RXGBFRMIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RXGBOCTIS = h80000564 1 1 h0 RO BIN
; Desc_Emac_Mac_RXGBOCTIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RXGOCTIS = h80000564 2 1 h0 RO BIN
; Desc_Emac_Mac_RXGOCTIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RXBCGFIS = h80000564 3 1 h0 RO BIN
; Desc_Emac_Mac_RXBCGFIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RXMCGFIS = h80000564 4 1 h0 RO BIN
; Desc_Emac_Mac_RXMCGFIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RXCRCERFIS = h80000564 5 1 h0 RO BIN
; Desc_Emac_Mac_RXCRCERFIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RXALGNERFIS = h80000564 6 1 h0 RO BIN
; Desc_Emac_Mac_RXALGNERFIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RXRUNTFIS = h80000564 7 1 h0 RO BIN
; Desc_Emac_Mac_RXRUNTFIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RXJABERFIS = h80000564 8 1 h0 RO BIN
; Desc_Emac_Mac_RXJABERFIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RXUSIZEGFIS = h80000564 9 1 h0 RO BIN
; Desc_Emac_Mac_RXUSIZEGFIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RXOSIZEGFIS = h80000564 10 1 h0 RO BIN
; Desc_Emac_Mac_RXOSIZEGFIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RX64OCTGBFIS = h80000564 11 1 h0 RO BIN
; Desc_Emac_Mac_RX64OCTGBFIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RX65T127OCTGBFIS = h80000564 12 1 h0 RO BIN
; Desc_Emac_Mac_RX65T127OCTGBFIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RX128T255OCTGBFIS = h80000564 13 1 h0 RO BIN
; Desc_Emac_Mac_RX128T255OCTGBFIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RX256T511OCTGBFIS = h80000564 14 1 h0 RO BIN
; Desc_Emac_Mac_RX256T511OCTGBFIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RX512T1023OCTGBFIS = h80000564 15 1 h0 RO BIN
; Desc_Emac_Mac_RX512T1023OCTGBFIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RX1024TMAXOCTGBFIS = h80000564 16 1 h0 RO BIN
; Desc_Emac_Mac_RX1024TMAXOCTGBFIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RXUCGFIS = h80000564 17 1 h0 RO BIN
; Desc_Emac_Mac_RXUCGFIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RXLENERFIS = h80000564 18 1 h0 RO BIN
; Desc_Emac_Mac_RXLENERFIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RXORANGEFIS = h80000564 19 1 h0 RO BIN
; Desc_Emac_Mac_RXORANGEFIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RXPAUSFIS = h80000564 20 1 h0 RO BIN
; Desc_Emac_Mac_RXPAUSFIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RXFOVFIS = h80000564 21 1 h0 RO BIN
; Desc_Emac_Mac_RXFOVFIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RXVLANGBFIS = h80000564 22 1 h0 RO BIN
; Desc_Emac_Mac_RXVLANGBFIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RXWDOGFIS = h80000564 23 1 h0 RO BIN
; Desc_Emac_Mac_RXWDOGFIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RXRCVERRFIS = h80000564 24 1 h0 RO BIN
; Desc_Emac_Mac_RXRCVERRFIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_RXCTRLFIS = h80000564 25 1 h0 RO BIN
; Desc_Emac_Mac_RXCTRLFIS interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER Emac_Mac_Register_66 Address h80000568
_Emac_Mac_Register_66 = 2147485032 0 32 b00000000000000000000000000000000 RO
Emac_Mac_TXGBOCTIS = h80000568 0 1 h0 RO BIN
; Desc_Emac_Mac_TXGBOCTIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TXGBFRMIS = h80000568 1 1 h0 RO BIN
; Desc_Emac_Mac_TXGBFRMIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TXBCGFIS = h80000568 2 1 h0 RO BIN
; Desc_Emac_Mac_TXBCGFIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TXMCGFIS = h80000568 3 1 h0 RO BIN
; Desc_Emac_Mac_TXMCGFIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TX64OCTGBFIS = h80000568 4 1 h0 RO BIN
; Desc_Emac_Mac_TX64OCTGBFIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TX65T127OCTGBFIS = h80000568 5 1 h0 RO BIN
; Desc_Emac_Mac_TX65T127OCTGBFIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TX128T255OCTGBFIS = h80000568 6 1 h0 RO BIN
; Desc_Emac_Mac_TX128T255OCTGBFIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TX256T511OCTGBFIS = h80000568 7 1 h0 RO BIN
; Desc_Emac_Mac_TX256T511OCTGBFIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TX512T1023OCTGBFIS = h80000568 8 1 h0 RO BIN
; Desc_Emac_Mac_TX512T1023OCTGBFIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TX1024TMAXOCTGBFIS = h80000568 9 1 h0 RO BIN
; Desc_Emac_Mac_TX1024TMAXOCTGBFIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TXUCGBFIS = h80000568 10 1 h0 RO BIN
; Desc_Emac_Mac_TXUCGBFIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TXMCGBFIS = h80000568 11 1 h0 RO BIN
; Desc_Emac_Mac_TXMCGBFIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TXBCGBFIS = h80000568 12 1 h0 RO BIN
; Desc_Emac_Mac_TXBCGBFIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TXUFLOWERFIS = h80000568 13 1 h0 RO BIN
; Desc_Emac_Mac_TXUFLOWERFIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TXSCOLGFIS = h80000568 14 1 h0 RO BIN
; Desc_Emac_Mac_TXSCOLGFIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TXMCOLGFIS = h80000568 15 1 h0 RO BIN
; Desc_Emac_Mac_TXMCOLGFIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TXDEFFIS = h80000568 16 1 h0 RO BIN
; Desc_Emac_Mac_TXDEFFIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TXLATCOLFIS = h80000568 17 1 h0 RO BIN
; Desc_Emac_Mac_TXLATCOLFIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TXEXCOLFIS = h80000568 18 1 h0 RO BIN
; Desc_Emac_Mac_TXEXCOLFIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TXCARERFIS = h80000568 19 1 h0 RO BIN
; Desc_Emac_Mac_TXCARERFIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TXGOCTIS = h80000568 20 1 h0 RO BIN
; Desc_Emac_Mac_TXGOCTIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TXGFRMIS = h80000568 21 1 h0 RO BIN
; Desc_Emac_Mac_TXGFRMIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TXEXDEFFIS = h80000568 22 1 h0 RO BIN
; Desc_Emac_Mac_TXEXDEFFIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TXPAUSFIS = h80000568 23 1 h0 RO BIN
; Desc_Emac_Mac_TXPAUSFIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TXVLANGFIS = h80000568 24 1 h0 RO BIN
; Desc_Emac_Mac_TXVLANGFIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers
Emac_Mac_TXOSIZEGFIS = h80000568 25 1 h0 RO BIN
; Desc_Emac_Mac_TXOSIZEGFIS interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER Emac_Mac_Register_69 Address h80000574
_Emac_Mac_Register_69 = 2147485044 0 32 b00000000000000000000000000000000 RO
Emac_Mac_txoctetcount_gb = h80000574 0 16 h0 RO HEX
; Desc_Emac_Mac_txoctetcount_gb interrupt controller 0: defines shadow set of registers for interrupts 41 to 48.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER Emac_Mac_Register_70 Address h80000578
_Emac_Mac_Register_70 = 2147485048 0 32 b00000000000000000000000000000000 RO
Emac_Mac_txframecount_gb = h80000578 0 16 h0 RO HEX
; Desc_Emac_Mac_txframecount_gb interrupt controller 0: defines shadow set of registers for interrupts 49 to 56.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER Emac_Mac_Register_71 Address h8000057c
_Emac_Mac_Register_71 = 2147485052 0 32 b00000000000000000000000000000000 RO
Emac_Mac_txbroadcastframes_g = h8000057c 0 16 h0 RO HEX
; Desc_Emac_Mac_txbroadcastframes_g interrupt controller 0: defines shadow set of registers for interrupts 57 to 63.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER Emac_Mac_Register_72 Address h80000580
_Emac_Mac_Register_72 = 2147485056 0 32 b00000000000000000000000000000000 RO
Emac_Mac_txmulticastframes_g = h80000580 0 16 h0 RO HEX
; Desc_Emac_Mac_txmulticastframes_g interrupt controller 1: defines shadow set of registers for interrupts 1 to 8.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER Emac_Mac_Register_73 Address h80000584
_Emac_Mac_Register_73 = 2147485060 0 32 b00000000000000000000000000000000 RO
Emac_Mac_tx64octets_gb = h80000584 0 16 h0 RO HEX
; Desc_Emac_Mac_tx64octets_gb interrupt controller 1: defines shadow set of registers for interrupts 9 to 16.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER Emac_Mac_Register_74 Address h80000588
_Emac_Mac_Register_74 = 2147485064 0 32 b00000000000000000000000000000000 RO
Emac_Mac_tx65to127octets_gb = h80000588 0 16 h0 RO HEX
; Desc_Emac_Mac_tx65to127octets_gb interrupt controller 1: defines shadow set of registers for interrupts 17 to 24.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER Emac_Mac_Register_75 Address h8000058c
_Emac_Mac_Register_75 = 2147485068 0 32 b00000000000000000000000000000000 RO
Emac_Mac_tx128to255octets_gb = h8000058c 0 16 h0 RO HEX
; Desc_Emac_Mac_tx128to255octets_gb interrupt controller 1: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER Emac_Mac_Register_76 Address h80000590
_Emac_Mac_Register_76 = 2147485072 0 32 b00000000000000000000000000000000 RO
Emac_Mac_tx256to511octets_gb = h80000590 0 16 h0 RO HEX
; Desc_Emac_Mac_tx256to511octets_gb interrupt controller 1: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER Emac_Mac_Register_77 Address h80000594
_Emac_Mac_Register_77 = 2147485076 0 32 b00000000000000000000000000000000 RO
Emac_Mac_tx512to1023octets_gb = h80000594 0 16 h0 RO HEX
; Desc_Emac_Mac_tx512to1023octets_gb interrupt controller 1: defines shadow set of registers for interrupts 41 to 48.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER Emac_Mac_Register_78 Address h80000598
_Emac_Mac_Register_78 = 2147485080 0 32 b00000000000000000000000000000000 RO
Emac_Mac_tx1024tomaxoctets_gb = h80000598 0 16 h0 RO HEX
; Desc_Emac_Mac_tx1024tomaxoctets_gb interrupt controller 1: defines shadow set of registers for interrupts 49 to 56.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER Emac_Mac_Register_79 Address h8000059c
_Emac_Mac_Register_79 = 2147485084 0 32 b00000000000000000000000000000000 RO
Emac_Mac_txunicastframes_gb = h8000059c 0 16 h0 RO HEX
; Desc_Emac_Mac_txunicastframes_gb interrupt controller 1: defines shadow set of registers for interrupts 57 to 63.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER Emac_Mac_Register_80 Address h800005a0
_Emac_Mac_Register_80 = 2147485088 0 32 b00000000000000000000000000000000 RO
Emac_Mac_txmulticastframes_gb = h800005a0 0 16 h0 RO HEX
; Desc_Emac_Mac_txmulticastframes_gb Read/Write Current Data on the GPIO pins



; REGISTER Emac_Mac_Register_81 Address h800005a4
_Emac_Mac_Register_81 = 2147485092 0 32 b00000000000000000000000000000000 RO
Emac_Mac_txbroadcastframes_gb = h800005a4 0 16 h0 RO HEX
; Desc_Emac_Mac_txbroadcastframes_gb Read/Write Current Data on the GPIO pins



; REGISTER Emac_Mac_Register_82 Address h800005a8
_Emac_Mac_Register_82 = 2147485096 0 32 b00000000000000000000000000000000 RO
Emac_Mac_txunderflowerror = h800005a8 0 16 h0 RO HEX
; Desc_Emac_Mac_txunderflowerror Read/Write Current Data on the GPIO pins



; REGISTER Emac_Mac_Register_83 Address h800005ac
_Emac_Mac_Register_83 = 2147485100 0 32 b00000000000000000000000000000000 RO
Emac_Mac_txsinglecol_g = h800005ac 0 16 h0 RO HEX
; Desc_Emac_Mac_txsinglecol_g Set GPIO 32 Direction 1 = input



; REGISTER Emac_Mac_Register_84 Address h800005b0
_Emac_Mac_Register_84 = 2147485104 0 32 b00000000000000000000000000000000 RO
Emac_Mac_txmulticol_g = h800005b0 0 16 h0 RO HEX
; Desc_Emac_Mac_txmulticol_g Set GPIO 32 Direction 1 = input



; REGISTER Emac_Mac_Register_85 Address h800005b4
_Emac_Mac_Register_85 = 2147485108 0 32 b00000000000000000000000000000000 RO
Emac_Mac_txdeferred = h800005b4 0 16 h0 RO HEX
; Desc_Emac_Mac_txdeferred Set GPIO 32 Direction 1 = input



; REGISTER Emac_Mac_Register_86 Address h800005b8
_Emac_Mac_Register_86 = 2147485112 0 32 b00000000000000000000000000000000 RO
Emac_Mac_txlatecol = h800005b8 0 16 h0 RO HEX
; Desc_Emac_Mac_txlatecol GPIO Interrupts status and clear upon write



; REGISTER Emac_Mac_Register_87 Address h800005bc
_Emac_Mac_Register_87 = 2147485116 0 32 b00000000000000000000000000000000 RO
Emac_Mac_txexesscol = h800005bc 0 16 h0 RO HEX
; Desc_Emac_Mac_txexesscol GPIO Interrupts status and clear upon write



; REGISTER Emac_Mac_Register_88 Address h800005c0
_Emac_Mac_Register_88 = 2147485120 0 32 b00000000000000000000000000000000 RO
Emac_Mac_txcarriererror = h800005c0 0 16 h0 RO HEX
; Desc_Emac_Mac_txcarriererror GPIO Interrupts status and clear upon write



; REGISTER Emac_Mac_Register_89 Address h800005c4
_Emac_Mac_Register_89 = 2147485124 0 32 b00000000000000000000000000000000 RO
Emac_Mac_txoctetcount_g = h800005c4 0 16 h0 RO HEX
; Desc_Emac_Mac_txoctetcount_g GPIO Interrupts enable, 1=enable



; REGISTER Emac_Mac_Register_90 Address h800005c8
_Emac_Mac_Register_90 = 2147485128 0 32 b00000000000000000000000000000000 RO
Emac_Mac_txframecount_g = h800005c8 0 16 h0 RO HEX
; Desc_Emac_Mac_txframecount_g GPIO Interrupts enable, 1=enable



; REGISTER Emac_Mac_Register_91 Address h800005cc
_Emac_Mac_Register_91 = 2147485132 0 32 b00000000000000000000000000000000 RO
Emac_Mac_txexcessdef = h800005cc 0 16 h0 RO HEX
; Desc_Emac_Mac_txexcessdef GPIO Interrupts enable, 1=enable



; REGISTER Emac_Mac_Register_92 Address h800005d0
_Emac_Mac_Register_92 = 2147485136 0 32 b00000000000000000000000000000000 RO
Emac_Mac_txpauseframes = h800005d0 0 16 h0 RO HEX
; Desc_Emac_Mac_txpauseframes 0 = works as GPIO. 1 = PAD's other option (in case that there's any)



; REGISTER Emac_Mac_Register_93 Address h800005d4
_Emac_Mac_Register_93 = 2147485140 0 32 b00000000000000000000000000000000 RO
Emac_Mac_txvlanframes_g = h800005d4 0 16 h0 RO HEX
; Desc_Emac_Mac_txvlanframes_g 0 = works as GPIO. 1 = PAD's other option (in case that there's any)



; REGISTER Emac_Mac_Register_94 Address h800005d8
_Emac_Mac_Register_94 = 2147485144 0 32 b00000000000000000000000000000000 RO
Emac_Mac_txoversize_g = h800005d8 0 16 h0 RO HEX
; Desc_Emac_Mac_txoversize_g 0 = works as GPIO. 1 = PAD's other option (in case that there's any)



; REGISTER Emac_Mac_Register_96 Address h800005e0
_Emac_Mac_Register_96 = 2147485152 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxframecount_gb = h800005e0 0 16 h0 RO HEX
; Desc_Emac_Mac_rxframecount_gb Read/Write Current Data on the GPO pins



; REGISTER Emac_Mac_Register_97 Address h800005e4
_Emac_Mac_Register_97 = 2147485156 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxoctetcount_gb = h800005e4 0 16 h0 RO HEX
; Desc_Emac_Mac_rxoctetcount_gb These are the straps' values. sIt's different for each project. Please refer to the the chip's spec.



; REGISTER Emac_Mac_Register_98 Address h800005e8
_Emac_Mac_Register_98 = 2147485160 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxoctetcount_g = h800005e8 0 16 h0 RO HEX
; Desc_Emac_Mac_rxoctetcount_g 



; REGISTER Emac_Mac_Register_99 Address h800005ec
_Emac_Mac_Register_99 = 2147485164 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxbroadcastframes_g = h800005ec 0 16 h0 RO HEX
; Desc_Emac_Mac_rxbroadcastframes_g 



; REGISTER Emac_Mac_Register_100 Address h800005f0
_Emac_Mac_Register_100 = 2147485168 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxmulticastframes_g = h800005f0 0 16 h0 RO HEX
; Desc_Emac_Mac_rxmulticastframes_g Pull Enable - Default 1



; REGISTER Emac_Mac_Register_101 Address h800005f4
_Emac_Mac_Register_101 = 2147485172 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxcrcerror = h800005f4 0 16 h0 RO HEX
; Desc_Emac_Mac_rxcrcerror Pull Enable - Default 1



; REGISTER Emac_Mac_Register_102 Address h800005f8
_Emac_Mac_Register_102 = 2147485176 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxalignmenterror = h800005f8 0 16 h0 RO HEX
; Desc_Emac_Mac_rxalignmenterror Pull Enable - Default 1



; REGISTER Emac_Mac_Register_103 Address h800005fc
_Emac_Mac_Register_103 = 2147485180 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxrunterror = h800005fc 0 16 h0 RO HEX
; Desc_Emac_Mac_rxrunterror Pull Direction - Default 1 - Pull Up



; REGISTER Emac_Mac_Register_104 Address h80000600
_Emac_Mac_Register_104 = 2147485184 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxjabbererror = h80000600 0 16 h0 RO HEX
; Desc_Emac_Mac_rxjabbererror Pull Direction - Default 1 - Pull Up



; REGISTER Emac_Mac_Register_105 Address h80000604
_Emac_Mac_Register_105 = 2147485188 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxundersize_g = h80000604 0 16 h0 RO HEX
; Desc_Emac_Mac_rxundersize_g Pull Direction - Default 1 - Pull Up



; REGISTER Emac_Mac_Register_106 Address h80000608
_Emac_Mac_Register_106 = 2147485192 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxoversize_g = h80000608 0 16 h0 RO HEX
; Desc_Emac_Mac_rxoversize_g Drive Strength - Default 00 - weakest drive



; REGISTER Emac_Mac_Register_107 Address h8000060c
_Emac_Mac_Register_107 = 2147485196 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rx64octets_gb = h8000060c 0 16 h0 RO HEX
; Desc_Emac_Mac_rx64octets_gb Drive Strength - Default 00 - weakest drive



; REGISTER Emac_Mac_Register_108 Address h80000610
_Emac_Mac_Register_108 = 2147485200 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rx65to127octets_gb = h80000610 0 16 h0 RO HEX
; Desc_Emac_Mac_rx65to127octets_gb Drive Strength - Default 00 - weakest drive



; REGISTER Emac_Mac_Register_109 Address h80000614
_Emac_Mac_Register_109 = 2147485204 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rx128to255octets_gb = h80000614 0 16 h0 RO HEX
; Desc_Emac_Mac_rx128to255octets_gb Drive Strength - Default 00 - weakest drive



; REGISTER Emac_Mac_Register_110 Address h80000618
_Emac_Mac_Register_110 = 2147485208 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rx256to511octets_gb = h80000618 0 16 h0 RO HEX
; Desc_Emac_Mac_rx256to511octets_gb Drive Strength - Default 00 - weakest drive



; REGISTER Emac_Mac_Register_111 Address h8000061c
_Emac_Mac_Register_111 = 2147485212 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rx512to1023octets_gb = h8000061c 0 16 h0 RO HEX
; Desc_Emac_Mac_rx512to1023octets_gb Drive Strength - Default 00 - weakest drive



; REGISTER Emac_Mac_Register_112 Address h80000620
_Emac_Mac_Register_112 = 2147485216 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rx1024tomaxoctets_gb = h80000620 0 16 h0 RO HEX
; Desc_Emac_Mac_rx1024tomaxoctets_gb Drive Strength - Default 00 - weakest drive



; REGISTER Emac_Mac_Register_113 Address h80000624
_Emac_Mac_Register_113 = 2147485220 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxunicastframes_g = h80000624 0 16 h0 RO HEX
; Desc_Emac_Mac_rxunicastframes_g Drive Strength - Default 00 - weakest drive



; REGISTER Emac_Mac_Register_114 Address h80000628
_Emac_Mac_Register_114 = 2147485224 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxlengtherror = h80000628 0 16 h0 RO HEX
; Desc_Emac_Mac_rxlengtherror Drive Strength - Default 00 - weakest drive



; REGISTER Emac_Mac_Register_115 Address h8000062c
_Emac_Mac_Register_115 = 2147485228 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxoutofrangetype = h8000062c 0 16 h0 RO HEX
; Desc_Emac_Mac_rxoutofrangetype generate interrupt by SW. bit 0 corresponds to bit 5 (i2c slave int) in the VPE1 vector, and so on up. Accordingly bits 59:63 are not used.



; REGISTER Emac_Mac_Register_116 Address h80000630
_Emac_Mac_Register_116 = 2147485232 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxpauseframes = h80000630 0 16 h0 RO HEX
; Desc_Emac_Mac_rxpauseframes generate interrupt by SW. bit 0 corresponds to bit 5 (i2c slave int) in the VPE1 vector, and so on up. Accordingly bits 59:63 are not used.



; REGISTER Emac_Mac_Register_117 Address h80000634
_Emac_Mac_Register_117 = 2147485236 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxfifooverflow = h80000634 0 16 h0 RO HEX
; Desc_Emac_Mac_rxfifooverflow GPIO interrupt can be invoked on different edgess0:rise edge, 1: fall edge



; REGISTER Emac_Mac_Register_118 Address h80000638
_Emac_Mac_Register_118 = 2147485240 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxvlanframes_gb = h80000638 0 16 h0 RO HEX
; Desc_Emac_Mac_rxvlanframes_gb GPIO interrupt can be invoked on different edgess0:rise edge, 1: fall edge



; REGISTER Emac_Mac_Register_119 Address h8000063c
_Emac_Mac_Register_119 = 2147485244 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxwatchdogerror = h8000063c 0 16 h0 RO HEX
; Desc_Emac_Mac_rxwatchdogerror GPIO interrupt can be invoked on different edgess0:rise edge, 1: fall edge



; REGISTER Emac_Mac_Register_120 Address h80000640
_Emac_Mac_Register_120 = 2147485248 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxrcverror = h80000640 0 16 h0 RO HEX
; Desc_Emac_Mac_rxrcverror GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge



; REGISTER Emac_Mac_Register_121 Address h80000644
_Emac_Mac_Register_121 = 2147485252 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxctrlframes_g = h80000644 0 16 h0 RO HEX
; Desc_Emac_Mac_rxctrlframes_g GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge



; REGISTER Emac_Mac_Register_130 Address h80000668
_Emac_Mac_Register_130 = 2147485288 0 32 b00000000000000000000000000000000 RO
Emac_Mac_RXIPV4GFIS = h80000668 0 1 h0 RO BIN
; Desc_Emac_Mac_RXIPV4GFIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXIPV4HERFIS = h80000668 1 1 h0 RO BIN
; Desc_Emac_Mac_RXIPV4HERFIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXIPV4NOPAYFIS = h80000668 2 1 h0 RO BIN
; Desc_Emac_Mac_RXIPV4NOPAYFIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXIPV4FRAGFIS = h80000668 3 1 h0 RO BIN
; Desc_Emac_Mac_RXIPV4FRAGFIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXIPV4UDSBLFIS = h80000668 4 1 h0 RO BIN
; Desc_Emac_Mac_RXIPV4UDSBLFIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXIPV6GFIS = h80000668 5 1 h0 RO BIN
; Desc_Emac_Mac_RXIPV6GFIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXIPV6HERFIS = h80000668 6 1 h0 RO BIN
; Desc_Emac_Mac_RXIPV6HERFIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXIPV6NOPAYFIS = h80000668 7 1 h0 RO BIN
; Desc_Emac_Mac_RXIPV6NOPAYFIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXUDPGFIS = h80000668 8 1 h0 RO BIN
; Desc_Emac_Mac_RXUDPGFIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXUDPERFIS = h80000668 9 1 h0 RO BIN
; Desc_Emac_Mac_RXUDPERFIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXTCPGFIS = h80000668 10 1 h0 RO BIN
; Desc_Emac_Mac_RXTCPGFIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXTCPERFIS = h80000668 11 1 h0 RO BIN
; Desc_Emac_Mac_RXTCPERFIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXICMPGFIS = h80000668 12 1 h0 RO BIN
; Desc_Emac_Mac_RXICMPGFIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXICMPERFIS = h80000668 13 1 h0 RO BIN
; Desc_Emac_Mac_RXICMPERFIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXIPV4GOIS = h80000668 16 1 h0 RO BIN
; Desc_Emac_Mac_RXIPV4GOIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXIPV4HEROIS = h80000668 17 1 h0 RO BIN
; Desc_Emac_Mac_RXIPV4HEROIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXIPV4NOPAYOIS = h80000668 18 1 h0 RO BIN
; Desc_Emac_Mac_RXIPV4NOPAYOIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXIPV4FRAGOIS = h80000668 19 1 h0 RO BIN
; Desc_Emac_Mac_RXIPV4FRAGOIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXIPV4UDSBLOIS = h80000668 20 1 h0 RO BIN
; Desc_Emac_Mac_RXIPV4UDSBLOIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXIPV6GOIS = h80000668 21 1 h0 RO BIN
; Desc_Emac_Mac_RXIPV6GOIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXIPV6HEROIS = h80000668 22 1 h0 RO BIN
; Desc_Emac_Mac_RXIPV6HEROIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXIPV6NOPAYOIS = h80000668 23 1 h0 RO BIN
; Desc_Emac_Mac_RXIPV6NOPAYOIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXUDPGOIS = h80000668 24 1 h0 RO BIN
; Desc_Emac_Mac_RXUDPGOIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXUDPEROIS = h80000668 25 1 h0 RO BIN
; Desc_Emac_Mac_RXUDPEROIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXTCPGOIS = h80000668 26 1 h0 RO BIN
; Desc_Emac_Mac_RXTCPGOIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXTCPEROIS = h80000668 27 1 h0 RO BIN
; Desc_Emac_Mac_RXTCPEROIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXICMPGOIS = h80000668 28 1 h0 RO BIN
; Desc_Emac_Mac_RXICMPGOIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
Emac_Mac_RXICMPEROIS = h80000668 29 1 h0 RO BIN
; Desc_Emac_Mac_RXICMPEROIS GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge



; REGISTER Emac_Mac_Register_132 Address h80000670
_Emac_Mac_Register_132 = 2147485296 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxipv4_gd_frms = h80000670 0 16 h0 RO HEX
; Desc_Emac_Mac_rxipv4_gd_frms rif uart protocol errors counter



; REGISTER Emac_Mac_Register_133 Address h80000674
_Emac_Mac_Register_133 = 2147485300 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxipv4_hdrerr_frms = h80000674 0 16 h0 RO HEX
; Desc_Emac_Mac_rxipv4_hdrerr_frms rif uart TX FIFO used indication



; REGISTER Emac_Mac_Register_134 Address h80000678
_Emac_Mac_Register_134 = 2147485304 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxipv4_nopay_frms = h80000678 0 16 h0 RO HEX
; Desc_Emac_Mac_rxipv4_nopay_frms read data from receive rif uart FIFO



; REGISTER Emac_Mac_Register_135 Address h8000067c
_Emac_Mac_Register_135 = 2147485308 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxipv4_frag_frms = h8000067c 0 16 h0 RO HEX
; Desc_Emac_Mac_rxipv4_frag_frms div ratio of the rif UART divide by N+1 from the system clock



; REGISTER Emac_Mac_Register_136 Address h80000680
_Emac_Mac_Register_136 = 2147485312 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxipv4_udsbl_frms = h80000680 0 16 h0 RO HEX
; Desc_Emac_Mac_rxipv4_udsbl_frms div ratio of the rif UART divide by N+1 from the system clock



; REGISTER Emac_Mac_Register_137 Address h80000684
_Emac_Mac_Register_137 = 2147485316 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxipv6_gd_frms = h80000684 0 16 h0 RO HEX
; Desc_Emac_Mac_rxipv6_gd_frms rif uart protocol errors counter



; REGISTER Emac_Mac_Register_138 Address h80000688
_Emac_Mac_Register_138 = 2147485320 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxipv6_hdrerr_frms = h80000688 0 16 h0 RO HEX
; Desc_Emac_Mac_rxipv6_hdrerr_frms rif uart TX FIFO used indication



; REGISTER Emac_Mac_Register_139 Address h8000068c
_Emac_Mac_Register_139 = 2147485324 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxipv6_nopay_frms = h8000068c 0 16 h0 RO HEX
; Desc_Emac_Mac_rxipv6_nopay_frms read data from receive rif uart FIFO



; REGISTER Emac_Mac_Register_140 Address h80000690
_Emac_Mac_Register_140 = 2147485328 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxudp_gd_frms = h80000690 0 16 h0 RO HEX
; Desc_Emac_Mac_rxudp_gd_frms div ratio of the rif UART divide by N+1 from the system clock



; REGISTER Emac_Mac_Register_141 Address h80000694
_Emac_Mac_Register_141 = 2147485332 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxudp_err_frms = h80000694 0 16 h0 RO HEX
; Desc_Emac_Mac_rxudp_err_frms div ratio of the rif UART divide by N+1 from the system clock



; REGISTER Emac_Mac_Register_142 Address h80000698
_Emac_Mac_Register_142 = 2147485336 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxtcp_gd_frms = h80000698 0 16 h0 RO HEX
; Desc_Emac_Mac_rxtcp_gd_frms rif uart protocol errors counter



; REGISTER Emac_Mac_Register_143 Address h8000069c
_Emac_Mac_Register_143 = 2147485340 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxtcp_err_frms = h8000069c 0 16 h0 RO HEX
; Desc_Emac_Mac_rxtcp_err_frms rif uart TX FIFO used indication



; REGISTER Emac_Mac_Register_144 Address h800006a0
_Emac_Mac_Register_144 = 2147485344 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxicmp_gd_frms = h800006a0 0 16 h0 RO HEX
; Desc_Emac_Mac_rxicmp_gd_frms read data from receive rif uart FIFO



; REGISTER Emac_Mac_Register_145 Address h800006a4
_Emac_Mac_Register_145 = 2147485348 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxicmp_err_frms = h800006a4 0 16 h0 RO HEX
; Desc_Emac_Mac_rxicmp_err_frms div ratio of the rif UART divide by N+1 from the system clock



; REGISTER Emac_Mac_Register_148 Address h800006b0
_Emac_Mac_Register_148 = 2147485360 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxipv4_gd_octets = h800006b0 0 16 h0 RO HEX
; Desc_Emac_Mac_rxipv4_gd_octets div ratio of the rif UART divide by N+1 from the system clock



; REGISTER Emac_Mac_Register_149 Address h800006b4
_Emac_Mac_Register_149 = 2147485364 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxipv4_hdrerr_octets = h800006b4 0 16 h0 RO HEX
; Desc_Emac_Mac_rxipv4_hdrerr_octets rif uart protocol errors counter



; REGISTER Emac_Mac_Register_150 Address h800006b8
_Emac_Mac_Register_150 = 2147485368 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxipv4_nopay_octets = h800006b8 0 16 h0 RO HEX
; Desc_Emac_Mac_rxipv4_nopay_octets rif uart TX FIFO used indication



; REGISTER Emac_Mac_Register_151 Address h800006bc
_Emac_Mac_Register_151 = 2147485372 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxipv4_frag_octets = h800006bc 0 16 h0 RO HEX
; Desc_Emac_Mac_rxipv4_frag_octets read data from receive rif uart FIFO



; REGISTER Emac_Mac_Register_152 Address h800006c0
_Emac_Mac_Register_152 = 2147485376 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxipv4_udsbl_octets = h800006c0 0 16 h0 RO HEX
; Desc_Emac_Mac_rxipv4_udsbl_octets div ratio of the rif UART divide by N+1 from the system clock



; REGISTER Emac_Mac_Register_153 Address h800006c4
_Emac_Mac_Register_153 = 2147485380 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxipv6_gd_octets = h800006c4 0 16 h0 RO HEX
; Desc_Emac_Mac_rxipv6_gd_octets div ratio of the rif UART divide by N+1 from the system clock



; REGISTER Emac_Mac_Register_154 Address h800006c8
_Emac_Mac_Register_154 = 2147485384 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxipv6_hdrerr_octets = h800006c8 0 16 h0 RO HEX
; Desc_Emac_Mac_rxipv6_hdrerr_octets LOW period of the SCL clock 



; REGISTER Emac_Mac_Register_155 Address h800006cc
_Emac_Mac_Register_155 = 2147485388 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxipv6_nopay_octets = h800006cc 0 16 h0 RO HEX
; Desc_Emac_Mac_rxipv6_nopay_octets Set-up time for a repeated START condition



; REGISTER Emac_Mac_Register_156 Address h800006d0
_Emac_Mac_Register_156 = 2147485392 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxudp_gd_octets = h800006d0 0 16 h0 RO HEX
; Desc_Emac_Mac_rxudp_gd_octets not in use



; REGISTER Emac_Mac_Register_157 Address h800006d4
_Emac_Mac_Register_157 = 2147485396 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxudp_err_octets = h800006d4 0 16 h0 RO HEX
; Desc_Emac_Mac_rxudp_err_octets DDC master generator FIFO {FIFO Control,  FIFO Data}ssFIFO Control (1 bit) , FIFO Data (8 bits):s0 – Data DDC DATAs1 – Control DDC CONTROL:s 00 – STARTs 01 – STOPs 10 – ACKs 11 – NACKs Reserveds



; REGISTER Emac_Mac_Register_158 Address h800006d8
_Emac_Mac_Register_158 = 2147485400 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxtcp_gd_octets = h800006d8 0 16 h0 RO HEX
; Desc_Emac_Mac_rxtcp_gd_octets DDC master monitor FIFO {FIFO Control,  FIFO Data}ssFIFO Control (1 bit) , FIFO Data (8 bits):s0 - Data DDC DATAs1 - Control DDC CONTROL:s 0 – ACKs 1 – NACKs Reserveds



; REGISTER Emac_Mac_Register_159 Address h800006dc
_Emac_Mac_Register_159 = 2147485404 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxtcp_err_octets = h800006dc 0 16 h0 RO HEX
; Desc_Emac_Mac_rxtcp_err_octets num of entries in the I2C SFP master monitor FIFO



; REGISTER Emac_Mac_Register_160 Address h800006e0
_Emac_Mac_Register_160 = 2147485408 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxicmp_gd_octets = h800006e0 0 16 h0 RO HEX
; Desc_Emac_Mac_rxicmp_gd_octets delay for the I2C sda hysteresis



; REGISTER Emac_Mac_Register_161 Address h800006e4
_Emac_Mac_Register_161 = 2147485412 0 32 b00000000000000000000000000000000 RO
Emac_Mac_rxicmp_err_octets = h800006e4 0 16 h0 RO HEX
; Desc_Emac_Mac_rxicmp_err_octets 



; REGISTER Emac_Mac_SG_Status Address h80000764
_Emac_Mac_SG_Status = 2147485540 0 32 b00000000000000000000000000000000 RO
Emac_Mac_SG_Ext_Capability = h80000764 0 1 h0 RO BIN
; Desc_Emac_Mac_SG_Ext_Capability 
Emac_Mac_SG_Link_Status = h80000764 2 1 h0 RO BIN
; Desc_Emac_Mac_SG_Link_Status 
Emac_Mac_SG_Aneg_Ability = h80000764 3 1 h0 RO BIN
; Desc_Emac_Mac_SG_Aneg_Ability 
Emac_Mac_SG_Remote_Fault = h80000764 4 1 h0 RO BIN
; Desc_Emac_Mac_SG_Remote_Fault 
Emac_Mac_SG_Aneg_Complete = h80000764 5 1 h0 RO BIN
; Desc_Emac_Mac_SG_Aneg_Complete 
Emac_Mac_SG_MF_Pre_suppress = h80000764 6 1 h0 RO BIN
; Desc_Emac_Mac_SG_MF_Pre_suppress 
Emac_Mac_SG_Ext_Status = h80000764 8 1 h0 RO BIN
; Desc_Emac_Mac_SG_Ext_Status 



; REGISTER Emac_Mac_SG_Aneg_Partner Address h80000774
_Emac_Mac_SG_Aneg_Partner = 2147485556 0 32 b00000000000000000000000000000000 RO
Emac_Mac_SG_PA_Link_Speed = h80000774 10 2 h0 RO HEX
; Desc_Emac_Mac_SG_PA_Link_Speed 
Emac_Mac_SG_PA_Full_Duplex = h80000774 12 1 h0 RO BIN
; Desc_Emac_Mac_SG_PA_Full_Duplex 
Emac_Mac_SG_PA_Res_Ack = h80000774 14 1 h0 RO BIN
; Desc_Emac_Mac_SG_PA_Res_Ack 
Emac_Mac_SG_PA_Link_Up = h80000774 15 1 h0 RO BIN
; Desc_Emac_Mac_SG_PA_Link_Up 



; REGISTER Emac_Mac_SG_Aneg_Expansion Address h80000778
_Emac_Mac_SG_Aneg_Expansion = 2147485560 0 32 b00000000000000000000000000000000 RO
Emac_Mac_SG_Page_Received = h80000778 1 1 h0 RO BIN
; Desc_Emac_Mac_SG_Page_Received 
Emac_Mac_SG_Next_Page_Able = h80000778 2 1 h0 RO BIN
; Desc_Emac_Mac_SG_Next_Page_Able 



; REGISTER Emac_Mac_SG_Aneg_NP_Partner Address h80000780
_Emac_Mac_SG_Aneg_NP_Partner = 2147485568 0 32 b00000000000000000000000000000000 RO
Emac_Mac_SG_PA_Message = h80000780 0 11 h0 RO HEX
; Desc_Emac_Mac_SG_PA_Message 
Emac_Mac_SG_PA_Toggle = h80000780 11 1 h0 RO BIN
; Desc_Emac_Mac_SG_PA_Toggle 
Emac_Mac_SG_PA_Ack2 = h80000780 12 1 h0 RO BIN
; Desc_Emac_Mac_SG_PA_Ack2 
Emac_Mac_SG_PA_Message_Page = h80000780 13 1 h0 RO BIN
; Desc_Emac_Mac_SG_PA_Message_Page 
Emac_Mac_SG_PA_Res_Ack = h80000780 14 1 h0 RO BIN
; Desc_Emac_Mac_SG_PA_Res_Ack 
Emac_Mac_SG_PA_Next_Page = h80000780 15 1 h0 RO BIN
; Desc_Emac_Mac_SG_PA_Next_Page 



; REGISTER Emac_Mac_SG_Aneg_Ext_Status Address h8000079c
_Emac_Mac_SG_Aneg_Ext_Status = 2147485596 0 32 b00000000000000000000000000000000 RO
Emac_Mac_SG_1000T_Half = h8000079c 12 1 h0 RO BIN
; Desc_Emac_Mac_SG_1000T_Half 
Emac_Mac_SG_1000T_Full = h8000079c 13 1 h0 RO BIN
; Desc_Emac_Mac_SG_1000T_Full 
Emac_Mac_SG_1000X_Half = h8000079c 14 1 h0 RO BIN
; Desc_Emac_Mac_SG_1000X_Half 
Emac_Mac_SG_1000X_Full = h8000079c 15 1 h0 RO BIN
; Desc_Emac_Mac_SG_1000X_Full 



; REGISTER bmac_brif_port_rx_len_reg Address h800007e0
_bmac_brif_port_rx_len_reg = 2147485664 0 32 b00000000000000000000000000000000 SC
bmac_brif_port_rx_len = h800007e0 0 32 h0 SC HEX
; Desc_bmac_brif_port_rx_len Number of entries in the RX FIFO



; REGISTER bmac_brif_port_rx_data_reg Address h800007e4
_bmac_brif_port_rx_data_reg = 2147485668 0 32 b00000000000000000000000000000000 SC
bmac_brif_port_rx_data = h800007e4 0 32 h0 SC HEX
; Desc_bmac_brif_port_rx_data I2C slave setup time in ns



; REGISTER bmac_brif_port_tx_len_reg Address h800007e8
_bmac_brif_port_tx_len_reg = 2147485672 0 32 b00000000000000000000000000000000 SC
bmac_brif_port_tx_len = h800007e8 0 32 h0 SC HEX
; Desc_bmac_brif_port_tx_len The Received Data Byte



; REGISTER bmac_brif_port_tx_data_reg Address h800007ec
_bmac_brif_port_tx_data_reg = 2147485676 0 32 b00000000000000000000000000000000 SC
bmac_brif_port_tx_data = h800007ec 0 32 h0 SC HEX
; Desc_bmac_brif_port_tx_data Data to be written to the transmit FIFO



; REGISTER sgmac_bist_status Address h80000804
_sgmac_bist_status = 2147485700 0 32 b00000000000000000000000000000000 SC
sgmac_test_berr = h80000804 0 32 h0 SC HEX
; Desc_sgmac_test_berr I2C slave WD counter 



; REGISTER sgmac_bist_status_2 Address h80000808
_sgmac_bist_status_2 = 2147485704 0 32 b00000000000000000000000000000000 SC
sgmac_test_state = h80000808 0 3 h0 SC HEX
; Desc_sgmac_test_state interrupt mask i2c_sl_rx_req,i2c_sl_tx_req,i2c_sl_addr_req,i2c_slv_int_wd



; REGISTER SGPHY_STATUS Address h8000081c
_SGPHY_STATUS = 2147485724 0 32 b00000000000000000000000000000000 RO
SGPHY_rxlock = h8000081c 0 1 h0 RO BIN
; Desc_SGPHY_rxlock i2c_sl_rx_req,i2c_sl_tx_req,i2c_sl_addr_req,i2c_slv_int_wd
SGPHY_txlock = h8000081c 1 1 h0 RO BIN
; Desc_SGPHY_txlock i2c_sl_rx_req,i2c_sl_tx_req,i2c_sl_addr_req,i2c_slv_int_wd
SGPHY_rterm_cmp_s = h8000081c 2 1 h0 RO BIN
; Desc_SGPHY_rterm_cmp_s i2c_sl_rx_req,i2c_sl_tx_req,i2c_sl_addr_req,i2c_slv_int_wd
SGPHY_overrun_detect = h8000081c 3 1 h0 RO BIN
; Desc_SGPHY_overrun_detect i2c_sl_rx_req,i2c_sl_tx_req,i2c_sl_addr_req,i2c_slv_int_wd



; REGISTER eth_mac_int_stat_reg Address h80000824
_eth_mac_int_stat_reg = 2147485732 0 32 b00000000000000000000000000000000 RO
eth_mac_int_stat = h80000824 0 3 h0 RO HEX
; Desc_eth_mac_int_stat I2C slave WD stop address  
pmt_intr_o = h80000824 0 1 h0 RO BIN
mci_intr_o = h80000824 1 1 h0 RO BIN
mac_rx_packet_int = h80000824 2 1 h0 RO BIN



; REGISTER watchdog_clear_reg Address h80000840
_watchdog_clear_reg = 2147485760 0 32 b00000000000000000000000000000000 SC
watchdog_clear = h80000840 0 32 h0 SC HEX
; Desc_watchdog_clear Sideband MAC Transmitter Disable ControlsFunction: When set high, this signal instructs the MAC transmitter to stopstransmitting frames after the completion of any current frame. The MAC transmittersrestarts transmission only if this signal is reset to low and Bit 3 (TE) of Register 0s(MAC Configuration Register) is set high.



; REGISTER watchdog_enable_reg Address h80000844
_watchdog_enable_reg = 2147485764 0 32 b00000000000000000000000000000000 SC
watchdog_enabled = h80000844 0 1 h0 SC BIN
; Desc_watchdog_enabled Enablle RX Error For Software



; REGISTER pka_prog_cpu_rdata_reg Address h8000085c
_pka_prog_cpu_rdata_reg = 2147485788 0 32 b00000000000000000000000000000000 SC
pka_prog_cpu_rdata = h8000085c 0 24 h0 SC HEX
; Desc_pka_prog_cpu_rdata MCI InterruptsFunction: When set high, this signal indicates an interrupt event
trng_irq = h8000085c 24 1 h0 SC BIN
; Desc_trng_irq MCI InterruptsFunction: When set high, this signal indicates an interrupt event
pka_int = h8000085c 25 3 h0 SC HEX
; Desc_pka_int MCI InterruptsFunction: When set high, this signal indicates an interrupt event
sl_err_int = h8000085c 28 1 h0 SC BIN
; Desc_sl_err_int MCI InterruptsFunction: When set high, this signal indicates an interrupt event
int_aic_out = h8000085c 29 1 h0 SC BIN
; Desc_int_aic_out MCI InterruptsFunction: When set high, this signal indicates an interrupt event



; REGISTER dft_counter_load_reg Address h80000888
_dft_counter_load_reg = 2147485832 0 32 b00000000000000000000000000000000 SC
SetCntDummy = h80000888 0 2 h0 SC HEX
; Desc_SetCntDummy The number of entries in the RX RAM



; REGISTER dft_dhdi_prev_result_reg Address h80000894
_dft_dhdi_prev_result_reg = 2147485844 0 32 b00000000000000000000000000000000 SC
dft_dhdi_prev_result = h80000894 0 16 h0 SC HEX
; Desc_dft_dhdi_prev_result The time after which the RX interrupt is asserted when data is valid in the RX RAM and the other conditions haven't occurred yet 



; REGISTER dft_rombist_result_reg Address h80000898
_dft_rombist_result_reg = 2147485848 0 32 b00000000000000000000000000000000 SC
dft_rombist_result = h80000898 0 16 h0 SC HEX
; Desc_dft_rombist_result The number of entries in the TX RAM



; REGISTER dma_intc_int_out_register Address h80000914
_dma_intc_int_out_register = 2147485972 0 32 b00000000000000000000000000000000 RO
dma_intc_int_out = h80000914 0 17 h0 RO HEX
; Desc_dma_intc_int_out Number of frames ready in the TX RAM



; REGISTER hlic00_dma_intc_register Address h8000094c
_hlic00_dma_intc_register = 2147486028 0 32 b00000000000000000000000000000000 RO
hlic00_dma_intc_status = h8000094c 0 11 h0 RO HEX
; Desc_hlic00_dma_intc_status The transmit status word
hlic00_dma_intc_rx_ove_evt_cnt = h8000094c 11 8 h0 RO HEX
; Desc_hlic00_dma_intc_rx_ove_evt_cnt The transmit status word



; REGISTER hlic01_dma_intc_register Address h8000095c
_hlic01_dma_intc_register = 2147486044 0 32 b00000000000000000000000000000000 RO
hlic01_dma_intc_status = h8000095c 0 11 h0 RO HEX
; Desc_hlic01_dma_intc_status The transmit status word
hlic01_dma_intc_rx_ove_evt_cnt = h8000095c 11 8 h0 RO HEX
; Desc_hlic01_dma_intc_rx_ove_evt_cnt The transmit status word



; REGISTER hlic02_dma_intc_register Address h8000096c
_hlic02_dma_intc_register = 2147486060 0 32 b00000000000000000000000000000000 RO
hlic02_dma_intc_status = h8000096c 0 11 h0 RO HEX
; Desc_hlic02_dma_intc_status A transmit status word is ready to be read
hlic02_dma_intc_rx_ove_evt_cnt = h8000096c 11 8 h0 RO HEX
; Desc_hlic02_dma_intc_rx_ove_evt_cnt A transmit status word is ready to be read



; REGISTER ethrnt_dma_intc_register Address h80000a4c
_ethrnt_dma_intc_register = 2147486284 0 32 b00000000000000000000000000000000 RO
ethrnt_dma_intc_status = h80000a4c 0 11 h0 RO HEX
; Desc_ethrnt_dma_intc_status 
ethrnt_dma_intc_rx_ove_evt_cnt = h80000a4c 11 8 h0 RO HEX
; Desc_ethrnt_dma_intc_rx_ove_evt_cnt 



; REGISTER efuse_wr_ready_reg Address h80000b28
_efuse_wr_ready_reg = 2147486504 0 32 b00000000000000000000000000000000 RO
efuse_wr_ready = h80000b28 0 1 h0 RO BIN
; Desc_efuse_wr_ready 
SecModeFromEfuse = h80000b28 1 1 h0 RO BIN
; Desc_SecModeFromEfuse 
efuse_done = h80000b28 2 1 h0 RO BIN
; Desc_efuse_done 
secure_byte = h80000b28 3 8 h0 RO HEX
; Desc_secure_byte 
efuse_word_burn_done = h80000b28 11 1 h0 RO BIN
; Desc_efuse_word_burn_done 
DiagnosticMode = h80000b28 12 1 h0 RO BIN
; Desc_DiagnosticMode 



; REGISTER otp0_mips_rd_data_reg Address h80000b60
_otp0_mips_rd_data_reg = 2147486560 0 32 b00000000000000000000000000000000 SC
otp0_mips_rd_data = h80000b60 0 32 h0 SC HEX
; Desc_otp0_mips_rd_data 



; REGISTER otp0_status_reg Address h80000b6c
_otp0_status_reg = 2147486572 0 32 b00000000000000000000000000000000 RO
otp0_otp_status = h80000b6c 0 8 h0 RO HEX
; Desc_otp0_otp_status 
otp0_boot_finish = h80000b6c 8 1 h0 RO BIN
; Desc_otp0_boot_finish 
otp0_agg_pgm_status_ok = h80000b6c 9 1 h0 RO BIN
; Desc_otp0_agg_pgm_status_ok 
otp0_stm_sbpi_busy = h80000b6c 10 1 h0 RO BIN
; Desc_otp0_stm_sbpi_busy 
otp0_stm_user_busy = h80000b6c 11 1 h0 RO BIN
; Desc_otp0_stm_user_busy 



; REGISTER otp0_o_QSR_reg Address h80000b70
_otp0_o_QSR_reg = 2147486576 0 32 b00000000000000000000000000000000 RO
otp0_o_QSR[31:0] = h80000b70 0 32 h0 RO HEX
; Desc_otp0_o_QSR[31:0] 



; REGISTER otp0_o_QRR_reg Address h80000b74
_otp0_o_QRR_reg = 2147486580 0 32 b00000000000000000000000000000000 RO
otp0_o_QRR[31:0] = h80000b74 0 32 h0 RO HEX
; Desc_otp0_o_QRR[31:0] 



; REGISTER otp0_data_rd_reg Address h80000b78
_otp0_data_rd_reg = 2147486584 0 32 b00000000000000000000000000000000 RO
otp0_data_rd = h80000b78 0 32 h0 RO HEX
; Desc_otp0_data_rd 



; REGISTER otp0_o_QSRR_h_reg Address h80000b7c
_otp0_o_QSRR_h_reg = 2147486588 0 32 b00000000000000000000000000000000 RO
otp0_o_QSR[39:32] = h80000b7c 0 8 h0 RO HEX
; Desc_otp0_o_QSR[39:32] 
otp0_o_QRR[39:32] = h80000b7c 8 8 h0 RO HEX
; Desc_otp0_o_QRR[39:32] 



; REGISTER SYS_PLL_STATUS Address h80000b98
_SYS_PLL_STATUS = 2147486616 0 32 b00000000000000000000000000000000 RO
SYS_PLL_LOCK = h80000b98 0 1 h0 RO BIN
; Desc_SYS_PLL_LOCK 



; REGISTER General_system_status Address h80000b9c
_General_system_status = 2147486620 0 32 b00000000000000000000000000000000 RO
refclk_25_sel = h80000b9c 0 1 h0 RO BIN
; Desc_refclk_25_sel 



; REGISTER pas_timer_0_reg Address h80000c00
_pas_timer_0_reg = 2147486720 0 32 b00000000000000000000000000000000 SC
pas_timer_0 = h80000c00 0 32 h0 SC HEX
; Desc_pas_timer_0 



; REGISTER pas_timer_1_reg Address h80000c04
_pas_timer_1_reg = 2147486724 0 32 b00000000000000000000000000000000 SC
pas_timer_1 = h80000c04 0 32 h0 SC HEX
; Desc_pas_timer_1 



; REGISTER pas_timer_2_reg Address h80000c08
_pas_timer_2_reg = 2147486728 0 32 b00000000000000000000000000000000 SC
pas_timer_2 = h80000c08 0 32 h0 SC HEX
; Desc_pas_timer_2 



; REGISTER pas_timer_3_reg Address h80000c0c
_pas_timer_3_reg = 2147486732 0 32 b00000000000000000000000000000000 SC
pas_timer_3 = h80000c0c 0 32 h0 SC HEX
; Desc_pas_timer_3 



; REGISTER pas_timer_4_reg Address h80000c10
_pas_timer_4_reg = 2147486736 0 32 b00000000000000000000000000000000 SC
pas_timer_4 = h80000c10 0 32 h0 SC HEX
; Desc_pas_timer_4 



; REGISTER pas_timer_5_reg Address h80000c14
_pas_timer_5_reg = 2147486740 0 32 b00000000000000000000000000000000 SC
pas_timer_5 = h80000c14 0 32 h0 SC HEX
; Desc_pas_timer_5 



; REGISTER pas_timer_6_reg Address h80000c18
_pas_timer_6_reg = 2147486744 0 32 b00000000000000000000000000000000 SC
pas_timer_6 = h80000c18 0 32 h0 SC HEX
; Desc_pas_timer_6 



; REGISTER pas_timer_7_reg Address h80000c1c
_pas_timer_7_reg = 2147486748 0 32 b00000000000000000000000000000000 SC
pas_timer_7 = h80000c1c 0 32 h0 SC HEX
; Desc_pas_timer_7 



; REGISTER pas_timer_8_reg Address h80000c20
_pas_timer_8_reg = 2147486752 0 32 b00000000000000000000000000000000 SC
pas_timer_8 = h80000c20 0 32 h0 SC HEX
; Desc_pas_timer_8 



; REGISTER pas_timer_9_reg Address h80000c24
_pas_timer_9_reg = 2147486756 0 32 b00000000000000000000000000000000 SC
pas_timer_9 = h80000c24 0 32 h0 SC HEX
; Desc_pas_timer_9 



; REGISTER pas_timer_10_reg Address h80000c28
_pas_timer_10_reg = 2147486760 0 32 b00000000000000000000000000000000 SC
pas_timer_10 = h80000c28 0 32 h0 SC HEX
; Desc_pas_timer_10 



; REGISTER pas_timer_11_reg Address h80000c2c
_pas_timer_11_reg = 2147486764 0 32 b00000000000000000000000000000000 SC
pas_timer_11 = h80000c2c 0 32 h0 SC HEX
; Desc_pas_timer_11 



; REGISTER pas_timer_12_reg Address h80000c30
_pas_timer_12_reg = 2147486768 0 32 b00000000000000000000000000000000 SC
pas_timer_12 = h80000c30 0 32 h0 SC HEX
; Desc_pas_timer_12 



; REGISTER pas_timer_13_reg Address h80000c34
_pas_timer_13_reg = 2147486772 0 32 b00000000000000000000000000000000 SC
pas_timer_13 = h80000c34 0 32 h0 SC HEX
; Desc_pas_timer_13 



; REGISTER pas_timer_14_reg Address h80000c38
_pas_timer_14_reg = 2147486776 0 32 b00000000000000000000000000000000 SC
pas_timer_14 = h80000c38 0 32 h0 SC HEX
; Desc_pas_timer_14 



; REGISTER pas_timer_15_reg Address h80000c3c
_pas_timer_15_reg = 2147486780 0 32 b00000000000000000000000000000000 SC
pas_timer_15 = h80000c3c 0 32 h0 SC HEX
; Desc_pas_timer_15 



; REGISTER pas_timer_int_stat_reg Address h80000c40
_pas_timer_int_stat_reg = 2147486784 0 32 b00000000000000000000000000000000 RO
pas_timer_int_stat = h80000c40 0 16 h0 RO HEX
; Desc_pas_timer_int_stat 



; REGISTER pas_timer_int_clr_reg Address h80000c44
_pas_timer_int_clr_reg = 2147486788 0 32 b00000000000000000000000000000000 SC
pas_timer_int_clr = h80000c44 0 16 h0 SC HEX
; Desc_pas_timer_int_clr 



; REGISTER bl_digest_31_0_reg Address h80000f64
_bl_digest_31_0_reg = 2147487588 0 32 b00000000000000000000000000000000 RO
bl_digest_31_0 = h80000f64 0 32 h0 RO HEX
; Desc_bl_digest_31_0 



; REGISTER bl_digest_63_32_reg Address h80000f68
_bl_digest_63_32_reg = 2147487592 0 32 b00000000000000000000000000000000 RO
bl_digest_63_32 = h80000f68 0 32 h0 RO HEX
; Desc_bl_digest_63_32 



; REGISTER bl_digest_95_64_reg Address h80000f6c
_bl_digest_95_64_reg = 2147487596 0 32 b00000000000000000000000000000000 RO
bl_digest_95_64 = h80000f6c 0 32 h0 RO HEX
; Desc_bl_digest_95_64 



; REGISTER bl_digest_127_96_reg Address h80000f70
_bl_digest_127_96_reg = 2147487600 0 32 b00000000000000000000000000000000 RO
bl_digest_127_96 = h80000f70 0 32 h0 RO HEX
; Desc_bl_digest_127_96 



; REGISTER bl_digest_159_128_reg Address h80000f74
_bl_digest_159_128_reg = 2147487604 0 32 b00000000000000000000000000000000 RO
bl_digest_159_128 = h80000f74 0 32 h0 RO HEX
; Desc_bl_digest_159_128 



; REGISTER bl_digest_191_160_reg Address h80000f7c
_bl_digest_191_160_reg = 2147487612 0 32 b00000000000000000000000000000000 RO
bl_digest_191_160 = h80000f7c 0 32 h0 RO HEX
; Desc_bl_digest_191_160 



; REGISTER bl_digest_223_192_reg Address h80000f80
_bl_digest_223_192_reg = 2147487616 0 32 b00000000000000000000000000000000 RO
bl_digest_223_192 = h80000f80 0 32 h0 RO HEX
; Desc_bl_digest_223_192 



; REGISTER bl_digest_255_224_reg Address h80000f84
_bl_digest_255_224_reg = 2147487620 0 32 b00000000000000000000000000000000 RO
bl_digest_255_224 = h80000f84 0 32 h0 RO HEX
; Desc_bl_digest_255_224 



; REGISTER bl_int_stat_reg Address h80000f8c
_bl_int_stat_reg = 2147487628 0 32 b00000000000000000000000000000000 RO
bl_int_stat = h80000f8c 0 5 h0 RO HEX
; Desc_bl_int_stat 
dma_resp_3 = h80000f8c 0 1 h0 RO BIN
bl_ocp_timeout_err = h80000f8c 1 1 h0 RO BIN
bl_rif_timeout_err = h80000f8c 2 1 h0 RO BIN
bl_sha_done = h80000f8c 3 1 h0 RO BIN
bl_done = h80000f8c 4 1 h0 RO BIN



; REGISTER bl_int_clr_reg Address h80000f90
_bl_int_clr_reg = 2147487632 0 32 b00000000000000000000000000000000 SC
bl_int_clr = h80000f90 0 5 h0 SC HEX
; Desc_bl_int_clr 
dma_resp_clr = h80000f90 0 1 h0 SC BIN
bl_ocp_timeout_clr = h80000f90 1 1 h0 SC BIN
bl_rif_timeout_clr = h80000f90 2 1 h0 SC BIN
bl_sha_done_clr = h80000f90 3 1 h0 SC BIN
bl_done_clr = h80000f90 4 1 h0 SC BIN



; REGISTER bl_fifo_clr_reg Address h80000f98
_bl_fifo_clr_reg = 2147487640 0 32 b00000000000000000000000000000000 SC
bl_rif2ocp_fifo_clr = h80000f98 0 1 h0 SC BIN
; Desc_bl_rif2ocp_fifo_clr 
bl_sha_fifo_clr = h80000f98 1 1 h0 SC BIN
; Desc_bl_sha_fifo_clr 



; REGISTER bl_rd_addr_reg Address h80000f9c
_bl_rd_addr_reg = 2147487644 0 32 b00000000000000000000000000000000 RO
bl_rd_addr = h80000f9c 0 32 h0 RO HEX
; Desc_bl_rd_addr 



; REGISTER bl_wr_addr_reg Address h80000fa0
_bl_wr_addr_reg = 2147487648 0 32 b00000000000000000000000000000000 RO
bl_wr_addr = h80000fa0 0 32 h0 RO HEX
; Desc_bl_wr_addr 



; REGISTER bl_start_reg Address h80000fa4
_bl_start_reg = 2147487652 0 32 b00000000000000000000000000000000 SC
bl_start = h80000fa4 0 1 h0 SC BIN
; Desc_bl_start 



; REGISTER fbc_status_register Address h80002064
_fbc_status_register = 2147491940 0 32 b00000000000000000000000000000000 RO
fbc_done = h80002064 0 1 h0 RO BIN
; Desc_fbc_done 
fbc_pass = h80002064 1 1 h0 RO BIN
; Desc_fbc_pass 



; REGISTER fbc_rif_rd_arr_data_0_register Address h80002068
_fbc_rif_rd_arr_data_0_register = 2147491944 0 32 b00000000000000000000000000000000 RO
fbc_rif_rd_arr_data_0 = h80002068 0 32 h0 RO HEX
; Desc_fbc_rif_rd_arr_data_0 



; REGISTER fbc_rif_rd_arr_data_1_register Address h8000206c
_fbc_rif_rd_arr_data_1_register = 2147491948 0 32 b00000000000000000000000000000000 RO
fbc_rif_rd_arr_data_1 = h8000206c 0 32 h0 RO HEX
; Desc_fbc_rif_rd_arr_data_1 



; REGISTER fbc_rif_rd_arr_data_2_register Address h80002070
_fbc_rif_rd_arr_data_2_register = 2147491952 0 32 b00000000000000000000000000000000 RO
fbc_rif_rd_arr_data_2 = h80002070 0 32 h0 RO HEX
; Desc_fbc_rif_rd_arr_data_2 



; REGISTER fbc_rif_rd_arr_data_3_register Address h80002074
_fbc_rif_rd_arr_data_3_register = 2147491956 0 32 b00000000000000000000000000000000 RO
fbc_rif_rd_arr_data_3 = h80002074 0 32 h0 RO HEX
; Desc_fbc_rif_rd_arr_data_3 



; REGISTER efuse_data_duplicated_reg Address h80003004
_efuse_data_duplicated_reg = 2147495940 0 32 b00000000000000000000000000000000 RO
efuse_data_duplicated = h80003004 0 32 h0 RO HEX
; Desc_efuse_data_duplicated 



; REGISTER hdcp_int_stat_reg Address h80003008
_hdcp_int_stat_reg = 2147495944 0 32 b00000000000000000000000000000000 RO
hdcp_int_stat = h80003008 0 6 h0 RO HEX
; Desc_hdcp_int_stat 
pka_int = h80003008 0 3 h0 RO HEX
int_aic_out = h80003008 3 1 h0 RO BIN
sl_err_int = h80003008 4 1 h0 RO BIN
trng_irq = h80003008 5 1 h0 RO BIN



; REGISTER SGPHY_HwCalStatus Address h80003040
_SGPHY_HwCalStatus = 2147496000 0 32 b00000000000000000000000000000000 SC
SGPHY_Hw_cal_val = h80003040 0 3 h0 SC HEX
; Desc_SGPHY_Hw_cal_val 
SGPHY_Hw_cal_error = h80003040 3 1 h0 SC BIN
; Desc_SGPHY_Hw_cal_error 
SGPHY_Hw_cal_done = h80003040 4 1 h0 SC BIN
; Desc_SGPHY_Hw_cal_done 



; REGISTER mem_protection_int_stat_reg Address h80003050
_mem_protection_int_stat_reg = 2147496016 0 32 b00000000000000000000000000000000 RO
iram_mem_protection_int_stat = h80003050 0 1 h0 RO BIN
; Desc_iram_mem_protection_int_stat 
dram_mem_protection_int_stat = h80003050 1 1 h0 RO BIN
; Desc_dram_mem_protection_int_stat 
rom_mem_protection_int_stat = h80003050 2 1 h0 RO BIN
; Desc_rom_mem_protection_int_stat 
rom_addr_deviation_int_stat = h80003050 3 1 h0 RO BIN
; Desc_rom_addr_deviation_int_stat 



; REGISTER mem_protection_int_clr_reg Address h80003054
_mem_protection_int_clr_reg = 2147496020 0 32 b00000000000000000000000000000000 SC
mem_protection_int_clr = h80003054 0 4 h0 SC HEX
; Desc_mem_protection_int_clr 



; REGISTER rom_protection_indication_reg Address h8000305c
_rom_protection_indication_reg = 2147496028 0 32 b00000000000000000000000000000000 RO
rom_protection_indication = h8000305c 0 16 h0 RO HEX
; Desc_rom_protection_indication 



; REGISTER iram_protection_indication_reg Address h80003060
_iram_protection_indication_reg = 2147496032 0 32 b00000000000000000000000000000000 RO
iram_protection_indication = h80003060 0 8 h0 RO HEX
; Desc_iram_protection_indication 



; REGISTER dram_protection_indication_reg Address h80003064
_dram_protection_indication_reg = 2147496036 0 32 b00000000000000000000000000000000 RO
dram_protection_indication = h80003064 0 8 h0 RO HEX
; Desc_dram_protection_indication 



; REGISTER otp1_mips_rd_data_reg Address h80003068
_otp1_mips_rd_data_reg = 2147496040 0 32 b00000000000000000000000000000000 SC
otp1_mips_rd_data = h80003068 0 32 h0 SC HEX
; Desc_otp1_mips_rd_data 



; REGISTER otp1_status_reg Address h80003074
_otp1_status_reg = 2147496052 0 32 b00000000000000000000000000000000 RO
otp1_otp_status = h80003074 0 8 h0 RO HEX
; Desc_otp1_otp_status 
otp1_boot_finish = h80003074 8 1 h0 RO BIN
; Desc_otp1_boot_finish 
otp1_agg_pgm_status_ok = h80003074 9 1 h0 RO BIN
; Desc_otp1_agg_pgm_status_ok 
otp1_stm_sbpi_busy = h80003074 10 1 h0 RO BIN
; Desc_otp1_stm_sbpi_busy 
otp1_stm_user_busy = h80003074 11 1 h0 RO BIN
; Desc_otp1_stm_user_busy 



; REGISTER otp1_o_QSR_reg Address h80003078
_otp1_o_QSR_reg = 2147496056 0 32 b00000000000000000000000000000000 RO
otp1_o_QSR[31:0] = h80003078 0 32 h0 RO HEX
; Desc_otp1_o_QSR[31:0] 



; REGISTER otp1_o_QRR_reg Address h8000307c
_otp1_o_QRR_reg = 2147496060 0 32 b00000000000000000000000000000000 RO
otp1_o_QRR[31:0] = h8000307c 0 32 h0 RO HEX
; Desc_otp1_o_QRR[31:0] 



; REGISTER otp1_data_rd_reg Address h80003080
_otp1_data_rd_reg = 2147496064 0 32 b00000000000000000000000000000000 RO
otp1_data_rd = h80003080 0 32 h0 RO HEX
; Desc_otp1_data_rd 



; REGISTER otp1_o_QSRR_h_reg Address h80003084
_otp1_o_QSRR_h_reg = 2147496068 0 32 b00000000000000000000000000000000 RO
otp1_o_QSR[39:32] = h80003084 0 8 h0 RO HEX
; Desc_otp1_o_QSR[39:32] 
otp1_o_QRR[39:32] = h80003084 8 8 h0 RO HEX
; Desc_otp1_o_QRR[39:32] 



; REGISTER otp2_mips_rd_data_reg Address h80003088
_otp2_mips_rd_data_reg = 2147496072 0 32 b00000000000000000000000000000000 SC
otp2_mips_rd_data = h80003088 0 32 h0 SC HEX
; Desc_otp2_mips_rd_data 



; REGISTER otp2_status_reg Address h80003094
_otp2_status_reg = 2147496084 0 32 b00000000000000000000000000000000 RO
otp2_otp_status = h80003094 0 8 h0 RO HEX
; Desc_otp2_otp_status 
otp2_boot_finish = h80003094 8 1 h0 RO BIN
; Desc_otp2_boot_finish 
otp2_agg_pgm_status_ok = h80003094 9 1 h0 RO BIN
; Desc_otp2_agg_pgm_status_ok 
otp2_stm_sbpi_busy = h80003094 10 1 h0 RO BIN
; Desc_otp2_stm_sbpi_busy 
otp2_stm_user_busy = h80003094 11 1 h0 RO BIN
; Desc_otp2_stm_user_busy 



; REGISTER otp2_o_QSR_reg Address h80003098
_otp2_o_QSR_reg = 2147496088 0 32 b00000000000000000000000000000000 RO
otp2_o_QSR[31:0] = h80003098 0 32 h0 RO HEX
; Desc_otp2_o_QSR[31:0] 



; REGISTER otp2_o_QRR_reg Address h8000309c
_otp2_o_QRR_reg = 2147496092 0 32 b00000000000000000000000000000000 RO
otp2_o_QRR[31:0] = h8000309c 0 32 h0 RO HEX
; Desc_otp2_o_QRR[31:0] 



; REGISTER otp2_data_rd_reg Address h800030a0
_otp2_data_rd_reg = 2147496096 0 32 b00000000000000000000000000000000 RO
otp2_data_rd = h800030a0 0 32 h0 RO HEX
; Desc_otp2_data_rd 



; REGISTER otp2_o_QSRR_h_reg Address h800030a4
_otp2_o_QSRR_h_reg = 2147496100 0 32 b00000000000000000000000000000000 RO
otp2_o_QSR[39:32] = h800030a4 0 8 h0 RO HEX
; Desc_otp2_o_QSR[39:32] 
otp2_o_QRR[39:32] = h800030a4 8 8 h0 RO HEX
; Desc_otp2_o_QRR[39:32] 



; REGISTER otp3_mips_rd_data_reg Address h80003108
_otp3_mips_rd_data_reg = 2147496200 0 32 b00000000000000000000000000000000 SC
otp3_mips_rd_data = h80003108 0 32 h0 SC HEX
; Desc_otp3_mips_rd_data 



; REGISTER otp3_status_reg Address h80003114
_otp3_status_reg = 2147496212 0 32 b00000000000000000000000000000000 RO
otp3_otp_status = h80003114 0 8 h0 RO HEX
; Desc_otp3_otp_status 
otp3_boot_finish = h80003114 8 1 h0 RO BIN
; Desc_otp3_boot_finish 
otp3_agg_pgm_status_ok = h80003114 9 1 h0 RO BIN
; Desc_otp3_agg_pgm_status_ok 
otp3_stm_sbpi_busy = h80003114 10 1 h0 RO BIN
; Desc_otp3_stm_sbpi_busy 
otp3_stm_user_busy = h80003114 11 1 h0 RO BIN
; Desc_otp3_stm_user_busy 



; REGISTER otp3_o_QSR_reg Address h80003118
_otp3_o_QSR_reg = 2147496216 0 32 b00000000000000000000000000000000 RO
otp3_o_QSR[31:0] = h80003118 0 32 h0 RO HEX
; Desc_otp3_o_QSR[31:0] 



; REGISTER otp3_o_QRR_reg Address h8000311c
_otp3_o_QRR_reg = 2147496220 0 32 b00000000000000000000000000000000 RO
otp3_o_QRR[31:0] = h8000311c 0 32 h0 RO HEX
; Desc_otp3_o_QRR[31:0] 



; REGISTER otp3_data_rd_reg Address h80003120
_otp3_data_rd_reg = 2147496224 0 32 b00000000000000000000000000000000 RO
otp3_data_rd = h80003120 0 32 h0 RO HEX
; Desc_otp3_data_rd 



; REGISTER otp3_o_QSRR_h_reg Address h80003124
_otp3_o_QSRR_h_reg = 2147496228 0 32 b00000000000000000000000000000000 RO
otp3_o_QSR[39:32] = h80003124 0 8 h0 RO HEX
; Desc_otp3_o_QSR[39:32] 
otp3_o_QRR[39:32] = h80003124 8 8 h0 RO HEX
; Desc_otp3_o_QRR[39:32] 



; REGISTER efuse_int_stat_reg Address h80003134
_efuse_int_stat_reg = 2147496244 0 32 b00000000000000000000000000000000 RO
rd_access_wrong_controls_stat = h80003134 0 1 h0 RO BIN
; Desc_rd_access_wrong_controls_stat 
wr_access_wrong_controls_stat = h80003134 1 1 h0 RO BIN
; Desc_wr_access_wrong_controls_stat 



; REGISTER efuse_int_clr_reg Address h80003138
_efuse_int_clr_reg = 2147496248 0 32 b00000000000000000000000000000000 SC
efuse_int_clr = h80003138 0 2 h0 SC HEX
; Desc_efuse_int_clr 



; REGISTER iram_sm_safety_reg_status_reg Address h80003168
_iram_sm_safety_reg_status_reg = 2147496296 0 32 b00000000000000000000000000000000 SC
iram_sm_safety_reg_status = h80003168 0 6 h0 SC HEX
; Desc_iram_sm_safety_reg_status 



; REGISTER iram_sm_result Address h8000316c
_iram_sm_result = 2147496300 0 32 b00000000000000000000000000000000 RO
iram_result = h8000316c 0 1 h0 RO BIN
; Desc_iram_result 
iram_safety_test_result = h8000316c 1 2 h0 RO HEX
; Desc_iram_safety_test_result 



; REGISTER iram_debug_reg Address h80003170
_iram_debug_reg = 2147496304 0 32 b00000000000000000000000000000000 RO
iram_safety_mech_main_stm = h80003170 0 3 h0 RO HEX
; Desc_iram_safety_mech_main_stm 



; REGISTER dram_sm_safety_reg_status_reg Address h80003188
_dram_sm_safety_reg_status_reg = 2147496328 0 32 b00000000000000000000000000000000 SC
dram_sm_safety_reg_status = h80003188 0 5 h0 SC HEX
; Desc_dram_sm_safety_reg_status 



; REGISTER dram_sm_result Address h8000318c
_dram_sm_result = 2147496332 0 32 b00000000000000000000000000000000 RO
dram_result = h8000318c 0 1 h0 RO BIN
; Desc_dram_result 
dram_safety_test_result = h8000318c 1 2 h0 RO HEX
; Desc_dram_safety_test_result 



; REGISTER dram_debug_reg Address h80003190
_dram_debug_reg = 2147496336 0 32 b00000000000000000000000000000000 RO
dram_safety_mech_main_stm = h80003190 0 3 h0 RO HEX
; Desc_dram_safety_mech_main_stm 



; REGISTER acmp0_int_acmp_status_reg Address h80003214
_acmp0_int_acmp_status_reg = 2147496468 0 32 b00000000000000000000000000000000 RO
acmp0_int_acmp_status = h80003214 0 32 h0 RO HEX
; Desc_acmp0_int_acmp_status 



; REGISTER acmp0_fusa_acmp_status_reg Address h8000321c
_acmp0_fusa_acmp_status_reg = 2147496476 0 32 b00000000000000000000000000000000 SC
acmp0_fusa_acmp_status = h8000321c 0 32 h0 SC HEX
; Desc_acmp0_fusa_acmp_status 



; REGISTER acmp0_acmp_stm_status_reg Address h80003220
_acmp0_acmp_stm_status_reg = 2147496480 0 32 b00000000000000000000000000000000 RO
acmp0_acmp_stm_status = h80003220 0 32 h0 RO HEX
; Desc_acmp0_acmp_stm_status 



; REGISTER acmp0_acmd_status_0_reg Address h80003234
_acmp0_acmd_status_0_reg = 2147496500 0 32 b00000000000000000000000000000000 RO
acmp0_acmd_status_0 = h80003234 0 32 h0 RO HEX
; Desc_acmp0_acmd_status_0 



; REGISTER acmp0_acmd_status_1_reg Address h80003238
_acmp0_acmd_status_1_reg = 2147496504 0 32 b00000000000000000000000000000000 RO
acmp0_acmd_status_1 = h80003238 0 32 h0 RO HEX
; Desc_acmp0_acmd_status_1 



; REGISTER acmp1_int_acmp_status_reg Address h80003314
_acmp1_int_acmp_status_reg = 2147496724 0 32 b00000000000000000000000000000000 RO
acmp1_int_acmp_status = h80003314 0 32 h0 RO HEX
; Desc_acmp1_int_acmp_status 



; REGISTER acmp1_fusa_acmp_status_reg Address h8000331c
_acmp1_fusa_acmp_status_reg = 2147496732 0 32 b00000000000000000000000000000000 SC
acmp1_fusa_acmp_status = h8000331c 0 32 h0 SC HEX
; Desc_acmp1_fusa_acmp_status 



; REGISTER acmp1_acmp_stm_status_reg Address h80003320
_acmp1_acmp_stm_status_reg = 2147496736 0 32 b00000000000000000000000000000000 RO
acmp1_acmp_stm_status = h80003320 0 32 h0 RO HEX
; Desc_acmp1_acmp_stm_status 



; REGISTER acmp1_acmd_status_0_reg Address h80003334
_acmp1_acmd_status_0_reg = 2147496756 0 32 b00000000000000000000000000000000 RO
acmp1_acmd_status_0 = h80003334 0 32 h0 RO HEX
; Desc_acmp1_acmd_status_0 



; REGISTER acmp1_acmd_status_1_reg Address h80003338
_acmp1_acmd_status_1_reg = 2147496760 0 32 b00000000000000000000000000000000 RO
acmp1_acmd_status_1 = h80003338 0 32 h0 RO HEX
; Desc_acmp1_acmd_status_1 



; REGISTER i2c1_i2c_sl_status_2_reg Address h80003400
_i2c1_i2c_sl_status_2_reg = 2147496960 0 32 b00000000000000000000000000000000 RO
i2c1_i2c_sl_rx_fifo_used = h80003400 0 6 h0 RO HEX
; Desc_i2c1_i2c_sl_rx_fifo_used 
i2c1_i2c_sl_tx_fifo_used = h80003400 6 6 h0 RO HEX
; Desc_i2c1_i2c_sl_tx_fifo_used 



; REGISTER i2c1_i2c_sl_status_reg Address h80003408
_i2c1_i2c_sl_status_reg = 2147496968 0 32 b00000000000000000000000000000000 RO
i2c1_i2c_sl_rx_data = h80003408 0 9 h0 RO HEX
; Desc_i2c1_i2c_sl_rx_data 
i2c1_i2c_sl_addr_data = h80003408 9 8 h0 RO HEX
; Desc_i2c1_i2c_sl_addr_data 
i2c1_i2c_sl_rx_req = h80003408 17 1 h0 RO BIN
; Desc_i2c1_i2c_sl_rx_req 
i2c1_i2c_sl_tx_req = h80003408 18 1 h0 RO BIN
; Desc_i2c1_i2c_sl_tx_req 
i2c1_i2c_sl_addr_req = h80003408 19 1 h0 RO BIN
; Desc_i2c1_i2c_sl_addr_req 
i2c1_i2c_sl_sr = h80003408 31 1 h0 RO BIN
; Desc_i2c1_i2c_sl_sr 



; REGISTER i2c1_i2c_slave_int_stat_reg Address h8000341c
_i2c1_i2c_slave_int_stat_reg = 2147496988 0 32 b00000000000000000000000000000000 RO
i2c1_i2c_slave_int_stat = h8000341c 0 4 h0 RO HEX
; Desc_i2c1_i2c_slave_int_stat 



; REGISTER i2c1_i2c_sl_wd_stop_addr_reg Address h80003420
_i2c1_i2c_sl_wd_stop_addr_reg = 2147496992 0 32 b00000000000000000000000000000000 RO
i2c1_i2c_sl_wd_stop_addr = h80003420 0 7 h0 RO HEX
; Desc_i2c1_i2c_sl_wd_stop_addr 



; REGISTER rif_rx_msg_wr_rd_reg Address h80003500
_rif_rx_msg_wr_rd_reg = 2147497216 0 32 b00000000000000000000000000000000 SC
rif_rx_msg_rd_data = h80003500 0 32 h0 SC HEX
; Desc_rif_rx_msg_rd_data 



; REGISTER rif_tx_msg_wr_rd_reg Address h80003504
_rif_tx_msg_wr_rd_reg = 2147497220 0 32 b00000000000000000000000000000000 SC
rif_tx_msg_rd_data = h80003504 0 32 h0 SC HEX
; Desc_rif_tx_msg_rd_data 



; REGISTER msg_fifo_status Address h80003524
_msg_fifo_status = 2147497252 0 32 b00000000000000000000000000000000 RO
rx_msg_fifo_used = h80003524 0 11 h0 RO HEX
; Desc_rx_msg_fifo_used 
tx_msg_fifo_used = h80003524 11 11 h0 RO HEX
; Desc_tx_msg_fifo_used 



; REGISTER rx_spi_msg_int_status_reg Address h80003528
_rx_spi_msg_int_status_reg = 2147497256 0 32 b00000000000000000000000000000000 RO
rx_spi_msg_int_status = h80003528 0 6 h0 RO HEX
; Desc_rx_spi_msg_int_status 
rx_msg_fifo_overflow = h80003528 0 1 h0 RO BIN
rx_msg_fifo_underflow = h80003528 1 1 h0 RO BIN
rx_msg_fifo_full = h80003528 2 1 h0 RO BIN
rx_msg_fifo_empty = h80003528 3 1 h0 RO BIN
rx_msg_rd_rdy = h80003528 4 1 h0 RO BIN
rx_msg_wr_rdy = h80003528 5 1 h0 RO BIN



; REGISTER tx_spi_msg_int_status_reg Address h80003534
_tx_spi_msg_int_status_reg = 2147497268 0 32 b00000000000000000000000000000000 RO
tx_spi_msg_int_status = h80003534 0 6 h0 RO HEX
; Desc_tx_spi_msg_int_status 
tx_msg_fifo_overflow = h80003534 0 1 h0 RO BIN
tx_msg_fifo_underflow = h80003534 1 1 h0 RO BIN
tx_msg_fifo_full = h80003534 2 1 h0 RO BIN
tx_msg_fifo_empty = h80003534 3 1 h0 RO BIN
tx_msg_rd_rdy = h80003534 4 1 h0 RO BIN
tx_msg_wr_rdy = h80003534 5 1 h0 RO BIN



; REGISTER vmu_functional_voltage_read_internal_register Address h80003670
_vmu_functional_voltage_read_internal_register = 2147497584 0 32 b00000000000000000000000000000000 SC
vmu_functional_voltage_read_crc_internal = h80003670 0 8 h0 SC HEX
; Desc_vmu_functional_voltage_read_crc_internal 
vmu_functional_voltage_value_internal = h80003670 8 12 h0 SC HEX
; Desc_vmu_functional_voltage_value_internal 
vmu_functional_voltage_seq_id_internal = h80003670 24 8 h0 SC HEX
; Desc_vmu_functional_voltage_seq_id_internal 



; REGISTER vmu_functional_voltage_read_vm0_register Address h80003674
_vmu_functional_voltage_read_vm0_register = 2147497588 0 32 b00000000000000000000000000000000 SC
vmu_functional_voltage_read_crc_vm0 = h80003674 0 8 h0 SC HEX
; Desc_vmu_functional_voltage_read_crc_vm0 
vmu_functional_voltage_value_vm0 = h80003674 8 12 h0 SC HEX
; Desc_vmu_functional_voltage_value_vm0 
vmu_functional_voltage_seq_id_vm0 = h80003674 24 8 h0 SC HEX
; Desc_vmu_functional_voltage_seq_id_vm0 



; REGISTER vmu_functional_voltage_read_vm1_sel0_register Address h80003678
_vmu_functional_voltage_read_vm1_sel0_register = 2147497592 0 32 b00000000000000000000000000000000 SC
vmu_functional_voltage_read_crc_vm1_sel0 = h80003678 0 8 h0 SC HEX
; Desc_vmu_functional_voltage_read_crc_vm1_sel0 
vmu_functional_voltage_value_vm1_sel0 = h80003678 8 12 h0 SC HEX
; Desc_vmu_functional_voltage_value_vm1_sel0 
vmu_functional_voltage_seq_id_vm1_sel0 = h80003678 24 8 h0 SC HEX
; Desc_vmu_functional_voltage_seq_id_vm1_sel0 



; REGISTER vmu_functional_voltage_read_vm1_sel1_register Address h8000367c
_vmu_functional_voltage_read_vm1_sel1_register = 2147497596 0 32 b00000000000000000000000000000000 SC
vmu_functional_voltage_read_crc_vm1_sel1 = h8000367c 0 8 h0 SC HEX
; Desc_vmu_functional_voltage_read_crc_vm1_sel1 
vmu_functional_voltage_value_vm1_sel1 = h8000367c 8 12 h0 SC HEX
; Desc_vmu_functional_voltage_value_vm1_sel1 
vmu_functional_voltage_seq_id_vm1_sel1 = h8000367c 24 8 h0 SC HEX
; Desc_vmu_functional_voltage_seq_id_vm1_sel1 



; REGISTER vmu_functional_voltage_read_vm1_sel2_register Address h80003680
_vmu_functional_voltage_read_vm1_sel2_register = 2147497600 0 32 b00000000000000000000000000000000 SC
vmu_functional_voltage_read_crc_vm1_sel2 = h80003680 0 8 h0 SC HEX
; Desc_vmu_functional_voltage_read_crc_vm1_sel2 
vmu_functional_voltage_value_vm1_sel2 = h80003680 8 12 h0 SC HEX
; Desc_vmu_functional_voltage_value_vm1_sel2 
vmu_functional_voltage_seq_id_vm1_sel2 = h80003680 24 8 h0 SC HEX
; Desc_vmu_functional_voltage_seq_id_vm1_sel2 



; REGISTER vmu_functional_voltage_read_vm1_sel3_register Address h80003684
_vmu_functional_voltage_read_vm1_sel3_register = 2147497604 0 32 b00000000000000000000000000000000 SC
vmu_functional_voltage_read_crc_vm1_sel3 = h80003684 0 8 h0 SC HEX
; Desc_vmu_functional_voltage_read_crc_vm1_sel3 
vmu_functional_voltage_value_vm1_sel3 = h80003684 8 12 h0 SC HEX
; Desc_vmu_functional_voltage_value_vm1_sel3 
vmu_functional_voltage_seq_id_vm1_sel3 = h80003684 24 8 h0 SC HEX
; Desc_vmu_functional_voltage_seq_id_vm1_sel3 



; REGISTER vmu_functional_voltage_read_vm2_register Address h80003688
_vmu_functional_voltage_read_vm2_register = 2147497608 0 32 b00000000000000000000000000000000 SC
vmu_functional_voltage_read_crc_vm2 = h80003688 0 8 h0 SC HEX
; Desc_vmu_functional_voltage_read_crc_vm2 
vmu_functional_voltage_value_vm2 = h80003688 8 12 h0 SC HEX
; Desc_vmu_functional_voltage_value_vm2 
vmu_functional_voltage_seq_id_vm2 = h80003688 24 8 h0 SC HEX
; Desc_vmu_functional_voltage_seq_id_vm2 



; REGISTER vmu_functional_voltage_read_vm3_register Address h8000368c
_vmu_functional_voltage_read_vm3_register = 2147497612 0 32 b00000000000000000000000000000000 SC
vmu_functional_voltage_read_crc_vm3 = h8000368c 0 8 h0 SC HEX
; Desc_vmu_functional_voltage_read_crc_vm3 
vmu_functional_voltage_value_vm3 = h8000368c 8 12 h0 SC HEX
; Desc_vmu_functional_voltage_value_vm3 
vmu_functional_voltage_seq_id_vm3 = h8000368c 24 8 h0 SC HEX
; Desc_vmu_functional_voltage_seq_id_vm3 



; REGISTER vmu_functional_voltage_read_vm4_register Address h80003690
_vmu_functional_voltage_read_vm4_register = 2147497616 0 32 b00000000000000000000000000000000 SC
vmu_functional_voltage_read_crc_vm4 = h80003690 0 8 h0 SC HEX
; Desc_vmu_functional_voltage_read_crc_vm4 
vmu_functional_voltage_value_vm4 = h80003690 8 12 h0 SC HEX
; Desc_vmu_functional_voltage_value_vm4 
vmu_functional_voltage_seq_id_vm4 = h80003690 24 8 h0 SC HEX
; Desc_vmu_functional_voltage_seq_id_vm4 



; REGISTER vmu_functional_voltage_read_vm5_register Address h80003694
_vmu_functional_voltage_read_vm5_register = 2147497620 0 32 b00000000000000000000000000000000 SC
vmu_functional_voltage_read_crc_vm5 = h80003694 0 8 h0 SC HEX
; Desc_vmu_functional_voltage_read_crc_vm5 
vmu_functional_voltage_value_vm5 = h80003694 8 12 h0 SC HEX
; Desc_vmu_functional_voltage_value_vm5 
vmu_functional_voltage_seq_id_vm5 = h80003694 24 8 h0 SC HEX
; Desc_vmu_functional_voltage_seq_id_vm5 



; REGISTER vmu_functional_voltage_read_vm6_register Address h80003698
_vmu_functional_voltage_read_vm6_register = 2147497624 0 32 b00000000000000000000000000000000 SC
vmu_functional_voltage_read_crc_vm6 = h80003698 0 8 h0 SC HEX
; Desc_vmu_functional_voltage_read_crc_vm6 
vmu_functional_voltage_value_vm6 = h80003698 8 12 h0 SC HEX
; Desc_vmu_functional_voltage_value_vm6 
vmu_functional_voltage_seq_id_vm6 = h80003698 24 8 h0 SC HEX
; Desc_vmu_functional_voltage_seq_id_vm6 



; REGISTER vmu_functional_voltage_read_vm7_register Address h8000369c
_vmu_functional_voltage_read_vm7_register = 2147497628 0 32 b00000000000000000000000000000000 SC
vmu_functional_voltage_read_crc_vm7 = h8000369c 0 8 h0 SC HEX
; Desc_vmu_functional_voltage_read_crc_vm7 
vmu_functional_voltage_value_vm7 = h8000369c 8 12 h0 SC HEX
; Desc_vmu_functional_voltage_value_vm7 
vmu_functional_voltage_seq_id_vm7 = h8000369c 24 8 h0 SC HEX
; Desc_vmu_functional_voltage_seq_id_vm7 



; REGISTER vmu_voltage_monitors_status_register Address h800036a0
_vmu_voltage_monitors_status_register = 2147497632 0 32 b00000000000000000000000000000000 RO
vmu_vm_rdy = h800036a0 0 1 h0 RO BIN
; Desc_vmu_vm_rdy 



; REGISTER vmu_voltage_monitors_errors_register Address h800036a4
_vmu_voltage_monitors_errors_register = 2147497636 0 32 b00000000000000000000000000000000 RO
vmu_vm_internal_out_of_limit = h800036a4 0 1 h0 RO BIN
; Desc_vmu_vm_internal_out_of_limit 
vmu_vm_vm0_out_of_limit = h800036a4 1 1 h0 RO BIN
; Desc_vmu_vm_vm0_out_of_limit 
vmu_vm_vm1_sel0_out_of_limit = h800036a4 2 1 h0 RO BIN
; Desc_vmu_vm_vm1_sel0_out_of_limit 
vmu_vm_vm1_sel1_out_of_limit = h800036a4 3 1 h0 RO BIN
; Desc_vmu_vm_vm1_sel1_out_of_limit 
vmu_vm_vm1_sel2_out_of_limit = h800036a4 4 1 h0 RO BIN
; Desc_vmu_vm_vm1_sel2_out_of_limit 
vmu_vm_vm1_sel3_out_of_limit = h800036a4 5 1 h0 RO BIN
; Desc_vmu_vm_vm1_sel3_out_of_limit 
vmu_vm_vm2_out_of_limit = h800036a4 6 1 h0 RO BIN
; Desc_vmu_vm_vm2_out_of_limit 
vmu_vm_vm3_out_of_limit = h800036a4 7 1 h0 RO BIN
; Desc_vmu_vm_vm3_out_of_limit 
vmu_vm_vm4_out_of_limit = h800036a4 8 1 h0 RO BIN
; Desc_vmu_vm_vm4_out_of_limit 
vmu_vm_vm5_out_of_limit = h800036a4 9 1 h0 RO BIN
; Desc_vmu_vm_vm5_out_of_limit 
vmu_vm_vm6_out_of_limit = h800036a4 10 1 h0 RO BIN
; Desc_vmu_vm_vm6_out_of_limit 
vmu_vm_vm7_out_of_limit = h800036a4 11 1 h0 RO BIN
; Desc_vmu_vm_vm7_out_of_limit 
vmu_timeout = h800036a4 12 1 h0 RO BIN
; Desc_vmu_timeout 
vmu_safety_reg_fail = h800036a4 13 1 h0 RO BIN
; Desc_vmu_safety_reg_fail 



; REGISTER vmu_voltage_monitor_error_count_register Address h800036ac
_vmu_voltage_monitor_error_count_register = 2147497644 0 32 b00000000000000000000000000000000 RO
vmu_error_count_value = h800036ac 0 5 h0 RO HEX
; Desc_vmu_error_count_value 



; REGISTER vmu_voltage_monitor_safety_register_status1_register Address h800036b0
_vmu_voltage_monitor_safety_register_status1_register = 2147497648 0 32 b00000000000000000000000000000000 SC
vmu_voltage_monitor_safety_register_status1 = h800036b0 0 32 h0 SC HEX
; Desc_vmu_voltage_monitor_safety_register_status1 



; REGISTER vmu_voltage_monitor_safety_register_status2_register Address h800036b4
_vmu_voltage_monitor_safety_register_status2_register = 2147497652 0 32 b00000000000000000000000000000000 RO
vmu_voltage_monitor_safety_register_status2 = h800036b4 0 32 h0 RO HEX
; Desc_vmu_voltage_monitor_safety_register_status2 



; REGISTER vmu_short_self_test_comperators_results_register1 Address h800036b8
_vmu_short_self_test_comperators_results_register1 = 2147497656 0 32 b00000000000000000000000000000000 RO
vmu_self_test_actual_results_step1 = h800036b8 0 2 h0 RO HEX
; Desc_vmu_self_test_actual_results_step1 
vmu_self_test_actual_results_step2 = h800036b8 2 2 h0 RO HEX
; Desc_vmu_self_test_actual_results_step2 
vmu_self_test_actual_results_step3 = h800036b8 4 2 h0 RO HEX
; Desc_vmu_self_test_actual_results_step3 
vmu_self_test_actual_results_step4 = h800036b8 6 2 h0 RO HEX
; Desc_vmu_self_test_actual_results_step4 
vmu_self_test_actual_results_step5 = h800036b8 8 2 h0 RO HEX
; Desc_vmu_self_test_actual_results_step5 
vmu_self_test_actual_results_step6 = h800036b8 10 2 h0 RO HEX
; Desc_vmu_self_test_actual_results_step6 
vmu_self_test_actual_results_step7 = h800036b8 12 2 h0 RO HEX
; Desc_vmu_self_test_actual_results_step7 
vmu_self_test_actual_results_step8 = h800036b8 14 2 h0 RO HEX
; Desc_vmu_self_test_actual_results_step8 



; REGISTER vmu_functional_comperators_results_register Address h800036bc
_vmu_functional_comperators_results_register = 2147497660 0 32 b00000000000000000000000000000000 RO
vmu_vm_internal_comp_results = h800036bc 0 2 h0 RO HEX
; Desc_vmu_vm_internal_comp_results 
vmu_vm_vm0_comp_results = h800036bc 2 2 h0 RO HEX
; Desc_vmu_vm_vm0_comp_results 
vmu_vm_vm1_sel0_comp_results = h800036bc 4 2 h0 RO HEX
; Desc_vmu_vm_vm1_sel0_comp_results 
vmu_vm_vm1_sel1_comp_results = h800036bc 6 2 h0 RO HEX
; Desc_vmu_vm_vm1_sel1_comp_results 
vmu_vm_vm1_sel2_comp_results = h800036bc 8 2 h0 RO HEX
; Desc_vmu_vm_vm1_sel2_comp_results 
vmu_vm_vm1_sel3_comp_results = h800036bc 10 2 h0 RO HEX
; Desc_vmu_vm_vm1_sel3_comp_results 
vmu_vm_vm2_comp_results = h800036bc 12 2 h0 RO HEX
; Desc_vmu_vm_vm2_comp_results 
vmu_vm_vm3_comp_results = h800036bc 14 2 h0 RO HEX
; Desc_vmu_vm_vm3_comp_results 
vmu_vm_vm4_comp_results = h800036bc 16 2 h0 RO HEX
; Desc_vmu_vm_vm4_comp_results 
vmu_vm_vm5_comp_results = h800036bc 18 2 h0 RO HEX
; Desc_vmu_vm_vm5_comp_results 
vmu_vm_vm6_comp_results = h800036bc 20 2 h0 RO HEX
; Desc_vmu_vm_vm6_comp_results 
vmu_vm_vm7_comp_results = h800036bc 22 2 h0 RO HEX
; Desc_vmu_vm_vm7_comp_results 



; REGISTER vmu_func_measurement_count_register Address h800036e8
_vmu_func_measurement_count_register = 2147497704 0 32 b00000000000000000000000000000000 RO
vmu_func_measurement_count = h800036e8 0 24 h0 RO HEX
; Desc_vmu_func_measurement_count 



; REGISTER vmu_func_measurement_iteration_count_register Address h800036ec
_vmu_func_measurement_iteration_count_register = 2147497708 0 32 b00000000000000000000000000000000 RO
vmu_func_measurement_iteration_count = h800036ec 0 16 h0 RO HEX
; Desc_vmu_func_measurement_iteration_count 



; REGISTER tsu_functional_temperature_read_register Address h8000374c
_tsu_functional_temperature_read_register = 2147497804 0 32 b00000000000000000000000000000000 SC
tsu_functional_temperature_read_crc = h8000374c 0 8 h0 SC HEX
; Desc_tsu_functional_temperature_read_crc 
tsu_functional_temperature_value = h8000374c 8 12 h0 SC HEX
; Desc_tsu_functional_temperature_value 
tsu_functional_temperature_seq_id = h8000374c 24 8 h0 SC HEX
; Desc_tsu_functional_temperature_seq_id 



; REGISTER tsu_absolute_diff_register Address h80003754
_tsu_absolute_diff_register = 2147497812 0 32 b00000000000000000000000000000000 RO
tsu_absolute_diff = h80003754 0 12 h0 RO HEX
; Desc_tsu_absolute_diff 



; REGISTER tsu_temperature_sensors_measured_value_register Address h80003758
_tsu_temperature_sensors_measured_value_register = 2147497816 0 32 b00000000000000000000000000000000 RO
tsu_ts0_measured_temperature = h80003758 0 12 h0 RO HEX
; Desc_tsu_ts0_measured_temperature 
tsu_ts1_measured_temperature = h80003758 12 12 h0 RO HEX
; Desc_tsu_ts1_measured_temperature 



; REGISTER tsu_temperature_sensors_status_register Address h8000375c
_tsu_temperature_sensors_status_register = 2147497820 0 32 b00000000000000000000000000000000 RO
tsu_ts0_rdy = h8000375c 0 1 h0 RO BIN
; Desc_tsu_ts0_rdy LVDS common mode output level
tsu_ts1_rdy = h8000375c 1 1 h0 RO BIN
; Desc_tsu_ts1_rdy LVDS common mode output level



; REGISTER tsu_temperature_sensors_errors_register Address h80003760
_tsu_temperature_sensors_errors_register = 2147497824 0 32 b00000000000000000000000000000000 RO
tsu_ts0_out_of_limit = h80003760 0 1 h0 RO BIN
; Desc_tsu_ts0_out_of_limit Enable TX lane
tsu_ts1_out_of_limit = h80003760 1 1 h0 RO BIN
; Desc_tsu_ts1_out_of_limit Enable TX lane
tsu_diff_out_of_limits = h80003760 2 1 h0 RO BIN
; Desc_tsu_diff_out_of_limits Enable TX lane
tsu_timeout = h80003760 3 1 h0 RO BIN
; Desc_tsu_timeout Enable TX lane
tsu_safety_reg_fail = h80003760 4 1 h0 RO BIN
; Desc_tsu_safety_reg_fail Enable TX lane



; REGISTER tsu_temperature_sensor_error_count_register Address h80003768
_tsu_temperature_sensor_error_count_register = 2147497832 0 32 b00000000000000000000000000000000 RO
tsu_error_count_value = h80003768 0 5 h0 RO HEX
; Desc_tsu_error_count_value TX PLL feedback divide value SERIALIZER bit rate is equal



; REGISTER tsu_temperature_sensor_comparators_results__register Address h8000376c
_tsu_temperature_sensor_comparators_results__register = 2147497836 0 32 b00000000000000000000000000000000 RO
tsu_ts0_high_comp = h8000376c 0 1 h0 RO BIN
; Desc_tsu_ts0_high_comp PLL lock output from RX PLL
tsu_ts0_low_comp = h8000376c 1 1 h0 RO BIN
; Desc_tsu_ts0_low_comp PLL lock output from RX PLL
tsu_ts1_high_comp = h8000376c 2 1 h0 RO BIN
; Desc_tsu_ts1_high_comp PLL lock output from RX PLL
tsu_ts1_low_comp = h8000376c 3 1 h0 RO BIN
; Desc_tsu_ts1_low_comp PLL lock output from RX PLL
tsu_diff_comp = h8000376c 4 1 h0 RO BIN
; Desc_tsu_diff_comp PLL lock output from RX PLL



; REGISTER tsu_temperature_sensor_safety_register_status_register Address h80003770
_tsu_temperature_sensor_safety_register_status_register = 2147497840 0 32 b00000000000000000000000000000000 SC
tsu_temperature_sensor_safety_register_status = h80003770 0 32 h0 SC HEX
; Desc_tsu_temperature_sensor_safety_register_status PLL Fractional divide value . Only valid when txpll_dsmpd=1'b0. This data should be synchronized to the rising edge of the clock signal pll_clksscg in spread spectrum mode.s



; REGISTER tsu_short_self_test_comperators_results_register1 Address h80003774
_tsu_short_self_test_comperators_results_register1 = 2147497844 0 32 b00000000000000000000000000000000 RO
tsu_self_test_actual_results_step1 = h80003774 0 5 h0 RO HEX
; Desc_tsu_self_test_actual_results_step1 
tsu_self_test_actual_results_step2 = h80003774 5 5 h0 RO HEX
; Desc_tsu_self_test_actual_results_step2 
tsu_self_test_actual_results_step3 = h80003774 10 5 h0 RO HEX
; Desc_tsu_self_test_actual_results_step3 
tsu_self_test_actual_results_step4 = h80003774 15 5 h0 RO HEX
; Desc_tsu_self_test_actual_results_step4 



; REGISTER tsu_short_self_test_comperators_results_register2 Address h80003778
_tsu_short_self_test_comperators_results_register2 = 2147497848 0 32 b00000000000000000000000000000000 RO
tsu_self_test_actual_results_step5 = h80003778 0 5 h0 RO HEX
; Desc_tsu_self_test_actual_results_step5 
tsu_self_test_actual_results_step6 = h80003778 5 5 h0 RO HEX
; Desc_tsu_self_test_actual_results_step6 
tsu_self_test_actual_results_step7 = h80003778 10 5 h0 RO HEX
; Desc_tsu_self_test_actual_results_step7 
tsu_self_test_actual_results_step8 = h80003778 15 5 h0 RO HEX
; Desc_tsu_self_test_actual_results_step8 



; REGISTER pd0_cfg_1 Address h80003808
_pd0_cfg_1 = 2147497992 0 32 b00000000000000000000000000000000 SC
pd0_tmp_data = h80003808 0 1 h0 SC BIN
; Desc_pd0_tmp_data write "0xAB_CD_EF_44" to clear the WatchDog



; REGISTER pd0_status Address h8000380c
_pd0_status = 2147497996 0 32 b00000000000000000000000000000000 RO
pd0_faultn = h8000380c 0 1 h0 RO BIN
; Desc_pd0_faultn write the follwing two words one after the other to ENABLE the WD:s0x12_45_67_9A  then:  0x34_BC_76_C5swrite the follwing two words one after the other to DISABLE the WD:s0x33_DF_E4_74  then:  0x32_79_B5_6E
pd0_rdy = h8000380c 1 1 h0 RO BIN
; Desc_pd0_rdy write the follwing two words one after the other to ENABLE the WD:s0x12_45_67_9A  then:  0x34_BC_76_C5swrite the follwing two words one after the other to DISABLE the WD:s0x33_DF_E4_74  then:  0x32_79_B5_6E



; REGISTER pd0_dout_reg Address h80003814
_pd0_dout_reg = 2147498004 0 32 b00000000000000000000000000000000 RO
pd0_dout = h80003814 0 12 h0 RO HEX
; Desc_pd0_dout Watchdog time out will be 2^WD_LIMIT
pd0_dout_valid = h80003814 12 1 h0 RO BIN
; Desc_pd0_dout_valid Watchdog time out will be 2^WD_LIMIT
pd0_dout_type_out = h80003814 13 1 h0 RO BIN
; Desc_pd0_dout_type_out Watchdog time out will be 2^WD_LIMIT



; REGISTER efuse_bist_status1_reg Address h80003854
_efuse_bist_status1_reg = 2147498068 0 32 b00000000000000000000000000000000 RO
rd_bist_result = h80003854 0 2 h0 RO HEX
; Desc_rd_bist_result Swap AHB Slave Bytes



; REGISTER efuse_bist_status2_reg Address h80003858
_efuse_bist_status2_reg = 2147498072 0 32 b00000000000000000000000000000000 RO
rd_bist_data_signature = h80003858 0 32 h0 RO HEX
; Desc_rd_bist_data_signature Address for indirect pka prog ram init



; REGISTER soc_pwm0_pwm_status Address h80003a0c
_soc_pwm0_pwm_status = 2147498508 0 32 b00000000000000000000000000000000 RO
soc_pwm0_stm = h80003a0c 0 2 h0 RO HEX
; Desc_soc_pwm0_stm Write Data for indirect pka prog ram init



; REGISTER soc_pwm1_pwm_status Address h80003a1c
_soc_pwm1_pwm_status = 2147498524 0 32 b00000000000000000000000000000000 RO
soc_pwm1_stm = h80003a1c 0 2 h0 RO HEX
; Desc_soc_pwm1_stm Read Data for indirect pka prog ram init



; REGISTER soc_pwm2_pwm_status Address h80003a2c
_soc_pwm2_pwm_status = 2147498540 0 32 b00000000000000000000000000000000 RO
soc_pwm2_stm = h80003a2c 0 2 h0 RO HEX
; Desc_soc_pwm2_stm select tswsoc output in the tswsoc chain



; REGISTER soc_pwm3_pwm_status Address h80003a3c
_soc_pwm3_pwm_status = 2147498556 0 32 b00000000000000000000000000000000 RO
soc_pwm3_stm = h80003a3c 0 2 h0 RO HEX
; Desc_soc_pwm3_stm 



; REGISTER h1_external0_int_stat_reg Address h80003b10
_h1_external0_int_stat_reg = 2147498768 0 32 b00000000000000000000000000000000 RO
h1_external0_int_stat = h80003b10 0 32 h0 RO HEX
; Desc_h1_external0_int_stat number of sys clock cycles for DFT test



; REGISTER h1_internal0_int_stat_reg Address h80003b14
_h1_internal0_int_stat_reg = 2147498772 0 32 b00000000000000000000000000000000 RO
h1_internal0_int_stat = h80003b14 0 27 h0 RO HEX
; Desc_h1_internal0_int_stat for SGMII test: number of maximum allowed BERR



; REGISTER h1_external1_int_stat_reg Address h80003b18
_h1_external1_int_stat_reg = 2147498776 0 32 b00000000000000000000000000000000 RO
h1_external1_int_stat = h80003b18 0 32 h0 RO HEX
; Desc_h1_external1_int_stat store DHDI results of previous test. Write will copy that result of current test



; REGISTER h1_internal1_int_stat_reg Address h80003b1c
_h1_internal1_int_stat_reg = 2147498780 0 32 b00000000000000000000000000000000 RO
h1_internal1_int_stat = h80003b1c 0 27 h0 RO HEX
; Desc_h1_internal1_int_stat ROMBIST signature result - after running rombist



; REGISTER h2_external0_int_stat_reg Address h80003b50
_h2_external0_int_stat_reg = 2147498832 0 32 b00000000000000000000000000000000 RO
h2_external0_int_stat = h80003b50 0 32 h0 RO HEX
; Desc_h2_external0_int_stat Priority given to Rx ports over Tx ports when DMA selects the packet to be transferred.sValue of 0 means equal wheight.sValue of 1 means that for every 2 Rx selected packets 1 Tx packet is  selected.sValue of 2 means that for every 3 Rx selected packets 1 Tx packet is  selected.sEtc.



; REGISTER h2_internal0_int_stat_reg Address h80003b54
_h2_internal0_int_stat_reg = 2147498836 0 32 b00000000000000000000000000000000 RO
h2_internal0_int_stat = h80003b54 0 27 h0 RO HEX
; Desc_h2_internal0_int_stat Maximal number of clock cycles to wait for ack on BRIF interface after a request is submitted.sIf no ack inputted during this counting, DMA generates "fake" internal ack, continues it's work and submitts interrupt



; REGISTER h2_external1_int_stat_reg Address h80003b58
_h2_external1_int_stat_reg = 2147498840 0 32 b00000000000000000000000000000000 RO
h2_external1_int_stat = h80003b58 0 32 h0 RO HEX
; Desc_h2_external1_int_stat  'one hot' field that indicates which status bit of port should be cleared 



; REGISTER h2_internal1_int_stat_reg Address h80003b5c
_h2_internal1_int_stat_reg = 2147498844 0 32 b00000000000000000000000000000000 RO
h2_internal1_int_stat = h80003b5c 0 27 h0 RO HEX
; Desc_h2_internal1_int_stat  'one hot' hot field that indicates the port of which status bit and interrupt should be cleared.



; REGISTER i2cm_int_clr Address h80000388
_i2cm_int_clr = 2147484552 0 32 b00000000000000000000000000000000 SC



; REGISTER rif_uart_tx_int_clr Address h8000039c
_rif_uart_tx_int_clr = 2147484572 0 32 b00000000000000000000000000000000 SC



; REGISTER rif_uart_rx_int_clr Address h800003a0
_rif_uart_rx_int_clr = 2147484576 0 32 b00000000000000000000000000000000 SC



; REGISTER i2c_slave_int_clr Address h800003fc
_i2c_slave_int_clr = 2147484668 0 32 b00000000000000000000000000000000 SC



; REGISTER eth_mac_int_clr Address h8000082c
_eth_mac_int_clr = 2147485740 0 32 b00000000000000000000000000000000 SC



; REGISTER fbc_start_code_exec Address h80002060
_fbc_start_code_exec = 2147491936 0 32 b00000000000000000000000000000000 SC



; REGISTER hdcp_int_clr_reg Address h8000300c
_hdcp_int_clr_reg = 2147495948 0 32 b00000000000000000000000000000000 SC



; REGISTER acmp0_acmp_int_clr Address h8000322c
_acmp0_acmp_int_clr = 2147496492 0 32 b00000000000000000000000000000000 SC



; REGISTER acmp1_acmp_int_clr Address h8000332c
_acmp1_acmp_int_clr = 2147496748 0 32 b00000000000000000000000000000000 SC



; REGISTER i2c1_i2c_slave_int_clr Address h80003410
_i2c1_i2c_slave_int_clr = 2147496976 0 32 b00000000000000000000000000000000 SC



; REGISTER tx_msg_fifo_clr Address h8000351c
_tx_msg_fifo_clr = 2147497244 0 32 b00000000000000000000000000000000 SC



; REGISTER rx_msg_fifo_clr Address h80003520
_rx_msg_fifo_clr = 2147497248 0 32 b00000000000000000000000000000000 SC



; REGISTER rx_spi_msg_int_clr Address h80003530
_rx_spi_msg_int_clr = 2147497264 0 32 b00000000000000000000000000000000 SC



; REGISTER tx_spi_msg_int_clr Address h8000353c
_tx_spi_msg_int_clr = 2147497276 0 32 b00000000000000000000000000000000 SC



; REGISTER prot_TSWSOC_Enable_Prot_Access Address h80000004
_prot_TSWSOC_Enable_Prot_Access = 2147483652 0 32 b00000000000000000000000000000000 RW
prot_Enable_Debug_Access = h80000004 0 32 h0 RW HEX
; Desc_prot_Enable_Debug_Access clear interrupts in interrupt controller bits [31:0]  for VPE0 - write 1 to clear a specific interrupt source (generates internal clear pulse)
prot_rif_0_debug_en = h80000004 0 1 h0 RW BIN
prot_rif_1_debug_en = h80000004 1 1 h0 RW BIN
prot_rif_2_debug_en = h80000004 2 1 h0 RW BIN
prot_rif_3_debug_en = h80000004 3 1 h0 RW BIN
prot_rif_4_debug_en = h80000004 4 1 h0 RW BIN
prot_rif_5_debug_en = h80000004 5 1 h0 RW BIN
prot_rif_6_debug_en = h80000004 6 1 h0 RW BIN
prot_rif_7_debug_en = h80000004 7 1 h0 RW BIN
prot_rif_8_debug_en = h80000004 8 1 h0 RW BIN
prot_rif_9_debug_en = h80000004 9 1 h0 RW BIN
prot_rif_A_debug_en = h80000004 10 1 h0 RW BIN
prot_rif_B_debug_en = h80000004 11 1 h0 RW BIN
prot_rif_C_debug_en = h80000004 12 1 h0 RW BIN
prot_rif_D_debug_en = h80000004 13 1 h0 RW BIN
prot_rif_E_debug_en = h80000004 14 1 h0 RW BIN
prot_rif_F_debug_en = h80000004 15 1 h0 RW BIN
prot_Allow_otp_debug_access = h80000004 16 1 h0 RW BIN
prot_Allow_hdcpco_debug_access = h80000004 17 1 h0 RW BIN
prot_Jtag_debug_en = h80000004 18 1 h0 RW BIN
prot_Efuse_debug_en = h80000004 19 1 h0 RW BIN
prot_Allow_otp1_debug_access = h80000004 20 1 h0 RW BIN
prot_Allow_otp2_debug_access = h80000004 21 1 h0 RW BIN
prot_Allow_otp3_debug_access = h80000004 22 1 h0 RW BIN



; REGISTER TSWSOC_Config Address h80000008
_TSWSOC_Config = 2147483656 0 32 b00000000000000000000000000000000 RW
sys_clk_pll_enable = h80000008 0 1 h0 RW BIN
; Desc_sys_clk_pll_enable clear interrupts in interrupt controller bits [63:32] for VPE1 - write 1 to clear a specific interrupt source (generates internal clear pulse)
>>DESC sys_clk_pll_enable = 2, b0, refclk, b1, sys_pll_500m
OCP_Mem_DeepSleep = h80000008 16 16 h0 RW HEX
; Desc_OCP_Mem_DeepSleep clear interrupts in interrupt controller bits [63:32] for VPE1 - write 1 to clear a specific interrupt source (generates internal clear pulse)



; REGISTER Software_Interrupt_Reg_0 Address h80000010
_Software_Interrupt_Reg_0 = 2147483664 0 32 b00000000000000000000000000000000 RW
Software_Int[31:0] = h80000010 0 32 h0 RW HEX
; Desc_Software_Int[31:0] interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 41 to 45



; REGISTER Software_Interrupt_Reg_1 Address h80000014
_Software_Interrupt_Reg_1 = 2147483668 0 32 b00000000000000000000000000000000 RW
Software_Int[63:32] = h80000014 0 32 h0 RW HEX
; Desc_Software_Int[63:32] interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 61 to 63



; REGISTER rif_intc_1_mask_reg Address h80000020
_rif_intc_1_mask_reg = 2147483680 0 32 b11111111111111111111111111111111 RW
rif_intc_1_mask = h80000020 0 32 hffffffff RW HEX
; Desc_rif_intc_1_mask interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 46 to 50



; REGISTER rif_intc_2_mask_reg Address h80000024
_rif_intc_2_mask_reg = 2147483684 0 32 b11111111111111111111111111111111 RW
rif_intc_2_mask = h80000024 0 32 hffffffff RW HEX
; Desc_rif_intc_2_mask interrupt controller 0: defines shadow set of registers for interrupts 9 to 16.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER rif_intc_1_mask_1_reg Address h80000038
_rif_intc_1_mask_1_reg = 2147483704 0 32 b11111111111111111111111111111111 RW
rif_intc_1_mask_1 = h80000038 0 32 hffffffff RW HEX
; Desc_rif_intc_1_mask_1 0 = works as GPIO. 1 = PAD's other option (in case that there's any)



; REGISTER rif_intc_2_mask_1_reg Address h8000003c
_rif_intc_2_mask_1_reg = 2147483708 0 32 b11111111111111111111111111111111 RW
rif_intc_2_mask_1 = h8000003c 0 32 hffffffff RW HEX
; Desc_rif_intc_2_mask_1 Pull Enable - Default 1



; REGISTER IntPrioSet_0_reg_0 Address h8000004c
_IntPrioSet_0_reg_0 = 2147483724 0 30 b00000100000011000010000001000000 RW
IntPrioSet_0_0 = h8000004c 0 30 h40c2040 RW HEX
; Desc_IntPrioSet_0_0 GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
IntPrioSet_pms_0_0 = h8000004c 0 6 h0 RW HEX
IntPrioSet_pms_0_1 = h8000004c 6 6 h1 RW HEX
IntPrioSet_pms_0_2 = h8000004c 12 6 h2 RW HEX
IntPrioSet_pms_0_3 = h8000004c 18 6 h3 RW HEX
IntPrioSet_pms_0_4 = h8000004c 24 6 h4 RW HEX



; REGISTER IntPrioSet_0_reg_1 Address h80000050
_IntPrioSet_0_reg_1 = 2147483728 0 30 b00001001001000000111000110000101 RW
IntPrioSet_0_1 = h80000050 0 30 h9207185 RW HEX
; Desc_IntPrioSet_0_1 div ratio of the rif UART divide by N+1 from the system clock
IntPrioSet_pms_0_5 = h80000050 0 6 h5 RW HEX
IntPrioSet_pms_0_6 = h80000050 6 6 h6 RW HEX
IntPrioSet_pms_0_7 = h80000050 12 6 h7 RW HEX
IntPrioSet_pms_0_8 = h80000050 18 6 h8 RW HEX
IntPrioSet_pms_0_9 = h80000050 24 6 h9 RW HEX



; REGISTER IntPrioSet_0_reg_2 Address h80000054
_IntPrioSet_0_reg_2 = 2147483732 0 30 b00001110001101001100001011001010 RW
IntPrioSet_0_2 = h80000054 0 30 he34c2ca RW HEX
; Desc_IntPrioSet_0_2 div ratio of the rif UART divide by N+1 from the system clock
IntPrioSet_pms_0_10 = h80000054 0 6 ha RW HEX
IntPrioSet_pms_0_11 = h80000054 6 6 hb RW HEX
IntPrioSet_pms_0_12 = h80000054 12 6 hc RW HEX
IntPrioSet_pms_0_13 = h80000054 18 6 hd RW HEX
IntPrioSet_pms_0_14 = h80000054 24 6 he RW HEX



; REGISTER IntPrioSet_0_reg_3 Address h80000058
_IntPrioSet_0_reg_3 = 2147483736 0 30 b00010011010010010001010000001111 RW
IntPrioSet_0_3 = h80000058 0 30 h1349140f RW HEX
; Desc_IntPrioSet_0_3 div ratio of the rif UART divide by N+1 from the system clock
IntPrioSet_pms_0_15 = h80000058 0 6 hf RW HEX
IntPrioSet_pms_0_16 = h80000058 6 6 h10 RW HEX
IntPrioSet_pms_0_17 = h80000058 12 6 h11 RW HEX
IntPrioSet_pms_0_18 = h80000058 18 6 h12 RW HEX
IntPrioSet_pms_0_19 = h80000058 24 6 h13 RW HEX



; REGISTER IntPrioSet_0_reg_4 Address h8000005c
_IntPrioSet_0_reg_4 = 2147483740 0 30 b00011000010111010110010101010100 RW
IntPrioSet_0_4 = h8000005c 0 30 h185d6554 RW HEX
; Desc_IntPrioSet_0_4 div ratio of the rif UART divide by N+1 from the system clock
IntPrioSet_pms_0_20 = h8000005c 0 6 h14 RW HEX
IntPrioSet_pms_0_21 = h8000005c 6 6 h15 RW HEX
IntPrioSet_pms_0_22 = h8000005c 12 6 h16 RW HEX
IntPrioSet_pms_0_23 = h8000005c 18 6 h17 RW HEX
IntPrioSet_pms_0_24 = h8000005c 24 6 h18 RW HEX



; REGISTER IntPrioSet_0_reg_5 Address h80000060
_IntPrioSet_0_reg_5 = 2147483744 0 30 b00011101011100011011011010011001 RW
IntPrioSet_0_5 = h80000060 0 30 h1d71b699 RW HEX
; Desc_IntPrioSet_0_5 DDC master generator FIFO {FIFO Control,  FIFO Data}ssFIFO Control (1 bit) , FIFO Data (8 bits):s0 – Data DDC DATAs1 – Control DDC CONTROL:s 00 – STARTs 01 – STOPs 10 – ACKs 11 – NACKs Reserveds
IntPrioSet_pms_0_25 = h80000060 0 6 h19 RW HEX
IntPrioSet_pms_0_26 = h80000060 6 6 h1a RW HEX
IntPrioSet_pms_0_27 = h80000060 12 6 h1b RW HEX
IntPrioSet_pms_0_28 = h80000060 18 6 h1c RW HEX
IntPrioSet_pms_0_29 = h80000060 24 6 h1d RW HEX



; REGISTER IntPrioSet_0_reg_6 Address h80000064
_IntPrioSet_0_reg_6 = 2147483748 0 30 b00100010100001100000011111011110 RW
IntPrioSet_0_6 = h80000064 0 30 h228607de RW HEX
; Desc_IntPrioSet_0_6 
IntPrioSet_pms_0_30 = h80000064 0 6 h1e RW HEX
IntPrioSet_pms_0_31 = h80000064 6 6 h1f RW HEX
IntPrioSet_pms_0_32 = h80000064 12 6 h20 RW HEX
IntPrioSet_pms_0_33 = h80000064 18 6 h21 RW HEX
IntPrioSet_pms_0_34 = h80000064 24 6 h22 RW HEX



; REGISTER IntPrioSet_0_reg_7 Address h80000068
_IntPrioSet_0_reg_7 = 2147483752 0 30 b00100111100110100101100100100011 RW
IntPrioSet_0_7 = h80000068 0 30 h279a5923 RW HEX
; Desc_IntPrioSet_0_7 
IntPrioSet_pms_0_35 = h80000068 0 6 h23 RW HEX
IntPrioSet_pms_0_36 = h80000068 6 6 h24 RW HEX
IntPrioSet_pms_0_37 = h80000068 12 6 h25 RW HEX
IntPrioSet_pms_0_38 = h80000068 18 6 h26 RW HEX
IntPrioSet_pms_0_39 = h80000068 24 6 h27 RW HEX



; REGISTER IntPrioSet_0_reg_8 Address h8000006c
_IntPrioSet_0_reg_8 = 2147483756 0 30 b00101100101011101010101001101000 RW
IntPrioSet_0_8 = h8000006c 0 30 h2caeaa68 RW HEX
; Desc_IntPrioSet_0_8 The Received Data Byte
IntPrioSet_pms_0_40 = h8000006c 0 6 h28 RW HEX
IntPrioSet_pms_0_41 = h8000006c 6 6 h29 RW HEX
IntPrioSet_pms_0_42 = h8000006c 12 6 h2a RW HEX
IntPrioSet_pms_0_43 = h8000006c 18 6 h2b RW HEX
IntPrioSet_pms_0_44 = h8000006c 24 6 h2c RW HEX



; REGISTER IntPrioSet_0_reg_9 Address h80000070
_IntPrioSet_0_reg_9 = 2147483760 0 30 b00110001110000101111101110101101 RW
IntPrioSet_0_9 = h80000070 0 30 h31c2fbad RW HEX
; Desc_IntPrioSet_0_9 i2c_sl_rx_req,i2c_sl_tx_req,i2c_sl_addr_req,i2c_slv_int_wd
IntPrioSet_pms_0_45 = h80000070 0 6 h2d RW HEX
IntPrioSet_pms_0_46 = h80000070 6 6 h2e RW HEX
IntPrioSet_pms_0_47 = h80000070 12 6 h2f RW HEX
IntPrioSet_pms_0_48 = h80000070 18 6 h30 RW HEX
IntPrioSet_pms_0_49 = h80000070 24 6 h31 RW HEX



; REGISTER IntPrioSet_0_reg_10 Address h80000074
_IntPrioSet_0_reg_10 = 2147483764 0 30 b00110110110101110100110011110010 RW
IntPrioSet_0_10 = h80000074 0 30 h36d74cf2 RW HEX
; Desc_IntPrioSet_0_10 MCI InterruptsFunction: When set high, this signal indicates an interrupt event
IntPrioSet_pms_0_50 = h80000074 0 6 h32 RW HEX
IntPrioSet_pms_0_51 = h80000074 6 6 h33 RW HEX
IntPrioSet_pms_0_52 = h80000074 12 6 h34 RW HEX
IntPrioSet_pms_0_53 = h80000074 18 6 h35 RW HEX
IntPrioSet_pms_0_54 = h80000074 24 6 h36 RW HEX



; REGISTER IntPrioSet_0_reg_11 Address h80000078
_IntPrioSet_0_reg_11 = 2147483768 0 30 b00111011111010111001111000110111 RW
IntPrioSet_0_11 = h80000078 0 30 h3beb9e37 RW HEX
; Desc_IntPrioSet_0_11 Number of frames ready in the TX RAM
IntPrioSet_pms_0_55 = h80000078 0 6 h37 RW HEX
IntPrioSet_pms_0_56 = h80000078 6 6 h38 RW HEX
IntPrioSet_pms_0_57 = h80000078 12 6 h39 RW HEX
IntPrioSet_pms_0_58 = h80000078 18 6 h3a RW HEX
IntPrioSet_pms_0_59 = h80000078 24 6 h3b RW HEX



; REGISTER IntPrioSet_0_reg_12 Address h8000007c
_IntPrioSet_0_reg_12 = 2147483772 0 18 b00000000000000111110111101111100 RW
IntPrioSet_0_12 = h8000007c 0 18 h3ef7c RW HEX
; Desc_IntPrioSet_0_12 A transmit status word is ready to be read
IntPrioSet_pms_0_60 = h8000007c 0 6 h3c RW HEX
IntPrioSet_pms_0_61 = h8000007c 6 6 h3d RW HEX
IntPrioSet_pms_0_62 = h8000007c 12 6 h3e RW HEX



; REGISTER IntPrioSet_1_reg_0 Address h80000080
_IntPrioSet_1_reg_0 = 2147483776 0 30 b00000100000011000010000001000000 RW
IntPrioSet_1_0 = h80000080 0 30 h40c2040 RW HEX
; Desc_IntPrioSet_1_0 
IntPrioSet_pms_1_0 = h80000080 0 6 h0 RW HEX
IntPrioSet_pms_1_1 = h80000080 6 6 h1 RW HEX
IntPrioSet_pms_1_2 = h80000080 12 6 h2 RW HEX
IntPrioSet_pms_1_3 = h80000080 18 6 h3 RW HEX
IntPrioSet_pms_1_4 = h80000080 24 6 h4 RW HEX



; REGISTER IntPrioSet_1_reg_1 Address h80000084
_IntPrioSet_1_reg_1 = 2147483780 0 30 b00001001001000000111000110000101 RW
IntPrioSet_1_1 = h80000084 0 30 h9207185 RW HEX
; Desc_IntPrioSet_1_1 
IntPrioSet_pms_1_5 = h80000084 0 6 h5 RW HEX
IntPrioSet_pms_1_6 = h80000084 6 6 h6 RW HEX
IntPrioSet_pms_1_7 = h80000084 12 6 h7 RW HEX
IntPrioSet_pms_1_8 = h80000084 18 6 h8 RW HEX
IntPrioSet_pms_1_9 = h80000084 24 6 h9 RW HEX



; REGISTER IntPrioSet_1_reg_2 Address h80000088
_IntPrioSet_1_reg_2 = 2147483784 0 30 b00001110001101001100001011001010 RW
IntPrioSet_1_2 = h80000088 0 30 he34c2ca RW HEX
; Desc_IntPrioSet_1_2 
IntPrioSet_pms_1_10 = h80000088 0 6 ha RW HEX
IntPrioSet_pms_1_11 = h80000088 6 6 hb RW HEX
IntPrioSet_pms_1_12 = h80000088 12 6 hc RW HEX
IntPrioSet_pms_1_13 = h80000088 18 6 hd RW HEX
IntPrioSet_pms_1_14 = h80000088 24 6 he RW HEX



; REGISTER IntPrioSet_1_reg_3 Address h8000008c
_IntPrioSet_1_reg_3 = 2147483788 0 30 b00010011010010010001010000001111 RW
IntPrioSet_1_3 = h8000008c 0 30 h1349140f RW HEX
; Desc_IntPrioSet_1_3 
IntPrioSet_pms_1_15 = h8000008c 0 6 hf RW HEX
IntPrioSet_pms_1_16 = h8000008c 6 6 h10 RW HEX
IntPrioSet_pms_1_17 = h8000008c 12 6 h11 RW HEX
IntPrioSet_pms_1_18 = h8000008c 18 6 h12 RW HEX
IntPrioSet_pms_1_19 = h8000008c 24 6 h13 RW HEX



; REGISTER IntPrioSet_1_reg_4 Address h80000090
_IntPrioSet_1_reg_4 = 2147483792 0 30 b00011000010111010110010101010100 RW
IntPrioSet_1_4 = h80000090 0 30 h185d6554 RW HEX
; Desc_IntPrioSet_1_4 
IntPrioSet_pms_1_20 = h80000090 0 6 h14 RW HEX
IntPrioSet_pms_1_21 = h80000090 6 6 h15 RW HEX
IntPrioSet_pms_1_22 = h80000090 12 6 h16 RW HEX
IntPrioSet_pms_1_23 = h80000090 18 6 h17 RW HEX
IntPrioSet_pms_1_24 = h80000090 24 6 h18 RW HEX



; REGISTER IntPrioSet_1_reg_5 Address h80000094
_IntPrioSet_1_reg_5 = 2147483796 0 30 b00011101011100011011011010011001 RW
IntPrioSet_1_5 = h80000094 0 30 h1d71b699 RW HEX
; Desc_IntPrioSet_1_5 
IntPrioSet_pms_1_25 = h80000094 0 6 h19 RW HEX
IntPrioSet_pms_1_26 = h80000094 6 6 h1a RW HEX
IntPrioSet_pms_1_27 = h80000094 12 6 h1b RW HEX
IntPrioSet_pms_1_28 = h80000094 18 6 h1c RW HEX
IntPrioSet_pms_1_29 = h80000094 24 6 h1d RW HEX



; REGISTER IntPrioSet_1_reg_6 Address h80000098
_IntPrioSet_1_reg_6 = 2147483800 0 30 b00100010100001100000011111011110 RW
IntPrioSet_1_6 = h80000098 0 30 h228607de RW HEX
; Desc_IntPrioSet_1_6 
IntPrioSet_pms_1_30 = h80000098 0 6 h1e RW HEX
IntPrioSet_pms_1_31 = h80000098 6 6 h1f RW HEX
IntPrioSet_pms_1_32 = h80000098 12 6 h20 RW HEX
IntPrioSet_pms_1_33 = h80000098 18 6 h21 RW HEX
IntPrioSet_pms_1_34 = h80000098 24 6 h22 RW HEX



; REGISTER IntPrioSet_1_reg_7 Address h8000009c
_IntPrioSet_1_reg_7 = 2147483804 0 30 b00100111100110100101100100100011 RW
IntPrioSet_1_7 = h8000009c 0 30 h279a5923 RW HEX
; Desc_IntPrioSet_1_7 
IntPrioSet_pms_1_35 = h8000009c 0 6 h23 RW HEX
IntPrioSet_pms_1_36 = h8000009c 6 6 h24 RW HEX
IntPrioSet_pms_1_37 = h8000009c 12 6 h25 RW HEX
IntPrioSet_pms_1_38 = h8000009c 18 6 h26 RW HEX
IntPrioSet_pms_1_39 = h8000009c 24 6 h27 RW HEX



; REGISTER IntPrioSet_1_reg_8 Address h800000a0
_IntPrioSet_1_reg_8 = 2147483808 0 30 b00101100101011101010101001101000 RW
IntPrioSet_1_8 = h800000a0 0 30 h2caeaa68 RW HEX
; Desc_IntPrioSet_1_8 
IntPrioSet_pms_1_40 = h800000a0 0 6 h28 RW HEX
IntPrioSet_pms_1_41 = h800000a0 6 6 h29 RW HEX
IntPrioSet_pms_1_42 = h800000a0 12 6 h2a RW HEX
IntPrioSet_pms_1_43 = h800000a0 18 6 h2b RW HEX
IntPrioSet_pms_1_44 = h800000a0 24 6 h2c RW HEX



; REGISTER IntPrioSet_1_reg_9 Address h800000a4
_IntPrioSet_1_reg_9 = 2147483812 0 30 b00110001110000101111101110101101 RW
IntPrioSet_1_9 = h800000a4 0 30 h31c2fbad RW HEX
; Desc_IntPrioSet_1_9 
IntPrioSet_pms_1_45 = h800000a4 0 6 h2d RW HEX
IntPrioSet_pms_1_46 = h800000a4 6 6 h2e RW HEX
IntPrioSet_pms_1_47 = h800000a4 12 6 h2f RW HEX
IntPrioSet_pms_1_48 = h800000a4 18 6 h30 RW HEX
IntPrioSet_pms_1_49 = h800000a4 24 6 h31 RW HEX



; REGISTER IntPrioSet_1_reg_10 Address h800000a8
_IntPrioSet_1_reg_10 = 2147483816 0 30 b00110110110101110100110011110010 RW
IntPrioSet_1_10 = h800000a8 0 30 h36d74cf2 RW HEX
; Desc_IntPrioSet_1_10 
IntPrioSet_pms_1_50 = h800000a8 0 6 h32 RW HEX
IntPrioSet_pms_1_51 = h800000a8 6 6 h33 RW HEX
IntPrioSet_pms_1_52 = h800000a8 12 6 h34 RW HEX
IntPrioSet_pms_1_53 = h800000a8 18 6 h35 RW HEX
IntPrioSet_pms_1_54 = h800000a8 24 6 h36 RW HEX



; REGISTER IntPrioSet_1_reg_11 Address h800000ac
_IntPrioSet_1_reg_11 = 2147483820 0 30 b00111011111010111001111000110111 RW
IntPrioSet_1_11 = h800000ac 0 30 h3beb9e37 RW HEX
; Desc_IntPrioSet_1_11 
IntPrioSet_pms_1_55 = h800000ac 0 6 h37 RW HEX
IntPrioSet_pms_1_56 = h800000ac 6 6 h38 RW HEX
IntPrioSet_pms_1_57 = h800000ac 12 6 h39 RW HEX
IntPrioSet_pms_1_58 = h800000ac 18 6 h3a RW HEX
IntPrioSet_pms_1_59 = h800000ac 24 6 h3b RW HEX



; REGISTER IntPrioSet_1_reg_12 Address h800000b0
_IntPrioSet_1_reg_12 = 2147483824 0 18 b00000000000000111110111101111100 RW
IntPrioSet_1_12 = h800000b0 0 18 h3ef7c RW HEX
; Desc_IntPrioSet_1_12 
IntPrioSet_pms_1_60 = h800000b0 0 6 h3c RW HEX
IntPrioSet_pms_1_61 = h800000b0 6 6 h3d RW HEX
IntPrioSet_pms_1_62 = h800000b0 12 6 h3e RW HEX



; REGISTER IntShaSet_0_reg_0 Address h800000b4
_IntShaSet_0_reg_0 = 2147483828 0 32 b00000000000000000000000000000000 RW
IntShaSet_0_0 = h800000b4 0 32 h0 RW HEX
; Desc_IntShaSet_0_0 
IntShaSet_0_01 = h800000b4 0 4 h0 RW HEX
IntShaSet_0_02 = h800000b4 4 4 h0 RW HEX
IntShaSet_0_03 = h800000b4 8 4 h0 RW HEX
IntShaSet_0_04 = h800000b4 12 4 h0 RW HEX
IntShaSet_0_05 = h800000b4 16 4 h0 RW HEX
IntShaSet_0_06 = h800000b4 20 4 h0 RW HEX
IntShaSet_0_07 = h800000b4 24 4 h0 RW HEX
IntShaSet_0_08 = h800000b4 28 4 h0 RW HEX



; REGISTER IntShaSet_0_reg_1 Address h800000b8
_IntShaSet_0_reg_1 = 2147483832 0 32 b00000000000000000000000000000000 RW
IntShaSet_0_1 = h800000b8 0 32 h0 RW HEX
; Desc_IntShaSet_0_1 
IntShaSet_0_09 = h800000b8 0 4 h0 RW HEX
IntShaSet_0_10 = h800000b8 4 4 h0 RW HEX
IntShaSet_0_11 = h800000b8 8 4 h0 RW HEX
IntShaSet_0_12 = h800000b8 12 4 h0 RW HEX
IntShaSet_0_13 = h800000b8 16 4 h0 RW HEX
IntShaSet_0_14 = h800000b8 20 4 h0 RW HEX
IntShaSet_0_15 = h800000b8 24 4 h0 RW HEX
IntShaSet_0_16 = h800000b8 28 4 h0 RW HEX



; REGISTER IntShaSet_0_reg_2 Address h800000bc
_IntShaSet_0_reg_2 = 2147483836 0 32 b00000000000000000000000000000000 RW
IntShaSet_0_2 = h800000bc 0 32 h0 RW HEX
; Desc_IntShaSet_0_2 
IntShaSet_0_17 = h800000bc 0 4 h0 RW HEX
IntShaSet_0_18 = h800000bc 4 4 h0 RW HEX
IntShaSet_0_19 = h800000bc 8 4 h0 RW HEX
IntShaSet_0_20 = h800000bc 12 4 h0 RW HEX
IntShaSet_0_21 = h800000bc 16 4 h0 RW HEX
IntShaSet_0_22 = h800000bc 20 4 h0 RW HEX
IntShaSet_0_23 = h800000bc 24 4 h0 RW HEX
IntShaSet_0_24 = h800000bc 28 4 h0 RW HEX



; REGISTER IntShaSet_0_reg_4 Address h800000c0
_IntShaSet_0_reg_4 = 2147483840 0 32 b00000000000000000000000000000000 RW
IntShaSet_0_4 = h800000c0 0 32 h0 RW HEX
; Desc_IntShaSet_0_4 
IntShaSet_0_25 = h800000c0 0 4 h0 RW HEX
IntShaSet_0_26 = h800000c0 4 4 h0 RW HEX
IntShaSet_0_27 = h800000c0 8 4 h0 RW HEX
IntShaSet_0_28 = h800000c0 12 4 h0 RW HEX
IntShaSet_0_29 = h800000c0 16 4 h0 RW HEX
IntShaSet_0_30 = h800000c0 20 4 h0 RW HEX
IntShaSet_0_31 = h800000c0 24 4 h0 RW HEX
IntShaSet_0_32 = h800000c0 28 4 h0 RW HEX



; REGISTER IntShaSet_0_reg_5 Address h800000c4
_IntShaSet_0_reg_5 = 2147483844 0 32 b00000000000000000000000000000000 RW
IntShaSet_0_5 = h800000c4 0 32 h0 RW HEX
; Desc_IntShaSet_0_5 
IntShaSet_0_33 = h800000c4 0 4 h0 RW HEX
IntShaSet_0_34 = h800000c4 4 4 h0 RW HEX
IntShaSet_0_35 = h800000c4 8 4 h0 RW HEX
IntShaSet_0_36 = h800000c4 12 4 h0 RW HEX
IntShaSet_0_37 = h800000c4 16 4 h0 RW HEX
IntShaSet_0_38 = h800000c4 20 4 h0 RW HEX
IntShaSet_0_39 = h800000c4 24 4 h0 RW HEX
IntShaSet_0_40 = h800000c4 28 4 h0 RW HEX



; REGISTER IntShaSet_0_reg_6 Address h800000c8
_IntShaSet_0_reg_6 = 2147483848 0 32 b00000000000000000000000000000000 RW
IntShaSet_0_6 = h800000c8 0 32 h0 RW HEX
; Desc_IntShaSet_0_6 
IntShaSet_0_41 = h800000c8 0 4 h0 RW HEX
IntShaSet_0_42 = h800000c8 4 4 h0 RW HEX
IntShaSet_0_43 = h800000c8 8 4 h0 RW HEX
IntShaSet_0_44 = h800000c8 12 4 h0 RW HEX
IntShaSet_0_45 = h800000c8 16 4 h0 RW HEX
IntShaSet_0_46 = h800000c8 20 4 h0 RW HEX
IntShaSet_0_47 = h800000c8 24 4 h0 RW HEX
IntShaSet_0_48 = h800000c8 28 4 h0 RW HEX



; REGISTER IntShaSet_0_reg_7 Address h800000cc
_IntShaSet_0_reg_7 = 2147483852 0 32 b00000000000000000000000000000000 RW
IntShaSet_0_7 = h800000cc 0 32 h0 RW HEX
; Desc_IntShaSet_0_7 
IntShaSet_0_49 = h800000cc 0 4 h0 RW HEX
IntShaSet_0_50 = h800000cc 4 4 h0 RW HEX
IntShaSet_0_51 = h800000cc 8 4 h0 RW HEX
IntShaSet_0_52 = h800000cc 12 4 h0 RW HEX
IntShaSet_0_53 = h800000cc 16 4 h0 RW HEX
IntShaSet_0_54 = h800000cc 20 4 h0 RW HEX
IntShaSet_0_55 = h800000cc 24 4 h0 RW HEX
IntShaSet_0_56 = h800000cc 28 4 h0 RW HEX



; REGISTER IntShaSet_0_reg_8 Address h800000d0
_IntShaSet_0_reg_8 = 2147483856 0 28 b00000000000000000000000000000000 RW
IntShaSet_0_8 = h800000d0 0 28 h0 RW HEX
; Desc_IntShaSet_0_8 
IntShaSet_0_57 = h800000d0 0 4 h0 RW HEX
IntShaSet_0_58 = h800000d0 4 4 h0 RW HEX
IntShaSet_0_59 = h800000d0 8 4 h0 RW HEX
IntShaSet_0_60 = h800000d0 12 4 h0 RW HEX
IntShaSet_0_61 = h800000d0 16 4 h0 RW HEX
IntShaSet_0_62 = h800000d0 20 4 h0 RW HEX
IntShaSet_0_63 = h800000d0 24 4 h0 RW HEX



; REGISTER IntShaSet_1_reg_0 Address h800000d4
_IntShaSet_1_reg_0 = 2147483860 0 32 b00000000000000000000000000000000 RW
IntShaSet_1_0 = h800000d4 0 32 h0 RW HEX
; Desc_IntShaSet_1_0 
IntShaSet_1_01 = h800000d4 0 4 h0 RW HEX
IntShaSet_1_02 = h800000d4 4 4 h0 RW HEX
IntShaSet_1_03 = h800000d4 8 4 h0 RW HEX
IntShaSet_1_04 = h800000d4 12 4 h0 RW HEX
IntShaSet_1_05 = h800000d4 16 4 h0 RW HEX
IntShaSet_1_06 = h800000d4 20 4 h0 RW HEX
IntShaSet_1_07 = h800000d4 24 4 h0 RW HEX
IntShaSet_1_08 = h800000d4 28 4 h0 RW HEX



; REGISTER IntShaSet_1_reg_1 Address h800000d8
_IntShaSet_1_reg_1 = 2147483864 0 32 b00000000000000000000000000000000 RW
IntShaSet_1_1 = h800000d8 0 32 h0 RW HEX
; Desc_IntShaSet_1_1 
IntShaSet_1_09 = h800000d8 0 4 h0 RW HEX
IntShaSet_1_10 = h800000d8 4 4 h0 RW HEX
IntShaSet_1_11 = h800000d8 8 4 h0 RW HEX
IntShaSet_1_12 = h800000d8 12 4 h0 RW HEX
IntShaSet_1_13 = h800000d8 16 4 h0 RW HEX
IntShaSet_1_14 = h800000d8 20 4 h0 RW HEX
IntShaSet_1_15 = h800000d8 24 4 h0 RW HEX
IntShaSet_1_16 = h800000d8 28 4 h0 RW HEX



; REGISTER IntShaSet_1_reg_2 Address h800000dc
_IntShaSet_1_reg_2 = 2147483868 0 32 b00000000000000000000000000000000 RW
IntShaSet_1_2 = h800000dc 0 32 h0 RW HEX
; Desc_IntShaSet_1_2 
IntShaSet_1_17 = h800000dc 0 4 h0 RW HEX
IntShaSet_1_18 = h800000dc 4 4 h0 RW HEX
IntShaSet_1_19 = h800000dc 8 4 h0 RW HEX
IntShaSet_1_20 = h800000dc 12 4 h0 RW HEX
IntShaSet_1_21 = h800000dc 16 4 h0 RW HEX
IntShaSet_1_22 = h800000dc 20 4 h0 RW HEX
IntShaSet_1_23 = h800000dc 24 4 h0 RW HEX
IntShaSet_1_24 = h800000dc 28 4 h0 RW HEX



; REGISTER IntShaSet_1_reg_4 Address h800000e0
_IntShaSet_1_reg_4 = 2147483872 0 32 b00000000000000000000000000000000 RW
IntShaSet_1_4 = h800000e0 0 32 h0 RW HEX
; Desc_IntShaSet_1_4 
IntShaSet_1_25 = h800000e0 0 4 h0 RW HEX
IntShaSet_1_26 = h800000e0 4 4 h0 RW HEX
IntShaSet_1_27 = h800000e0 8 4 h0 RW HEX
IntShaSet_1_28 = h800000e0 12 4 h0 RW HEX
IntShaSet_1_29 = h800000e0 16 4 h0 RW HEX
IntShaSet_1_30 = h800000e0 20 4 h0 RW HEX
IntShaSet_1_31 = h800000e0 24 4 h0 RW HEX
IntShaSet_1_32 = h800000e0 28 4 h0 RW HEX



; REGISTER IntShaSet_1_reg_5 Address h800000e4
_IntShaSet_1_reg_5 = 2147483876 0 32 b00000000000000000000000000000000 RW
IntShaSet_1_5 = h800000e4 0 32 h0 RW HEX
; Desc_IntShaSet_1_5 
IntShaSet_1_33 = h800000e4 0 4 h0 RW HEX
IntShaSet_1_34 = h800000e4 4 4 h0 RW HEX
IntShaSet_1_35 = h800000e4 8 4 h0 RW HEX
IntShaSet_1_36 = h800000e4 12 4 h0 RW HEX
IntShaSet_1_37 = h800000e4 16 4 h0 RW HEX
IntShaSet_1_38 = h800000e4 20 4 h0 RW HEX
IntShaSet_1_39 = h800000e4 24 4 h0 RW HEX
IntShaSet_1_40 = h800000e4 28 4 h0 RW HEX



; REGISTER IntShaSet_1_reg_6 Address h800000e8
_IntShaSet_1_reg_6 = 2147483880 0 32 b00000000000000000000000000000000 RW
IntShaSet_1_6 = h800000e8 0 32 h0 RW HEX
; Desc_IntShaSet_1_6 
IntShaSet_1_41 = h800000e8 0 4 h0 RW HEX
IntShaSet_1_42 = h800000e8 4 4 h0 RW HEX
IntShaSet_1_43 = h800000e8 8 4 h0 RW HEX
IntShaSet_1_44 = h800000e8 12 4 h0 RW HEX
IntShaSet_1_45 = h800000e8 16 4 h0 RW HEX
IntShaSet_1_46 = h800000e8 20 4 h0 RW HEX
IntShaSet_1_47 = h800000e8 24 4 h0 RW HEX
IntShaSet_1_48 = h800000e8 28 4 h0 RW HEX



; REGISTER IntShaSet_1_reg_7 Address h800000ec
_IntShaSet_1_reg_7 = 2147483884 0 32 b00000000000000000000000000000000 RW
IntShaSet_1_7 = h800000ec 0 32 h0 RW HEX
; Desc_IntShaSet_1_7 
IntShaSet_1_49 = h800000ec 0 4 h0 RW HEX
IntShaSet_1_50 = h800000ec 4 4 h0 RW HEX
IntShaSet_1_51 = h800000ec 8 4 h0 RW HEX
IntShaSet_1_52 = h800000ec 12 4 h0 RW HEX
IntShaSet_1_53 = h800000ec 16 4 h0 RW HEX
IntShaSet_1_54 = h800000ec 20 4 h0 RW HEX
IntShaSet_1_55 = h800000ec 24 4 h0 RW HEX
IntShaSet_1_56 = h800000ec 28 4 h0 RW HEX



; REGISTER IntShaSet_1_reg_8 Address h800000f0
_IntShaSet_1_reg_8 = 2147483888 0 28 b00000000000000000000000000000000 RW
IntShaSet_1_8 = h800000f0 0 28 h0 RW HEX
; Desc_IntShaSet_1_8 
IntShaSet_1_57 = h800000f0 0 4 h0 RW HEX
IntShaSet_1_58 = h800000f0 4 4 h0 RW HEX
IntShaSet_1_59 = h800000f0 8 4 h0 RW HEX
IntShaSet_1_60 = h800000f0 12 4 h0 RW HEX
IntShaSet_1_61 = h800000f0 16 4 h0 RW HEX
IntShaSet_1_62 = h800000f0 20 4 h0 RW HEX
IntShaSet_1_63 = h800000f0 24 4 h0 RW HEX



; REGISTER gpio_oe_reg_0 Address h80000110
_gpio_oe_reg_0 = 2147483920 0 32 b11111111111111111111111111111111 RW
gpio_data_oe_0 = h80000110 0 32 hffffffff RW HEX
; Desc_gpio_data_oe_0 



; REGISTER gpio_oe_reg_1 Address h80000114
_gpio_oe_reg_1 = 2147483924 0 32 b11111111111111111111111111111111 RW
gpio_data_oe_1 = h80000114 0 32 hffffffff RW HEX
; Desc_gpio_data_oe_1 



; REGISTER gpio_oe_reg_2 Address h80000118
_gpio_oe_reg_2 = 2147483928 0 32 b11111111111111111111111111111111 RW
gpio_data_oe_2 = h80000118 0 32 hffffffff RW HEX
; Desc_gpio_data_oe_2 



; REGISTER gpio_int_enable_0_reg Address h80000130
_gpio_int_enable_0_reg = 2147483952 0 32 b00000000000000000000000000000000 RW
gpio_int_enable_0 = h80000130 0 32 h0 RW HEX
; Desc_gpio_int_enable_0 



; REGISTER gpio_int_enable_1_reg Address h80000134
_gpio_int_enable_1_reg = 2147483956 0 32 b00000000000000000000000000000000 RW
gpio_int_enable_1 = h80000134 0 32 h0 RW HEX
; Desc_gpio_int_enable_1 



; REGISTER gpio_int_enable_2_reg Address h80000138
_gpio_int_enable_2_reg = 2147483960 0 32 b00000000000000000000000000000000 RW
gpio_int_enable_2 = h80000138 0 32 h0 RW HEX
; Desc_gpio_int_enable_2 



; REGISTER gpio_mode_select_0_reg Address h80000140
_gpio_mode_select_0_reg = 2147483968 0 32 b00000000000000000000000000000000 RW
gpio_mode_select_0 = h80000140 0 32 h0 RW HEX
; Desc_gpio_mode_select_0 



; REGISTER gpio_mode_select_1_reg Address h80000144
_gpio_mode_select_1_reg = 2147483972 0 32 b00000000000000000000000000000000 RW
gpio_mode_select_1 = h80000144 0 32 h0 RW HEX
; Desc_gpio_mode_select_1 TX PLL feedback divide value SERIALIZER bit rate is equal



; REGISTER gpio_mode_select_2_reg Address h80000148
_gpio_mode_select_2_reg = 2147483976 0 32 b00000000000000000000000000000000 RW
gpio_mode_select_2 = h80000148 0 32 h0 RW HEX
; Desc_gpio_mode_select_2 PLL Fractional divide value . Only valid when txpll_dsmpd=1'b0. This data should be synchronized to the rising edge of the clock signal pll_clksscg in spread spectrum mode.s



; REGISTER gpo_data_reg_0 Address h80000150
_gpo_data_reg_0 = 2147483984 0 32 b00000000000000000000000000000000 RW
gpo_data_out = h80000150 0 32 h0 RW HEX
; Desc_gpo_data_out write the follwing two words one after the other to ENABLE the WD:s0x12_45_67_9A  then:  0x34_BC_76_C5swrite the follwing two words one after the other to DISABLE the WD:s0x33_DF_E4_74  then:  0x32_79_B5_6E



; REGISTER gpio_pe_0_reg Address h80000160
_gpio_pe_0_reg = 2147484000 0 32 b11111111111111111111111111111111 RW
gpio_pe_0 = h80000160 0 32 hffffffff RW HEX
; Desc_gpio_pe_0 for SGMII test: number of maximum allowed BERR



; REGISTER gpio_pe_1_reg Address h80000164
_gpio_pe_1_reg = 2147484004 0 32 b11111111111111111111111111111111 RW
gpio_pe_1 = h80000164 0 32 hffffffff RW HEX
; Desc_gpio_pe_1 ROMBIST signature result - after running rombist



; REGISTER gpio_pe_2_reg Address h80000168
_gpio_pe_2_reg = 2147484008 0 32 b11111111111111111111111111111111 RW
gpio_pe_2 = h80000168 0 32 hffffffff RW HEX
; Desc_gpio_pe_2 Maximal number of clock cycles to wait for ack on BRIF interface after a request is submitted.sIf no ack inputted during this counting, DMA generates "fake" internal ack, continues it's work and submitts interrupt



; REGISTER gpio_ps_0_reg Address h8000016c
_gpio_ps_0_reg = 2147484012 0 32 b11111111111111111111111111111111 RW
gpio_ps_0 = h8000016c 0 32 hffffffff RW HEX
; Desc_gpio_ps_0  'one hot' hot field that indicates the port of which status bit and interrupt should be cleared.



; REGISTER gpio_ps_1_reg Address h80000170
_gpio_ps_1_reg = 2147484016 0 32 b11111111111111111111111111111111 RW
gpio_ps_1 = h80000170 0 32 hffffffff RW HEX
; Desc_gpio_ps_1 int out of each port. 'OR' between 8 interrupts of each port.s[0] int out of HLIC port 0s[1] int out of HLIC port 1s…s[15] int out of HLIC port 15s[16] int out of EMAC port



; REGISTER gpio_ps_2_reg Address h80000174
_gpio_ps_2_reg = 2147484020 0 32 b11111111111111111111111111111111 RW
gpio_ps_2 = h80000174 0 32 hffffffff RW HEX
; Desc_gpio_ps_2 Init value in which each HLIC port's rx_timeout down counter is set at reset and when clear of rx_timeout_clk_evt



; REGISTER gpio_d0_0_reg Address h80000178
_gpio_d0_0_reg = 2147484024 0 32 b00000000000000000000000000000000 RW
gpio_d0_0 = h80000178 0 32 h0 RW HEX
; Desc_gpio_d0_0 Init value in which EMAC port's rx_timeout down counter is set at reset and when clear of rx_timeout_clk_evt



; REGISTER gpio_d0_1_reg Address h8000017c
_gpio_d0_1_reg = 2147484028 0 32 b00000000000000000000000000000000 RW
gpio_d0_1 = h8000017c 0 32 h0 RW HEX
; Desc_gpio_d0_1 Pointer to the base address of port's Rx BD ring



; REGISTER gpio_d0_2_reg Address h80000180
_gpio_d0_2_reg = 2147484032 0 32 b00000000000000000000000000000000 RW
gpio_d0_2 = h80000180 0 32 h0 RW HEX
; Desc_gpio_d0_2 Pointer to the base address of port's  Tx BD ring



; REGISTER gpio_d1_0_reg Address h80000184
_gpio_d1_0_reg = 2147484036 0 32 b00000000000000000000000000000000 RW
gpio_d1_0 = h80000184 0 32 h0 RW HEX
; Desc_gpio_d1_0 Port enable for Tx direction (scratchpad to port)



; REGISTER gpio_d1_1_reg Address h80000188
_gpio_d1_1_reg = 2147484040 0 32 b00000000000000000000000000000000 RW
gpio_d1_1 = h80000188 0 32 h0 RW HEX
; Desc_gpio_d1_1 status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info



; REGISTER gpio_d1_2_reg Address h8000018c
_gpio_d1_2_reg = 2147484044 0 32 b00000000000000000000000000000000 RW
gpio_d1_2 = h8000018c 0 32 h0 RW HEX
; Desc_gpio_d1_2 Pointer to the base address of port's  Tx BD ring



; REGISTER g_uart_ds_reg Address h80000190
_g_uart_ds_reg = 2147484048 0 16 b00000000000000000000000000000000 RW
g_uartout0_d0 = h80000190 0 1 h0 RW BIN
; Desc_g_uartout0_d0 status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info
g_uartout0_d1 = h80000190 1 1 h0 RW BIN
; Desc_g_uartout0_d1 status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info
g_uartout1_d0 = h80000190 2 1 h0 RW BIN
; Desc_g_uartout1_d0 status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info
g_uartout1_d1 = h80000190 3 1 h0 RW BIN
; Desc_g_uartout1_d1 status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info
g_uartout2_d0 = h80000190 4 1 h0 RW BIN
; Desc_g_uartout2_d0 status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info
g_uartout2_d1 = h80000190 5 1 h0 RW BIN
; Desc_g_uartout2_d1 status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info
g_uartout3_d0 = h80000190 6 1 h0 RW BIN
; Desc_g_uartout3_d0 status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info
g_uartout3_d1 = h80000190 7 1 h0 RW BIN
; Desc_g_uartout3_d1 status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info
g_uartin0_d0 = h80000190 8 1 h0 RW BIN
; Desc_g_uartin0_d0 status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info
g_uartin0_d1 = h80000190 9 1 h0 RW BIN
; Desc_g_uartin0_d1 status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info
g_uartin1_d0 = h80000190 10 1 h0 RW BIN
; Desc_g_uartin1_d0 status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info
g_uartin1_d1 = h80000190 11 1 h0 RW BIN
; Desc_g_uartin1_d1 status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info
g_uartin2_d0 = h80000190 12 1 h0 RW BIN
; Desc_g_uartin2_d0 status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info
g_uartin2_d1 = h80000190 13 1 h0 RW BIN
; Desc_g_uartin2_d1 status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info
g_uartin3_d0 = h80000190 14 1 h0 RW BIN
; Desc_g_uartin3_d0 status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info
g_uartin3_d1 = h80000190 15 1 h0 RW BIN
; Desc_g_uartin3_d1 status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info



; REGISTER gpo_d0_reg Address h80000194
_gpo_d0_reg = 2147484052 0 32 b00000000000000000000000000000000 RW
gpo_d0 = h80000194 0 32 h0 RW HEX
; Desc_gpo_d0 



; REGISTER gpo_d1_reg Address h80000198
_gpo_d1_reg = 2147484056 0 32 b00000000000000000000000000000000 RW
gpo_d1 = h80000198 0 32 h0 RW HEX
; Desc_gpo_d1 mips access to read from OTP



; REGISTER Software_Interrupt_1_Reg_0 Address h8000019c
_Software_Interrupt_1_Reg_0 = 2147484060 0 32 b00000000000000000000000000000000 RW
Software_Int_1[31:0] = h8000019c 0 32 h0 RW HEX
; Desc_Software_Int_1[31:0] data write to the OTP



; REGISTER Software_Interrupt_1_Reg_1 Address h800001a0
_Software_Interrupt_1_Reg_1 = 2147484064 0 32 b00000000000000000000000000000000 RW
Software_Int_1[63:32] = h800001a0 0 32 h0 RW HEX
; Desc_Software_Int_1[63:32] data read (registers) from OTP



; REGISTER gpio_int_polarity_0_reg Address h800001b0
_gpio_int_polarity_0_reg = 2147484080 0 32 b00000000000000000000000000000000 RW
gpio_int_polarity_0 = h800001b0 0 32 h0 RW HEX
; Desc_gpio_int_polarity_0 read timer 0 value, write set the value and start the timer 0



; REGISTER gpio_int_polarity_reg_1 Address h800001b4
_gpio_int_polarity_reg_1 = 2147484084 0 32 b00000000000000000000000000000000 RW
gpio_int_polarity_1 = h800001b4 0 32 h0 RW HEX
; Desc_gpio_int_polarity_1 read timer 2 value, write set the value and start the timer 2



; REGISTER gpio_int_polarity_reg_2 Address h800001b8
_gpio_int_polarity_reg_2 = 2147484088 0 32 b00000000000000000000000000000000 RW
gpio_int_polarity_2 = h800001b8 0 32 h0 RW HEX
; Desc_gpio_int_polarity_2 read timer 4 value, write set the value and start the timer 4



; REGISTER gpio_int_any_chng_0_reg Address h800001c0
_gpio_int_any_chng_0_reg = 2147484096 0 32 b00000000000000000000000000000000 RW
gpio_int_any_chng_0 = h800001c0 0 32 h0 RW HEX
; Desc_gpio_int_any_chng_0 read timer 7 value, write set the value and start the timer 7



; REGISTER gpio_int_any_chng_reg_1 Address h800001c4
_gpio_int_any_chng_reg_1 = 2147484100 0 32 b00000000000000000000000000000000 RW
gpio_int_any_chng_1 = h800001c4 0 32 h0 RW HEX
; Desc_gpio_int_any_chng_1 read timer 9 value, write set the value and start the timer 9



; REGISTER gpio_int_any_chng_reg_2 Address h800001c8
_gpio_int_any_chng_reg_2 = 2147484104 0 32 b00000000000000000000000000000000 RW
gpio_int_any_chng_2 = h800001c8 0 32 h0 RW HEX
; Desc_gpio_int_any_chng_2 read timer 11 value, write set the value and start the timer 11



; REGISTER rif_00_rif_uart_control Address h8000022c
_rif_00_rif_uart_control = 2147484204 0 32 b00000000000000000000000000000000 RW
rif_00_rif_uart_div_ratio[13:0] = h8000022c 0 14 h0 RW HEX
; Desc_rif_00_rif_uart_div_ratio[13:0] each bit clears the corresponding pas_timer_int_stat bit. See note in pas_timer_int_stat
rif_00_rif_uart_rx_int_en = h8000022c 14 1 h0 RW BIN
; Desc_rif_00_rif_uart_rx_int_en each bit clears the corresponding pas_timer_int_stat bit. See note in pas_timer_int_stat
rif_00_rif_uart_tx_int_en = h8000022c 15 1 h0 RW BIN
; Desc_rif_00_rif_uart_tx_int_en each bit clears the corresponding pas_timer_int_stat bit. See note in pas_timer_int_stat
rif_00_rif_uart_parity_en = h8000022c 16 1 h0 RW BIN
; Desc_rif_00_rif_uart_parity_en each bit clears the corresponding pas_timer_int_stat bit. See note in pas_timer_int_stat
rif_00_rif_uart_odd_parity = h8000022c 17 1 h0 RW BIN
; Desc_rif_00_rif_uart_odd_parity each bit clears the corresponding pas_timer_int_stat bit. See note in pas_timer_int_stat
rif_00_rif_uart_stop_bits = h8000022c 18 2 h0 RW HEX
; Desc_rif_00_rif_uart_stop_bits each bit clears the corresponding pas_timer_int_stat bit. See note in pas_timer_int_stat
rif_00_rif_uart_data_size = h8000022c 20 2 h0 RW HEX
; Desc_rif_00_rif_uart_data_size each bit clears the corresponding pas_timer_int_stat bit. See note in pas_timer_int_stat
rif_00_rif_uart_rx_int_thr = h8000022c 22 4 h0 RW HEX
; Desc_rif_00_rif_uart_rx_int_thr each bit clears the corresponding pas_timer_int_stat bit. See note in pas_timer_int_stat
rif_00_rif_uart_tx_int_thr = h8000022c 26 4 h0 RW HEX
; Desc_rif_00_rif_uart_tx_int_thr each bit clears the corresponding pas_timer_int_stat bit. See note in pas_timer_int_stat
rif_00_rif_uart_enable = h8000022c 31 1 h0 RW BIN
; Desc_rif_00_rif_uart_enable each bit clears the corresponding pas_timer_int_stat bit. See note in pas_timer_int_stat
rif_00_rif_uart_int_val = h8000022c 0 10 h0 RW HEX
rif_00_rif_uart_frac_val = h8000022c 10 4 h0 RW HEX



; REGISTER rif_00_rif_uart_control2 Address h80000230
_rif_00_rif_uart_control2 = 2147484208 0 32 b00000000000000000000000000000000 RW
rif_00_rif_uart_div_ratio[16:14] = h80000230 0 3 h0 RW HEX
; Desc_rif_00_rif_uart_div_ratio[16:14] for SW use
rif_00_rif_uart_int_val_msb = h80000230 0 3 h0 RW HEX



; REGISTER rif_01_rif_uart_control Address h8000024c
_rif_01_rif_uart_control = 2147484236 0 32 b00000000000000000000000000000000 RW
rif_01_rif_uart_div_ratio[13:0] = h8000024c 0 14 h0 RW HEX
; Desc_rif_01_rif_uart_div_ratio[13:0] for SW use
rif_01_rif_uart_rx_int_en = h8000024c 14 1 h0 RW BIN
; Desc_rif_01_rif_uart_rx_int_en for SW use
rif_01_rif_uart_tx_int_en = h8000024c 15 1 h0 RW BIN
; Desc_rif_01_rif_uart_tx_int_en for SW use
rif_01_rif_uart_parity_en = h8000024c 16 1 h0 RW BIN
; Desc_rif_01_rif_uart_parity_en for SW use
rif_01_rif_uart_odd_parity = h8000024c 17 1 h0 RW BIN
; Desc_rif_01_rif_uart_odd_parity for SW use
rif_01_rif_uart_stop_bits = h8000024c 18 2 h0 RW HEX
; Desc_rif_01_rif_uart_stop_bits for SW use
rif_01_rif_uart_data_size = h8000024c 20 2 h0 RW HEX
; Desc_rif_01_rif_uart_data_size for SW use
rif_01_rif_uart_rx_int_thr = h8000024c 22 4 h0 RW HEX
; Desc_rif_01_rif_uart_rx_int_thr for SW use
rif_01_rif_uart_tx_int_thr = h8000024c 26 4 h0 RW HEX
; Desc_rif_01_rif_uart_tx_int_thr for SW use
rif_01_rif_uart_enable = h8000024c 31 1 h0 RW BIN
; Desc_rif_01_rif_uart_enable for SW use
rif_01_rif_uart_int_val = h8000024c 0 10 h0 RW HEX
rif_01_rif_uart_frac_val = h8000024c 10 4 h0 RW HEX



; REGISTER rif_01_rif_uart_control2 Address h80000250
_rif_01_rif_uart_control2 = 2147484240 0 32 b00000000000000000000000000000000 RW
rif_01_rif_uart_div_ratio[16:14] = h80000250 0 3 h0 RW HEX
; Desc_rif_01_rif_uart_div_ratio[16:14] for SW use
rif_01_rif_uart_int_val_msb = h80000250 0 3 h0 RW HEX



; REGISTER rif_02_rif_uart_control Address h8000026c
_rif_02_rif_uart_control = 2147484268 0 32 b00000000000000000000000000000000 RW
rif_02_rif_uart_div_ratio[13:0] = h8000026c 0 14 h0 RW HEX
; Desc_rif_02_rif_uart_div_ratio[13:0] for SW use
rif_02_rif_uart_rx_int_en = h8000026c 14 1 h0 RW BIN
; Desc_rif_02_rif_uart_rx_int_en for SW use
rif_02_rif_uart_tx_int_en = h8000026c 15 1 h0 RW BIN
; Desc_rif_02_rif_uart_tx_int_en for SW use
rif_02_rif_uart_parity_en = h8000026c 16 1 h0 RW BIN
; Desc_rif_02_rif_uart_parity_en for SW use
rif_02_rif_uart_odd_parity = h8000026c 17 1 h0 RW BIN
; Desc_rif_02_rif_uart_odd_parity for SW use
rif_02_rif_uart_stop_bits = h8000026c 18 2 h0 RW HEX
; Desc_rif_02_rif_uart_stop_bits for SW use
rif_02_rif_uart_data_size = h8000026c 20 2 h0 RW HEX
; Desc_rif_02_rif_uart_data_size for SW use
rif_02_rif_uart_rx_int_thr = h8000026c 22 4 h0 RW HEX
; Desc_rif_02_rif_uart_rx_int_thr for SW use
rif_02_rif_uart_tx_int_thr = h8000026c 26 4 h0 RW HEX
; Desc_rif_02_rif_uart_tx_int_thr for SW use
rif_02_rif_uart_enable = h8000026c 31 1 h0 RW BIN
; Desc_rif_02_rif_uart_enable for SW use
rif_02_rif_uart_int_val = h8000026c 0 10 h0 RW HEX
rif_02_rif_uart_frac_val = h8000026c 10 4 h0 RW HEX



; REGISTER rif_02_rif_uart_control2 Address h80000270
_rif_02_rif_uart_control2 = 2147484272 0 32 b00000000000000000000000000000000 RW
rif_02_rif_uart_div_ratio[16:14] = h80000270 0 3 h0 RW HEX
; Desc_rif_02_rif_uart_div_ratio[16:14] for SW use
rif_02_rif_uart_int_val_msb = h80000270 0 3 h0 RW HEX



; REGISTER rif_03_rif_uart_control Address h8000028c
_rif_03_rif_uart_control = 2147484300 0 32 b00000000000000000000000000000000 RW
rif_03_rif_uart_div_ratio[13:0] = h8000028c 0 14 h0 RW HEX
; Desc_rif_03_rif_uart_div_ratio[13:0] for SW use
rif_03_rif_uart_rx_int_en = h8000028c 14 1 h0 RW BIN
; Desc_rif_03_rif_uart_rx_int_en for SW use
rif_03_rif_uart_tx_int_en = h8000028c 15 1 h0 RW BIN
; Desc_rif_03_rif_uart_tx_int_en for SW use
rif_03_rif_uart_parity_en = h8000028c 16 1 h0 RW BIN
; Desc_rif_03_rif_uart_parity_en for SW use
rif_03_rif_uart_odd_parity = h8000028c 17 1 h0 RW BIN
; Desc_rif_03_rif_uart_odd_parity for SW use
rif_03_rif_uart_stop_bits = h8000028c 18 2 h0 RW HEX
; Desc_rif_03_rif_uart_stop_bits for SW use
rif_03_rif_uart_data_size = h8000028c 20 2 h0 RW HEX
; Desc_rif_03_rif_uart_data_size for SW use
rif_03_rif_uart_rx_int_thr = h8000028c 22 4 h0 RW HEX
; Desc_rif_03_rif_uart_rx_int_thr for SW use
rif_03_rif_uart_tx_int_thr = h8000028c 26 4 h0 RW HEX
; Desc_rif_03_rif_uart_tx_int_thr for SW use
rif_03_rif_uart_enable = h8000028c 31 1 h0 RW BIN
; Desc_rif_03_rif_uart_enable for SW use
rif_03_rif_uart_int_val = h8000028c 0 10 h0 RW HEX
rif_03_rif_uart_frac_val = h8000028c 10 4 h0 RW HEX



; REGISTER rif_03_rif_uart_control2 Address h80000290
_rif_03_rif_uart_control2 = 2147484304 0 32 b00000000000000000000000000000000 RW
rif_03_rif_uart_div_ratio[16:14] = h80000290 0 3 h0 RW HEX
; Desc_rif_03_rif_uart_div_ratio[16:14] for SW use
rif_03_rif_uart_int_val_msb = h80000290 0 3 h0 RW HEX



; REGISTER i2cm_00_I2C_config_reg_0 Address h80000360
_i2cm_00_I2C_config_reg_0 = 2147484512 0 32 b00011111001001000001111100100100 RW
i2cm_00_i2c_tlow = h80000360 0 8 h24 RW HEX
; Desc_i2cm_00_i2c_tlow 
i2cm_00_i2c_tsu_sto = h80000360 8 8 h1f RW HEX
; Desc_i2cm_00_i2c_tsu_sto 
i2cm_00_i2c_tbuf = h80000360 16 8 h24 RW HEX
; Desc_i2cm_00_i2c_tbuf 
i2cm_00_i2c_thd_sta = h80000360 24 8 h1f RW HEX
; Desc_i2cm_00_i2c_thd_sta 



; REGISTER i2cm_00_I2C_config_reg_1 Address h80000364
_i2cm_00_I2C_config_reg_1 = 2147484516 0 32 b01001110000111110000001000100100 RW
i2cm_00_i2c_tsu_sta = h80000364 0 8 h24 RW HEX
; Desc_i2cm_00_i2c_tsu_sta bl interupt latched status (1 in any bit indicates interrupt captured). SW is responsible to clear the bits using the corresponding bl_int_clr_reg bit
i2cm_00_i2c_tsu_dat = h80000364 8 8 h2 RW HEX
; Desc_i2cm_00_i2c_tsu_dat bl interupt latched status (1 in any bit indicates interrupt captured). SW is responsible to clear the bits using the corresponding bl_int_clr_reg bit
i2cm_00_i2c_thigh = h80000364 16 8 h1f RW HEX
; Desc_i2cm_00_i2c_thigh bl interupt latched status (1 in any bit indicates interrupt captured). SW is responsible to clear the bits using the corresponding bl_int_clr_reg bit
i2cm_00_i2c_tscl = h80000364 24 8 h4e RW HEX
; Desc_i2cm_00_i2c_tscl bl interupt latched status (1 in any bit indicates interrupt captured). SW is responsible to clear the bits using the corresponding bl_int_clr_reg bit



; REGISTER i2cm_00_I2C_config_reg_2 Address h80000368
_i2cm_00_I2C_config_reg_2 = 2147484520 0 31 b00011000000110000111100111100101 RW
i2cm_00_i2c_pull_delay = h80000368 0 5 h5 RW HEX
; Desc_i2cm_00_i2c_pull_delay each bit clears the corresponding bl_int_stat bit
i2cm_00_i2c_delay_scl = h80000368 5 6 hf RW HEX
; Desc_i2cm_00_i2c_delay_scl each bit clears the corresponding bl_int_stat bit
i2cm_00_i2c_unit = h80000368 11 8 hf RW HEX
; Desc_i2cm_00_i2c_unit each bit clears the corresponding bl_int_stat bit
i2cm_00_i2c_thd_dat = h80000368 19 8 h3 RW HEX
; Desc_i2cm_00_i2c_thd_dat each bit clears the corresponding bl_int_stat bit
i2cm_00_i2c_pullup_bypass = h80000368 27 2 h3 RW HEX
; Desc_i2cm_00_i2c_pullup_bypass each bit clears the corresponding bl_int_stat bit
i2cm_00_i2c_mst_mon_int_en = h80000368 29 1 h0 RW BIN
; Desc_i2cm_00_i2c_mst_mon_int_en each bit clears the corresponding bl_int_stat bit
i2cm_00_i2c_ins_data_req_en = h80000368 30 1 h0 RW BIN
; Desc_i2cm_00_i2c_ins_data_req_en each bit clears the corresponding bl_int_stat bit



; REGISTER i2cm_00_I2C_fifo_gen_mst Address h8000036c
_i2cm_00_I2C_fifo_gen_mst = 2147484524 0 9 b00000000000000000000000000000000 RW
i2cm_00_i2c_mst_gen_data = h8000036c 0 9 h0 RW HEX
; Desc_i2cm_00_i2c_mst_gen_data 



; REGISTER i2cm_00_I2C_config_reg_3 Address h80000378
_i2cm_00_I2C_config_reg_3 = 2147484536 0 6 b00000000000000000000000000010010 RW
i2cm_00_i2c_delay_sda = h80000378 0 6 h12 RW HEX
; Desc_i2cm_00_i2c_delay_sda 



; REGISTER i2cm_int_mask_reg Address h80000384
_i2cm_int_mask_reg = 2147484548 0 32 b00000000000000000000000000000000 RW
i2cm_int_mask = h80000384 0 2 h0 RW HEX
; Desc_i2cm_int_mask 
i2cm_00_i2c_ins_data_req = h80000384 0 1 h0 RW BIN
i2cm_00_i2c_mst_mon_int = h80000384 1 1 h0 RW BIN



; REGISTER rif_uart_tx_int_mask_reg Address h80000394
_rif_uart_tx_int_mask_reg = 2147484564 0 32 b00000000000000000000000000000000 RW
rif_uart_tx_int_mask = h80000394 0 4 h0 RW HEX
; Desc_rif_uart_tx_int_mask 
rif_uart_tx_int0 = h80000394 0 1 h0 RW BIN
rif_uart_tx_int1 = h80000394 1 1 h0 RW BIN
rif_uart_tx_int2 = h80000394 2 1 h0 RW BIN
rif_uart_tx_int3 = h80000394 3 1 h0 RW BIN



; REGISTER rif_uart_rx_int_mask_reg Address h80000398
_rif_uart_rx_int_mask_reg = 2147484568 0 32 b00000000000000000000000000000000 RW
rif_uart_rx_int_mask = h80000398 0 4 h0 RW HEX
; Desc_rif_uart_rx_int_mask start working on new block
rif_uart_rx_int0 = h80000398 0 1 h0 RW BIN
rif_uart_rx_int1 = h80000398 1 1 h0 RW BIN
rif_uart_rx_int2 = h80000398 2 1 h0 RW BIN
rif_uart_rx_int3 = h80000398 3 1 h0 RW BIN



; REGISTER i2c_sl_mode_reg Address h800003f0
_i2c_sl_mode_reg = 2147484656 0 21 b00000000000101010000001011111010 RW
i2c_sl_data_su_time = h800003f0 0 8 hfa RW HEX
; Desc_i2c_sl_data_su_time 
i2c_sl_bypass_addr = h800003f0 9 1 h1 RW BIN
; Desc_i2c_sl_bypass_addr 
i2c_sl_bypass_rx_fifo = h800003f0 10 1 h0 RW BIN
; Desc_i2c_sl_bypass_rx_fifo 
i2c_sl_addr = h800003f0 13 7 h28 RW HEX
; Desc_i2c_sl_addr 
i2c_sl_acmp_mode = h800003f0 20 1 h1 RW BIN
; Desc_i2c_sl_acmp_mode 



; REGISTER i2c_sl_control_reg Address h800003f8
_i2c_sl_control_reg = 2147484664 0 20 b00000000000000000000000000000000 RW
i2c_sl_tx_data = h800003f8 0 8 h0 RW HEX
; Desc_i2c_sl_tx_data 
i2c_sl_tx_done = h800003f8 8 1 h0 RW BIN
; Desc_i2c_sl_tx_done 
i2c_sl_rx_done = h800003f8 12 1 h0 RW BIN
; Desc_i2c_sl_rx_done 
i2c_sl_rx_ack = h800003f8 13 1 h0 RW BIN
; Desc_i2c_sl_rx_ack 
i2c_sl_addr_done = h800003f8 16 1 h0 RW BIN
; Desc_i2c_sl_addr_done 
i2c_sl_addr_ack = h800003f8 17 1 h0 RW BIN
; Desc_i2c_sl_addr_ack 
i2c_sl_rx_fifo_clear = h800003f8 18 1 h0 RW BIN
; Desc_i2c_sl_rx_fifo_clear 
i2c_sl_tx_fifo_clear = h800003f8 19 1 h0 RW BIN
; Desc_i2c_sl_tx_fifo_clear 



; REGISTER i2c_sl_wd_max_cnt_reg Address h80000400
_i2c_sl_wd_max_cnt_reg = 2147484672 0 28 b00000000000000111101000010010000 RW
i2c_sl_wd_max_cnt = h80000400 0 28 h3d090 RW HEX
; Desc_i2c_sl_wd_max_cnt 



; REGISTER i2c_slave_int_mask_reg Address h80000404
_i2c_slave_int_mask_reg = 2147484676 0 4 b00000000000000000000000000000000 RW
i2c_slave_int_mask = h80000404 0 4 h0 RW HEX
; Desc_i2c_slave_int_mask 



; REGISTER Ethernet_Mac_Config_0 Address h80000420
_Ethernet_Mac_Config_0 = 2147484704 0 32 b00100000000000000000000000000000 RW
sbd_dis_transmit_i = h80000420 0 1 h0 RW BIN
; Desc_sbd_dis_transmit_i 
sbd_dis_receive_i = h80000420 1 1 h0 RW BIN
; Desc_sbd_dis_receive_i 
sbd_flowctrl_i = h80000420 2 1 h0 RW BIN
; Desc_sbd_flowctrl_i 
ati_pbl_i = h80000420 3 5 h0 RW HEX
; Desc_ati_pbl_i 
ati_txfifoflush_i = h80000420 8 1 h0 RW BIN
; Desc_ati_txfifoflush_i 
ati_dispad_i = h80000420 9 1 h0 RW BIN
; Desc_ati_dispad_i 
ati_discrc_i = h80000420 10 1 h0 RW BIN
; Desc_ati_discrc_i 
ati_chksum_ctrl_i = h80000420 11 2 h0 RW HEX
; Desc_ati_chksum_ctrl_i 
ari_frameflush_i = h80000420 13 1 h0 RW BIN
; Desc_ari_frameflush_i 
ari_pbl_i = h80000420 14 4 h0 RW HEX
; Desc_ari_pbl_i 
pwr_isolate_i = h80000420 18 1 h0 RW BIN
; Desc_pwr_isolate_i 
pwr_clamp_ctrl_i = h80000420 19 1 h0 RW BIN
; Desc_pwr_clamp_ctrl_i 
pwr_down_ctrl_i = h80000420 20 1 h0 RW BIN
; Desc_pwr_down_ctrl_i 
mac_ram_rx_thrsh = h80000420 21 10 h100 RW HEX
; Desc_mac_ram_rx_thrsh 



; REGISTER Ethernet_Mac_Config_1 Address h80000424
_Ethernet_Mac_Config_1 = 2147484708 0 32 b00000000000000000000011010100100 RW
mac_en_rx_error = h80000424 0 1 h0 RW BIN
; Desc_mac_en_rx_error 
mac_en_rx_intr = h80000424 1 1 h0 RW BIN
; Desc_mac_en_rx_intr 
MacDivideRatio = h80000424 2 4 h9 RW HEX
; Desc_MacDivideRatio 
mac_tx_status_all = h80000424 6 1 h0 RW BIN
; Desc_mac_tx_status_all 
mac_tx_status_bad = h80000424 7 1 h1 RW BIN
; Desc_mac_tx_status_bad 
mac_rx_status_all = h80000424 8 1 h0 RW BIN
; Desc_mac_rx_status_all 
mac_rx_status_bad = h80000424 9 1 h1 RW BIN
; Desc_mac_rx_status_bad 
mac_sgmii_mode = h80000424 10 1 h1 RW BIN
; Desc_mac_sgmii_mode 
>>DESC mac_sgmii_mode = 2, b0, RMII_mode, b1, SGMII_MODE



; REGISTER Ethernet_Mac_Config_2 Address h80000434
_Ethernet_Mac_Config_2 = 2147484724 0 32 b00001000000000000010000000000000 RW
mac_rx_packet_time_out = h80000434 0 24 h2000 RW HEX
; Desc_mac_rx_packet_time_out 
mac_rx_packet_thrsh = h80000434 24 5 h8 RW HEX
; Desc_mac_rx_packet_thrsh 



; REGISTER Emac_Mac_Register_0 Address h80000460
_Emac_Mac_Register_0 = 2147484768 0 28 b00000000000000000000000000000000 RW
Emac_Mac_PRELEN = h80000460 0 2 h0 RW HEX
; Desc_Emac_Mac_PRELEN 
Emac_Mac_RE = h80000460 2 1 h0 RW BIN
; Desc_Emac_Mac_RE 
Emac_Mac_TE = h80000460 3 1 h0 RW BIN
; Desc_Emac_Mac_TE 
Emac_Mac_DC = h80000460 4 1 h0 RW BIN
; Desc_Emac_Mac_DC 
Emac_Mac_BL = h80000460 5 2 h0 RW HEX
; Desc_Emac_Mac_BL 
Emac_Mac_ACS = h80000460 7 1 h0 RW BIN
; Desc_Emac_Mac_ACS 
Emac_Mac_LUD = h80000460 8 1 h0 RW BIN
; Desc_Emac_Mac_LUD 
Emac_Mac_DR = h80000460 9 1 h0 RW BIN
; Desc_Emac_Mac_DR 
Emac_Mac_IPC = h80000460 10 1 h0 RW BIN
; Desc_Emac_Mac_IPC 
Emac_Mac_DM = h80000460 11 1 h0 RW BIN
; Desc_Emac_Mac_DM 
Emac_Mac_LM = h80000460 12 1 h0 RW BIN
; Desc_Emac_Mac_LM 
Emac_Mac_DO = h80000460 13 1 h0 RW BIN
; Desc_Emac_Mac_DO 
Emac_Mac_FES = h80000460 14 1 h0 RW BIN
; Desc_Emac_Mac_FES 
Emac_Mac_PS = h80000460 15 1 h0 RW BIN
; Desc_Emac_Mac_PS 
Emac_Mac_DCRS = h80000460 16 1 h0 RW BIN
; Desc_Emac_Mac_DCRS 
Emac_Mac_IFG = h80000460 17 3 h0 RW HEX
; Desc_Emac_Mac_IFG 
Emac_Mac_JE = h80000460 20 1 h0 RW BIN
; Desc_Emac_Mac_JE 
Emac_Mac_BE = h80000460 21 1 h0 RW BIN
; Desc_Emac_Mac_BE 
Emac_Mac_JD = h80000460 22 1 h0 RW BIN
; Desc_Emac_Mac_JD 
Emac_Mac_WD = h80000460 23 1 h0 RW BIN
; Desc_Emac_Mac_WD 
Emac_Mac_TC = h80000460 24 1 h0 RW BIN
; Desc_Emac_Mac_TC 
Emac_Mac_CST = h80000460 25 1 h0 RW BIN
; Desc_Emac_Mac_CST 
Emac_Mac_SFTERR = h80000460 26 1 h0 RW BIN
; Desc_Emac_Mac_SFTERR 
Emac_Mac_TWOKPE = h80000460 27 1 h0 RW BIN
; Desc_Emac_Mac_TWOKPE 



; REGISTER Emac_Mac_Register_1 Address h80000464
_Emac_Mac_Register_1 = 2147484772 0 32 b00000000000000000000000000000000 RW
Emac_Mac_PR = h80000464 0 1 h0 RW BIN
; Desc_Emac_Mac_PR 
Emac_Mac_HUC = h80000464 1 1 h0 RW BIN
; Desc_Emac_Mac_HUC 
Emac_Mac_HMC = h80000464 2 1 h0 RW BIN
; Desc_Emac_Mac_HMC 
Emac_Mac_DAIF = h80000464 3 1 h0 RW BIN
; Desc_Emac_Mac_DAIF 
Emac_Mac_PM = h80000464 4 1 h0 RW BIN
; Desc_Emac_Mac_PM 
Emac_Mac_DBF = h80000464 5 1 h0 RW BIN
; Desc_Emac_Mac_DBF 
Emac_Mac_PCF = h80000464 6 2 h0 RW HEX
; Desc_Emac_Mac_PCF 
Emac_Mac_SAIF = h80000464 8 1 h0 RW BIN
; Desc_Emac_Mac_SAIF 
Emac_Mac_SAF = h80000464 9 1 h0 RW BIN
; Desc_Emac_Mac_SAF 
Emac_Mac_HPF = h80000464 10 1 h0 RW BIN
; Desc_Emac_Mac_HPF 
Emac_Mac_VTFE = h80000464 16 1 h0 RW BIN
; Desc_Emac_Mac_VTFE 
Emac_Mac_IPFE = h80000464 20 1 h0 RW BIN
; Desc_Emac_Mac_IPFE 
Emac_Mac_DNTU = h80000464 21 1 h0 RW BIN
; Desc_Emac_Mac_DNTU 
Emac_Mac_RA = h80000464 31 1 h0 RW BIN
; Desc_Emac_Mac_RA 



; REGISTER Emac_Mac_Register_2 Address h80000468
_Emac_Mac_Register_2 = 2147484776 0 32 b00000000000000000000000000000000 RW
Emac_Mac_HTH = h80000468 0 32 h0 RW HEX
; Desc_Emac_Mac_HTH 



; REGISTER Emac_Mac_Register_3 Address h8000046c
_Emac_Mac_Register_3 = 2147484780 0 32 b00000000000000000000000000000000 RW
Emac_Mac_HTL = h8000046c 0 32 h0 RW HEX
; Desc_Emac_Mac_HTL 



; REGISTER Emac_Mac_Register_4 Address h80000470
_Emac_Mac_Register_4 = 2147484784 0 16 b00000000000000000000000000000000 RW
Emac_Mac_GB = h80000470 0 1 h0 RW BIN
; Desc_Emac_Mac_GB 
Emac_Mac_GW = h80000470 1 1 h0 RW BIN
; Desc_Emac_Mac_GW 
Emac_Mac_CR = h80000470 2 4 h0 RW HEX
; Desc_Emac_Mac_CR 
Emac_Mac_GR = h80000470 6 5 h0 RW HEX
; Desc_Emac_Mac_GR 
Emac_Mac_PA = h80000470 11 5 h0 RW HEX
; Desc_Emac_Mac_PA 



; REGISTER Emac_Mac_Register_5 Address h80000474
_Emac_Mac_Register_5 = 2147484788 0 16 b00000000000000000000000000000000 RW
Emac_Mac_GD = h80000474 0 16 h0 RW HEX
; Desc_Emac_Mac_GD 0: Work in progress. 1: Inactive.



; REGISTER Emac_Mac_Register_6 Address h80000478
_Emac_Mac_Register_6 = 2147484792 0 32 b00000000000000000000000000000000 RW
Emac_Mac_FCB_BPA = h80000478 0 1 h0 RW BIN
; Desc_Emac_Mac_FCB_BPA 
Emac_Mac_TFE = h80000478 1 1 h0 RW BIN
; Desc_Emac_Mac_TFE 
Emac_Mac_RFE = h80000478 2 1 h0 RW BIN
; Desc_Emac_Mac_RFE 
Emac_Mac_UP = h80000478 3 1 h0 RW BIN
; Desc_Emac_Mac_UP 
Emac_Mac_PLT = h80000478 4 2 h0 RW HEX
; Desc_Emac_Mac_PLT 
Emac_Mac_DZPQ = h80000478 7 1 h0 RW BIN
; Desc_Emac_Mac_DZPQ 
Emac_Mac_PT = h80000478 16 16 h0 RW HEX
; Desc_Emac_Mac_PT 



; REGISTER Emac_Mac_Register_7 Address h8000047c
_Emac_Mac_Register_7 = 2147484796 0 19 b00000000000000000000000000000000 RW
Emac_Mac_VL = h8000047c 0 16 h0 RW HEX
; Desc_Emac_Mac_VL 
Emac_Mac_ETV = h8000047c 16 1 h0 RW BIN
; Desc_Emac_Mac_ETV 
Emac_Mac_VTIM = h8000047c 17 1 h0 RW BIN
; Desc_Emac_Mac_VTIM 
Emac_Mac_ESVL = h8000047c 18 1 h0 RW BIN
; Desc_Emac_Mac_ESVL 



; REGISTER Emac_Mac_Register_10 Address h80000488
_Emac_Mac_Register_10 = 2147484808 0 32 b00000000000000000000000000000000 RW
Emac_Mac_PMT = h80000488 0 32 h0 RW HEX
; Desc_Emac_Mac_PMT 



; REGISTER Emac_Mac_Register_11 Address h8000048c
_Emac_Mac_Register_11 = 2147484812 0 32 b00000000000000000000000000000000 RW
Emac_Mac_PWRDWN = h8000048c 0 1 h0 RW BIN
; Desc_Emac_Mac_PWRDWN 
Emac_Mac_MGKPKTEN = h8000048c 1 1 h0 RW BIN
; Desc_Emac_Mac_MGKPKTEN 
Emac_Mac_RWKPKTEN = h8000048c 2 1 h0 RW BIN
; Desc_Emac_Mac_RWKPKTEN 
Emac_Mac_MGKPRCVD = h8000048c 5 1 h0 RW BIN
; Desc_Emac_Mac_MGKPRCVD 
Emac_Mac_RWKPRCVD = h8000048c 6 1 h0 RW BIN
; Desc_Emac_Mac_RWKPRCVD 
Emac_Mac_GLBLUCAST = h8000048c 9 1 h0 RW BIN
; Desc_Emac_Mac_GLBLUCAST 
Emac_Mac_RWKFILTRST = h8000048c 31 1 h0 RW BIN
; Desc_Emac_Mac_RWKFILTRST 



; REGISTER Emac_Mac_Register_15 Address h8000049c
_Emac_Mac_Register_15 = 2147484828 0 4 b00000000000000000000000000000000 RW
Emac_Mac_PMTIM = h8000049c 3 1 h0 RW BIN
; Desc_Emac_Mac_PMTIM in general test mode, the CPU is kept in reset by default in order not to interveen with test cpu interface. This register enables to release the MIPS from reset in test cpu mode if there's a need to



; REGISTER Emac_Mac_Register_16 Address h800004a0
_Emac_Mac_Register_16 = 2147484832 0 16 b00000000000000001111111111111111 RW
Emac_Mac_ADDRHI0 = h800004a0 0 16 hffff RW HEX
; Desc_Emac_Mac_ADDRHI0 



; REGISTER Emac_Mac_Register_17 Address h800004a4
_Emac_Mac_Register_17 = 2147484836 0 32 b11111111111111111111111111111111 RW
Emac_Mac_ADDRLO0 = h800004a4 0 32 hffffffff RW HEX
; Desc_Emac_Mac_ADDRLO0 each bit clears the corresponding hdcp_int_stat bit



; REGISTER Emac_Mac_Register_18 Address h800004a8
_Emac_Mac_Register_18 = 2147484840 0 32 b00000000000000001111111111111111 RW
Emac_Mac_ADDRHI1 = h800004a8 0 16 hffff RW HEX
; Desc_Emac_Mac_ADDRHI1 
Emac_Mac_MBC1 = h800004a8 24 6 h0 RW HEX
; Desc_Emac_Mac_MBC1 
Emac_Mac_SA1 = h800004a8 30 1 h0 RW BIN
; Desc_Emac_Mac_SA1 
Emac_Mac_AE1 = h800004a8 31 1 h0 RW BIN
; Desc_Emac_Mac_AE1 



; REGISTER Emac_Mac_Register_19 Address h800004ac
_Emac_Mac_Register_19 = 2147484844 0 32 b11111111111111111111111111111111 RW
Emac_Mac_ADDRLO1 = h800004ac 0 32 hffffffff RW HEX
; Desc_Emac_Mac_ADDRLO1 enables word burn or bit burn



; REGISTER Emac_Mac_Register_20 Address h800004b0
_Emac_Mac_Register_20 = 2147484848 0 32 b00000000000000001111111111111111 RW
Emac_Mac_ADDRHI2 = h800004b0 0 16 hffff RW HEX
; Desc_Emac_Mac_ADDRHI2 Light Sleep 0- normal mode. 1 - LS
Emac_Mac_MBC2 = h800004b0 24 6 h0 RW HEX
; Desc_Emac_Mac_MBC2 Light Sleep 0- normal mode. 1 - LS
Emac_Mac_SA2 = h800004b0 30 1 h0 RW BIN
; Desc_Emac_Mac_SA2 Light Sleep 0- normal mode. 1 - LS
Emac_Mac_AE2 = h800004b0 31 1 h0 RW BIN
; Desc_Emac_Mac_AE2 Light Sleep 0- normal mode. 1 - LS



; REGISTER Emac_Mac_Register_21 Address h800004b4
_Emac_Mac_Register_21 = 2147484852 0 32 b11111111111111111111111111111111 RW
Emac_Mac_ADDRLO2 = h800004b4 0 32 hffffffff RW HEX
; Desc_Emac_Mac_ADDRLO2 Light Sleep bit per 1Mbit mem device 0- normal mode. 1 - LS



; REGISTER Emac_Mac_Register_22 Address h800004b8
_Emac_Mac_Register_22 = 2147484856 0 32 b00000000000000001111111111111111 RW
Emac_Mac_ADDRHI3 = h800004b8 0 16 hffff RW HEX
; Desc_Emac_Mac_ADDRHI3 changble for shorten the time of the delay between reads
Emac_Mac_MBC3 = h800004b8 24 6 h0 RW HEX
; Desc_Emac_Mac_MBC3 changble for shorten the time of the delay between reads
Emac_Mac_SA3 = h800004b8 30 1 h0 RW BIN
; Desc_Emac_Mac_SA3 changble for shorten the time of the delay between reads
Emac_Mac_AE3 = h800004b8 31 1 h0 RW BIN
; Desc_Emac_Mac_AE3 changble for shorten the time of the delay between reads



; REGISTER Emac_Mac_Register_23 Address h800004bc
_Emac_Mac_Register_23 = 2147484860 0 32 b11111111111111111111111111111111 RW
Emac_Mac_ADDRLO3 = h800004bc 0 32 hffffffff RW HEX
; Desc_Emac_Mac_ADDRLO3 this register indicates the number of cycles that takes RAM to wakeup from SD/DS sleep modes (93ns=~33cycles, rounded to 40 cycles) in system clock 333MHz



; REGISTER Emac_Mac_Register_24 Address h800004c0
_Emac_Mac_Register_24 = 2147484864 0 32 b00000000000000001111111111111111 RW
Emac_Mac_ADDRHI4 = h800004c0 0 16 hffff RW HEX
; Desc_Emac_Mac_ADDRHI4 this register indicates the number of cycles that takes ROM to wakeup from SD sleep mode (18ns=~8cycles) in system clock 333MHz
Emac_Mac_MBC4 = h800004c0 24 6 h0 RW HEX
; Desc_Emac_Mac_MBC4 this register indicates the number of cycles that takes ROM to wakeup from SD sleep mode (18ns=~8cycles) in system clock 333MHz
Emac_Mac_SA4 = h800004c0 30 1 h0 RW BIN
; Desc_Emac_Mac_SA4 this register indicates the number of cycles that takes ROM to wakeup from SD sleep mode (18ns=~8cycles) in system clock 333MHz
Emac_Mac_AE4 = h800004c0 31 1 h0 RW BIN
; Desc_Emac_Mac_AE4 this register indicates the number of cycles that takes ROM to wakeup from SD sleep mode (18ns=~8cycles) in system clock 333MHz



; REGISTER Emac_Mac_Register_25 Address h800004c4
_Emac_Mac_Register_25 = 2147484868 0 32 b11111111111111111111111111111111 RW
Emac_Mac_ADDRLO4 = h800004c4 0 32 hffffffff RW HEX
; Desc_Emac_Mac_ADDRLO4 each bit clears the corresponding mem_protection_irq_stat bit



; REGISTER Emac_Mac_Register_55 Address h8000053c
_Emac_Mac_Register_55 = 2147484988 0 17 b00000000000000000000000000000000 RW
Emac_Mac_WTO = h8000053c 0 14 h0 RW HEX
; Desc_Emac_Mac_WTO QSR output
Emac_Mac_PWE = h8000053c 16 1 h0 RW BIN
; Desc_Emac_Mac_PWE QSR output



; REGISTER Emac_Mac_Register_64 Address h80000560
_Emac_Mac_Register_64 = 2147485024 0 9 b00000000000000000000000000000000 RW
Emac_Mac_CNTRST = h80000560 0 1 h0 RW BIN
; Desc_Emac_Mac_CNTRST QRR output
Emac_Mac_CNTSTOPRO = h80000560 1 1 h0 RW BIN
; Desc_Emac_Mac_CNTSTOPRO QRR output
Emac_Mac_RSTONRD = h80000560 2 1 h0 RW BIN
; Desc_Emac_Mac_RSTONRD QRR output
Emac_Mac_CNTFREEZ = h80000560 3 1 h0 RW BIN
; Desc_Emac_Mac_CNTFREEZ QRR output
Emac_Mac_CNTPRST = h80000560 4 1 h0 RW BIN
; Desc_Emac_Mac_CNTPRST QRR output
Emac_Mac_CNTPRSTLVL = h80000560 5 1 h0 RW BIN
; Desc_Emac_Mac_CNTPRSTLVL QRR output
Emac_Mac_UCDBC = h80000560 8 1 h0 RW BIN
; Desc_Emac_Mac_UCDBC QRR output



; REGISTER Emac_Mac_Register_67 Address h8000056c
_Emac_Mac_Register_67 = 2147485036 0 26 b00000000000000000000000000000000 RW
Emac_Mac_RXGBFRMIM = h8000056c 0 1 h0 RW BIN
; Desc_Emac_Mac_RXGBFRMIM QSR output
Emac_Mac_RXGBOCTIM = h8000056c 1 1 h0 RW BIN
; Desc_Emac_Mac_RXGBOCTIM QSR output
Emac_Mac_RXGOCTIM = h8000056c 2 1 h0 RW BIN
; Desc_Emac_Mac_RXGOCTIM QSR output
Emac_Mac_RXBCGFIM = h8000056c 3 1 h0 RW BIN
; Desc_Emac_Mac_RXBCGFIM QSR output
Emac_Mac_RXMCGFIM = h8000056c 4 1 h0 RW BIN
; Desc_Emac_Mac_RXMCGFIM QSR output
Emac_Mac_RXCRCERFIM = h8000056c 5 1 h0 RW BIN
; Desc_Emac_Mac_RXCRCERFIM QSR output
Emac_Mac_RXALGNERFIM = h8000056c 6 1 h0 RW BIN
; Desc_Emac_Mac_RXALGNERFIM QSR output
Emac_Mac_RXRUNTFIM = h8000056c 7 1 h0 RW BIN
; Desc_Emac_Mac_RXRUNTFIM QSR output
Emac_Mac_RXJABERFIM = h8000056c 8 1 h0 RW BIN
; Desc_Emac_Mac_RXJABERFIM QSR output
Emac_Mac_RXUSIZEGFIM = h8000056c 9 1 h0 RW BIN
; Desc_Emac_Mac_RXUSIZEGFIM QSR output
Emac_Mac_RXOSIZEGFIM = h8000056c 10 1 h0 RW BIN
; Desc_Emac_Mac_RXOSIZEGFIM QSR output
Emac_Mac_RX64OCTGBFIM = h8000056c 11 1 h0 RW BIN
; Desc_Emac_Mac_RX64OCTGBFIM QSR output
Emac_Mac_RX65T127OCTGBFIM = h8000056c 12 1 h0 RW BIN
; Desc_Emac_Mac_RX65T127OCTGBFIM QSR output
Emac_Mac_RX128T255OCTGBFIM = h8000056c 13 1 h0 RW BIN
; Desc_Emac_Mac_RX128T255OCTGBFIM QSR output
Emac_Mac_RX256T511OCTGBFIM = h8000056c 14 1 h0 RW BIN
; Desc_Emac_Mac_RX256T511OCTGBFIM QSR output
Emac_Mac_RX512T1023OCTGBFIM = h8000056c 15 1 h0 RW BIN
; Desc_Emac_Mac_RX512T1023OCTGBFIM QSR output
Emac_Mac_RX1024TMAXOCTGBFIM = h8000056c 16 1 h0 RW BIN
; Desc_Emac_Mac_RX1024TMAXOCTGBFIM QSR output
Emac_Mac_RXUCGFIM = h8000056c 17 1 h0 RW BIN
; Desc_Emac_Mac_RXUCGFIM QSR output
Emac_Mac_RXLENERFIM = h8000056c 18 1 h0 RW BIN
; Desc_Emac_Mac_RXLENERFIM QSR output
Emac_Mac_RXORANGEFIM = h8000056c 19 1 h0 RW BIN
; Desc_Emac_Mac_RXORANGEFIM QSR output
Emac_Mac_RXPAUSFIM = h8000056c 20 1 h0 RW BIN
; Desc_Emac_Mac_RXPAUSFIM QSR output
Emac_Mac_RXFOVFIM = h8000056c 21 1 h0 RW BIN
; Desc_Emac_Mac_RXFOVFIM QSR output
Emac_Mac_RXVLANGBFIM = h8000056c 22 1 h0 RW BIN
; Desc_Emac_Mac_RXVLANGBFIM QSR output
Emac_Mac_RXWDOGFIM = h8000056c 23 1 h0 RW BIN
; Desc_Emac_Mac_RXWDOGFIM QSR output
Emac_Mac_RXRCVERRFIM = h8000056c 24 1 h0 RW BIN
; Desc_Emac_Mac_RXRCVERRFIM QSR output
Emac_Mac_RXCTRLFIM = h8000056c 25 1 h0 RW BIN
; Desc_Emac_Mac_RXCTRLFIM QSR output



; REGISTER Emac_Mac_Register_68 Address h80000570
_Emac_Mac_Register_68 = 2147485040 0 26 b00000000000000000000000000000000 RW
Emac_Mac_TXGBOCTIM = h80000570 0 1 h0 RW BIN
; Desc_Emac_Mac_TXGBOCTIM 
Emac_Mac_TXGBFRMIM = h80000570 1 1 h0 RW BIN
; Desc_Emac_Mac_TXGBFRMIM 
Emac_Mac_TXBCGFIM = h80000570 2 1 h0 RW BIN
; Desc_Emac_Mac_TXBCGFIM 
Emac_Mac_TXMCGFIM = h80000570 3 1 h0 RW BIN
; Desc_Emac_Mac_TXMCGFIM 
Emac_Mac_TX64OCTGBFIM = h80000570 4 1 h0 RW BIN
; Desc_Emac_Mac_TX64OCTGBFIM 
Emac_Mac_TX65T127OCTGBFIM = h80000570 5 1 h0 RW BIN
; Desc_Emac_Mac_TX65T127OCTGBFIM 
Emac_Mac_TX128T255OCTGBFIM = h80000570 6 1 h0 RW BIN
; Desc_Emac_Mac_TX128T255OCTGBFIM 
Emac_Mac_TX256T511OCTGBFIM = h80000570 7 1 h0 RW BIN
; Desc_Emac_Mac_TX256T511OCTGBFIM 
Emac_Mac_TX512T1023OCTGBFIM = h80000570 8 1 h0 RW BIN
; Desc_Emac_Mac_TX512T1023OCTGBFIM 
Emac_Mac_TX1024TMAXOCTGBFIM = h80000570 9 1 h0 RW BIN
; Desc_Emac_Mac_TX1024TMAXOCTGBFIM 
Emac_Mac_TXUCGBFIM = h80000570 10 1 h0 RW BIN
; Desc_Emac_Mac_TXUCGBFIM 
Emac_Mac_TXMCGBFIM = h80000570 11 1 h0 RW BIN
; Desc_Emac_Mac_TXMCGBFIM 
Emac_Mac_TXBCGBFIM = h80000570 12 1 h0 RW BIN
; Desc_Emac_Mac_TXBCGBFIM 
Emac_Mac_TXUFLOWERFIM = h80000570 13 1 h0 RW BIN
; Desc_Emac_Mac_TXUFLOWERFIM 
Emac_Mac_TXSCOLGFIM = h80000570 14 1 h0 RW BIN
; Desc_Emac_Mac_TXSCOLGFIM 
Emac_Mac_TXMCOLGFIM = h80000570 15 1 h0 RW BIN
; Desc_Emac_Mac_TXMCOLGFIM 
Emac_Mac_TXDEFFIM = h80000570 16 1 h0 RW BIN
; Desc_Emac_Mac_TXDEFFIM 
Emac_Mac_TXLATCOLFIM = h80000570 17 1 h0 RW BIN
; Desc_Emac_Mac_TXLATCOLFIM 
Emac_Mac_TXEXCOLFIM = h80000570 18 1 h0 RW BIN
; Desc_Emac_Mac_TXEXCOLFIM 
Emac_Mac_TXCARERFIM = h80000570 19 1 h0 RW BIN
; Desc_Emac_Mac_TXCARERFIM 
Emac_Mac_TXGOCTIM = h80000570 20 1 h0 RW BIN
; Desc_Emac_Mac_TXGOCTIM 
Emac_Mac_TXGFRMIM = h80000570 21 1 h0 RW BIN
; Desc_Emac_Mac_TXGFRMIM 
Emac_Mac_TXEXDEFFIM = h80000570 22 1 h0 RW BIN
; Desc_Emac_Mac_TXEXDEFFIM 
Emac_Mac_TXPAUSFIM = h80000570 23 1 h0 RW BIN
; Desc_Emac_Mac_TXPAUSFIM 
Emac_Mac_TXVLANGFIM = h80000570 24 1 h0 RW BIN
; Desc_Emac_Mac_TXVLANGFIM 
Emac_Mac_TXOSIZEGFIM = h80000570 25 1 h0 RW BIN
; Desc_Emac_Mac_TXOSIZEGFIM 



; REGISTER Emac_Mac_Register_128 Address h80000660
_Emac_Mac_Register_128 = 2147485280 0 30 b00000000000000000000000000000000 RW
Emac_Mac_RXIPV4GFIM = h80000660 0 1 h0 RW BIN
; Desc_Emac_Mac_RXIPV4GFIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXIPV4HERFIM = h80000660 1 1 h0 RW BIN
; Desc_Emac_Mac_RXIPV4HERFIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXIPV4NOPAYFIM = h80000660 2 1 h0 RW BIN
; Desc_Emac_Mac_RXIPV4NOPAYFIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXIPV4FRAGFIM = h80000660 3 1 h0 RW BIN
; Desc_Emac_Mac_RXIPV4FRAGFIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXIPV4UDSBLFIM = h80000660 4 1 h0 RW BIN
; Desc_Emac_Mac_RXIPV4UDSBLFIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXIPV6GFIM = h80000660 5 1 h0 RW BIN
; Desc_Emac_Mac_RXIPV6GFIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXIPV6HERFIM = h80000660 6 1 h0 RW BIN
; Desc_Emac_Mac_RXIPV6HERFIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXIPV6NOPAYFIM = h80000660 7 1 h0 RW BIN
; Desc_Emac_Mac_RXIPV6NOPAYFIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXUDPGFIM = h80000660 8 1 h0 RW BIN
; Desc_Emac_Mac_RXUDPGFIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXUDPERFIM = h80000660 9 1 h0 RW BIN
; Desc_Emac_Mac_RXUDPERFIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXTCPGFIM = h80000660 10 1 h0 RW BIN
; Desc_Emac_Mac_RXTCPGFIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXTCPERFIM = h80000660 11 1 h0 RW BIN
; Desc_Emac_Mac_RXTCPERFIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXICMPGFIM = h80000660 12 1 h0 RW BIN
; Desc_Emac_Mac_RXICMPGFIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXICMPERFIM = h80000660 13 1 h0 RW BIN
; Desc_Emac_Mac_RXICMPERFIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXIPV4GOIM = h80000660 16 1 h0 RW BIN
; Desc_Emac_Mac_RXIPV4GOIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXIPV4HEROIM = h80000660 17 1 h0 RW BIN
; Desc_Emac_Mac_RXIPV4HEROIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXIPV4NOPAYOIM = h80000660 18 1 h0 RW BIN
; Desc_Emac_Mac_RXIPV4NOPAYOIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXIPV4FRAGOIM = h80000660 19 1 h0 RW BIN
; Desc_Emac_Mac_RXIPV4FRAGOIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXIPV4UDSBLOIM = h80000660 20 1 h0 RW BIN
; Desc_Emac_Mac_RXIPV4UDSBLOIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXIPV6GOIM = h80000660 21 1 h0 RW BIN
; Desc_Emac_Mac_RXIPV6GOIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXIPV6HEROIM = h80000660 22 1 h0 RW BIN
; Desc_Emac_Mac_RXIPV6HEROIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXIPV6NOPAYOIM = h80000660 23 1 h0 RW BIN
; Desc_Emac_Mac_RXIPV6NOPAYOIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXUDPGOIM = h80000660 24 1 h0 RW BIN
; Desc_Emac_Mac_RXUDPGOIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXUDPEROIM = h80000660 25 1 h0 RW BIN
; Desc_Emac_Mac_RXUDPEROIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXTCPGOIM = h80000660 26 1 h0 RW BIN
; Desc_Emac_Mac_RXTCPGOIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXTCPEROIM = h80000660 27 1 h0 RW BIN
; Desc_Emac_Mac_RXTCPEROIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXICMPGOIM = h80000660 28 1 h0 RW BIN
; Desc_Emac_Mac_RXICMPGOIM how many cycles the sm waits before starting opernationl mode after reciving sm_en
Emac_Mac_RXICMPEROIM = h80000660 29 1 h0 RW BIN
; Desc_Emac_Mac_RXICMPEROIM how many cycles the sm waits before starting opernationl mode after reciving sm_en



; REGISTER Emac_Mac_Register_1030 Address h800006f8
_Emac_Mac_Register_1030 = 2147485432 0 27 b00000000000000000000000000000000 RW
Emac_Mac_RTC = h800006f8 3 2 h0 RW HEX
; Desc_Emac_Mac_RTC 
Emac_Mac_DGF = h800006f8 5 1 h0 RW BIN
; Desc_Emac_Mac_DGF 
Emac_Mac_FUF = h800006f8 6 1 h0 RW BIN
; Desc_Emac_Mac_FUF 
Emac_Mac_FEF = h800006f8 7 1 h0 RW BIN
; Desc_Emac_Mac_FEF 
Emac_Mac_TTC = h800006f8 14 3 h0 RW HEX
; Desc_Emac_Mac_TTC 
Emac_Mac_FTF = h800006f8 20 1 h0 RW BIN
; Desc_Emac_Mac_FTF 
Emac_Mac_TSF = h800006f8 21 1 h0 RW BIN
; Desc_Emac_Mac_TSF 
Emac_Mac_RSF = h800006f8 25 1 h0 RW BIN
; Desc_Emac_Mac_RSF 
Emac_Mac_DT = h800006f8 26 1 h0 RW BIN
; Desc_Emac_Mac_DT 



; REGISTER Emac_Mac_SG_Control Address h80000760
_Emac_Mac_SG_Control = 2147485536 0 16 b00000000000000000000000000000000 RW
Emac_Mac_SG_Aneg_Reset = h80000760 9 1 h0 RW BIN
; Desc_Emac_Mac_SG_Aneg_Reset unicast address header valid i2c addr
Emac_Mac_SG_Aneg_en = h80000760 12 1 h0 RW BIN
; Desc_Emac_Mac_SG_Aneg_en unicast address header valid i2c addr
Emac_Mac_SG_Loop_Back = h80000760 14 1 h0 RW BIN
; Desc_Emac_Mac_SG_Loop_Back unicast address header valid i2c addr
Emac_Mac_SG_Phy_Reset = h80000760 15 1 h0 RW BIN
; Desc_Emac_Mac_SG_Phy_Reset unicast address header valid i2c addr



; REGISTER Emac_Mac_SG_Aneg_Advert Address h80000770
_Emac_Mac_SG_Aneg_Advert = 2147485552 0 16 b00000000000000000000000000000000 RW
Emac_Mac_SG_Res_9_0 = h80000770 0 10 h0 RW HEX
; Desc_Emac_Mac_SG_Res_9_0 {26'b0,reg_mask_fail,reg_wait_opr_fail,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}
Emac_Mac_SG_AD_Link_Speed = h80000770 10 2 h0 RW HEX
; Desc_Emac_Mac_SG_AD_Link_Speed {26'b0,reg_mask_fail,reg_wait_opr_fail,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}
Emac_Mac_SG_AD_Full_Duplex = h80000770 12 1 h0 RW BIN
; Desc_Emac_Mac_SG_AD_Full_Duplex {26'b0,reg_mask_fail,reg_wait_opr_fail,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}
Emac_Mac_SG_Res_13 = h80000770 13 1 h0 RW BIN
; Desc_Emac_Mac_SG_Res_13 {26'b0,reg_mask_fail,reg_wait_opr_fail,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}
Emac_Mac_SG_AD_Res_Ack = h80000770 14 1 h0 RW BIN
; Desc_Emac_Mac_SG_AD_Res_Ack {26'b0,reg_mask_fail,reg_wait_opr_fail,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}
Emac_Mac_SG_AD_Link_Up = h80000770 15 1 h0 RW BIN
; Desc_Emac_Mac_SG_AD_Link_Up {26'b0,reg_mask_fail,reg_wait_opr_fail,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}



; REGISTER Emac_Mac_SG_Aneg_NP_Trans Address h8000077c
_Emac_Mac_SG_Aneg_NP_Trans = 2147485564 0 16 b00000000000000000000000000000000 RW
Emac_Mac_SG_TR_Message = h8000077c 0 11 h0 RW HEX
; Desc_Emac_Mac_SG_TR_Message ACMD address offset 16 MSB
Emac_Mac_SG_TR_Toggle = h8000077c 11 1 h0 RW BIN
; Desc_Emac_Mac_SG_TR_Toggle ACMD address offset 16 MSB
Emac_Mac_SG_TR_Ack2 = h8000077c 12 1 h0 RW BIN
; Desc_Emac_Mac_SG_TR_Ack2 ACMD address offset 16 MSB
Emac_Mac_SG_TR_Message_Page = h8000077c 13 1 h0 RW BIN
; Desc_Emac_Mac_SG_TR_Message_Page ACMD address offset 16 MSB
Emac_Mac_SG_TR_Res_Ack = h8000077c 14 1 h0 RW BIN
; Desc_Emac_Mac_SG_TR_Res_Ack ACMD address offset 16 MSB
Emac_Mac_SG_TR_Next_Page = h8000077c 15 1 h0 RW BIN
; Desc_Emac_Mac_SG_TR_Next_Page ACMD address offset 16 MSB



; REGISTER Emac_Mac_SG_Jitter_Diag Address h800007a0
_Emac_Mac_SG_Jitter_Diag = 2147485600 0 16 b00000000000000000000000000000000 RW
Emac_Mac_SG_Cus_Jitter_Pattern = h800007a0 0 10 h0 RW HEX
; Desc_Emac_Mac_SG_Cus_Jitter_Pattern {28'b0,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}
Emac_Mac_SG_Jitter_Pattern_sel = h800007a0 12 3 h0 RW HEX
; Desc_Emac_Mac_SG_Jitter_Pattern_sel {28'b0,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}
Emac_Mac_SG_Jitter_Diag_en = h800007a0 15 1 h0 RW BIN
; Desc_Emac_Mac_SG_Jitter_Diag_en {28'b0,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}



; REGISTER Emac_Mac_SG_TBI_Control Address h800007a4
_Emac_Mac_SG_TBI_Control = 2147485604 0 16 b00000000000000000000000000000000 RW
Emac_Mac_SG_En_Comma_Det = h800007a4 0 1 h0 RW BIN
; Desc_Emac_Mac_SG_En_Comma_Det unicast address header valid i2c addr
Emac_Mac_SG_En_Wrap = h800007a4 1 1 h0 RW BIN
; Desc_Emac_Mac_SG_En_Wrap unicast address header valid i2c addr
Emac_Mac_SG_Gmii_Mode = h800007a4 4 1 h0 RW BIN
; Desc_Emac_Mac_SG_Gmii_Mode unicast address header valid i2c addr
Emac_Mac_SG_Rcv_Clk_Sel = h800007a4 5 1 h0 RW BIN
; Desc_Emac_Mac_SG_Rcv_Clk_Sel unicast address header valid i2c addr
Emac_Mac_SG_Aneg_Sense = h800007a4 8 1 h0 RW BIN
; Desc_Emac_Mac_SG_Aneg_Sense unicast address header valid i2c addr
Emac_Mac_SG_Dis_Trn_Run_Dis = h800007a4 12 1 h0 RW BIN
; Desc_Emac_Mac_SG_Dis_Trn_Run_Dis unicast address header valid i2c addr
Emac_Mac_SG_Dis_Rcv_Run_Dis = h800007a4 13 1 h0 RW BIN
; Desc_Emac_Mac_SG_Dis_Rcv_Run_Dis unicast address header valid i2c addr
Emac_Mac_SG_Short_Link_Time = h800007a4 14 1 h0 RW BIN
; Desc_Emac_Mac_SG_Short_Link_Time unicast address header valid i2c addr
Emac_Mac_SG_Soft_Reset = h800007a4 15 1 h0 RW BIN
; Desc_Emac_Mac_SG_Soft_Reset unicast address header valid i2c addr



; REGISTER bmac_brif_bridge_clr_reg Address h800007f0
_bmac_brif_bridge_clr_reg = 2147485680 0 2 b00000000000000000000000000000000 RW
bmac_brif_bridge_clr = h800007f0 0 1 h0 RW BIN
; Desc_bmac_brif_bridge_clr broadcast address header valid i2c addr



; REGISTER sgmac_test_setup Address h80000800
_sgmac_test_setup = 2147485696 0 2 b00000000000000000000000000000000 RW
sgmac_tester_en = h80000800 0 1 h0 RW BIN
; Desc_sgmac_tester_en  {uni_mc_not_ok,brod_mc_not_ok,acmd_wr_int,len_int,md_not_ok,pcrc_not_ok,hcrc_not_ok}



; REGISTER SGPHY_CFG_0 Address h80000810
_SGPHY_CFG_0 = 2147485712 0 32 b00000000000000000000000000000000 RW
SGPHY_tx_cm = h80000810 0 1 h0 RW BIN
; Desc_SGPHY_tx_cm  {uni_mc_not_ok,brod_mc_not_ok,acmd_wr_int,len_int,md_not_ok,pcrc_not_ok,hcrc_not_ok}
SGPHY_rxen = h80000810 1 1 h0 RW BIN
; Desc_SGPHY_rxen  {uni_mc_not_ok,brod_mc_not_ok,acmd_wr_int,len_int,md_not_ok,pcrc_not_ok,hcrc_not_ok}
SGPHY_refclksel = h80000810 2 1 h0 RW BIN
; Desc_SGPHY_refclksel  {uni_mc_not_ok,brod_mc_not_ok,acmd_wr_int,len_int,md_not_ok,pcrc_not_ok,hcrc_not_ok}
SGPHY_rx_rt_en = h80000810 3 1 h0 RW BIN
; Desc_SGPHY_rx_rt_en  {uni_mc_not_ok,brod_mc_not_ok,acmd_wr_int,len_int,md_not_ok,pcrc_not_ok,hcrc_not_ok}
SGPHY_rtt_cal_en_in = h80000810 4 1 h0 RW BIN
; Desc_SGPHY_rtt_cal_en_in  {uni_mc_not_ok,brod_mc_not_ok,acmd_wr_int,len_int,md_not_ok,pcrc_not_ok,hcrc_not_ok}
SGPHY_rxpll_nf = h80000810 5 9 h0 RW HEX
; Desc_SGPHY_rxpll_nf  {uni_mc_not_ok,brod_mc_not_ok,acmd_wr_int,len_int,md_not_ok,pcrc_not_ok,hcrc_not_ok}
SGPHY_rxdtestbus_sel = h80000810 14 3 h0 RW HEX
; Desc_SGPHY_rxdtestbus_sel  {uni_mc_not_ok,brod_mc_not_ok,acmd_wr_int,len_int,md_not_ok,pcrc_not_ok,hcrc_not_ok}
SGPHY_selvdd = h80000810 17 1 h0 RW BIN
; Desc_SGPHY_selvdd  {uni_mc_not_ok,brod_mc_not_ok,acmd_wr_int,len_int,md_not_ok,pcrc_not_ok,hcrc_not_ok}
SGPHY_rx_cm_en = h80000810 18 1 h0 RW BIN
; Desc_SGPHY_rx_cm_en  {uni_mc_not_ok,brod_mc_not_ok,acmd_wr_int,len_int,md_not_ok,pcrc_not_ok,hcrc_not_ok}
SGPHY_pd = h80000810 22 1 h0 RW BIN
; Desc_SGPHY_pd  {uni_mc_not_ok,brod_mc_not_ok,acmd_wr_int,len_int,md_not_ok,pcrc_not_ok,hcrc_not_ok}
SGPHY_tx_rt_en = h80000810 23 1 h0 RW BIN
; Desc_SGPHY_tx_rt_en  {uni_mc_not_ok,brod_mc_not_ok,acmd_wr_int,len_int,md_not_ok,pcrc_not_ok,hcrc_not_ok}
SGPHY_rxdtestbus_en = h80000810 24 1 h0 RW BIN
; Desc_SGPHY_rxdtestbus_en  {uni_mc_not_ok,brod_mc_not_ok,acmd_wr_int,len_int,md_not_ok,pcrc_not_ok,hcrc_not_ok}
SGPHY_rxpll_nr = h80000810 25 5 h0 RW HEX
; Desc_SGPHY_rxpll_nr  {uni_mc_not_ok,brod_mc_not_ok,acmd_wr_int,len_int,md_not_ok,pcrc_not_ok,hcrc_not_ok}
SGPHY_atestbus_en = h80000810 30 1 h0 RW BIN
; Desc_SGPHY_atestbus_en  {uni_mc_not_ok,brod_mc_not_ok,acmd_wr_int,len_int,md_not_ok,pcrc_not_ok,hcrc_not_ok}
SGPHY_hs_echo_lpbk = h80000810 31 1 h0 RW BIN
; Desc_SGPHY_hs_echo_lpbk  {uni_mc_not_ok,brod_mc_not_ok,acmd_wr_int,len_int,md_not_ok,pcrc_not_ok,hcrc_not_ok}



; REGISTER SGPHY_CFG_1 Address h80000814
_SGPHY_CFG_1 = 2147485716 0 32 b00000000000000000000000000000000 RW
SGPHY_txen = h80000814 0 1 h0 RW BIN
; Desc_SGPHY_txen {26'b0,reg_mask_fail,reg_wait_opr_fail,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}
SGPHY_txdrv = h80000814 1 4 h0 RW HEX
; Desc_SGPHY_txdrv {26'b0,reg_mask_fail,reg_wait_opr_fail,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}
SGPHY_txpll_nr = h80000814 5 6 h0 RW HEX
; Desc_SGPHY_txpll_nr {26'b0,reg_mask_fail,reg_wait_opr_fail,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}
SGPHY_hs_dig_lpbk = h80000814 11 1 h0 RW BIN
; Desc_SGPHY_hs_dig_lpbk {26'b0,reg_mask_fail,reg_wait_opr_fail,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}
SGPHY_rtt_cal_in = h80000814 12 3 h0 RW HEX
; Desc_SGPHY_rtt_cal_in {26'b0,reg_mask_fail,reg_wait_opr_fail,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}
SGPHY_fmonen = h80000814 15 1 h0 RW BIN
; Desc_SGPHY_fmonen {26'b0,reg_mask_fail,reg_wait_opr_fail,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}
SGPHY_bgtrim = h80000814 16 2 h0 RW HEX
; Desc_SGPHY_bgtrim {26'b0,reg_mask_fail,reg_wait_opr_fail,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}
SGPHY_txpll_bw = h80000814 18 1 h0 RW BIN
; Desc_SGPHY_txpll_bw {26'b0,reg_mask_fail,reg_wait_opr_fail,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}
SGPHY_rx_pllmode = h80000814 19 1 h0 RW BIN
; Desc_SGPHY_rx_pllmode {26'b0,reg_mask_fail,reg_wait_opr_fail,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}
SGPHY_atestbus_sel = h80000814 20 4 h0 RW HEX
; Desc_SGPHY_atestbus_sel {26'b0,reg_mask_fail,reg_wait_opr_fail,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}
SGPHY_HwCtrlEn = h80000814 24 1 h0 RW BIN
; Desc_SGPHY_HwCtrlEn {26'b0,reg_mask_fail,reg_wait_opr_fail,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}



; REGISTER SGPHY_CFG_2 Address h80000818
_SGPHY_CFG_2 = 2147485720 0 32 b00000001000000000000000000000000 RW
SGPHY_txpll_nf = h80000818 0 12 h0 RW HEX
; Desc_SGPHY_txpll_nf FSM value
SGPHY_rterm_cal_sel = h80000818 12 1 h0 RW BIN
; Desc_SGPHY_rterm_cal_sel FSM value
SGPHY_rterm_cal_reg = h80000818 13 3 h0 RW HEX
; Desc_SGPHY_rterm_cal_reg FSM value
SGPHY_delayval = h80000818 16 16 h100 RW HEX
; Desc_SGPHY_delayval FSM value



; REGISTER SGPHY_phy_cfg3 Address h80000820
_SGPHY_phy_cfg3 = 2147485728 0 25 b00000001000000000000000000000000 RW
SGPHY_txpll_frac = h80000820 0 24 h0 RW HEX
; Desc_SGPHY_txpll_frac set unicast MC value
SGPHY_txpll_dsmpd = h80000820 24 1 h1 RW BIN
; Desc_SGPHY_txpll_dsmpd set unicast MC value



; REGISTER eth_mac_int_mask_reg Address h80000828
_eth_mac_int_mask_reg = 2147485736 0 32 b00000000000000000000000000000000 RW
eth_mac_int_mask = h80000828 0 3 h0 RW HEX
; Desc_eth_mac_int_mask {len_cnt_start,first_addr[15:0]}
pmt_intr_o = h80000828 0 1 h0 RW BIN
mci_intr_o = h80000828 1 1 h0 RW BIN
mac_rx_packet_int = h80000828 2 1 h0 RW BIN



; REGISTER watchdog_LIMIT Address h80000848
_watchdog_LIMIT = 2147485768 0 5 b00000000000000000000000000000000 RW
WD_LIMIT = h80000848 0 5 h0 RW HEX
; Desc_WD_LIMIT interrupt mask i2c_sl_rx_req,i2c_sl_tx_req,i2c_sl_addr_req,i2c_slv_int_wd



; REGISTER HDCP_Cop_Config Address h80000850
_HDCP_Cop_Config = 2147485776 0 32 b00000000000000000000000000000000 RW
ahb_sl_byte_swap = h80000850 0 1 h0 RW BIN
; Desc_ahb_sl_byte_swap i2c_sl_rx_req,i2c_sl_tx_req,i2c_sl_addr_req,i2c_slv_int_wd
tst_fro_iddq = h80000850 1 1 h0 RW BIN
; Desc_tst_fro_iddq i2c_sl_rx_req,i2c_sl_tx_req,i2c_sl_addr_req,i2c_slv_int_wd
tst_fro_ctrl_en = h80000850 2 1 h0 RW BIN
; Desc_tst_fro_ctrl_en i2c_sl_rx_req,i2c_sl_tx_req,i2c_sl_addr_req,i2c_slv_int_wd
tst_fro_select = h80000850 3 5 h0 RW HEX
; Desc_tst_fro_select i2c_sl_rx_req,i2c_sl_tx_req,i2c_sl_addr_req,i2c_slv_int_wd
tst_fro_enable = h80000850 8 1 h0 RW BIN
; Desc_tst_fro_enable i2c_sl_rx_req,i2c_sl_tx_req,i2c_sl_addr_req,i2c_slv_int_wd
tst_fro_delay = h80000850 9 1 h0 RW BIN
; Desc_tst_fro_delay i2c_sl_rx_req,i2c_sl_tx_req,i2c_sl_addr_req,i2c_slv_int_wd
fro_clk_test_en = h80000850 31 1 h0 RW BIN
; Desc_fro_clk_test_en i2c_sl_rx_req,i2c_sl_tx_req,i2c_sl_addr_req,i2c_slv_int_wd



; REGISTER pka_prog_cpu_addr_reg Address h80000854
_pka_prog_cpu_addr_reg = 2147485780 0 32 b00000000000000000000000000000000 RW
pka_prog_cpu_addr = h80000854 0 12 h0 RW HEX
; Desc_pka_prog_cpu_addr I2C slave WD stop address  
pka_prog_cpu_ctrl = h80000854 31 1 h0 RW BIN
; Desc_pka_prog_cpu_ctrl I2C slave WD stop address  



; REGISTER pka_prog_cpu_wdata_reg Address h80000858
_pka_prog_cpu_wdata_reg = 2147485784 0 24 b00000000000000000000000000000000 RW
pka_prog_cpu_wdata = h80000858 0 24 h0 RW HEX
; Desc_pka_prog_cpu_wdata 



; REGISTER Test_Bus_Control Address h80000880
_Test_Bus_Control = 2147485824 0 32 b00000000000000000000000000000000 RW
tswsoc_test_chain_select = h80000880 0 6 h0 RW HEX
; Desc_tswsoc_test_chain_select Number of current words in RxMessageFifo
otp_sbpi_test_chain_select = h80000880 12 1 h0 RW BIN
; Desc_otp_sbpi_test_chain_select Number of current words in RxMessageFifo
otp_qspi_test_bus_select = h80000880 13 1 h0 RW BIN
; Desc_otp_qspi_test_bus_select Number of current words in RxMessageFifo
otp_instance_sbpi_test_select = h80000880 14 2 h0 RW HEX
; Desc_otp_instance_sbpi_test_select Number of current words in RxMessageFifo



; REGISTER dft_counter_val_reg Address h8000088c
_dft_counter_val_reg = 2147485836 0 32 b00000000000000000000000000000000 RW
dft_counter_val = h8000088c 0 32 h0 RW HEX
; Desc_dft_counter_val 



; REGISTER dft_sgmii_max_berr_reg Address h80000890
_dft_sgmii_max_berr_reg = 2147485840 0 32 b00000000000000000000000000000000 RW
dft_sgmii_max_berr = h80000890 0 32 h0 RW HEX
; Desc_dft_sgmii_max_berr Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]sinitial_seq_id_an_vm1_sel0    [23:16]sinitial_seq_id_an_vm0    [15:8]sinitial_seq_id_internal    [7:0]



; REGISTER dma_rx_tx_weights_and_ocp_req_gap_register Address h80000900
_dma_rx_tx_weights_and_ocp_req_gap_register = 2147485952 0 8 b00000000000000000000000001110000 RW
dma_port_select_roundrobin_weight = h80000900 0 4 h0 RW HEX
; Desc_dma_port_select_roundrobin_weight Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]sinitial_seq_id_an_vm7    [23:16]sinitial_seq_id_an_vm6    [15:8]sinitial_seq_id_an_vm5    [7:0]
dma_ocp_req_gap = h80000900 4 4 h7 RW HEX
; Desc_dma_ocp_req_gap Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]sinitial_seq_id_an_vm7    [23:16]sinitial_seq_id_an_vm6    [15:8]sinitial_seq_id_an_vm5    [7:0]



; REGISTER dma_brif_and_rx_timeouts_register Address h80000904
_dma_brif_and_rx_timeouts_register = 2147485956 0 26 b00000000001000000000000001100100 RW
dma_brif_timeout_set_val = h80000904 0 16 h64 RW HEX
; Desc_dma_brif_timeout_set_val time gap between adjacent measuremenvmsmeasurement period     [22:0]              Defines number of clocks periods between voltage measurement – the actual period depend on the selected s                                                                          clock frequencysuse_mpr                               [23]                 Use measurement period register s                                                                          1’b0 – measuremenvm will be done at the maximum possible rate – once one measurement is done (on both vm) and values are sampled, a new measurement will be initiateds                                                                          1’b1 – measurement will be done at the rate specified by the measurement period fields                                                                          For example - measurement period = 23’h7D0 means 2000 / 1Mhz = 2 msecsMagic_number                  [27:24]             Default value – identical for all registerssParity                                     [31:28]           Parity calculation on bits[27:0] 
dma_rx_timeout_clk_cnt_init_val = h80000904 16 10 h20 RW HEX
; Desc_dma_rx_timeout_clk_cnt_init_val time gap between adjacent measuremenvmsmeasurement period     [22:0]              Defines number of clocks periods between voltage measurement – the actual period depend on the selected s                                                                          clock frequencysuse_mpr                               [23]                 Use measurement period register s                                                                          1’b0 – measuremenvm will be done at the maximum possible rate – once one measurement is done (on both vm) and values are sampled, a new measurement will be initiateds                                                                          1’b1 – measurement will be done at the rate specified by the measurement period fields                                                                          For example - measurement period = 23’h7D0 means 2000 / 1Mhz = 2 msecsMagic_number                  [27:24]             Default value – identical for all registerssParity                                     [31:28]           Parity calculation on bits[27:0] 



; REGISTER dma_intc_clear_register Address h80000908
_dma_intc_clear_register = 2147485960 0 8 b00000000000000000000000000000000 RW
dma_intc_clear = h80000908 0 8 h0 RW HEX
; Desc_dma_intc_clear short_self_test_high_limit2s         [11:0]                When short self-test is selected this value is used as high_limit2sshort_self_test_low_limit2           [23:12]             When short self-test is selected this value is used as low_limit2sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 



; REGISTER dma_intc_clear_w_register Address h8000090c
_dma_intc_clear_w_register = 2147485964 0 17 b00000000000000000000000000000000 RW
dma_intc_clear_w = h8000090c 0 17 h0 RW HEX
; Desc_dma_intc_clear_w short_self_test_forced_vm_value3             [11:0]               When short self-test is selected this value is used for comparison against above defined limitssshort_self_test_forced_vm_value4             [23:12]            When short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 



; REGISTER dma_intc_rx_ove_evt_cnt_clear_register Address h80000910
_dma_intc_rx_ove_evt_cnt_clear_register = 2147485968 0 17 b00000000000000000000000000000000 RW
dma_intc_rx_ove_evt_cnt_clear = h80000910 0 17 h0 RW HEX
; Desc_dma_intc_rx_ove_evt_cnt_clear short_self_test_DS_high_limit_high_value               [11:0]                 When short self-test is selected this value is used as high_limit against the high value ofs                                                                                                                         direct signature from vm sshort_self_test_DS_high_limit_low_value                [23:12]               When short self-test is selected this value is used as low_limit against the low value ofs                                                                                                                         direct signature from vmsMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER dma_h_poll_rate_register Address h80000920
_dma_h_poll_rate_register = 2147485984 0 32 b00000000000000000000111110100000 RW
dma_h_poll_rate = h80000920 0 32 hfa0 RW HEX
; Desc_dma_h_poll_rate func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER dma_h_max_rx_buf_len_register Address h80000924
_dma_h_max_rx_buf_len_register = 2147485988 0 12 b00000000000000000000010000000000 RW
dma_h_max_rx_buf_len = h80000924 0 12 h400 RW HEX
; Desc_dma_h_max_rx_buf_len func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER dma_h_rx_intc_cnt_init_val_register Address h80000928
_dma_h_rx_intc_cnt_init_val_register = 2147485992 0 31 b00000001000000001000000010000000 RW
dma_h_rx_timeout_cnt_init_val = h80000928 0 8 h80 RW HEX
; Desc_dma_h_rx_timeout_cnt_init_val func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
dma_h_rx_pkt_cnt_init_val = h80000928 8 8 h80 RW HEX
; Desc_dma_h_rx_pkt_cnt_init_val func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
dma_h_rx_oct_cnt_init_val = h80000928 16 15 h100 RW HEX
; Desc_dma_h_rx_oct_cnt_init_val func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER dma_e_poll_rate_register Address h80000930
_dma_e_poll_rate_register = 2147486000 0 32 b00000000000000000000111110100000 RW
dma_e_poll_rate = h80000930 0 32 hfa0 RW HEX
; Desc_dma_e_poll_rate func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER dma_e_config_register Address h80000934
_dma_e_config_register = 2147486004 0 12 b00000000000000000000010000000000 RW
dma_e_max_rx_buf_len = h80000934 0 12 h400 RW HEX
; Desc_dma_e_max_rx_buf_len CRC calculated on bits [31:8]



; REGISTER dma_e_rx_intc_cnt_init_val_register Address h80000938
_dma_e_rx_intc_cnt_init_val_register = 2147486008 0 31 b00000001000000001000000010000000 RW
dma_e_rx_timeout_cnt_init_val = h80000938 0 8 h80 RW HEX
; Desc_dma_e_rx_timeout_cnt_init_val CRC calculated on bits [31:8]
dma_e_rx_pkt_cnt_init_val = h80000938 8 8 h80 RW HEX
; Desc_dma_e_rx_pkt_cnt_init_val CRC calculated on bits [31:8]
dma_e_rx_oct_cnt_init_val = h80000938 16 15 h100 RW HEX
; Desc_dma_e_rx_oct_cnt_init_val CRC calculated on bits [31:8]



; REGISTER hlic00_port_en_register Address h80000940
_hlic00_port_en_register = 2147486016 0 10 b00000000000000000000000000000000 RW
hlic00_port_tx_en = h80000940 0 1 h0 RW BIN
; Desc_hlic00_port_tx_en CRC calculated on bits [31:8]
hlic00_port_rx_en = h80000940 1 1 h0 RW BIN
; Desc_hlic00_port_rx_en CRC calculated on bits [31:8]
hlic00_dma_intc_mask = h80000940 2 8 h0 RW HEX
; Desc_hlic00_dma_intc_mask CRC calculated on bits [31:8]



; REGISTER hlic00_dma_txbd_ring_base_register Address h80000944
_hlic00_dma_txbd_ring_base_register = 2147486020 0 32 b00000000000000000000000000000000 RW
hlic00_dma_txbd_ring_base = h80000944 0 32 h0 RW HEX
; Desc_hlic00_dma_txbd_ring_base CRC calculated on bits [31:8]



; REGISTER hlic00_dma_rxbd_ring_base_register Address h80000948
_hlic00_dma_rxbd_ring_base_register = 2147486024 0 32 b00000000000000000000000000000000 RW
hlic00_dma_rxbd_ring_base = h80000948 0 32 h0 RW HEX
; Desc_hlic00_dma_rxbd_ring_base CRC calculated on bits [31:8]



; REGISTER hlic01_port_en_register Address h80000950
_hlic01_port_en_register = 2147486032 0 10 b00000000000000000000000000000000 RW
hlic01_port_tx_en = h80000950 0 1 h0 RW BIN
; Desc_hlic01_port_tx_en To be used while in Bypass mode to allow the SW to determine when the vm voltage value is ready and can be read
hlic01_port_rx_en = h80000950 1 1 h0 RW BIN
; Desc_hlic01_port_rx_en To be used while in Bypass mode to allow the SW to determine when the vm voltage value is ready and can be read
hlic01_dma_intc_mask = h80000950 2 8 h0 RW HEX
; Desc_hlic01_dma_intc_mask To be used while in Bypass mode to allow the SW to determine when the vm voltage value is ready and can be read



; REGISTER hlic01_dma_txbd_ring_base_register Address h80000954
_hlic01_dma_txbd_ring_base_register = 2147486036 0 32 b00000000000000000000000000000000 RW
hlic01_dma_txbd_ring_base = h80000954 0 32 h0 RW HEX
; Desc_hlic01_dma_txbd_ring_base error_limit                                                                      [4:0]                 when number of errors equals or exceeds this numbetrr failure indication will be reported.  sReserved                                                                         [23:5]sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER hlic01_dma_rxbd_ring_base_register Address h80000958
_hlic01_dma_rxbd_ring_base_register = 2147486040 0 32 b00000000000000000000000000000000 RW
hlic01_dma_rxbd_ring_base = h80000958 0 32 h0 RW HEX
; Desc_hlic01_dma_rxbd_ring_base When active – the configuration register x, fail to meet the safety requiremenvm



; REGISTER hlic02_port_en_register Address h80000960
_hlic02_port_en_register = 2147486048 0 10 b00000000000000000000000000000000 RW
hlic02_port_tx_en = h80000960 0 1 h0 RW BIN
; Desc_hlic02_port_tx_en functional comperator results for internal voltage measurements    [1]      vm_GT_high_limits    [0]      vm_LT_low_limit
hlic02_port_rx_en = h80000960 1 1 h0 RW BIN
; Desc_hlic02_port_rx_en functional comperator results for internal voltage measurements    [1]      vm_GT_high_limits    [0]      vm_LT_low_limit
hlic02_dma_intc_mask = h80000960 2 8 h0 RW HEX
; Desc_hlic02_dma_intc_mask functional comperator results for internal voltage measurements    [1]      vm_GT_high_limits    [0]      vm_LT_low_limit



; REGISTER hlic02_dma_txbd_ring_base_register Address h80000964
_hlic02_dma_txbd_ring_base_register = 2147486052 0 32 b00000000000000000000000000000000 RW
hlic02_dma_txbd_ring_base = h80000964 0 32 h0 RW HEX
; Desc_hlic02_dma_txbd_ring_base defines the wait period for analog power-ypsvm_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 



; REGISTER hlic02_dma_rxbd_ring_base_register Address h80000968
_hlic02_dma_rxbd_ring_base_register = 2147486056 0 32 b00000000000000000000000000000000 RW
hlic02_dma_rxbd_ring_base = h80000968 0 32 h0 RW HEX
; Desc_hlic02_dma_rxbd_ring_base defines the detection_enable for each error per portsparity_error_detect_en                                         [0]                   defines if register_parity error will be detected. sMagic_number                                                      [27:24]              Default value – identical for all registerssParity                                                                         [31:28]               Parity calculation on bits[27:0] 



; REGISTER ethrnt_port_en_register Address h80000a40
_ethrnt_port_en_register = 2147486272 0 10 b00000000000000000000000000000000 RW
ethrnt_port_tx_en = h80000a40 0 1 h0 RW BIN
; Desc_ethrnt_port_tx_en defines the detection_enable for each errorsts0_high_level_comparator_en       [0]  - defines if ts0  high_level comparator will report a detected errorsts0_low_level_comparator_en        [1]  - defines if ts0  low_level comparator will report a detected errorsts1_high_level_comparator_en       [2]  - defines if ts1  high_level comparator will report a detected errorsts1_low_level_comparator_en        [3]  - defines if ts1  low_level comparator will report a detected errorsdiff_comparator_en                             [4]  - defines if difference comparator will report a detected errorsregister_parity_en                                [5]  - defines if a register parity error will be reportedsreserve                                        [11:6]sts0_high_level_count_en                [12]  - defines if ts0  high_level errors will be countedsts0_low_level_count_en                 [13]  - defines if ts0  low_level errors will be countedsts1_high_level_count_en                [14]  - defines if ts1  high_level errors will be countedsts1_low_level_count_en                 [15]  - defines if ts1  low_level errors will be countedsdiff_comparator_count_en            [16]  - defines if difference errors will be countedsMagic_number                                  [27:24]              Default value – identical for all registerssParity                                                     [31:28]               Parity calculation on bits[27:0] 
ethrnt_port_rx_en = h80000a40 1 1 h0 RW BIN
; Desc_ethrnt_port_rx_en defines the detection_enable for each errorsts0_high_level_comparator_en       [0]  - defines if ts0  high_level comparator will report a detected errorsts0_low_level_comparator_en        [1]  - defines if ts0  low_level comparator will report a detected errorsts1_high_level_comparator_en       [2]  - defines if ts1  high_level comparator will report a detected errorsts1_low_level_comparator_en        [3]  - defines if ts1  low_level comparator will report a detected errorsdiff_comparator_en                             [4]  - defines if difference comparator will report a detected errorsregister_parity_en                                [5]  - defines if a register parity error will be reportedsreserve                                        [11:6]sts0_high_level_count_en                [12]  - defines if ts0  high_level errors will be countedsts0_low_level_count_en                 [13]  - defines if ts0  low_level errors will be countedsts1_high_level_count_en                [14]  - defines if ts1  high_level errors will be countedsts1_low_level_count_en                 [15]  - defines if ts1  low_level errors will be countedsdiff_comparator_count_en            [16]  - defines if difference errors will be countedsMagic_number                                  [27:24]              Default value – identical for all registerssParity                                                     [31:28]               Parity calculation on bits[27:0] 
ethrnt_dma_intc_mask = h80000a40 2 8 h0 RW HEX
; Desc_ethrnt_dma_intc_mask defines the detection_enable for each errorsts0_high_level_comparator_en       [0]  - defines if ts0  high_level comparator will report a detected errorsts0_low_level_comparator_en        [1]  - defines if ts0  low_level comparator will report a detected errorsts1_high_level_comparator_en       [2]  - defines if ts1  high_level comparator will report a detected errorsts1_low_level_comparator_en        [3]  - defines if ts1  low_level comparator will report a detected errorsdiff_comparator_en                             [4]  - defines if difference comparator will report a detected errorsregister_parity_en                                [5]  - defines if a register parity error will be reportedsreserve                                        [11:6]sts0_high_level_count_en                [12]  - defines if ts0  high_level errors will be countedsts0_low_level_count_en                 [13]  - defines if ts0  low_level errors will be countedsts1_high_level_count_en                [14]  - defines if ts1  high_level errors will be countedsts1_low_level_count_en                 [15]  - defines if ts1  low_level errors will be countedsdiff_comparator_count_en            [16]  - defines if difference errors will be countedsMagic_number                                  [27:24]              Default value – identical for all registerssParity                                                     [31:28]               Parity calculation on bits[27:0] 



; REGISTER ethrnt_dma_txbd_ring_base_register Address h80000a44
_ethrnt_dma_txbd_ring_base_register = 2147486276 0 32 b00000000000000000000000000000000 RW
ethrnt_dma_txbd_ring_base = h80000a44 0 32 h0 RW HEX
; Desc_ethrnt_dma_txbd_ring_base ts1_data_error_gen                                                      [11:0]                  each bit set in this field will invert the corresponding bit in the ts1_data to cause intentional error  sReserved                                                                         [22:12]sts1_rdy_error_gen                                                        [23]                     setting this bit will set the ts1_rdy to 1'b0 - for error and timeout testssMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER ethrnt_dma_rxbd_ring_base_register Address h80000a48
_ethrnt_dma_rxbd_ring_base_register = 2147486280 0 32 b00000000000000000000000000000000 RW
ethrnt_dma_rxbd_ring_base = h80000a48 0 32 h0 RW HEX
; Desc_ethrnt_dma_rxbd_ring_base tbd                                                                                     [23:0]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER Dma_Control_0 Address h80000afc
_Dma_Control_0 = 2147486460 0 32 b00000000000000000000000000000001 RW
SI_DMA_Priority = h80000afc 0 1 h1 RW BIN
; Desc_SI_DMA_Priority 
>>DESC SI_DMA_Priority = 2, b0, cpu, b1, dma
SI_IDMA_Priority = h80000afc 1 1 h0 RW BIN
; Desc_SI_IDMA_Priority 
>>DESC SI_IDMA_Priority = 2, b0, cpu, b1, dma



; REGISTER efuse_wr_addr_reg Address h80000b20
_efuse_wr_addr_reg = 2147486496 0 11 b00000000000000000000000000000000 RW
efuse_wr_addr = h80000b20 0 11 h0 RW HEX
; Desc_efuse_wr_addr 



; REGISTER efuse_wr_data_reg Address h80000b24
_efuse_wr_data_reg = 2147486500 0 32 b00000000000000000000000000000000 RW
efuse_wr_data_reserved = h80000b24 0 32 h0 RW HEX
; Desc_efuse_wr_data_reserved 



; REGISTER efuse_Control_reg Address h80000b50
_efuse_Control_reg = 2147486544 0 16 b00000000000000000000000000000001 RW
efuse_Control_reserved0 = h80000b50 0 1 h1 RW BIN
; Desc_efuse_Control_reserved0 pwm mode:s00 - free runnings01 - gateds10 - one shot
efuse_pd_in = h80000b50 1 1 h0 RW BIN
; Desc_efuse_pd_in pwm mode:s00 - free runnings01 - gateds10 - one shot
efuse_Control_reserved2 = h80000b50 2 1 h0 RW BIN
; Desc_efuse_Control_reserved2 pwm mode:s00 - free runnings01 - gateds10 - one shot
efuse_mr_in = h80000b50 3 1 h0 RW BIN
; Desc_efuse_mr_in pwm mode:s00 - free runnings01 - gateds10 - one shot



; REGISTER otp0_config_reg Address h80000b64
_otp0_config_reg = 2147486564 0 22 b00000000000010010000000000000010 RW
otp0_clock_en = h80000b64 0 1 h0 RW BIN
; Desc_otp0_clock_en pwm mode:s00 - free runnings01 - gateds10 - one shot
otp0_power_down = h80000b64 1 1 h1 RW BIN
; Desc_otp0_power_down pwm mode:s00 - free runnings01 - gateds10 - one shot
otp0_agg_pgm_status_clr = h80000b64 3 1 h0 RW BIN
; Desc_otp0_agg_pgm_status_clr pwm mode:s00 - free runnings01 - gateds10 - one shot
otp0_o_sel = h80000b64 4 1 h0 RW BIN
; Desc_otp0_o_sel pwm mode:s00 - free runnings01 - gateds10 - one shot
otp0_o_dctrl = h80000b64 5 1 h0 RW BIN
; Desc_otp0_o_dctrl pwm mode:s00 - free runnings01 - gateds10 - one shot
otp0_mips_rd_addr = h80000b64 6 10 h0 RW HEX
; Desc_otp0_mips_rd_addr pwm mode:s00 - free runnings01 - gateds10 - one shot
otp0_divide_ratio = h80000b64 16 4 h9 RW HEX
; Desc_otp0_divide_ratio pwm mode:s00 - free runnings01 - gateds10 - one shot
otp0_test_chain_select = h80000b64 20 2 h0 RW HEX
; Desc_otp0_test_chain_select pwm mode:s00 - free runnings01 - gateds10 - one shot



; REGISTER otp0_cmd_reg Address h80000b68
_otp0_cmd_reg = 2147486568 0 20 b00000000000000000000000000000000 RW
otp0_cmd_data_wr = h80000b68 0 8 h0 RW HEX
; Desc_otp0_cmd_data_wr the pwm stm - for debug
otp0_cmd_timer = h80000b68 8 8 h0 RW HEX
; Desc_otp0_cmd_timer the pwm stm - for debug
otp0_cmd_pgm = h80000b68 16 1 h0 RW BIN
; Desc_otp0_cmd_pgm the pwm stm - for debug
otp0_cmd_wait_flag = h80000b68 17 1 h0 RW BIN
; Desc_otp0_cmd_wait_flag the pwm stm - for debug
otp0_cmd_rd_q = h80000b68 18 1 h0 RW BIN
; Desc_otp0_cmd_rd_q the pwm stm - for debug
otp0_cmd_last = h80000b68 19 1 h0 RW BIN
; Desc_otp0_cmd_last the pwm stm - for debug



; REGISTER otp_user_cmd_timing_reg Address h80000b80
_otp_user_cmd_timing_reg = 2147486592 0 24 b00000000000000010000000100000001 RW
otp_user_cmd_ck_width = h80000b80 0 8 h1 RW HEX
; Desc_otp_user_cmd_ck_width number of cycle where pwm is high
otp_user_cmd_addr_to_ck_width = h80000b80 8 8 h1 RW HEX
; Desc_otp_user_cmd_addr_to_ck_width number of cycle where pwm is high
otp_user_cmd_ck_to_data_sample_width = h80000b80 16 8 h1 RW HEX
; Desc_otp_user_cmd_ck_to_data_sample_width number of cycle where pwm is high



; REGISTER SYS_PLL_CTRL Address h80000b90
_SYS_PLL_CTRL = 2147486608 0 32 b00000000000000000000000000000000 RW
SYS_PLL_REFDIV = h80000b90 0 6 h0 RW HEX
; Desc_SYS_PLL_REFDIV number of cycle where pwm is high
SYS_PLL_FBDIV = h80000b90 6 12 h0 RW HEX
; Desc_SYS_PLL_FBDIV number of cycle where pwm is high
SYS_PLL_PD = h80000b90 18 1 h0 RW BIN
; Desc_SYS_PLL_PD number of cycle where pwm is high
SYS_PLL_DACPD = h80000b90 19 1 h0 RW BIN
; Desc_SYS_PLL_DACPD number of cycle where pwm is high
SYS_PLL_DSMPD = h80000b90 20 1 h0 RW BIN
; Desc_SYS_PLL_DSMPD number of cycle where pwm is high
SYS_PLL_FOUTPOSTDIVPD = h80000b90 21 1 h0 RW BIN
; Desc_SYS_PLL_FOUTPOSTDIVPD number of cycle where pwm is high
SYS_PLL_FOUT4PHASEPD = h80000b90 22 1 h0 RW BIN
; Desc_SYS_PLL_FOUT4PHASEPD number of cycle where pwm is high
SYS_PLL_FOUTVCOPD = h80000b90 23 1 h0 RW BIN
; Desc_SYS_PLL_FOUTVCOPD number of cycle where pwm is high
SYS_PLL_BYPASS = h80000b90 24 1 h0 RW BIN
; Desc_SYS_PLL_BYPASS number of cycle where pwm is high



; REGISTER SYS_PLL_CTRL2 Address h80000b94
_SYS_PLL_CTRL2 = 2147486612 0 32 b00000000000000000000000000000000 RW
SYS_PLL_FRAC = h80000b94 0 24 h0 RW HEX
; Desc_SYS_PLL_FRAC pwm mode:s00 - free runnings01 - gateds10 - one shot
SYS_PLL_POSTDIV1 = h80000b94 24 3 h0 RW HEX
; Desc_SYS_PLL_POSTDIV1 pwm mode:s00 - free runnings01 - gateds10 - one shot
SYS_PLL_POSTDIV2 = h80000b94 28 3 h0 RW HEX
; Desc_SYS_PLL_POSTDIV2 pwm mode:s00 - free runnings01 - gateds10 - one shot



; REGISTER pas_timer_int_mask_reg Address h80000c48
_pas_timer_int_mask_reg = 2147486792 0 16 b00000000000000001111111111111111 RW
pas_timer_int_mask = h80000c48 0 16 hffff RW HEX
; Desc_pas_timer_int_mask 



; REGISTER software_reg_0 Address h80000f0c
_software_reg_0 = 2147487500 0 32 b00000000000000000000000000000000 RW
software_0 = h80000f0c 0 32 h0 RW HEX
; Desc_software_0 for SW use



; REGISTER software_reg_1 Address h80000f10
_software_reg_1 = 2147487504 0 32 b00000000000000000000000000000000 RW
software_1 = h80000f10 0 32 h0 RW HEX
; Desc_software_1 for SW use



; REGISTER software_reg_2 Address h80000f14
_software_reg_2 = 2147487508 0 32 b00000000000000000000000000000000 RW
software_2 = h80000f14 0 32 h0 RW HEX
; Desc_software_2 for SW use



; REGISTER software_reg_3 Address h80000f18
_software_reg_3 = 2147487512 0 32 b00000000000000000000000000000000 RW
software_3 = h80000f18 0 32 h0 RW HEX
; Desc_software_3 for SW use



; REGISTER software_reg_4 Address h80000f1c
_software_reg_4 = 2147487516 0 32 b00000000000000000000000000000000 RW
software_4 = h80000f1c 0 32 h0 RW HEX
; Desc_software_4 for SW use



; REGISTER software_reg_5 Address h80000f20
_software_reg_5 = 2147487520 0 32 b00000000000000000000000000000000 RW
software_5 = h80000f20 0 32 h0 RW HEX
; Desc_software_5 for SW use



; REGISTER software_reg_6 Address h80000f24
_software_reg_6 = 2147487524 0 32 b00000000000000000000000000000000 RW
software_6 = h80000f24 0 32 h0 RW HEX
; Desc_software_6 for SW use



; REGISTER software_reg_7 Address h80000f28
_software_reg_7 = 2147487528 0 32 b00000000000000000000000000000000 RW
software_7 = h80000f28 0 32 h0 RW HEX
; Desc_software_7 for SW use



; REGISTER software_reg_8 Address h80000f2c
_software_reg_8 = 2147487532 0 32 b00000000000000000000000000000000 RW
software_8 = h80000f2c 0 32 h0 RW HEX
; Desc_software_8 For FPGA use (AFE TC status)



; REGISTER software_reg_9 Address h80000f30
_software_reg_9 = 2147487536 0 32 b00000000000000000000000000000000 RW
software_9 = h80000f30 0 32 h0 RW HEX
; Desc_software_9 For FPGA use (AFE TC status)



; REGISTER software_reg_10 Address h80000f34
_software_reg_10 = 2147487540 0 32 b00000000000000000000000000000000 RW
software_10 = h80000f34 0 32 h0 RW HEX
; Desc_software_10 For FPGA use (AFE TC configuration)



; REGISTER software_reg_11 Address h80000f38
_software_reg_11 = 2147487544 0 32 b00000000000000000000000000000000 RW
software_11 = h80000f38 0 32 h0 RW HEX
; Desc_software_11 For FPGA use (AFE TC configuration)



; REGISTER software_reg_12 Address h80000f3c
_software_reg_12 = 2147487548 0 32 b00000000000000000000000000000000 RW
software_12 = h80000f3c 0 32 h0 RW HEX
; Desc_software_12 sys_clk divider value - division rate from AFE 1G clock to drive the chip's sys_clk. In order to derive 333MHz from 1GHz, configuration of value 2 means division by 3



; REGISTER software_reg_13 Address h80000f40
_software_reg_13 = 2147487552 0 32 b00000000000000000000000000000000 RW
software_13 = h80000f40 0 32 h0 RW HEX
; Desc_software_13 lvdstx_ints



; REGISTER software_reg_14 Address h80000f44
_software_reg_14 = 2147487556 0 32 b00000000000000000000000000000000 RW
software_14 = h80000f44 0 32 h0 RW HEX
; Desc_software_14 activates the ROM bist (rom_bist_test_mode must be set)



; REGISTER software_reg_15 Address h80000f48
_software_reg_15 = 2147487560 0 32 b00000000000000000000000000000000 RW
software_15 = h80000f48 0 32 h0 RW HEX
; Desc_software_15 result of MISR polynomial



; REGISTER bl_start_addr_reg Address h80000f4c
_bl_start_addr_reg = 2147487564 0 32 b00000000000000000000000000000000 RW
bl_start_addr = h80000f4c 0 32 h0 RW HEX
; Desc_bl_start_addr memory bist is done



; REGISTER bl_target_addr_reg Address h80000f50
_bl_target_addr_reg = 2147487568 0 32 b00000000000000000000000000000000 RW
bl_target_addr = h80000f50 0 32 h0 RW HEX
; Desc_bl_target_addr Pads MUX select



; REGISTER bl_block_size_reg Address h80000f54
_bl_block_size_reg = 2147487572 0 32 b00000000000000000000000000000000 RW
bl_block_size = h80000f54 0 32 h0 RW HEX
; Desc_bl_block_size Pads pull select



; REGISTER bl_cfg Address h80000f58
_bl_cfg = 2147487576 0 9 b00000000000000000000000000000000 RW
bl_ocp_num = h80000f58 0 1 h0 RW BIN
; Desc_bl_ocp_num Pads stong pull UP controls
bl_last_block = h80000f58 1 1 h0 RW BIN
; Desc_bl_last_block Pads stong pull UP controls
bl_invert_rif_data = h80000f58 2 1 h0 RW BIN
; Desc_bl_invert_rif_data Pads stong pull UP controls
bl_invert_ocp_data = h80000f58 3 1 h0 RW BIN
; Desc_bl_invert_ocp_data Pads stong pull UP controls
bl_invert_sha_data = h80000f58 4 1 h0 RW BIN
; Desc_bl_invert_sha_data Pads stong pull UP controls
bl_sha_en = h80000f58 5 1 h0 RW BIN
; Desc_bl_sha_en Pads stong pull UP controls
bl_stop = h80000f58 7 1 h0 RW BIN
; Desc_bl_stop Pads stong pull UP controls
bl_stop_SHA256 = h80000f58 8 1 h0 RW BIN
; Desc_bl_stop_SHA256 Pads stong pull UP controls



; REGISTER bl_rif_timeout_reg Address h80000f5c
_bl_rif_timeout_reg = 2147487580 0 32 b00000000000000001111111111111111 RW
bl_rif_timeout = h80000f5c 0 32 hffff RW HEX
; Desc_bl_rif_timeout Pads schmidt control level



; REGISTER bl_ocp_timeout_reg Address h80000f60
_bl_ocp_timeout_reg = 2147487584 0 32 b00000000000000001111111111111111 RW
bl_ocp_timeout = h80000f60 0 32 hffff RW HEX
; Desc_bl_ocp_timeout Pads drive strength



; REGISTER bl_int_mask_reg Address h80000f94
_bl_int_mask_reg = 2147487636 0 5 b00000000000000000000000000011111 RW
dma_resp_mask = h80000f94 0 1 h1 RW BIN
; Desc_dma_resp_mask 
bl_ocp_timeout_mask = h80000f94 1 1 h1 RW BIN
; Desc_bl_ocp_timeout_mask 
bl_rif_timeout_mask = h80000f94 2 1 h1 RW BIN
; Desc_bl_rif_timeout_mask 
bl_sha_done_mask = h80000f94 3 1 h1 RW BIN
; Desc_bl_sha_done_mask 
bl_done_mask = h80000f94 4 1 h1 RW BIN
; Desc_bl_done_mask 



; REGISTER QspiDivideRatio_reg Address h80000fa8
_QspiDivideRatio_reg = 2147487656 0 8 b00000000000000000000000000000000 RW
QspiDivideRatio = h80000fa8 0 8 h0 RW HEX
; Desc_QspiDivideRatio 



; REGISTER qspi_high_z_force_reg Address h80000fac
_qspi_high_z_force_reg = 2147487660 0 2 b00000000000000000000000000000001 RW
qspi_high_z_force = h80000fac 0 1 h1 RW BIN
; Desc_qspi_high_z_force 



; REGISTER fbc_threshold_arr_data_0 Address h80002000
_fbc_threshold_arr_data_0 = 2147491840 0 32 b00000000000000000000000000000000 RW
fbc_threshold_arr_data[31:0] = h80002000 0 32 h0 RW HEX
; Desc_fbc_threshold_arr_data[31:0] 



; REGISTER fbc_threshold_arr_data_1 Address h80002004
_fbc_threshold_arr_data_1 = 2147491844 0 32 b00000000000000000000000000000000 RW
fbc_threshold_arr_data[63:32] = h80002004 0 32 h0 RW HEX
; Desc_fbc_threshold_arr_data[63:32] 



; REGISTER fbc_threshold_arr_data_2 Address h80002008
_fbc_threshold_arr_data_2 = 2147491848 0 32 b00000000000000000000000000000000 RW
fbc_threshold_arr_data[95:64] = h80002008 0 32 h0 RW HEX
; Desc_fbc_threshold_arr_data[95:64] refer to Bsor test concept doc



; REGISTER fbc_threshold_arr_data_3 Address h8000200c
_fbc_threshold_arr_data_3 = 2147491852 0 32 b00000000000000000000000000000000 RW
fbc_threshold_arr_data[127:96] = h8000200c 0 32 h0 RW HEX
; Desc_fbc_threshold_arr_data[127:96] 



; REGISTER fbc_threshold_arr_data_4 Address h80002010
_fbc_threshold_arr_data_4 = 2147491856 0 32 b00000000000000000000000000000000 RW
fbc_threshold_arr_data[159:128] = h80002010 0 32 h0 RW HEX
; Desc_fbc_threshold_arr_data[159:128] All AFE PLL lock indicators are on



; REGISTER fbc_threshold_arr_data_5 Address h80002014
_fbc_threshold_arr_data_5 = 2147491860 0 32 b00000000000000000000000000000000 RW
fbc_threshold_arr_data[191:160] = h80002014 0 32 h0 RW HEX
; Desc_fbc_threshold_arr_data[191:160] sys_clk divider value - division rate from 1G AFE sys_clk to drive to the tadp_top



; REGISTER fbc_threshold_arr_data_6 Address h80002018
_fbc_threshold_arr_data_6 = 2147491864 0 32 b00000000000000000000000000000000 RW
fbc_threshold_arr_data[223:192] = h80002018 0 32 h0 RW HEX
; Desc_fbc_threshold_arr_data[223:192] 



; REGISTER fbc_threshold_arr_data_7 Address h8000201c
_fbc_threshold_arr_data_7 = 2147491868 0 32 b00000000000000000000000000000000 RW
fbc_threshold_arr_data[255:224] = h8000201c 0 32 h0 RW HEX
; Desc_fbc_threshold_arr_data[255:224] 



; REGISTER fbc_cm_arr_data_0 Address h80002020
_fbc_cm_arr_data_0 = 2147491872 0 32 b11111111111111111111111111111111 RW
fbc_cm_arr_data[31:0] = h80002020 0 32 hffffffff RW HEX
; Desc_fbc_cm_arr_data[31:0] 



; REGISTER fbc_cm_arr_data_1 Address h80002024
_fbc_cm_arr_data_1 = 2147491876 0 32 b11111111111111111111111111111111 RW
fbc_cm_arr_data[63:32] = h80002024 0 32 hffffffff RW HEX
; Desc_fbc_cm_arr_data[63:32] 



; REGISTER fbc_cm_arr_data_2 Address h80002028
_fbc_cm_arr_data_2 = 2147491880 0 32 b11111111111111111111111111111111 RW
fbc_cm_arr_data[95:64] = h80002028 0 32 hffffffff RW HEX
; Desc_fbc_cm_arr_data[95:64] 



; REGISTER fbc_cm_arr_data_3 Address h8000202c
_fbc_cm_arr_data_3 = 2147491884 0 32 b11111111111111111111111111111111 RW
fbc_cm_arr_data[127:96] = h8000202c 0 32 hffffffff RW HEX
; Desc_fbc_cm_arr_data[127:96] 



; REGISTER fbc_cm_arr_data_4 Address h80002030
_fbc_cm_arr_data_4 = 2147491888 0 32 b11111111111111111111111111111111 RW
fbc_cm_arr_data[159:128] = h80002030 0 32 hffffffff RW HEX
; Desc_fbc_cm_arr_data[159:128] 



; REGISTER fbc_cm_arr_data_5 Address h80002034
_fbc_cm_arr_data_5 = 2147491892 0 32 b11111111111111111111111111111111 RW
fbc_cm_arr_data[191:160] = h80002034 0 32 hffffffff RW HEX
; Desc_fbc_cm_arr_data[191:160] 



; REGISTER fbc_cm_arr_data_6 Address h80002038
_fbc_cm_arr_data_6 = 2147491896 0 32 b11111111111111111111111111111111 RW
fbc_cm_arr_data[223:192] = h80002038 0 32 hffffffff RW HEX
; Desc_fbc_cm_arr_data[223:192] Sample source select



; REGISTER fbc_cm_arr_data_7 Address h8000203c
_fbc_cm_arr_data_7 = 2147491900 0 32 b11111111111111111111111111111111 RW
fbc_cm_arr_data[255:224] = h8000203c 0 32 hffffffff RW HEX
; Desc_fbc_cm_arr_data[255:224] samples to count from trig till window end



; REGISTER fbc_cm_arr_data_8 Address h80002040
_fbc_cm_arr_data_8 = 2147491904 0 32 b11111111111111111111111111111111 RW
fbc_cm_arr_data[287:256] = h80002040 0 32 hffffffff RW HEX
; Desc_fbc_cm_arr_data[287:256] Internal trig expected value bits 31:0



; REGISTER fbc_cm_arr_data_9 Address h80002044
_fbc_cm_arr_data_9 = 2147491908 0 32 b11111111111111111111111111111111 RW
fbc_cm_arr_data[319:288] = h80002044 0 32 hffffffff RW HEX
; Desc_fbc_cm_arr_data[319:288] Internal trig expected value bits 63:32



; REGISTER fbc_cm_arr_data_10 Address h80002048
_fbc_cm_arr_data_10 = 2147491912 0 32 b11111111111111111111111111111111 RW
fbc_cm_arr_data[351:320] = h80002048 0 32 hffffffff RW HEX
; Desc_fbc_cm_arr_data[351:320] Internal trig expected value bits 95:64



; REGISTER fbc_cm_arr_data_11 Address h8000204c
_fbc_cm_arr_data_11 = 2147491916 0 32 b11111111111111111111111111111111 RW
fbc_cm_arr_data[383:352] = h8000204c 0 32 hffffffff RW HEX
; Desc_fbc_cm_arr_data[383:352] Internal trig expected value bits 31:0



; REGISTER fbc_cm_arr_data_12 Address h80002050
_fbc_cm_arr_data_12 = 2147491920 0 32 b11111111111111111111111111111111 RW
fbc_cm_arr_data[415:384] = h80002050 0 32 hffffffff RW HEX
; Desc_fbc_cm_arr_data[415:384] Internal trig expected value bits 63:32



; REGISTER fbc_cm_arr_data_13 Address h80002054
_fbc_cm_arr_data_13 = 2147491924 0 32 b11111111111111111111111111111111 RW
fbc_cm_arr_data[447:416] = h80002054 0 32 hffffffff RW HEX
; Desc_fbc_cm_arr_data[447:416] Internal trig expected value bits 95:64



; REGISTER fbc_cm_arr_data_14 Address h80002058
_fbc_cm_arr_data_14 = 2147491928 0 32 b11111111111111111111111111111111 RW
fbc_cm_arr_data[479:448] = h80002058 0 32 hffffffff RW HEX
; Desc_fbc_cm_arr_data[479:448] Internal trig expected value bits 63:32



; REGISTER fbc_cm_arr_data_15 Address h8000205c
_fbc_cm_arr_data_15 = 2147491932 0 32 b11111111111111111111111111111111 RW
fbc_cm_arr_data[511:480] = h8000205c 0 32 hffffffff RW HEX
; Desc_fbc_cm_arr_data[511:480] Internal trig expected value bits 31:0



; REGISTER test_mode_ctrl Address h80003000
_test_mode_ctrl = 2147495936 0 2 b00000000000000000000000000000001 RW
gtm_keep_cpu_reset = h80003000 0 1 h1 RW BIN
; Desc_gtm_keep_cpu_reset func_vm_high_limit_vin2_sel2                                [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
>>DESC gtm_keep_cpu_reset = 2, b0, release CPU from reset in general test mode, b1, keep CPU in reset in general test mode



; REGISTER hdcp_int_mask_reg Address h80003010
_hdcp_int_mask_reg = 2147495952 0 6 b00000000000000000000000000111111 RW
hdcp_int_mask = h80003010 0 6 h3f RW HEX
; Desc_hdcp_int_mask func_vm_low_limit_vin3                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
pka_int = h80003010 0 3 h7 RW HEX
int_aic_out = h80003010 3 1 h1 RW BIN
sl_err_int = h80003010 4 1 h1 RW BIN
trng_irq = h80003010 5 1 h1 RW BIN



; REGISTER uart_cpu_qspi_rd_addr_reg Address h80003014
_uart_cpu_qspi_rd_addr_reg = 2147495956 0 32 b10100000000000000000000000000000 RW
uart_cpu_qspi_rd_addr = h80003014 0 32 ha0000000 RW HEX
; Desc_uart_cpu_qspi_rd_addr func_vm_low_limit_vin4                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER uart_cpu_qspi_wr_addr_reg Address h80003018
_uart_cpu_qspi_wr_addr_reg = 2147495960 0 32 b10100000000000000000000000000000 RW
uart_cpu_qspi_wr_addr = h80003018 0 32 ha0000000 RW HEX
; Desc_uart_cpu_qspi_wr_addr func_vm_low_limit_vin5                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER efuse_word_data_reg Address h8000301c
_efuse_word_data_reg = 2147495964 0 32 b00000000000000000000000000000000 RW
efuse_word_data = h8000301c 0 32 h0 RW HEX
; Desc_efuse_word_data func_vm_low_limit_vin6                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER efuse_word_configure_reg Address h80003020
_efuse_word_configure_reg = 2147495968 0 13 b00000000000000000000000000000000 RW
efuse_word_wr_en = h80003020 0 1 h0 RW BIN
; Desc_efuse_word_wr_en func_vm_low_limit_vin7                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
efuse_word_duplicate = h80003020 1 1 h0 RW BIN
; Desc_efuse_word_duplicate func_vm_low_limit_vin7                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
efuse_first_bit_addr = h80003020 2 11 h0 RW HEX
; Desc_efuse_first_bit_addr func_vm_low_limit_vin7                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER ej_dint_en Address h80003024
_ej_dint_en = 2147495972 0 2 b00000000000000000000000000000000 RW
ej_dint_en_0 = h80003024 0 1 h0 RW BIN
; Desc_ej_dint_en_0 func_vm_low_limit_vin8                                          [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
ej_dint_en_1 = h80003024 1 1 h0 RW BIN
; Desc_ej_dint_en_1 func_vm_low_limit_vin8                                          [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER iram_power_modes Address h80003028
_iram_power_modes = 2147495976 0 25 b00000000000000000000000000000000 RW
iram_sd = h80003028 16 8 h0 RW HEX
; Desc_iram_sd func_vm_low_limit_vin9                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
iram_fiso = h80003028 24 1 h0 RW BIN
; Desc_iram_fiso func_vm_low_limit_vin9                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER dram_power_modes Address h8000302c
_dram_power_modes = 2147495980 0 25 b00000000000000000000000000000000 RW
dram_sd = h8000302c 16 8 h0 RW HEX
; Desc_dram_sd func_vm_low_limit_vin10                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
dram_fiso = h8000302c 24 1 h0 RW BIN
; Desc_dram_fiso func_vm_low_limit_vin10                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER tsw_eth_mac_power_modes Address h80003030
_tsw_eth_mac_power_modes = 2147495984 0 10 b00000000000000000000000000000000 RW
tsw_eth_mac_fifo_ls = h80003030 0 1 h0 RW BIN
; Desc_tsw_eth_mac_fifo_ls func_vm_low_limit_vin11                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
tsw_eth_mac_rrc_ls = h80003030 1 1 h0 RW BIN
; Desc_tsw_eth_mac_rrc_ls func_vm_low_limit_vin11                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
tsw_eth_mac_trc_ls = h80003030 2 1 h0 RW BIN
; Desc_tsw_eth_mac_trc_ls func_vm_low_limit_vin11                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
tsw_eth_mac_fifo_ds = h80003030 3 1 h0 RW BIN
; Desc_tsw_eth_mac_fifo_ds func_vm_low_limit_vin11                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
tsw_eth_mac_rrc_ds = h80003030 4 1 h0 RW BIN
; Desc_tsw_eth_mac_rrc_ds func_vm_low_limit_vin11                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
tsw_eth_mac_trc_ds = h80003030 5 1 h0 RW BIN
; Desc_tsw_eth_mac_trc_ds func_vm_low_limit_vin11                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
tsw_eth_mac_fifo_sd = h80003030 6 1 h0 RW BIN
; Desc_tsw_eth_mac_fifo_sd func_vm_low_limit_vin11                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
tsw_eth_mac_rrc_sd = h80003030 7 1 h0 RW BIN
; Desc_tsw_eth_mac_rrc_sd func_vm_low_limit_vin11                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
tsw_eth_mac_trc_sd = h80003030 8 1 h0 RW BIN
; Desc_tsw_eth_mac_trc_sd func_vm_low_limit_vin11                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
tsw_eth_fiso = h80003030 9 1 h0 RW BIN
; Desc_tsw_eth_fiso func_vm_low_limit_vin11                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER hdcp_power_modes Address h80003034
_hdcp_power_modes = 2147495988 0 7 b00000000000000000000000000000000 RW
hdcp_pka_ls = h80003034 0 1 h0 RW BIN
; Desc_hdcp_pka_ls func_vm_low_limit_vin12                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
hdcp_prog_ls = h80003034 1 1 h0 RW BIN
; Desc_hdcp_prog_ls func_vm_low_limit_vin12                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
hdcp_pka_ds = h80003034 2 1 h0 RW BIN
; Desc_hdcp_pka_ds func_vm_low_limit_vin12                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
hdcp_prog_ds = h80003034 3 1 h0 RW BIN
; Desc_hdcp_prog_ds func_vm_low_limit_vin12                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
hdcp_pka_sd = h80003034 4 1 h0 RW BIN
; Desc_hdcp_pka_sd func_vm_low_limit_vin12                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
hdcp_prog_sd = h80003034 5 1 h0 RW BIN
; Desc_hdcp_prog_sd func_vm_low_limit_vin12                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
hdcp_fiso = h80003034 6 1 h0 RW BIN
; Desc_hdcp_fiso func_vm_low_limit_vin12                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER rom_power_modes Address h80003038
_rom_power_modes = 2147495992 0 32 b00000000000000000000000000000000 RW
rom_ls = h80003038 0 16 h0 RW HEX
; Desc_rom_ls func_vm_high_limit_vin13                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
rom_sd = h80003038 16 16 h0 RW HEX
; Desc_rom_sd func_vm_high_limit_vin13                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER tcbram_power_modes Address h8000303c
_tcbram_power_modes = 2147495996 0 3 b00000000000000000000000000000000 RW
tcbram_sd = h8000303c 2 1 h0 RW BIN
; Desc_tcbram_sd func_vm_low_limit_vin13                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER test_cpu_read_latency_reg Address h80003044
_test_cpu_read_latency_reg = 2147496004 0 10 b00000000000000000000001001010110 RW
test_cpu_read_latency = h80003044 0 10 h256 RW HEX
; Desc_test_cpu_read_latency func_vm_low_limit_vin14                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER number_of_cycles_for_wakeup_RAM_reg Address h80003048
_number_of_cycles_for_wakeup_RAM_reg = 2147496008 0 7 b00000000000000000000000000101000 RW
number_of_cycles_for_wakeup_RAM = h80003048 0 7 h28 RW HEX
; Desc_number_of_cycles_for_wakeup_RAM func_vm_high_limit_vin15                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER number_of_cycles_for_wakeup_ROM_reg Address h8000304c
_number_of_cycles_for_wakeup_ROM_reg = 2147496012 0 7 b00000000000000000000000000001000 RW
number_of_cycles_for_wakeup_ROM = h8000304c 0 7 h8 RW HEX
; Desc_number_of_cycles_for_wakeup_ROM func_vm_low_limit_vin15                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER mem_protection_int_mask_reg Address h80003058
_mem_protection_int_mask_reg = 2147496024 0 4 b00000000000000000000000000001111 RW
iram_mem_protection_int_mask = h80003058 0 1 h1 RW BIN
; Desc_iram_mem_protection_int_mask func_vm_high_limit_vinternal                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
dram_mem_protection_int_mask = h80003058 1 1 h1 RW BIN
; Desc_dram_mem_protection_int_mask func_vm_high_limit_vinternal                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
rom_mem_protection_int_mask = h80003058 2 1 h1 RW BIN
; Desc_rom_mem_protection_int_mask func_vm_high_limit_vinternal                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
rom_addr_deviation_int_mask = h80003058 3 1 h1 RW BIN
; Desc_rom_addr_deviation_int_mask func_vm_high_limit_vinternal                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER otp1_config_reg Address h8000306c
_otp1_config_reg = 2147496044 0 22 b00000000000010010000000000000010 RW
otp1_clock_en = h8000306c 0 1 h0 RW BIN
; Desc_otp1_clock_en func_vm_low_limit_vinternal                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
otp1_power_down = h8000306c 1 1 h1 RW BIN
; Desc_otp1_power_down func_vm_low_limit_vinternal                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
otp1_agg_pgm_status_clr = h8000306c 3 1 h0 RW BIN
; Desc_otp1_agg_pgm_status_clr func_vm_low_limit_vinternal                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
otp1_o_sel = h8000306c 4 1 h0 RW BIN
; Desc_otp1_o_sel func_vm_low_limit_vinternal                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
otp1_o_dctrl = h8000306c 5 1 h0 RW BIN
; Desc_otp1_o_dctrl func_vm_low_limit_vinternal                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
otp1_mips_rd_addr = h8000306c 6 10 h0 RW HEX
; Desc_otp1_mips_rd_addr func_vm_low_limit_vinternal                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
otp1_divide_ratio = h8000306c 16 4 h9 RW HEX
; Desc_otp1_divide_ratio func_vm_low_limit_vinternal                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
otp1_test_chain_select = h8000306c 20 2 h0 RW HEX
; Desc_otp1_test_chain_select func_vm_low_limit_vinternal                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER otp1_cmd_reg Address h80003070
_otp1_cmd_reg = 2147496048 0 20 b00000000000000000000000000000000 RW
otp1_cmd_data_wr = h80003070 0 8 h0 RW HEX
; Desc_otp1_cmd_data_wr error_count_limit_vin0                                             [7:0]                 when number of measurement error on vin0 equals or exceeds this number failure indication will be reported. serror_count_limit_vin1                                             [15:8]              when number of measurement error on vin1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel0                                  [23:16]            when number of measurement error on vin2_sel0 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
otp1_cmd_timer = h80003070 8 8 h0 RW HEX
; Desc_otp1_cmd_timer error_count_limit_vin0                                             [7:0]                 when number of measurement error on vin0 equals or exceeds this number failure indication will be reported. serror_count_limit_vin1                                             [15:8]              when number of measurement error on vin1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel0                                  [23:16]            when number of measurement error on vin2_sel0 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
otp1_cmd_pgm = h80003070 16 1 h0 RW BIN
; Desc_otp1_cmd_pgm error_count_limit_vin0                                             [7:0]                 when number of measurement error on vin0 equals or exceeds this number failure indication will be reported. serror_count_limit_vin1                                             [15:8]              when number of measurement error on vin1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel0                                  [23:16]            when number of measurement error on vin2_sel0 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
otp1_cmd_wait_flag = h80003070 17 1 h0 RW BIN
; Desc_otp1_cmd_wait_flag error_count_limit_vin0                                             [7:0]                 when number of measurement error on vin0 equals or exceeds this number failure indication will be reported. serror_count_limit_vin1                                             [15:8]              when number of measurement error on vin1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel0                                  [23:16]            when number of measurement error on vin2_sel0 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
otp1_cmd_rd_q = h80003070 18 1 h0 RW BIN
; Desc_otp1_cmd_rd_q error_count_limit_vin0                                             [7:0]                 when number of measurement error on vin0 equals or exceeds this number failure indication will be reported. serror_count_limit_vin1                                             [15:8]              when number of measurement error on vin1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel0                                  [23:16]            when number of measurement error on vin2_sel0 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
otp1_cmd_last = h80003070 19 1 h0 RW BIN
; Desc_otp1_cmd_last error_count_limit_vin0                                             [7:0]                 when number of measurement error on vin0 equals or exceeds this number failure indication will be reported. serror_count_limit_vin1                                             [15:8]              when number of measurement error on vin1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel0                                  [23:16]            when number of measurement error on vin2_sel0 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER otp2_config_reg Address h8000308c
_otp2_config_reg = 2147496076 0 22 b00000000000010010000000000000010 RW
otp2_clock_en = h8000308c 0 1 h0 RW BIN
; Desc_otp2_clock_en error_count_limit_vin9                                  [7:0]                when number of measurement error on vin9 equals or exceeds this number failure indication will be reported. serror_count_limit_vin10                                [15:8]              when number of measurement error on vin10 equals or exceeds this number failure indication will be reported. serror_count_limit_vin11                                [23:16]            when number of measurement error on vin11 equals or exceeds this number failure indication will be reported. sMagic_number                                                [27:24]              Default value – identical for all registerssParity                                                                 [31:28]               Parity calculation on bits[27:0] 
otp2_power_down = h8000308c 1 1 h1 RW BIN
; Desc_otp2_power_down error_count_limit_vin9                                  [7:0]                when number of measurement error on vin9 equals or exceeds this number failure indication will be reported. serror_count_limit_vin10                                [15:8]              when number of measurement error on vin10 equals or exceeds this number failure indication will be reported. serror_count_limit_vin11                                [23:16]            when number of measurement error on vin11 equals or exceeds this number failure indication will be reported. sMagic_number                                                [27:24]              Default value – identical for all registerssParity                                                                 [31:28]               Parity calculation on bits[27:0] 
otp2_agg_pgm_status_clr = h8000308c 3 1 h0 RW BIN
; Desc_otp2_agg_pgm_status_clr error_count_limit_vin9                                  [7:0]                when number of measurement error on vin9 equals or exceeds this number failure indication will be reported. serror_count_limit_vin10                                [15:8]              when number of measurement error on vin10 equals or exceeds this number failure indication will be reported. serror_count_limit_vin11                                [23:16]            when number of measurement error on vin11 equals or exceeds this number failure indication will be reported. sMagic_number                                                [27:24]              Default value – identical for all registerssParity                                                                 [31:28]               Parity calculation on bits[27:0] 
otp2_o_sel = h8000308c 4 1 h0 RW BIN
; Desc_otp2_o_sel error_count_limit_vin9                                  [7:0]                when number of measurement error on vin9 equals or exceeds this number failure indication will be reported. serror_count_limit_vin10                                [15:8]              when number of measurement error on vin10 equals or exceeds this number failure indication will be reported. serror_count_limit_vin11                                [23:16]            when number of measurement error on vin11 equals or exceeds this number failure indication will be reported. sMagic_number                                                [27:24]              Default value – identical for all registerssParity                                                                 [31:28]               Parity calculation on bits[27:0] 
otp2_o_dctrl = h8000308c 5 1 h0 RW BIN
; Desc_otp2_o_dctrl error_count_limit_vin9                                  [7:0]                when number of measurement error on vin9 equals or exceeds this number failure indication will be reported. serror_count_limit_vin10                                [15:8]              when number of measurement error on vin10 equals or exceeds this number failure indication will be reported. serror_count_limit_vin11                                [23:16]            when number of measurement error on vin11 equals or exceeds this number failure indication will be reported. sMagic_number                                                [27:24]              Default value – identical for all registerssParity                                                                 [31:28]               Parity calculation on bits[27:0] 
otp2_mips_rd_addr = h8000308c 6 10 h0 RW HEX
; Desc_otp2_mips_rd_addr error_count_limit_vin9                                  [7:0]                when number of measurement error on vin9 equals or exceeds this number failure indication will be reported. serror_count_limit_vin10                                [15:8]              when number of measurement error on vin10 equals or exceeds this number failure indication will be reported. serror_count_limit_vin11                                [23:16]            when number of measurement error on vin11 equals or exceeds this number failure indication will be reported. sMagic_number                                                [27:24]              Default value – identical for all registerssParity                                                                 [31:28]               Parity calculation on bits[27:0] 
otp2_divide_ratio = h8000308c 16 4 h9 RW HEX
; Desc_otp2_divide_ratio error_count_limit_vin9                                  [7:0]                when number of measurement error on vin9 equals or exceeds this number failure indication will be reported. serror_count_limit_vin10                                [15:8]              when number of measurement error on vin10 equals or exceeds this number failure indication will be reported. serror_count_limit_vin11                                [23:16]            when number of measurement error on vin11 equals or exceeds this number failure indication will be reported. sMagic_number                                                [27:24]              Default value – identical for all registerssParity                                                                 [31:28]               Parity calculation on bits[27:0] 
otp2_test_chain_select = h8000308c 20 2 h0 RW HEX
; Desc_otp2_test_chain_select error_count_limit_vin9                                  [7:0]                when number of measurement error on vin9 equals or exceeds this number failure indication will be reported. serror_count_limit_vin10                                [15:8]              when number of measurement error on vin10 equals or exceeds this number failure indication will be reported. serror_count_limit_vin11                                [23:16]            when number of measurement error on vin11 equals or exceeds this number failure indication will be reported. sMagic_number                                                [27:24]              Default value – identical for all registerssParity                                                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER otp2_cmd_reg Address h80003090
_otp2_cmd_reg = 2147496080 0 20 b00000000000000000000000000000000 RW
otp2_cmd_data_wr = h80003090 0 8 h0 RW HEX
; Desc_otp2_cmd_data_wr error_count_limit_vin12                                  [7:0]                when number of measurement error on vin12 equals or exceeds this number failure indication will be reported. serror_count_limit_vin13                                [15:8]              when number of measurement error on vin13 equals or exceeds this number failure indication will be reported. serror_count_limit_vin14                                [23:16]            when number of measurement error on vin14 equals or exceeds this number failure indication will be reported. sMagic_number                                                [27:24]              Default value – identical for all registerssParity                                                                 [31:28]               Parity calculation on bits[27:0] 
otp2_cmd_timer = h80003090 8 8 h0 RW HEX
; Desc_otp2_cmd_timer error_count_limit_vin12                                  [7:0]                when number of measurement error on vin12 equals or exceeds this number failure indication will be reported. serror_count_limit_vin13                                [15:8]              when number of measurement error on vin13 equals or exceeds this number failure indication will be reported. serror_count_limit_vin14                                [23:16]            when number of measurement error on vin14 equals or exceeds this number failure indication will be reported. sMagic_number                                                [27:24]              Default value – identical for all registerssParity                                                                 [31:28]               Parity calculation on bits[27:0] 
otp2_cmd_pgm = h80003090 16 1 h0 RW BIN
; Desc_otp2_cmd_pgm error_count_limit_vin12                                  [7:0]                when number of measurement error on vin12 equals or exceeds this number failure indication will be reported. serror_count_limit_vin13                                [15:8]              when number of measurement error on vin13 equals or exceeds this number failure indication will be reported. serror_count_limit_vin14                                [23:16]            when number of measurement error on vin14 equals or exceeds this number failure indication will be reported. sMagic_number                                                [27:24]              Default value – identical for all registerssParity                                                                 [31:28]               Parity calculation on bits[27:0] 
otp2_cmd_wait_flag = h80003090 17 1 h0 RW BIN
; Desc_otp2_cmd_wait_flag error_count_limit_vin12                                  [7:0]                when number of measurement error on vin12 equals or exceeds this number failure indication will be reported. serror_count_limit_vin13                                [15:8]              when number of measurement error on vin13 equals or exceeds this number failure indication will be reported. serror_count_limit_vin14                                [23:16]            when number of measurement error on vin14 equals or exceeds this number failure indication will be reported. sMagic_number                                                [27:24]              Default value – identical for all registerssParity                                                                 [31:28]               Parity calculation on bits[27:0] 
otp2_cmd_rd_q = h80003090 18 1 h0 RW BIN
; Desc_otp2_cmd_rd_q error_count_limit_vin12                                  [7:0]                when number of measurement error on vin12 equals or exceeds this number failure indication will be reported. serror_count_limit_vin13                                [15:8]              when number of measurement error on vin13 equals or exceeds this number failure indication will be reported. serror_count_limit_vin14                                [23:16]            when number of measurement error on vin14 equals or exceeds this number failure indication will be reported. sMagic_number                                                [27:24]              Default value – identical for all registerssParity                                                                 [31:28]               Parity calculation on bits[27:0] 
otp2_cmd_last = h80003090 19 1 h0 RW BIN
; Desc_otp2_cmd_last error_count_limit_vin12                                  [7:0]                when number of measurement error on vin12 equals or exceeds this number failure indication will be reported. serror_count_limit_vin13                                [15:8]              when number of measurement error on vin13 equals or exceeds this number failure indication will be reported. serror_count_limit_vin14                                [23:16]            when number of measurement error on vin14 equals or exceeds this number failure indication will be reported. sMagic_number                                                [27:24]              Default value – identical for all registerssParity                                                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER otp3_config_reg Address h8000310c
_otp3_config_reg = 2147496204 0 22 b00000000000010010000000000000010 RW
otp3_clock_en = h8000310c 0 1 h0 RW BIN
; Desc_otp3_clock_en K3                                                          [17:0]                K3 + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 
otp3_power_down = h8000310c 1 1 h1 RW BIN
; Desc_otp3_power_down K3                                                          [17:0]                K3 + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 
otp3_agg_pgm_status_clr = h8000310c 3 1 h0 RW BIN
; Desc_otp3_agg_pgm_status_clr K3                                                          [17:0]                K3 + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 
otp3_o_sel = h8000310c 4 1 h0 RW BIN
; Desc_otp3_o_sel K3                                                          [17:0]                K3 + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 
otp3_o_dctrl = h8000310c 5 1 h0 RW BIN
; Desc_otp3_o_dctrl K3                                                          [17:0]                K3 + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 
otp3_mips_rd_addr = h8000310c 6 10 h0 RW HEX
; Desc_otp3_mips_rd_addr K3                                                          [17:0]                K3 + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 
otp3_divide_ratio = h8000310c 16 4 h9 RW HEX
; Desc_otp3_divide_ratio K3                                                          [17:0]                K3 + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 
otp3_test_chain_select = h8000310c 20 2 h0 RW HEX
; Desc_otp3_test_chain_select K3                                                          [17:0]                K3 + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 



; REGISTER otp3_cmd_reg Address h80003110
_otp3_cmd_reg = 2147496208 0 20 b00000000000000000000000000000000 RW
otp3_cmd_data_wr = h80003110 0 8 h0 RW HEX
; Desc_otp3_cmd_data_wr N0                                                         [17:0]                N0 + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 
otp3_cmd_timer = h80003110 8 8 h0 RW HEX
; Desc_otp3_cmd_timer N0                                                         [17:0]                N0 + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 
otp3_cmd_pgm = h80003110 16 1 h0 RW BIN
; Desc_otp3_cmd_pgm N0                                                         [17:0]                N0 + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 
otp3_cmd_wait_flag = h80003110 17 1 h0 RW BIN
; Desc_otp3_cmd_wait_flag N0                                                         [17:0]                N0 + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 
otp3_cmd_rd_q = h80003110 18 1 h0 RW BIN
; Desc_otp3_cmd_rd_q N0                                                         [17:0]                N0 + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 
otp3_cmd_last = h80003110 19 1 h0 RW BIN
; Desc_otp3_cmd_last N0                                                         [17:0]                N0 + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 



; REGISTER efuse_ps_data_reg Address h80003128
_efuse_ps_data_reg = 2147496232 0 32 b00000000000000000000000000000000 RW
efuse_ps_data = h80003128 0 32 h0 RW HEX
; Desc_efuse_ps_data CRC calculated on bits [31:8]



; REGISTER efuse_ps_reg Address h8000312c
_efuse_ps_reg = 2147496236 0 2 b00000000000000000000000000000000 RW
efuse_ps_from_reg = h8000312c 0 1 h0 RW BIN
; Desc_efuse_ps_from_reg CRC calculated on bits [31:8]
efuse_ps_reserved = h8000312c 1 1 h0 RW BIN
; Desc_efuse_ps_reserved CRC calculated on bits [31:8]



; REGISTER efuse_int_mask_reg Address h8000313c
_efuse_int_mask_reg = 2147496252 0 2 b00000000000000000000000000000011 RW
rd_access_wrong_controls_mask = h8000313c 0 1 h1 RW BIN
; Desc_rd_access_wrong_controls_mask CRC calculated on bits [31:8]
wr_access_wrong_controls_mask = h8000313c 1 1 h1 RW BIN
; Desc_wr_access_wrong_controls_mask CRC calculated on bits [31:8]



; REGISTER MemPwrCtrl_control_reg Address h80003140
_MemPwrCtrl_control_reg = 2147496256 0 3 b00000000000000000000000000000000 RW
MemPwrCtrl_cfg_enable = h80003140 0 1 h0 RW BIN
; Desc_MemPwrCtrl_cfg_enable CRC calculated on bits [31:8]
MemPwrCtrl_cfg_ls_ds_sel = h80003140 1 1 h0 RW BIN
; Desc_MemPwrCtrl_cfg_ls_ds_sel CRC calculated on bits [31:8]
MemPwrCtrl_cfg_ocp_mem_dyn_pwr = h80003140 2 1 h0 RW BIN
; Desc_MemPwrCtrl_cfg_ocp_mem_dyn_pwr CRC calculated on bits [31:8]



; REGISTER MemPwrCtrl_cpu_wake_up_stall_reg Address h80003144
_MemPwrCtrl_cpu_wake_up_stall_reg = 2147496260 0 6 b00000000000000000000000000110001 RW
MemPwrCtrl_cfg_cpu_wake_up_stall = h80003144 0 6 h31 RW HEX
; Desc_MemPwrCtrl_cfg_cpu_wake_up_stall CRC calculated on bits [31:8]



; REGISTER MemPwrCtrl_mem_sleep_stall_reg Address h80003148
_MemPwrCtrl_mem_sleep_stall_reg = 2147496264 0 5 b00000000000000000000000000001001 RW
MemPwrCtrl_cfg_mem_sleep_stall = h80003148 0 5 h9 RW HEX
; Desc_MemPwrCtrl_cfg_mem_sleep_stall CRC calculated on bits [31:8]



; REGISTER iram_sm_cfg_reg_1 Address h80003150
_iram_sm_cfg_reg_1 = 2147496272 0 32 b11110101000000000000000000001010 RW
iram_sm_cfg1 = h80003150 0 32 hf500000a RW HEX
; Desc_iram_sm_cfg1 CRC calculated on bits [31:8]
iram_wait_oper = h80003150 0 24 ha RW HEX
iram_sm_cfg_reg_1_magic_num = h80003150 24 4 h5 RW HEX
iram_sm_cfg_1_parity = h80003150 28 4 hf RW HEX



; REGISTER iram_sm_cfg_reg_2 Address h80003154
_iram_sm_cfg_reg_2 = 2147496276 0 32 b01010101000000000000000000000000 RW
iram_sm_cfg2 = h80003154 0 32 h55000000 RW HEX
; Desc_iram_sm_cfg2 CRC calculated on bits [31:8]
iram_fix_err_en = h80003154 0 1 h0 RW BIN
iram_fix_err_status_en = h80003154 1 1 h0 RW BIN
iram_cpu_err_inj_en = h80003154 2 1 h0 RW BIN
iram_cpu_err_inj_type = h80003154 3 1 h0 RW BIN
iram_sm_cfg_reg_2_magic_num = h80003154 24 4 h5 RW HEX
iram_sm_cfg_2_parity = h80003154 28 4 h5 RW HEX



; REGISTER iram_sm_cfg_reg_3 Address h80003158
_iram_sm_cfg_reg_3 = 2147496280 0 32 b01010101000000000000000000000000 RW
iram_sm_cfg3 = h80003158 0 32 h55000000 RW HEX
; Desc_iram_sm_cfg3 CRC calculated on bits [31:8]
iram_data_mask[23:0] = h80003158 0 24 h0 RW HEX
iram_sm_cfg_reg_3_magic_num = h80003158 24 4 h5 RW HEX
iram_sm_cfg_3_parity = h80003158 28 4 h5 RW HEX



; REGISTER iram_sm_cfg_reg_4 Address h8000315c
_iram_sm_cfg_reg_4 = 2147496284 0 32 b01010101000000000000000000000000 RW
iram_sm_cfg4 = h8000315c 0 32 h55000000 RW HEX
; Desc_iram_sm_cfg4 CRC calculated on bits [31:8]
iram_data_mask[47:24] = h8000315c 0 24 h0 RW HEX
iram_sm_cfg_reg_4_magic_num = h8000315c 24 4 h5 RW HEX
iram_sm_cfg_4_parity = h8000315c 28 4 h5 RW HEX



; REGISTER iram_sm_cfg_reg_5 Address h80003160
_iram_sm_cfg_reg_5 = 2147496288 0 32 b01010101000000000000000000000000 RW
iram_sm_cfg5 = h80003160 0 32 h55000000 RW HEX
; Desc_iram_sm_cfg5 measurement data ready to be read
iram_data_mask[71:48] = h80003160 0 23 h0 RW HEX
iram_sm_cfg_reg_5_magic_num = h80003160 24 4 h5 RW HEX
iram_sm_cfg_5_parity = h80003160 28 4 h5 RW HEX



; REGISTER iram_sm_cfg_reg_6 Address h80003164
_iram_sm_cfg_reg_6 = 2147496292 0 32 b01010101000000000000000000000000 RW
iram_sm_cfg6 = h80003164 0 32 h55000000 RW HEX
; Desc_iram_sm_cfg6 vm measured voltage is out of the defined limits – either higher or lower
iram_data_mask[79:72] = h80003164 0 7 h0 RW HEX
iram_sm_cfg_reg_6_magic_num = h80003164 24 4 h5 RW HEX
iram_sm_cfg_6_parity = h80003164 28 4 h5 RW HEX



; REGISTER dram_sm_cfg_reg_1 Address h80003174
_dram_sm_cfg_reg_1 = 2147496308 0 32 b11110101000000000000000000001010 RW
dram_sm_cfg1 = h80003174 0 32 hf500000a RW HEX
; Desc_dram_sm_cfg1 Actual number of out_of_limit errors
dram_wait_oper = h80003174 0 24 ha RW HEX
dram_sm_cfg_reg_1_magic_num = h80003174 24 4 h5 RW HEX
dram_sm_cfg_1_parity = h80003174 28 4 hf RW HEX



; REGISTER dram_sm_cfg_reg_2 Address h80003178
_dram_sm_cfg_reg_2 = 2147496312 0 32 b01010101000000000000000000000000 RW
dram_sm_cfg2 = h80003178 0 32 h55000000 RW HEX
; Desc_dram_sm_cfg2 Actual number of out_of_limit errors
dram_cpu_err_inj_en = h80003178 0 1 h0 RW BIN
dram_sm_cfg_reg_2_magic_num = h80003178 24 4 h5 RW HEX
dram_sm_cfg_2_parity = h80003178 28 4 h5 RW HEX



; REGISTER dram_sm_cfg_reg_3 Address h8000317c
_dram_sm_cfg_reg_3 = 2147496316 0 32 b01010101000000000000000000000000 RW
dram_sm_cfg3 = h8000317c 0 32 h55000000 RW HEX
; Desc_dram_sm_cfg3 Actual number of out_of_limit errors
dram_data_mask[23:0] = h8000317c 0 24 h0 RW HEX
dram_sm_cfg_reg_3_magic_num = h8000317c 24 4 h5 RW HEX
dram_sm_cfg_3_parity = h8000317c 28 4 h5 RW HEX



; REGISTER dram_sm_cfg_reg_4 Address h80003180
_dram_sm_cfg_reg_4 = 2147496320 0 32 b01010101000000000000000000000000 RW
dram_sm_cfg4 = h80003180 0 32 h55000000 RW HEX
; Desc_dram_sm_cfg4 Actual number of out_of_limit errors
dram_data_mask[47:24] = h80003180 0 24 h0 RW HEX
dram_sm_cfg_reg_4_magic_num = h80003180 24 4 h5 RW HEX
dram_sm_cfg_4_parity = h80003180 28 4 h5 RW HEX



; REGISTER dram_sm_cfg_reg_5 Address h80003184
_dram_sm_cfg_reg_5 = 2147496324 0 32 b01010101000000000000000000000000 RW
dram_sm_cfg5 = h80003184 0 32 h55000000 RW HEX
; Desc_dram_sm_cfg5 Actual number of out_of_limit errors
dram_data_mask[64:48] = h80003184 0 17 h0 RW HEX
dram_sm_cfg_reg_5_magic_num = h80003184 24 4 h5 RW HEX
dram_sm_cfg_5_parity = h80003184 28 4 h5 RW HEX



; REGISTER acmp0_acmp_wait_oper_reg Address h80003200
_acmp0_acmp_wait_oper_reg = 2147496448 0 32 b11110101000000000000000000001010 RW
acmp0_acmp_wait_oper = h80003200 0 32 hf500000a RW HEX
; Desc_acmp0_acmp_wait_oper Actual number of out_of_limit errors
acmp0_acmp_wait_oper_pms = h80003200 0 24 ha RW HEX
acmp0_magic_number = h80003200 24 4 h5 RW HEX
acmp0_parity = h80003200 28 4 hf RW HEX



; REGISTER acmp0_fusa_acmp_mask_reg Address h80003204
_acmp0_fusa_acmp_mask_reg = 2147496452 0 32 b01010101000000000000000000000000 RW
acmp0_fusa_acmp_mask = h80003204 0 32 h55000000 RW HEX
; Desc_acmp0_fusa_acmp_mask Actual number of out_of_limit errors
acmp0_fusa_acmp_mask_pms = h80003204 0 24 h0 RW HEX
acmp0_magic_number = h80003204 24 4 h5 RW HEX
acmp0_parity = h80003204 28 4 h5 RW HEX



; REGISTER acmp0_addr_heder_u_reg Address h80003208
_acmp0_addr_heder_u_reg = 2147496456 0 8 b00000000000000000000000010101000 RW
acmp0_addr_heder_u = h80003208 0 7 h28 RW HEX
; Desc_acmp0_addr_heder_u Actual number of out_of_limit errors
acmp0_addr_heder_u_en = h80003208 7 1 h1 RW BIN
; Desc_acmp0_addr_heder_u_en Actual number of out_of_limit errors



; REGISTER acmp0_addr_heder_b_reg Address h8000320c
_acmp0_addr_heder_b_reg = 2147496460 0 8 b00000000000000000000000000100000 RW
acmp0_addr_heder_b = h8000320c 0 7 h20 RW HEX
; Desc_acmp0_addr_heder_b When active – the configuration register x, fail to meet the safety requiremenvm
acmp0_addr_heder_b_en = h8000320c 7 1 h0 RW BIN
; Desc_acmp0_addr_heder_b_en When active – the configuration register x, fail to meet the safety requiremenvm



; REGISTER acmp0_int_acmp_mask_reg Address h80003210
_acmp0_int_acmp_mask_reg = 2147496464 0 32 b00000000000000000000000000000000 RW
acmp0_int_acmp_mask = h80003210 0 32 h0 RW HEX
; Desc_acmp0_int_acmp_mask When active – the configuration register x, fail to meet the safety requiremenvm



; REGISTER acmp0_uni_set_mc_val_reg Address h80003224
_acmp0_uni_set_mc_val_reg = 2147496484 0 3 b00000000000000000000000000000000 RW
acmp0_uni_set_mc_val = h80003224 0 3 h0 RW HEX
; Desc_acmp0_uni_set_mc_val functional comperator results for internal voltage measurements    [1]      vm_GT_high_limits    [0]      vm_LT_low_limit



; REGISTER acmp0_brod_set_mc_val_reg Address h80003228
_acmp0_brod_set_mc_val_reg = 2147496488 0 3 b00000000000000000000000000000000 RW
acmp0_brod_set_mc_val = h80003228 0 3 h0 RW HEX
; Desc_acmp0_brod_set_mc_val func_measurement_count               [15:0]                number of measurement done - counts all the meaurements done when the VMU is in functional safety mode



; REGISTER acmp0_acmd_offset_reg Address h80003230
_acmp0_acmd_offset_reg = 2147496496 0 16 b00000000000000001001000000000101 RW
acmp0_acmd_offset = h80003230 0 16 h9005 RW HEX
; Desc_acmp0_acmd_offset vm_data_error_gen                                                      [11:0]                  each bit set in this field will invert the corresponding bit in the vm_data to cause intentional error  sReserved                                                                         [22:12]svm_rdy_error_gen                                                        [23]                     setting this bit will set the vm_rdy to 1'b0 - for error and timeout testssMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER acmp1_acmp_wait_oper_reg Address h80003300
_acmp1_acmp_wait_oper_reg = 2147496704 0 32 b11110101000000000000000000001010 RW
acmp1_acmp_wait_oper = h80003300 0 32 hf500000a RW HEX
; Desc_acmp1_acmp_wait_oper time gap between adjacent measurementssmeasurement period     [22:0]              Defines number of clocks periods between temperature measurement – the actual period depend on the selected s                                                                          clock frequencysuse_mpr                               [23]                 Use measurement period register s                                                                          1’b0 – measurements will be done at the maximum possible rate – once one measurement is done (on both TS) and values are sampled, a new measurement will be initiateds                                                                          1’b1 – measurement will be done at the rate specified by the measurement period fields                                                                          For example - measurement period = 23’h7D00 means 32000 / 2Mhz = 16 msecsMagic_number                  [27:24]           Default value – identical for all registerssParity                                     [31:28]           Parity calculation on bits[27:0] 
acmp1_acmp_wait_oper_pms = h80003300 0 24 ha RW HEX
acmp1_magic_number = h80003300 24 4 h5 RW HEX
acmp1_parity = h80003300 28 4 hf RW HEX



; REGISTER acmp1_fusa_acmp_mask_reg Address h80003304
_acmp1_fusa_acmp_mask_reg = 2147496708 0 32 b01010101000000000000000000000000 RW
acmp1_fusa_acmp_mask = h80003304 0 32 h55000000 RW HEX
; Desc_acmp1_fusa_acmp_mask short_self_test_high_limit1       [11:0]                  When manual short self-test is selected this value is used as high_limit1sshort_self_test_low_limit1        [23:12]                When manual short self-test is selected this value is used as low_limit1sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 
acmp1_fusa_acmp_mask_pms = h80003304 0 24 h0 RW HEX
acmp1_magic_number = h80003304 24 4 h5 RW HEX
acmp1_parity = h80003304 28 4 h5 RW HEX



; REGISTER acmp1_addr_heder_u_reg Address h80003308
_acmp1_addr_heder_u_reg = 2147496712 0 8 b00000000000000000000000010101000 RW
acmp1_addr_heder_u = h80003308 0 7 h28 RW HEX
; Desc_acmp1_addr_heder_u ts_short_self_test_high_limit3s         [11:0]                When manual short self-test is selected this value is used as high_limit3sts_short_self_test_low_limit3           [23:12]             When manual short self-test is selected this value is used as low_limit3sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
acmp1_addr_heder_u_en = h80003308 7 1 h1 RW BIN
; Desc_acmp1_addr_heder_u_en ts_short_self_test_high_limit3s         [11:0]                When manual short self-test is selected this value is used as high_limit3sts_short_self_test_low_limit3           [23:12]             When manual short self-test is selected this value is used as low_limit3sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 



; REGISTER acmp1_addr_heder_b_reg Address h8000330c
_acmp1_addr_heder_b_reg = 2147496716 0 8 b00000000000000000000000000100000 RW
acmp1_addr_heder_b = h8000330c 0 7 h20 RW HEX
; Desc_acmp1_addr_heder_b ts_short_self_test_forced_ts0_value2             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssts_short_self_test_forced_ts1_value2             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
acmp1_addr_heder_b_en = h8000330c 7 1 h0 RW BIN
; Desc_acmp1_addr_heder_b_en ts_short_self_test_forced_ts0_value2             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssts_short_self_test_forced_ts1_value2             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 



; REGISTER acmp1_int_acmp_mask_reg Address h80003310
_acmp1_int_acmp_mask_reg = 2147496720 0 32 b00000000000000000000000000000000 RW
acmp1_int_acmp_mask = h80003310 0 32 h0 RW HEX
; Desc_acmp1_int_acmp_mask ts_short_self_test1_allowed_diff1               [11:0]                      When manual short self-test is selected this value is used for comparison against the obtained difference between the forced valuessts_short_self_test1_allowed_diff2               [23:12]                    When manual short self-test is selected this value is used for comparison against the obtained difference between the forced valuessMagic_number                                        [27:24]                   Default value – identical for all registerssParity                                                           [31:28]                  Parity calculation on bits[27:0] 



; REGISTER acmp1_uni_set_mc_val_reg Address h80003324
_acmp1_uni_set_mc_val_reg = 2147496740 0 3 b00000000000000000000000000000000 RW
acmp1_uni_set_mc_val = h80003324 0 3 h0 RW HEX
; Desc_acmp1_uni_set_mc_val ts_func_ts0_high_limit                                                    [11:0]                 The highest temperature value allowed. higher temperature will result in an error indicationsts_func_ts0_low_limit                                                     [23:12]               The lowest temperature value allowed. lower temperature will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER acmp1_brod_set_mc_val_reg Address h80003328
_acmp1_brod_set_mc_val_reg = 2147496744 0 3 b00000000000000000000000000000000 RW
acmp1_brod_set_mc_val = h80003328 0 3 h0 RW HEX
; Desc_acmp1_brod_set_mc_val ts_func_ts1_high_limit                                                    [11:0]                The highest temperature value allowed. higher temperature will result in an error indication sts_func_ts1_low_limit                                                     [23:12]              The lowest temperature value allowed. lower temperature will result in an error indication sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]              Parity calculation on bits[27:0] 



; REGISTER acmp1_acmd_offset_reg Address h80003330
_acmp1_acmd_offset_reg = 2147496752 0 16 b00000000000000001001000000000101 RW
acmp1_acmd_offset = h80003330 0 16 h9005 RW HEX
; Desc_acmp1_acmd_offset error_limit                                                                      [4:0]                  error threshold - if numb er of accumalated error equal or exceed the threshold - error indication will be raisedsReserved                                                                         [23:5]sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER i2c1_i2c_sl_mode_reg Address h80003404
_i2c1_i2c_sl_mode_reg = 2147496964 0 21 b00000000000101010000001011111010 RW
i2c1_i2c_sl_data_su_time = h80003404 0 8 hfa RW HEX
; Desc_i2c1_i2c_sl_data_su_time tsu_wait_oper                                                                [23:0]                defines # of clocks before funtional safety enters functional mode  sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                              [31:28]               Parity calculation on bits[27:0] 
i2c1_i2c_sl_bypass_addr = h80003404 9 1 h1 RW BIN
; Desc_i2c1_i2c_sl_bypass_addr tsu_wait_oper                                                                [23:0]                defines # of clocks before funtional safety enters functional mode  sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                              [31:28]               Parity calculation on bits[27:0] 
i2c1_i2c_sl_bypass_rx_fifo = h80003404 10 1 h0 RW BIN
; Desc_i2c1_i2c_sl_bypass_rx_fifo tsu_wait_oper                                                                [23:0]                defines # of clocks before funtional safety enters functional mode  sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                              [31:28]               Parity calculation on bits[27:0] 
i2c1_i2c_sl_addr = h80003404 13 7 h28 RW HEX
; Desc_i2c1_i2c_sl_addr tsu_wait_oper                                                                [23:0]                defines # of clocks before funtional safety enters functional mode  sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                              [31:28]               Parity calculation on bits[27:0] 
i2c1_i2c_sl_acmp_mode = h80003404 20 1 h1 RW BIN
; Desc_i2c1_i2c_sl_acmp_mode tsu_wait_oper                                                                [23:0]                defines # of clocks before funtional safety enters functional mode  sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                              [31:28]               Parity calculation on bits[27:0] 



; REGISTER i2c1_i2c_sl_control_reg Address h8000340c
_i2c1_i2c_sl_control_reg = 2147496972 0 20 b00000000000000000000000000000000 RW
i2c1_i2c_sl_tx_data = h8000340c 0 8 h0 RW HEX
; Desc_i2c1_i2c_sl_tx_data ts0_A_calibration                             [17:0]                Acalibration + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 
i2c1_i2c_sl_tx_done = h8000340c 8 1 h0 RW BIN
; Desc_i2c1_i2c_sl_tx_done ts0_A_calibration                             [17:0]                Acalibration + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 
i2c1_i2c_sl_rx_done = h8000340c 12 1 h0 RW BIN
; Desc_i2c1_i2c_sl_rx_done ts0_A_calibration                             [17:0]                Acalibration + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 
i2c1_i2c_sl_rx_ack = h8000340c 13 1 h0 RW BIN
; Desc_i2c1_i2c_sl_rx_ack ts0_A_calibration                             [17:0]                Acalibration + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 
i2c1_i2c_sl_addr_done = h8000340c 16 1 h0 RW BIN
; Desc_i2c1_i2c_sl_addr_done ts0_A_calibration                             [17:0]                Acalibration + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 
i2c1_i2c_sl_addr_ack = h8000340c 17 1 h0 RW BIN
; Desc_i2c1_i2c_sl_addr_ack ts0_A_calibration                             [17:0]                Acalibration + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 
i2c1_i2c_sl_rx_fifo_clear = h8000340c 18 1 h0 RW BIN
; Desc_i2c1_i2c_sl_rx_fifo_clear ts0_A_calibration                             [17:0]                Acalibration + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 
i2c1_i2c_sl_tx_fifo_clear = h8000340c 19 1 h0 RW BIN
; Desc_i2c1_i2c_sl_tx_fifo_clear ts0_A_calibration                             [17:0]                Acalibration + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 



; REGISTER i2c1_i2c_sl_wd_max_cnt_reg Address h80003414
_i2c1_i2c_sl_wd_max_cnt_reg = 2147496980 0 28 b00000000000000111101000010010000 RW
i2c1_i2c_sl_wd_max_cnt = h80003414 0 28 h3d090 RW HEX
; Desc_i2c1_i2c_sl_wd_max_cnt ts0_B_calibration                             [17:0]                Bcalibration + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 



; REGISTER i2c1_i2c_slave_int_mask_reg Address h80003418
_i2c1_i2c_slave_int_mask_reg = 2147496984 0 4 b00000000000000000000000000000000 RW
i2c1_i2c_slave_int_mask = h80003418 0 4 h0 RW HEX
; Desc_i2c1_i2c_slave_int_mask ts1_A_calibration                             [17:0]                Acalibration + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 



; REGISTER spi_msg_fifo_cfg Address h80003508
_spi_msg_fifo_cfg = 2147497224 0 32 b00000000000000000000000000000000 RW
spi_rif_mux_sel_rx = h80003508 0 1 h0 RW BIN
; Desc_spi_rif_mux_sel_rx Actual number of out_of_limit errors
spi_rif_mux_sel_tx = h80003508 1 1 h0 RW BIN
; Desc_spi_rif_mux_sel_tx Actual number of out_of_limit errors



; REGISTER spi_slave_cfg Address h8000350c
_spi_slave_cfg = 2147497228 0 32 b00000000000001100000000000000000 RW
loopback = h8000350c 0 1 h0 RW BIN
; Desc_loopback Ts0 comparison result against high limits              1’b0 – temperature is less or equal than high limits              1’b1 -  temperature is higher than high limit
sample_cycle = h8000350c 1 8 h0 RW HEX
; Desc_sample_cycle Ts0 comparison result against high limits              1’b0 – temperature is less or equal than high limits              1’b1 -  temperature is higher than high limit
transmit_cycle = h8000350c 9 8 h0 RW HEX
; Desc_transmit_cycle Ts0 comparison result against high limits              1’b0 – temperature is less or equal than high limits              1’b1 -  temperature is higher than high limit
sdi_sample_sel = h8000350c 17 2 h3 RW HEX
; Desc_sdi_sample_sel Ts0 comparison result against high limits              1’b0 – temperature is less or equal than high limits              1’b1 -  temperature is higher than high limit



; REGISTER mem_cfg Address h80003510
_mem_cfg = 2147497232 0 32 b00000000000000000000000000000000 RW
cfg_ram_ls = h80003510 0 2 h0 RW HEX
; Desc_cfg_ram_ls When active – the configuration register x, fail to meet the safety requirements
cfg_ram_ds = h80003510 2 2 h0 RW HEX
; Desc_cfg_ram_ds When active – the configuration register x, fail to meet the safety requirements
cfg_ram_sd = h80003510 4 2 h0 RW HEX
; Desc_cfg_ram_sd When active – the configuration register x, fail to meet the safety requirements



; REGISTER host_cfg Address h80003514
_host_cfg = 2147497236 0 32 b00000000000000000000000000000000 RW
rx_msg_fifo_host_en = h80003514 0 1 h0 RW BIN
; Desc_rx_msg_fifo_host_en When active – the configuration register x, fail to meet the safety requirements
tx_msg_fifo_host_en = h80003514 1 1 h0 RW BIN
; Desc_tx_msg_fifo_host_en When active – the configuration register x, fail to meet the safety requirements



; REGISTER soc_cfg Address h80003518
_soc_cfg = 2147497240 0 32 b00000000000000000000000000000000 RW
rx_msg_fifo_soc_en = h80003518 0 1 h0 RW BIN
; Desc_rx_msg_fifo_soc_en short_self_test_comperator results per self_test steps    [0]      ts0_GT_high_limit step 1s    [1]      ts0_LT_low_limit step 1s    [2]      ts1_GT_high_limit step 1s    [3]     ts1_LT_low_limit step 1s    [4]     diff_GT_high_limit step 1
tx_msg_fifo_soc_en = h80003518 1 1 h0 RW BIN
; Desc_tx_msg_fifo_soc_en short_self_test_comperator results per self_test steps    [0]      ts0_GT_high_limit step 1s    [1]      ts0_LT_low_limit step 1s    [2]      ts1_GT_high_limit step 1s    [3]     ts1_LT_low_limit step 1s    [4]     diff_GT_high_limit step 1



; REGISTER rx_spi_msg_int_mask_reg Address h8000352c
_rx_spi_msg_int_mask_reg = 2147497260 0 32 b00000000000000000000000000000000 RW
rx_spi_msg_int_mask = h8000352c 0 6 h0 RW HEX
; Desc_rx_spi_msg_int_mask short_self_test_comperator results per self_test steps    [0]      ts0_GT_high_limit step 5s    [1]      ts0_LT_low_limit step 5s    [2]      ts1_GT_high_limit step 5s    [3]     ts1_LT_low_limit step 5s    [4]     diff_GT_high_limit step 5
rx_msg_fifo_overflow = h8000352c 0 1 h0 RW BIN
rx_msg_fifo_underflow = h8000352c 1 1 h0 RW BIN
rx_msg_fifo_full = h8000352c 2 1 h0 RW BIN
rx_msg_fifo_empty = h8000352c 3 1 h0 RW BIN
rx_msg_rd_rdy = h8000352c 4 1 h0 RW BIN
rx_msg_wr_rdy = h8000352c 5 1 h0 RW BIN



; REGISTER tx_spi_msg_int_mask_reg Address h80003538
_tx_spi_msg_int_mask_reg = 2147497272 0 32 b00000000000000000000000000000000 RW
tx_spi_msg_int_mask = h80003538 0 6 h0 RW HEX
; Desc_tx_spi_msg_int_mask ts0_data_error_gen                                                      [11:0]                  each bit set in this field will invert the corresponding bit in the ts0_data to cause intentional error  sReserved                                                                         [22:12]sts0_rdy_error_gen                                                        [23]                     setting this bit will set the ts0_rdy to 1'b0 - for error and timeout testssMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
tx_msg_fifo_overflow = h80003538 0 1 h0 RW BIN
tx_msg_fifo_underflow = h80003538 1 1 h0 RW BIN
tx_msg_fifo_full = h80003538 2 1 h0 RW BIN
tx_msg_fifo_empty = h80003538 3 1 h0 RW BIN
tx_msg_rd_rdy = h80003538 4 1 h0 RW BIN
tx_msg_wr_rdy = h80003538 5 1 h0 RW BIN



; REGISTER vmu_initial_seq_id_1_register Address h80003600
_vmu_initial_seq_id_1_register = 2147497472 0 32 b01010101000000000000000000000000 RW
vmu_initial_seq_id_1 = h80003600 0 32 h55000000 RW HEX
; Desc_vmu_initial_seq_id_1 ts1_data_error_gen                                                      [11:0]                  each bit set in this field will invert the corresponding bit in the ts1_data to cause intentional error  sReserved                                                                         [22:12]sts1_rdy_error_gen                                                        [23]                     setting this bit will set the ts1_rdy to 1'b0 - for error and timeout testssMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
vmu_initial_seq_id_internal = h80003600 0 8 h0 RW HEX
vmu_initial_seq_id_an_vm0 = h80003600 8 8 h0 RW HEX
vmu_initial_seq_id_an_vm1_sel0 = h80003600 16 8 h0 RW HEX
vmu_magic_number = h80003600 24 4 h5 RW HEX
vmu_parity = h80003600 28 4 h5 RW HEX



; REGISTER vmu_initial_seq_id_2_register Address h80003604
_vmu_initial_seq_id_2_register = 2147497476 0 32 b01010101000000000000000000000000 RW
vmu_initial_seq_id_2 = h80003604 0 32 h55000000 RW HEX
; Desc_vmu_initial_seq_id_2 ts1 data output value sampled at rdy
vmu_initial_seq_id_an_vm1_sel1 = h80003604 0 8 h0 RW HEX
vmu_initial_seq_id_an_vm1_sel2 = h80003604 8 8 h0 RW HEX
vmu_initial_seq_id_an_vm1_sel3 = h80003604 16 8 h0 RW HEX
vmu_magic_number = h80003604 24 4 h5 RW HEX
vmu_parity = h80003604 28 4 h5 RW HEX



; REGISTER vmu_initial_seq_id_3_register Address h80003608
_vmu_initial_seq_id_3_register = 2147497480 0 32 b01010101000000000000000000000000 RW
vmu_initial_seq_id_3 = h80003608 0 32 h55000000 RW HEX
; Desc_vmu_initial_seq_id_3 Fetch Pacer enable
vmu_initial_seq_id_an_vm2 = h80003608 0 8 h0 RW HEX
vmu_initial_seq_id_an_vm3 = h80003608 8 8 h0 RW HEX
vmu_initial_seq_id_an_vm4 = h80003608 16 8 h0 RW HEX
vmu_magic_number = h80003608 24 4 h5 RW HEX
vmu_parity = h80003608 28 4 h5 RW HEX



; REGISTER vmu_initial_seq_id_4_register Address h8000360c
_vmu_initial_seq_id_4_register = 2147497484 0 32 b01010101000000000000000000000000 RW
vmu_initial_seq_id_4 = h8000360c 0 32 h55000000 RW HEX
; Desc_vmu_initial_seq_id_4 Fetch Pacer Gear configuration                   DL: 0x3,        UL: 0x0
vmu_initial_seq_id_an_vm7 = h8000360c 0 8 h0 RW HEX
vmu_initial_seq_id_an_vm6 = h8000360c 8 8 h0 RW HEX
vmu_initial_seq_id_an_vm5 = h8000360c 16 8 h0 RW HEX
vmu_magic_number = h8000360c 24 4 h5 RW HEX
vmu_parity = h8000360c 28 4 h5 RW HEX



; REGISTER vmu_vmc_control_register Address h80003610
_vmu_vmc_control_register = 2147497488 0 32 b01000101000000000000000000010000 RW
vmu_vmc_control = h80003610 0 32 h45000010 RW HEX
; Desc_vmu_vmc_control Fetch Pacer Bperiod per cycle.                    DL: 0x4000, UL: 0x00A4
vmu_pd = h80003610 0 1 h0 RW BIN
vmu_S_L_St = h80003610 1 1 h0 RW BIN
vmu_bypass_mode = h80003610 3 1 h0 RW BIN
vmu_single_run = h80003610 4 1 h1 RW BIN
vmu_magic_number = h80003610 24 4 h5 RW HEX
vmu_parity = h80003610 28 4 h4 RW HEX



; REGISTER vmu_bypass_control_register Address h80003614
_vmu_bypass_control_register = 2147497492 0 32 b01100101000000000000000000000011 RW
vmu_bypass_control = h80003614 0 32 h65000003 RW HEX
; Desc_vmu_bypass_control Sched Fetch Pacer Bperiod per cycle.     Only for Uplink!
vmu_vm_pd_bypass = h80003614 0 1 h1 RW BIN
vmu_vm_rstn_bypass = h80003614 1 1 h1 RW BIN
vmu_vm_run_bypass = h80003614 2 1 h0 RW BIN
vmu_vm_sde_bypass = h80003614 3 1 h0 RW BIN
vmu_cm_tm_tval_bypass = h80003614 4 1 h0 RW BIN
vmu_vm_tm_ld_bypass = h80003614 5 1 h0 RW BIN
vmu_vm_sel_vin_bypass = h80003614 6 4 h0 RW HEX
vmu_vm_tm_a_bypass = h80003614 10 4 h0 RW HEX
vmu_vm_trim_bypass = h80003614 14 4 h0 RW HEX
vmu_vm_clk_en_bypass = h80003614 23 1 h0 RW BIN
vmu_magic_number = h80003614 24 4 h5 RW HEX
vmu_parity = h80003614 28 4 h6 RW HEX



; REGISTER vmu_measurement_period_register Address h80003618
_vmu_measurement_period_register = 2147497496 0 32 b01010101000000000000000000000000 RW
vmu_measurement_period = h80003618 0 32 h55000000 RW HEX
; Desc_vmu_measurement_period timeout configuration for holding the packet at the TX Buffer for retransmission (default is 12288ns)
vmu_measurement_period_pms = h80003618 0 23 h0 RW HEX
vmu_use_mpr = h80003618 23 1 h0 RW BIN
vmu_magic_number = h80003618 24 4 h5 RW HEX
vmu_parity = h80003618 28 4 h5 RW HEX



; REGISTER vmu_measurement_timeout_register Address h8000361c
_vmu_measurement_timeout_register = 2147497500 0 32 b10100101000000000000000100101100 RW
vmu_measurement_timeout = h8000361c 0 32 ha500012c RW HEX
; Desc_vmu_measurement_timeout Maximum ack gap size configuration
vmu_measurement_timeout_pms = h8000361c 0 16 h12c RW HEX
vmu_magic_number = h8000361c 24 4 h5 RW HEX
vmu_parity = h8000361c 28 4 ha RW HEX



; REGISTER vmu_short_self_test_limit_1_register Address h80003620
_vmu_short_self_test_limit_1_register = 2147497504 0 32 b11000101010000000000110100000000 RW
vmu_short_self_test_limit_1 = h80003620 0 32 hc5400d00 RW HEX
; Desc_vmu_short_self_test_limit_1 interrupt threshold for original packets which got priority over retransmitted packets
vmu_short_self_test_high_limit1 = h80003620 0 12 hd00 RW HEX
vmu_short_self_test_low_limit1 = h80003620 12 12 h400 RW HEX
vmu_magic_number = h80003620 24 4 h5 RW HEX
vmu_parity = h80003620 28 4 hc RW HEX



; REGISTER vmu_short_self_test_limit_2_register Address h80003624
_vmu_short_self_test_limit_2_register = 2147497508 0 32 b11000101010000000000110100000000 RW
vmu_short_self_test_limit_2 = h80003624 0 32 hc5400d00 RW HEX
; Desc_vmu_short_self_test_limit_2 SW control drift value
vmu_short_self_test_high_limit2 = h80003624 0 12 hd00 RW HEX
vmu_short_self_test_low_limit2 = h80003624 12 12 h400 RW HEX
vmu_magic_number = h80003624 24 4 h5 RW HEX
vmu_parity = h80003624 28 4 hc RW HEX



; REGISTER vmu_short_self_test_limit_3_register Address h80003628
_vmu_short_self_test_limit_3_register = 2147497512 0 32 b11000101010000000000110100000000 RW
vmu_short_self_test_limit_3 = h80003628 0 32 hc5400d00 RW HEX
; Desc_vmu_short_self_test_limit_3 
vmu_short_self_test_high_limit3 = h80003628 0 12 hd00 RW HEX
vmu_short_self_test_low_limit3 = h80003628 12 12 h400 RW HEX
vmu_magic_number = h80003628 24 4 h5 RW HEX
vmu_parity = h80003628 28 4 hc RW HEX



; REGISTER vmu_short_self_test_forced_value1_register Address h8000362c
_vmu_short_self_test_forced_value1_register = 2147497516 0 32 b00100101001110000100110111001001 RW
vmu_short_self_test_forced_value1 = h8000362c 0 32 h25384dc9 RW HEX
; Desc_vmu_short_self_test_forced_value1 PCS IF TX system clock testbus select
vmu_short_self_test_forced_vm_value1 = h8000362c 0 12 hdc9 RW HEX
vmu_short_self_test_forced_vm_value2 = h8000362c 12 12 h384 RW HEX
vmu_magic_number = h8000362c 24 4 h5 RW HEX
vmu_parity = h8000362c 28 4 h2 RW HEX



; REGISTER vmu_short_self_test_forced_value2_register Address h80003630
_vmu_short_self_test_forced_value2_register = 2147497520 0 32 b01000101001110111000101101101100 RW
vmu_short_self_test_forced_value2 = h80003630 0 32 h453b8b6c RW HEX
; Desc_vmu_short_self_test_forced_value2 used number of words in the TX Buffer RAM
vmu_short_self_test_forced_vm_value3 = h80003630 0 12 hb6c RW HEX
vmu_short_self_test_forced_vm_value4 = h80003630 12 12 h3b8 RW HEX
vmu_magic_number = h80003630 24 4 h5 RW HEX
vmu_parity = h80003630 28 4 h4 RW HEX



; REGISTER vmu_short_self_test_direct_signature_low_limit_value_register Address h80003634
_vmu_short_self_test_direct_signature_low_limit_value_register = 2147497524 0 32 b01110101011101000000100010010000 RW
vmu_short_self_test_direct_signature_low_limit_value = h80003634 0 32 h75740890 RW HEX
; Desc_vmu_short_self_test_direct_signature_low_limit_value maximum used number of words in the TX Buffer RAM
vmu_short_self_test_DS_low_limit_high_value = h80003634 0 12 h890 RW HEX
vmu_short_self_test_DS_low_limit_low_value = h80003634 12 12 h740 RW HEX
vmu_magic_number = h80003634 24 4 h5 RW HEX
vmu_parity = h80003634 28 4 h7 RW HEX



; REGISTER vmu_short_self_test_direct_signature_high_limit_value_register Address h80003638
_vmu_short_self_test_direct_signature_high_limit_value_register = 2147497528 0 32 b11100101011110000000100011000000 RW
vmu_short_self_test_direct_signature_high_limit_value = h80003638 0 32 he57808c0 RW HEX
; Desc_vmu_short_self_test_direct_signature_high_limit_value RTS Input Statistics counters enable
vmu_short_self_test_DS_high_limit_high_value = h80003638 0 12 h8c0 RW HEX
vmu_short_self_test_DS_high_limit_low_value = h80003638 12 12 h780 RW HEX
vmu_magic_number = h80003638 24 4 h5 RW HEX
vmu_parity = h80003638 28 4 he RW HEX



; REGISTER vmu_short_self_test_expected_comparators_results_register Address h8000363c
_vmu_short_self_test_expected_comparators_results_register = 2147497532 0 32 b01000101000000001001100110001001 RW
vmu_short_self_test_expected_comparators_results = h8000363c 0 32 h45009989 RW HEX
; Desc_vmu_short_self_test_expected_comparators_results Total TX packets counter
vmu_vm_high_comp_step1 = h8000363c 0 1 h1 RW BIN
vmu_vm_low_comp_step1 = h8000363c 1 1 h1 RW BIN
vmu_vm_high_comp_step2 = h8000363c 2 1 h1 RW BIN
vmu_vm_low_comp_step2 = h8000363c 3 1 h1 RW BIN
vmu_vm_high_comp_step3 = h8000363c 4 1 h1 RW BIN
vmu_vm_low_comp_step3 = h8000363c 5 1 h1 RW BIN
vmu_vm_high_comp_step4 = h8000363c 6 1 h1 RW BIN
vmu_vm_low_comp_step4 = h8000363c 7 1 h1 RW BIN
vmu_vm_high_comp_step5 = h8000363c 8 1 h1 RW BIN
vmu_vm_low_comp_step5 = h8000363c 9 1 h1 RW BIN
vmu_vm_high_comp_step6 = h8000363c 10 1 h1 RW BIN
vmu_vm_low_comp_step6 = h8000363c 11 1 h1 RW BIN
vmu_vm_high_comp_step7 = h8000363c 12 1 h1 RW BIN
vmu_vm_low_comp_step7 = h8000363c 13 1 h1 RW BIN
vmu_vm_high_comp_step8 = h8000363c 14 1 h1 RW BIN
vmu_vm_low_comp_step8 = h8000363c 15 1 h1 RW BIN
vmu_magic_number = h8000363c 24 4 h5 RW HEX
vmu_parity = h8000363c 28 4 h5 RW HEX



; REGISTER vmu_functional_voltage_monitor_limit_internal_register Address h80003640
_vmu_functional_voltage_monitor_limit_internal_register = 2147497536 0 32 b00010101000010110000000011000011 RW
vmu_functional_voltage_monitor_limit_internal = h80003640 0 32 h150b00c3 RW HEX
; Desc_vmu_functional_voltage_monitor_limit_internal TX Keep Alive packets counter
vmu_func_vm_high_limit_internal = h80003640 0 12 hc3 RW HEX
vmu_func_vm_low_limit_internal = h80003640 12 12 hb0 RW HEX
vmu_magic_number = h80003640 24 4 h5 RW HEX
vmu_parity = h80003640 28 4 h1 RW HEX



; REGISTER vmu_functional_voltage_monitor_limit_vm0_register Address h80003644
_vmu_functional_voltage_monitor_limit_vm0_register = 2147497540 0 32 b00010101000010110000000011000011 RW
vmu_functional_voltage_monitor_limit_vm0 = h80003644 0 32 h150b00c3 RW HEX
; Desc_vmu_functional_voltage_monitor_limit_vm0 TX dropped packets counter (when TxBuffer_packet_drop_en is on)
vmu_func_vm_high_limit_vm0 = h80003644 0 12 hc3 RW HEX
vmu_func_vm_low_limit_vm0 = h80003644 12 12 hb0 RW HEX
vmu_magic_number = h80003644 24 4 h5 RW HEX
vmu_parity = h80003644 28 4 h1 RW HEX



; REGISTER vmu_functional_voltage_monitor_limit_vm1_sel0_register Address h80003648
_vmu_functional_voltage_monitor_limit_vm1_sel0_register = 2147497544 0 32 b10010101000011000100000011011001 RW
vmu_functional_voltage_monitor_limit_vm1_sel0 = h80003648 0 32 h950c40d9 RW HEX
; Desc_vmu_functional_voltage_monitor_limit_vm1_sel0 Backpressure by RTS Buffer towards Fetch-Pacer. sNumber of Cycles in which FetchPacer raise the valid bit until it gets the Ready Indication
vmu_func_vm_high_limit_vm1_sel0 = h80003648 0 12 hd9 RW HEX
vmu_func_vm_low_limit_vm1_sel0 = h80003648 12 12 hc4 RW HEX
vmu_magic_number = h80003648 24 4 h5 RW HEX
vmu_parity = h80003648 28 4 h9 RW HEX



; REGISTER vmu_functional_voltage_monitor_limit_vm1_sel1_register Address h8000364c
_vmu_functional_voltage_monitor_limit_vm1_sel1_register = 2147497548 0 32 b01100101000010011101000010101101 RW
vmu_functional_voltage_monitor_limit_vm1_sel1 = h8000364c 0 32 h6509d0ad RW HEX
; Desc_vmu_functional_voltage_monitor_limit_vm1_sel1 Number of Original A-Packets Scheduled for transmission (All)
vmu_func_vm_high_limit_vm1_sel1 = h8000364c 0 12 had RW HEX
vmu_func_vm_low_limit_vm1_sel1 = h8000364c 12 12 h9d RW HEX
vmu_magic_number = h8000364c 24 4 h5 RW HEX
vmu_parity = h8000364c 28 4 h6 RW HEX



; REGISTER vmu_functional_voltage_monitor_limit_vm1_sel2_register Address h80003650
_vmu_functional_voltage_monitor_limit_vm1_sel2_register = 2147497552 0 32 b11010101000001110101000010000010 RW
vmu_functional_voltage_monitor_limit_vm1_sel2 = h80003650 0 32 hd5075082 RW HEX
; Desc_vmu_functional_voltage_monitor_limit_vm1_sel2 TX Original packets counter
vmu_func_vm_high_limit_vm1_sel2 = h80003650 0 12 h82 RW HEX
vmu_func_vm_low_limit_vm1_sel2 = h80003650 12 12 h75 RW HEX
vmu_magic_number = h80003650 24 4 h5 RW HEX
vmu_parity = h80003650 28 4 hd RW HEX



; REGISTER vmu_functional_voltage_monitor_limit_vm1_sel3_register Address h80003654
_vmu_functional_voltage_monitor_limit_vm1_sel3_register = 2147497556 0 32 b11010101000001001111000001010110 RW
vmu_functional_voltage_monitor_limit_vm1_sel3 = h80003654 0 32 hd504f056 RW HEX
; Desc_vmu_functional_voltage_monitor_limit_vm1_sel3 TX retransmitted packets counter
vmu_func_vm_high_limit_vm1_sel3 = h80003654 0 12 h56 RW HEX
vmu_func_vm_low_limit_vm1_sel3 = h80003654 12 12 h4f RW HEX
vmu_magic_number = h80003654 24 4 h5 RW HEX
vmu_parity = h80003654 28 4 hd RW HEX



; REGISTER vmu_functional_voltage_monitor_limit_vm2_register Address h80003658
_vmu_functional_voltage_monitor_limit_vm2_register = 2147497560 0 32 b01010101000000000000000000000000 RW
vmu_functional_voltage_monitor_limit_vm2 = h80003658 0 32 h55000000 RW HEX
; Desc_vmu_functional_voltage_monitor_limit_vm2 Number of Original A-Packets Scheduled for transmission before ReTx A-Packets due to Prefer Original mechanism
vmu_func_vm_high_limit_vm2 = h80003658 0 12 h0 RW HEX
vmu_func_vm_low_limit_vm2 = h80003658 12 12 h0 RW HEX
vmu_magic_number = h80003658 24 4 h5 RW HEX
vmu_parity = h80003658 28 4 h5 RW HEX



; REGISTER vmu_functional_voltage_monitor_limit_vm3_register Address h8000365c
_vmu_functional_voltage_monitor_limit_vm3_register = 2147497564 0 32 b01010101000000000000000000000000 RW
vmu_functional_voltage_monitor_limit_vm3 = h8000365c 0 32 h55000000 RW HEX
; Desc_vmu_functional_voltage_monitor_limit_vm3 number of packets which were expired before transmitted even once
vmu_func_vm_high_limit_vm3 = h8000365c 0 12 h0 RW HEX
vmu_func_vm_low_limit_vm3 = h8000365c 12 12 h0 RW HEX
vmu_magic_number = h8000365c 24 4 h5 RW HEX
vmu_parity = h8000365c 28 4 h5 RW HEX



; REGISTER vmu_functional_voltage_monitor_limit_vm4_register Address h80003660
_vmu_functional_voltage_monitor_limit_vm4_register = 2147497568 0 32 b01010101000000000000000000000000 RW
vmu_functional_voltage_monitor_limit_vm4 = h80003660 0 32 h55000000 RW HEX
; Desc_vmu_functional_voltage_monitor_limit_vm4 TX invalid ack packets arriving to the TX Buffer
vmu_func_vm_high_limit_vm4 = h80003660 0 12 h0 RW HEX
vmu_func_vm_low_limit_vm4 = h80003660 12 12 h0 RW HEX
vmu_magic_number = h80003660 24 4 h5 RW HEX
vmu_parity = h80003660 28 4 h5 RW HEX



; REGISTER vmu_functional_voltage_monitor_limit_vm5_register Address h80003664
_vmu_functional_voltage_monitor_limit_vm5_register = 2147497572 0 32 b01010101000000000000000000000000 RW
vmu_functional_voltage_monitor_limit_vm5 = h80003664 0 32 h55000000 RW HEX
; Desc_vmu_functional_voltage_monitor_limit_vm5 TX invalid retransmission requests arriving to the TX Buffer
vmu_func_vm_high_limit_vm5 = h80003664 0 12 h0 RW HEX
vmu_func_vm_low_limit_vm5 = h80003664 12 12 h0 RW HEX
vmu_magic_number = h80003664 24 4 h5 RW HEX
vmu_parity = h80003664 28 4 h5 RW HEX



; REGISTER vmu_functional_voltage_monitor_limit_vm6_register Address h80003668
_vmu_functional_voltage_monitor_limit_vm6_register = 2147497576 0 32 b01010101000000000000000000000000 RW
vmu_functional_voltage_monitor_limit_vm6 = h80003668 0 32 h55000000 RW HEX
; Desc_vmu_functional_voltage_monitor_limit_vm6 Number of TX retransmission requests arrived for the first time
vmu_func_vm_high_limit_vm6 = h80003668 0 12 h0 RW HEX
vmu_func_vm_low_limit_vm6 = h80003668 12 12 h0 RW HEX
vmu_magic_number = h80003668 24 4 h5 RW HEX
vmu_parity = h80003668 28 4 h5 RW HEX



; REGISTER vmu_functional_voltage_monitor_limit_vm7_register Address h8000366c
_vmu_functional_voltage_monitor_limit_vm7_register = 2147497580 0 32 b01010101000000000000000000000000 RW
vmu_functional_voltage_monitor_limit_vm7 = h8000366c 0 32 h55000000 RW HEX
; Desc_vmu_functional_voltage_monitor_limit_vm7 Number of TX retransmission requests arrived more than once
vmu_func_vm_high_limit_vm7 = h8000366c 0 12 h0 RW HEX
vmu_func_vm_low_limit_vm7 = h8000366c 12 12 h0 RW HEX
vmu_magic_number = h8000366c 24 4 h5 RW HEX
vmu_parity = h8000366c 28 4 h5 RW HEX



; REGISTER vmu_voltage_monitor_error_count_limit_register Address h800036a8
_vmu_voltage_monitor_error_count_limit_register = 2147497640 0 32 b01000101000000000000000000000001 RW
vmu_voltage_monitor_error_count_limit = h800036a8 0 32 h45000001 RW HEX
; Desc_vmu_voltage_monitor_error_count_limit Maximum Number of TX retransmission requests arrived for the first time
vmu_error_limit = h800036a8 0 5 h1 RW HEX
vmu_magic_number = h800036a8 24 4 h5 RW HEX
vmu_parity = h800036a8 28 4 h4 RW HEX



; REGISTER vmu_vm_clk_width_reg Address h800036c0
_vmu_vm_clk_width_reg = 2147497664 0 32 b01010101000000011111010001111101 RW
vmu_vm_clk_width = h800036c0 0 32 h5501f47d RW HEX
; Desc_vmu_vm_clk_width Number of TX discarded retransmission requests which arrived not in MCW
vmu_vm_clk_up_width = h800036c0 0 10 h7d RW HEX
vmu_vm_clk_down_width = h800036c0 10 10 h7d RW HEX
vmu_magic_number = h800036c0 24 4 h5 RW HEX
vmu_parity = h800036c0 28 4 h5 RW HEX



; REGISTER vmu_vm_analog_pu_clock_num_reg Address h800036c4
_vmu_vm_analog_pu_clock_num_reg = 2147497668 0 32 b11010101000000000000000001111111 RW
vmu_vm_analog_pu_clock_num = h800036c4 0 32 hd500007f RW HEX
; Desc_vmu_vm_analog_pu_clock_num Number of TX retransmission requests dropped after being out of the MCW
vmu_vm_analog_pu_clock_num_pms = h800036c4 0 8 h7f RW HEX
vmu_magic_number = h800036c4 24 4 h5 RW HEX
vmu_parity = h800036c4 28 4 hd RW HEX



; REGISTER vmu_vm_detect_en_reg Address h800036c8
_vmu_vm_detect_en_reg = 2147497672 0 32 b01010101111111111111111111111111 RW
vmu_vm_detect_en = h800036c8 0 32 h55ffffff RW HEX
; Desc_vmu_vm_detect_en DiscardTooLateRetReqCnt Interrupt Threshold
vmu_vm_high_level_detect_en_internal = h800036c8 0 1 h1 RW BIN
vmu_vm_low_level_detect_en_internal = h800036c8 1 1 h1 RW BIN
vmu_vm_high_level_detect_en_vm0 = h800036c8 2 1 h1 RW BIN
vmu_vm_low_level_detect_en_vm0 = h800036c8 3 1 h1 RW BIN
vmu_vm_high_level_detect_en_vm1_sel0 = h800036c8 4 1 h1 RW BIN
vmu_vm_low_level_detect_en_vm1_sel0 = h800036c8 5 1 h1 RW BIN
vmu_vm_high_level_detect_en_vm1_sel1 = h800036c8 6 1 h1 RW BIN
vmu_vm_low_level_detect_en_vm1_sel1 = h800036c8 7 1 h1 RW BIN
vmu_vm_high_level_detect_en_vm1_sel2 = h800036c8 8 1 h1 RW BIN
vmu_vm_low_level_detect_en_vm1_sel2 = h800036c8 9 1 h1 RW BIN
vmu_vm_high_level_detect_en_vm1_sel3 = h800036c8 10 1 h1 RW BIN
vmu_vm_low_level_detect_en_vm1_sel03 = h800036c8 11 1 h1 RW BIN
vmu_vm_high_level_detect_en_vm2 = h800036c8 12 1 h1 RW BIN
vmu_vm_low_level_detect_en_vm2 = h800036c8 13 1 h1 RW BIN
vmu_vm_high_level_detect_en_vm3 = h800036c8 14 1 h1 RW BIN
vmu_vm_low_level_detect_en_vm3 = h800036c8 15 1 h1 RW BIN
vmu_vm_high_level_detect_en_vm4 = h800036c8 16 1 h1 RW BIN
vmu_vm_low_level_detect_en_vm4 = h800036c8 17 1 h1 RW BIN
vmu_vm_high_level_detect_en_vm5 = h800036c8 18 1 h1 RW BIN
vmu_vm_low_level_detect_en_vm5 = h800036c8 19 1 h1 RW BIN
vmu_vm_high_level_detect_en_vm6 = h800036c8 20 1 h1 RW BIN
vmu_vm_low_level_detect_en_vm6 = h800036c8 21 1 h1 RW BIN
vmu_vm_high_level_detect_en_vm7 = h800036c8 22 1 h1 RW BIN
vmu_vm_low_level_detect_en_vm7 = h800036c8 23 1 h1 RW BIN
vmu_magic_number = h800036c8 24 4 h5 RW HEX
vmu_parity = h800036c8 28 4 h5 RW HEX



; REGISTER vmu_vm_detect_en2_reg Address h800036cc
_vmu_vm_detect_en2_reg = 2147497676 0 32 b01000101000000000000000000000001 RW
vmu_vm_detect_en2 = h800036cc 0 32 h45000001 RW HEX
; Desc_vmu_vm_detect_en2 DiscardDupRetReqCnt Interrupt Threshold
vmu_parity_error_detect_en = h800036cc 0 1 h1 RW BIN
vmu_magic_number = h800036cc 24 4 h5 RW HEX
vmu_parity = h800036cc 28 4 h5 RW HEX



; REGISTER vmu_vm_count_en_reg Address h800036d0
_vmu_vm_count_en_reg = 2147497680 0 32 b01010101111111111111111111111111 RW
vmu_vm_count_en = h800036d0 0 32 h55ffffff RW HEX
; Desc_vmu_vm_count_en DropInvalidRetReqCnt Interrupt Threshold
vmu_vm_high_level_count_en_internal = h800036d0 0 1 h1 RW BIN
vmu_vm_low_level_count_en_internal = h800036d0 1 1 h1 RW BIN
vmu_vm_high_level_count_en_vm0 = h800036d0 2 1 h1 RW BIN
vmu_vm_low_level_count_en_vm0 = h800036d0 3 1 h1 RW BIN
vmu_vm_high_level_count_en_vm1_sel0 = h800036d0 4 1 h1 RW BIN
vmu_vm_low_level_count_en_vm1_sel0 = h800036d0 5 1 h1 RW BIN
vmu_vm_high_level_count_en_vm1_sel1 = h800036d0 6 1 h1 RW BIN
vmu_vm_low_level_count_en_vm1_sel1 = h800036d0 7 1 h1 RW BIN
vmu_vm_high_level_count_en_vm1_sel2 = h800036d0 8 1 h1 RW BIN
vmu_vm_low_level_count_en_vm1_sel2 = h800036d0 9 1 h1 RW BIN
vmu_vm_high_level_count_en_vm1_sel3 = h800036d0 10 1 h1 RW BIN
vmu_vm_low_level_count_en_vm1_sel03 = h800036d0 11 1 h1 RW BIN
vmu_vm_high_level_count_en_vm2 = h800036d0 12 1 h1 RW BIN
vmu_vm_low_level_count_en_vm2 = h800036d0 13 1 h1 RW BIN
vmu_vm_high_level_count_en_vm3 = h800036d0 14 1 h1 RW BIN
vmu_vm_low_level_count_en_vm3 = h800036d0 15 1 h1 RW BIN
vmu_vm_high_level_count_en_vm4 = h800036d0 16 1 h1 RW BIN
vmu_vm_low_level_count_en_vm4 = h800036d0 17 1 h1 RW BIN
vmu_vm_high_level_count_en_vm5 = h800036d0 18 1 h1 RW BIN
vmu_vm_low_level_count_en_vm5 = h800036d0 19 1 h1 RW BIN
vmu_vm_high_level_count_en_vm6 = h800036d0 20 1 h1 RW BIN
vmu_vm_low_level_count_en_vm6 = h800036d0 21 1 h1 RW BIN
vmu_vm_high_level_count_en_vm7 = h800036d0 22 1 h1 RW BIN
vmu_vm_low_level_count_en_vm7 = h800036d0 23 1 h1 RW BIN
vmu_magic_number = h800036d0 24 4 h5 RW HEX
vmu_parity = h800036d0 28 4 h5 RW HEX



; REGISTER vmu_self_test_measure_en_register Address h800036d4
_vmu_self_test_measure_en_register = 2147497684 0 32 b00110101000000000000000000000110 RW
vmu_self_test_measure_en = h800036d4 0 32 h35000006 RW HEX
; Desc_vmu_self_test_measure_en ApktTxRetReq block errors status (sticky bits)
vmu_self_test_internal_voltage_measurement_en = h800036d4 0 1 h0 RW BIN
vmu_self_test_vm0_voltage_measurement_en = h800036d4 1 1 h1 RW BIN
vmu_self_test_vm1_sel0_voltage_measurement_en = h800036d4 2 1 h1 RW BIN
vmu_self_test_vm1_sel1_voltage_measurement_en = h800036d4 3 1 h0 RW BIN
vmu_self_test_vm1_sel2_voltage_measurement_en = h800036d4 4 1 h0 RW BIN
vmu_self_test_vm1_sel3_voltage_measurement_en = h800036d4 5 1 h0 RW BIN
vmu_self_test_vm2_voltage_measurement_en = h800036d4 6 1 h0 RW BIN
vmu_self_test_vm3_voltage_measurement_en = h800036d4 7 1 h0 RW BIN
vmu_self_test_vm4_voltage_measurement_en = h800036d4 8 1 h0 RW BIN
vmu_self_test_vm5_voltage_measurement_en = h800036d4 9 1 h0 RW BIN
vmu_self_test_vm6_voltage_measurement_en = h800036d4 10 1 h0 RW BIN
vmu_self_test_vm7_voltage_measurement_en = h800036d4 11 1 h0 RW BIN
vmu_magic_number = h800036d4 24 4 h5 RW HEX
vmu_parity = h800036d4 28 4 h3 RW HEX



; REGISTER vmu_functional_measurement_en_register Address h800036d8
_vmu_functional_measurement_en_register = 2147497688 0 32 b00110101000000000000000000000110 RW
vmu_functional_measurement_en = h800036d8 0 32 h35000006 RW HEX
; Desc_vmu_functional_measurement_en packet counters per Atype
vmu_functional_internal_voltage_measurement_en = h800036d8 0 1 h0 RW BIN
vmu_functional_vm0_voltage_measurement_en = h800036d8 1 1 h1 RW BIN
vmu_functional_vm1_sel0_voltage_measurement_en = h800036d8 2 1 h1 RW BIN
vmu_functional_vm1_sel1_voltage_measurement_en = h800036d8 3 1 h0 RW BIN
vmu_functional_vm1_sel2_voltage_measurement_en = h800036d8 4 1 h0 RW BIN
vmu_functional_vm1_sel3_voltage_measurement_en = h800036d8 5 1 h0 RW BIN
vmu_functional_vm2_voltage_measurement_en = h800036d8 6 1 h0 RW BIN
vmu_functional_vm3_voltage_measurement_en = h800036d8 7 1 h0 RW BIN
vmu_functional_vm4_voltage_measurement_en = h800036d8 8 1 h0 RW BIN
vmu_functional_vm5_voltage_measurement_en = h800036d8 9 1 h0 RW BIN
vmu_functional_vm6_voltage_measurement_en = h800036d8 10 1 h0 RW BIN
vmu_functional_vm7_voltage_measurement_en = h800036d8 11 1 h0 RW BIN
vmu_magic_number = h800036d8 24 4 h5 RW HEX
vmu_parity = h800036d8 28 4 h3 RW HEX



; REGISTER vmu_measurement_switch_time_register Address h800036dc
_vmu_measurement_switch_time_register = 2147497692 0 32 b11110101000000000000000000001010 RW
vmu_measurement_switch_time = h800036dc 0 32 hf500000a RW HEX
; Desc_vmu_measurement_switch_time packet counters per Atype
vmu_stabilization_time = h800036dc 0 8 ha RW HEX
vmu_magic_number = h800036dc 24 4 h5 RW HEX
vmu_parity = h800036dc 28 4 hf RW HEX



; REGISTER vmu_vm_error_generation_register Address h800036e0
_vmu_vm_error_generation_register = 2147497696 0 32 b01010101000000000000000000000000 RW
vmu_vm_error_generation = h800036e0 0 32 h55000000 RW HEX
; Desc_vmu_vm_error_generation packet counters per Atype
vmu_vm_data_error_gen = h800036e0 0 12 h0 RW HEX
vmu_vm_rdy_error_gen = h800036e0 23 1 h0 RW BIN
vmu_magic_number = h800036e0 24 4 h5 RW HEX
vmu_parity = h800036e0 28 4 h5 RW HEX



; REGISTER vmu_vmu_wait_oper_register Address h800036e4
_vmu_vmu_wait_oper_register = 2147497700 0 32 b11010101000000000000000000001000 RW
vmu_vmu_wait_oper = h800036e4 0 32 hd5000008 RW HEX
; Desc_vmu_vmu_wait_oper packet counters per Atype
vmu_vmu_wait_oper_pms = h800036e4 0 24 h8 RW HEX
vmu_Magic_number = h800036e4 24 4 h5 RW HEX
vmu_Parity = h800036e4 28 4 hd RW HEX



; REGISTER vmu_long_self_test_steps_register Address h800036f4
_vmu_long_self_test_steps_register = 2147497716 0 32 b01010101000000000000000000000000 RW
vmu_long_self_test_steps = h800036f4 0 32 h55000000 RW HEX
; Desc_vmu_long_self_test_steps packet counters per Atype



; REGISTER vmu_vmref_control_register Address h800036f8
_vmu_vmref_control_register = 2147497720 0 32 b01010101000000000000000000000000 RW
vmu_vmref_control = h800036f8 0 32 h55000000 RW HEX
; Desc_vmu_vmref_control packet counters per Atype
vmu_enable = h800036f8 0 1 h0 RW BIN
vmu_vbg_selvdd = h800036f8 1 1 h0 RW BIN
vmu_vbg_trim = h800036f8 2 2 h0 RW HEX
vmu_vsrc_sel = h800036f8 4 1 h0 RW BIN
vmu_vmref_trim = h800036f8 5 2 h0 RW HEX
vmu_abt_sel = h800036f8 7 2 h0 RW HEX
vmu_spare = h800036f8 9 4 h0 RW HEX
vmu_magic_number = h800036f8 24 4 h5 RW HEX
vmu_parity = h800036f8 28 4 h5 RW HEX



; REGISTER tsu_initial_seq_id_register Address h80003700
_tsu_initial_seq_id_register = 2147497728 0 32 b01010101000000000000000000000000 RW
tsu_initial_seq_id = h80003700 0 32 h55000000 RW HEX
; Desc_tsu_initial_seq_id packet counters per Atype
tsu_initial_seq_id_pms = h80003700 0 8 h0 RW HEX
tsu_magic_number = h80003700 24 4 h5 RW HEX
tsu_parity = h80003700 28 4 h5 RW HEX



; REGISTER tsu_tsc_control_register Address h80003704
_tsu_tsc_control_register = 2147497732 0 32 b01010101000000000000000000000000 RW
tsu_tsc_control = h80003704 0 32 h55000000 RW HEX
; Desc_tsu_tsc_control packet counters per Atype
tsu_pd = h80003704 0 1 h0 RW BIN
tsu_S_L_St = h80003704 1 1 h0 RW BIN
tsu_Sh_st_type = h80003704 2 1 h0 RW BIN
tsu_bypass_mode = h80003704 3 1 h0 RW BIN
tsu_Par_sep = h80003704 4 1 h0 RW BIN
tsu_master = h80003704 5 1 h0 RW BIN
tsu_magic_number = h80003704 24 4 h5 RW HEX
tsu_parity = h80003704 28 4 h5 RW HEX



; REGISTER tsu_bypass_control_register Address h80003708
_tsu_bypass_control_register = 2147497736 0 32 b01010101000000000011000000000011 RW
tsu_bypass_control = h80003708 0 32 h55003003 RW HEX
; Desc_tsu_bypass_control packet counters per Atype
tsu_ts0_pd = h80003708 0 1 h1 RW BIN
tsu_ts0_rstn = h80003708 1 1 h1 RW BIN
tsu_ts0_run = h80003708 2 1 h0 RW BIN
tsu_ts0_sgn_en = h80003708 3 1 h0 RW BIN
tsu_ts0_cal = h80003708 4 1 h0 RW BIN
tsu_ts0_tm_an = h80003708 5 4 h0 RW HEX
tsu_ts0_ser_en = h80003708 9 1 h0 RW BIN
tsu_ts0_single_mode = h80003708 10 1 h0 RW BIN
tsu_ts1_pd = h80003708 12 1 h1 RW BIN
tsu_ts1_rstn = h80003708 13 1 h1 RW BIN
tsu_ts1_run = h80003708 14 1 h0 RW BIN
tsu_ts1_sgn_en = h80003708 15 1 h0 RW BIN
tsu_ts1_cal = h80003708 16 1 h0 RW BIN
tsu_ts1_tm_an = h80003708 17 4 h0 RW HEX
tsu_ts1_ser_en = h80003708 21 1 h0 RW BIN
tsu_ts1_single_mode = h80003708 22 1 h0 RW BIN
tsu_ts_clk_en = h80003708 23 1 h0 RW BIN
tsu_Magic_number = h80003708 24 4 h5 RW HEX
tsu_Parity = h80003708 28 4 h5 RW HEX



; REGISTER tsu_measurement_period_register Address h8000370c
_tsu_measurement_period_register = 2147497740 0 32 b01010101000000000000000000000000 RW
tsu_measurement_period = h8000370c 0 32 h55000000 RW HEX
; Desc_tsu_measurement_period packet counters per Atype
tsu_measurement_period_pms = h8000370c 0 23 h0 RW HEX
tsu_use_mpr = h8000370c 23 1 h0 RW BIN
tsu_magic_number = h8000370c 24 4 h5 RW HEX
tsu_parity = h8000370c 28 4 h5 RW HEX



; REGISTER tsu_measurement_timeout_register Address h80003710
_tsu_measurement_timeout_register = 2147497744 0 32 b01100101000000000010000100000000 RW
tsu_measurement_timeout = h80003710 0 32 h65002100 RW HEX
; Desc_tsu_measurement_timeout packet counters per Atype
tsu_measurement_timeout_pms = h80003710 0 16 h2100 RW HEX
tsu_magic_number = h80003710 24 4 h5 RW HEX
tsu_parity = h80003710 28 4 h6 RW HEX



; REGISTER tsu_short_self_test_limit_1_register Address h80003714
_tsu_short_self_test_limit_1_register = 2147497748 0 32 b11000101010000000000110100000000 RW
tsu_short_self_test_limit_1 = h80003714 0 32 hc5400d00 RW HEX
; Desc_tsu_short_self_test_limit_1 packet counters per Atype
tsu_short_self_test_high_limit1 = h80003714 0 12 hd00 RW HEX
tsu_short_self_test_low_limit1 = h80003714 12 12 h400 RW HEX
tsu_magic_number = h80003714 24 4 h5 RW HEX
tsu_parity = h80003714 28 4 hc RW HEX



; REGISTER tsu_short_self_test_limit_2_register Address h80003718
_tsu_short_self_test_limit_2_register = 2147497752 0 32 b11000101010000000000110100000000 RW
tsu_short_self_test_limit_2 = h80003718 0 32 hc5400d00 RW HEX
; Desc_tsu_short_self_test_limit_2 packet counters per Atype
tsu_short_self_test_high_limit2 = h80003718 0 12 hd00 RW HEX
tsu_short_self_test_low_limit2 = h80003718 12 12 h400 RW HEX
tsu_magic_number = h80003718 24 4 h5 RW HEX
tsu_parity = h80003718 28 4 hc RW HEX



; REGISTER tsu_short_self_test_limit_3_register Address h8000371c
_tsu_short_self_test_limit_3_register = 2147497756 0 32 b11000101010000000000110100000000 RW
tsu_short_self_test_limit_3 = h8000371c 0 32 hc5400d00 RW HEX
; Desc_tsu_short_self_test_limit_3 packet counters per Atype
tsu_short_self_test_high_limit3 = h8000371c 0 12 hd00 RW HEX
tsu_short_self_test_low_limit3 = h8000371c 12 12 h400 RW HEX
tsu_magic_number = h8000371c 24 4 h5 RW HEX
tsu_parity = h8000371c 28 4 hc RW HEX



; REGISTER tsu_short_self_test_forced_value1_register Address h80003720
_tsu_short_self_test_forced_value1_register = 2147497760 0 32 b00010101110101010100110111001001 RW
tsu_short_self_test_forced_value1 = h80003720 0 32 h15d54dc9 RW HEX
; Desc_tsu_short_self_test_forced_value1 packet counters per Atype
tsu_man_sh_st_forced_ts0_value1 = h80003720 0 12 hdc9 RW HEX
tsu_man_sh_st_forced_ts1_value1 = h80003720 12 12 hd54 RW HEX
tsu_magic_number = h80003720 24 4 h5 RW HEX
tsu_parity = h80003720 28 4 h1 RW HEX



; REGISTER tsu_short_self_test_forced_value2_register Address h80003724
_tsu_short_self_test_forced_value2_register = 2147497764 0 32 b10100101001110111000001110000100 RW
tsu_short_self_test_forced_value2 = h80003724 0 32 ha53b8384 RW HEX
; Desc_tsu_short_self_test_forced_value2 packet counters per Atype
tsu_man_sh_st_forced_ts0_value2 = h80003724 0 12 h384 RW HEX
tsu_man_sh_st_forced_ts1_value2 = h80003724 12 12 h3b8 RW HEX
tsu_magic_number = h80003724 24 4 h5 RW HEX
tsu_parity = h80003724 28 4 ha RW HEX



; REGISTER tsu_short_self_test_forced_value3_register Address h80003728
_tsu_short_self_test_forced_value3_register = 2147497768 0 32 b10100101100100010110101101101100 RW
tsu_short_self_test_forced_value3 = h80003728 0 32 ha5916b6c RW HEX
; Desc_tsu_short_self_test_forced_value3 Histogram Window size for all Histogram counters (in cycles)
tsu_man_sh_st_forced_ts0_value3 = h80003728 0 12 hb6c RW HEX
tsu_man_sh_st_forced_ts1_value3 = h80003728 12 12 h916 RW HEX
tsu_magic_number = h80003728 24 4 h5 RW HEX
tsu_parity = h80003728 28 4 ha RW HEX



; REGISTER tsu_short_self_test_1_allowed_diff_register Address h8000372c
_tsu_short_self_test_1_allowed_diff_register = 2147497772 0 32 b01010101000100000000000100000000 RW
tsu_short_self_test_1_allowed_diff = h8000372c 0 32 h55100100 RW HEX
; Desc_tsu_short_self_test_1_allowed_diff Retransmission requests Histogram Bucket Threshold
tsu_man_sh_st1_allowed_diff1 = h8000372c 0 12 h100 RW HEX
tsu_man_sh_st1_allowed_diff2 = h8000372c 12 12 h100 RW HEX
tsu_magic_number = h8000372c 24 4 h5 RW HEX
tsu_parity = h8000372c 28 4 h5 RW HEX



; REGISTER tsu_short_self_test_2_allowed_diff_register Address h80003730
_tsu_short_self_test_2_allowed_diff_register = 2147497776 0 32 b01010101000100000000000100000000 RW
tsu_short_self_test_2_allowed_diff = h80003730 0 32 h55100100 RW HEX
; Desc_tsu_short_self_test_2_allowed_diff Retransmission requests Histogram Bucket Threshold
tsu_man_sh_st2_allowed_diff1 = h80003730 0 12 h100 RW HEX
tsu_man_sh_st2_allowed_diff2 = h80003730 12 12 h100 RW HEX
tsu_magic_number = h80003730 24 4 h5 RW HEX
tsu_parity = h80003730 28 4 h5 RW HEX



; REGISTER tsu_short_self_test_direct_signature_low_limit_value_register Address h80003734
_tsu_short_self_test_direct_signature_low_limit_value_register = 2147497780 0 32 b01110101011101000000100010010000 RW
tsu_short_self_test_direct_signature_low_limit_value = h80003734 0 32 h75740890 RW HEX
; Desc_tsu_short_self_test_direct_signature_low_limit_value Retransmission requests Histogram Bucket Threshold
tsu_man_sh_st_DS_low_limit_high_value = h80003734 0 12 h890 RW HEX
tsu_man_sh_st_DS_low_limit_low_value = h80003734 12 12 h740 RW HEX
tsu_magic_number = h80003734 24 4 h5 RW HEX
tsu_parity = h80003734 28 4 h7 RW HEX



; REGISTER tsu_short_self_test_direct_signature_high_limit_value_register Address h80003738
_tsu_short_self_test_direct_signature_high_limit_value_register = 2147497784 0 32 b11100101011110000000100011000000 RW
tsu_short_self_test_direct_signature_high_limit_value = h80003738 0 32 he57808c0 RW HEX
; Desc_tsu_short_self_test_direct_signature_high_limit_value Retransmission requests Histogram Bucket Threshold
tsu_man_sh_st_DS_high_limit_high_value = h80003738 0 12 h8c0 RW HEX
tsu_man_sh_st_DS_high_limit_low_value = h80003738 12 12 h780 RW HEX
tsu_magic_number = h80003738 24 4 h5 RW HEX
tsu_parity = h80003738 28 4 he RW HEX



; REGISTER tsu_short_self_test_expected_comparators_results1_register Address h8000373c
_tsu_short_self_test_expected_comparators_results1_register = 2147497788 0 32 b01000101000001010100000101000101 RW
tsu_short_self_test_expected_comparators_results1 = h8000373c 0 32 h45054145 RW HEX
; Desc_tsu_short_self_test_expected_comparators_results1 Retransmission requests Histogram Bucket Threshold
tsu_ts0_high_comp_step1 = h8000373c 0 1 h1 RW BIN
tsu_ts0_low_comp_step1 = h8000373c 1 1 h0 RW BIN
tsu_ts1_high_comp_step1 = h8000373c 2 1 h1 RW BIN
tsu_ts1_low_comp_step1 = h8000373c 3 1 h0 RW BIN
tsu_diff_comp_step1 = h8000373c 4 1 h0 RW BIN
tsu_ts0_high_comp_step2 = h8000373c 5 1 h0 RW BIN
tsu_ts0_low_comp_step2 = h8000373c 6 1 h1 RW BIN
tsu_ts1_high_comp_step2 = h8000373c 7 1 h0 RW BIN
tsu_ts1_low_comp_step2 = h8000373c 8 1 h1 RW BIN
tsu_diff_comp_step2 = h8000373c 9 1 h0 RW BIN
tsu_ts0_high_comp_step3 = h8000373c 10 1 h0 RW BIN
tsu_ts0_low_comp_step3 = h8000373c 11 1 h0 RW BIN
tsu_ts1_high_comp_step3 = h8000373c 12 1 h0 RW BIN
tsu_ts1_low_comp_step3 = h8000373c 13 1 h0 RW BIN
tsu_diff_comp_step3 = h8000373c 14 1 h1 RW BIN
tsu_ts0_high_comp_step4 = h8000373c 15 1 h0 RW BIN
tsu_ts0_low_comp_step4 = h8000373c 16 1 h1 RW BIN
tsu_ts1_high_comp_step4 = h8000373c 17 1 h0 RW BIN
tsu_ts1_low_comp_step4 = h8000373c 18 1 h1 RW BIN
tsu_diff_comp_step4 = h8000373c 19 1 h0 RW BIN
tsu_Magic_number = h8000373c 24 4 h5 RW HEX
tsu_Parity = h8000373c 28 4 h5 RW HEX



; REGISTER tsu_short_self_test_expected_comparators_results2_register Address h80003740
_tsu_short_self_test_expected_comparators_results2_register = 2147497792 0 32 b01010101000001010001010101000101 RW
tsu_short_self_test_expected_comparators_results2 = h80003740 0 32 h55051545 RW HEX
; Desc_tsu_short_self_test_expected_comparators_results2 Retransmission requests Histogram Bucket Threshold
tsu_ts0_high_comp_step5 = h80003740 0 1 h1 RW BIN
tsu_ts0_low_comp_step5 = h80003740 1 1 h0 RW BIN
tsu_ts1_high_comp_step5 = h80003740 2 1 h1 RW BIN
tsu_ts1_low_comp_step5 = h80003740 3 1 h0 RW BIN
tsu_diff_comp_step5 = h80003740 4 1 h0 RW BIN
tsu_ts0_high_comp_step6 = h80003740 5 1 h0 RW BIN
tsu_ts0_low_comp_step6 = h80003740 6 1 h1 RW BIN
tsu_ts1_high_comp_step6 = h80003740 7 1 h0 RW BIN
tsu_ts1_low_comp_step6 = h80003740 8 1 h1 RW BIN
tsu_diff_comp_step6 = h80003740 9 1 h0 RW BIN
tsu_ts0_high_comp_step7 = h80003740 10 1 h1 RW BIN
tsu_ts0_low_comp_step7 = h80003740 11 1 h0 RW BIN
tsu_ts1_high_comp_step7 = h80003740 12 1 h1 RW BIN
tsu_ts1_low_comp_step7 = h80003740 13 1 h0 RW BIN
tsu_diff_comp_step7 = h80003740 14 1 h0 RW BIN
tsu_ts0_high_comp_step8 = h80003740 15 1 h0 RW BIN
tsu_ts0_low_comp_step8 = h80003740 16 1 h1 RW BIN
tsu_ts1_high_comp_step8 = h80003740 17 1 h0 RW BIN
tsu_ts1_low_comp_step8 = h80003740 18 1 h1 RW BIN
tsu_diff_comp_step8 = h80003740 19 1 h0 RW BIN
tsu_Magic_number = h80003740 24 4 h5 RW HEX
tsu_Parity = h80003740 28 4 h5 RW HEX



; REGISTER tsu_functional_temperature_sensor_0_limit_register Address h80003744
_tsu_functional_temperature_sensor_0_limit_register = 2147497796 0 32 b01010101000000000000000000000000 RW
tsu_functional_temperature_sensor_0_limit = h80003744 0 32 h55000000 RW HEX
; Desc_tsu_functional_temperature_sensor_0_limit Retransmission requests Histogram Bucket Threshold
tsu_func_ts0_high_limit = h80003744 0 12 h0 RW HEX
tsu_func_ts0_low_limit = h80003744 12 12 h0 RW HEX
tsu_Magic_number = h80003744 24 4 h5 RW HEX
tsu_Parity = h80003744 28 4 h5 RW HEX



; REGISTER tsu_functional_temperature_sensor_1_limit_register Address h80003748
_tsu_functional_temperature_sensor_1_limit_register = 2147497800 0 32 b01010101000000000000000000000000 RW
tsu_functional_temperature_sensor_1_limit = h80003748 0 32 h55000000 RW HEX
; Desc_tsu_functional_temperature_sensor_1_limit Retransmission requests Histogram Bucket Threshold
tsu_func_ts1_high_limit = h80003748 0 12 h0 RW HEX
tsu_func_ts1_low_limit = h80003748 12 12 h0 RW HEX
tsu_Magic_number = h80003748 24 4 h5 RW HEX
tsu_Parity = h80003748 28 4 h5 RW HEX



; REGISTER tsu_functional_allowed_diff_register Address h80003750
_tsu_functional_allowed_diff_register = 2147497808 0 32 b01010101000000000000000000000000 RW
tsu_functional_allowed_diff = h80003750 0 32 h55000000 RW HEX
; Desc_tsu_functional_allowed_diff Retransmission requests Histogram Bucket Threshold
tsu_func_allowed_diff = h80003750 0 12 h0 RW HEX
tsu_Magic_number = h80003750 24 4 h5 RW HEX
tsu_Parity = h80003750 28 4 h5 RW HEX



; REGISTER tsu_temperature_sensor_error_count_limit_register Address h80003764
_tsu_temperature_sensor_error_count_limit_register = 2147497828 0 32 b01000101000000000000000000000001 RW
tsu_temperature_sensor_error_count_limit = h80003764 0 32 h45000001 RW HEX
; Desc_tsu_temperature_sensor_error_count_limit Retransmission requests Histogram Bucket Threshold
tsu_error_limit = h80003764 0 5 h1 RW HEX
tsu_Magic_number = h80003764 24 4 h5 RW HEX
tsu_Parity = h80003764 28 4 h4 RW HEX



; REGISTER tsu_ts_clk_width_reg Address h8000377c
_tsu_ts_clk_width_reg = 2147497852 0 32 b10110101000000001111110000111110 RW
tsu_ts_clk_width = h8000377c 0 32 hb500fc3e RW HEX
; Desc_tsu_ts_clk_width Retransmission requests Histogram Bucket Counter
tsu_ts_clk_up_width = h8000377c 0 10 h3e RW HEX
tsu_ts_clk_down_width = h8000377c 10 10 h3f RW HEX
tsu_Magic_number = h8000377c 24 4 h5 RW HEX
tsu_Parity = h8000377c 28 4 hb RW HEX



; REGISTER tsu_ts_analog_pu_clock_num_reg Address h80003780
_tsu_ts_analog_pu_clock_num_reg = 2147497856 0 32 b11010101000000000000000001111111 RW
tsu_ts_analog_pu_clock_num = h80003780 0 32 hd500007f RW HEX
; Desc_tsu_ts_analog_pu_clock_num Retransmission requests Histogram Bucket Counter
tsu_ts_analog_pu_clock_num_pms = h80003780 0 8 h7f RW HEX
tsu_Magic_number = h80003780 24 4 h5 RW HEX
tsu_Parity = h80003780 28 4 hd RW HEX



; REGISTER tsu_ts_detect_count_en_reg Address h80003784
_tsu_ts_detect_count_en_reg = 2147497860 0 32 b10010101000000000000000000111111 RW
tsu_ts_detect_count_en = h80003784 0 32 h9500003f RW HEX
; Desc_tsu_ts_detect_count_en Retransmission requests Histogram Bucket Counter
tsu_ts0_high_level_comparator_en = h80003784 0 1 h1 RW BIN
tsu_ts0_low_level_comparator_en = h80003784 1 1 h1 RW BIN
tsu_ts1_high_level_comparator_en = h80003784 2 1 h1 RW BIN
tsu_ts1_low_level_comparator_en = h80003784 3 1 h1 RW BIN
tsu_diff_comparator_en = h80003784 4 1 h1 RW BIN
tsu_register_parity_en = h80003784 5 1 h1 RW BIN
tsu_ts0_high_level_count_en = h80003784 12 1 h0 RW BIN
tsu_ts0_low_level_count_en = h80003784 13 1 h0 RW BIN
tsu_ts1_high_level_count_en = h80003784 14 1 h0 RW BIN
tsu_ts1_low_level_count_en = h80003784 15 1 h0 RW BIN
tsu_diff_comparator_count_en = h80003784 16 1 h0 RW BIN
tsu_Magic_number = h80003784 24 4 h5 RW HEX
tsu_Parity = h80003784 28 4 h9 RW HEX



; REGISTER tsu_ts0_error_generation_register Address h80003788
_tsu_ts0_error_generation_register = 2147497864 0 32 b01010101000000000000000000000000 RW
tsu_ts0_error_generation = h80003788 0 32 h55000000 RW HEX
; Desc_tsu_ts0_error_generation Retransmission requests Histogram Bucket Counter
tsu_ts0_data_error_gen = h80003788 0 12 h0 RW HEX
tsu_ts0_rdy_error_gen = h80003788 23 1 h0 RW BIN
tsu_Magic_number = h80003788 24 4 h5 RW HEX
tsu_Parity = h80003788 28 4 h5 RW HEX



; REGISTER tsu_ts1_error_generation_register Address h8000378c
_tsu_ts1_error_generation_register = 2147497868 0 32 b01010101000000000000000000000000 RW
tsu_ts1_error_generation = h8000378c 0 32 h55000000 RW HEX
; Desc_tsu_ts1_error_generation Retransmission requests Histogram Bucket Counter
tsu_ts1_data_error_gen = h8000378c 0 12 h0 RW HEX
tsu_ts1_rdy_error_gen = h8000378c 23 1 h0 RW BIN
tsu_Magic_number = h8000378c 24 4 h5 RW HEX
tsu_Parity = h8000378c 28 4 h5 RW HEX



; REGISTER tsu_tsu_wait_oper_register Address h80003790
_tsu_tsu_wait_oper_register = 2147497872 0 32 b11010101000000000000000000001000 RW
tsu_tsu_wait_oper = h80003790 0 32 hd5000008 RW HEX
; Desc_tsu_tsu_wait_oper Retransmission requests Histogram Bucket Counter
tsu_tsu_wait_oper_pms = h80003790 0 24 h8 RW HEX
tsu_Magic_number = h80003790 24 4 h5 RW HEX
tsu_Parity = h80003790 28 4 hd RW HEX



; REGISTER tsu_long_self_test_steps_register Address h80003794
_tsu_long_self_test_steps_register = 2147497876 0 32 b01010101000000000000000000000000 RW
tsu_long_self_test_steps = h80003794 0 32 h55000000 RW HEX
; Desc_tsu_long_self_test_steps Retransmission requests Histogram Bucket Counter



; REGISTER pd0_cfg Address h80003804
_pd0_cfg = 2147497988 0 24 b00000000000000000000000000000000 RW
pd0_cfg1 = h80003804 0 8 h0 RW HEX
; Desc_pd0_cfg1 Retransmission requests Histogram Bucket Counter
pd0_cfg2 = h80003804 8 8 h0 RW HEX
; Desc_pd0_cfg2 Retransmission requests Histogram Bucket Counter
pd0_cfg3 = h80003804 16 8 h0 RW HEX
; Desc_pd0_cfg3 Retransmission requests Histogram Bucket Counter



; REGISTER pd0_run_reg Address h80003810
_pd0_run_reg = 2147498000 0 2 b00000000000000000000000000000000 RW
pd0_run_cmd = h80003810 0 1 h0 RW BIN
; Desc_pd0_run_cmd Retransmission requests Histogram Bucket Counter
pd0_single_mode = h80003810 1 1 h0 RW BIN
; Desc_pd0_single_mode Retransmission requests Histogram Bucket Counter



; REGISTER pd_clk_reg Address h80003824
_pd_clk_reg = 2147498020 0 26 b00000000000000000000000000000000 RW
pd_clk_up_width = h80003824 0 10 h0 RW HEX
; Desc_pd_clk_up_width Retransmission requests Histogram Bucket Counter
pd_clk_down_width = h80003824 16 10 h0 RW HEX
; Desc_pd_clk_down_width Retransmission requests Histogram Bucket Counter



; REGISTER efuse_bist_cntl_reg Address h80003850
_efuse_bist_cntl_reg = 2147498064 0 2 b00000000000000000000000000000000 RW
rd_bist_en = h80003850 0 1 h0 RW BIN
; Desc_rd_bist_en TX RTS Input BW Meter Histogram (after the Fetch Pacer)
rd_bist_mode = h80003850 1 1 h0 RW BIN
; Desc_rd_bist_mode TX RTS Input BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW2TBA_reg Address h80003890
_SW2TBA_reg = 2147498128 0 32 b00000000000000000000000000000000 RW
SW2TBA = h80003890 0 32 h0 RW HEX
; Desc_SW2TBA TX RTS Input BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch0_reg Address h80003894
_SW_scratch0_reg = 2147498132 0 32 b00000000000000000000000000000000 RW
SW_scratch0 = h80003894 0 32 h0 RW HEX
; Desc_SW_scratch0 TX RTS Input BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch1_reg Address h80003898
_SW_scratch1_reg = 2147498136 0 32 b00000000000000000000000000000000 RW
SW_scratch1 = h80003898 0 32 h0 RW HEX
; Desc_SW_scratch1 TX RTS Input BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch2_reg Address h8000389c
_SW_scratch2_reg = 2147498140 0 32 b00000000000000000000000000000000 RW
SW_scratch2 = h8000389c 0 32 h0 RW HEX
; Desc_SW_scratch2 TX RTS Input BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch3_reg Address h800038a0
_SW_scratch3_reg = 2147498144 0 32 b00000000000000000000000000000000 RW
SW_scratch3 = h800038a0 0 32 h0 RW HEX
; Desc_SW_scratch3 TX RTS Input BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch4_reg Address h800038a4
_SW_scratch4_reg = 2147498148 0 32 b00000000000000000000000000000000 RW
SW_scratch4 = h800038a4 0 32 h0 RW HEX
; Desc_SW_scratch4 TX RTS Input BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch5_reg Address h800038a8
_SW_scratch5_reg = 2147498152 0 32 b00000000000000000000000000000000 RW
SW_scratch5 = h800038a8 0 32 h0 RW HEX
; Desc_SW_scratch5 TX RTS Input BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch6_reg Address h800038ac
_SW_scratch6_reg = 2147498156 0 32 b00000000000000000000000000000000 RW
SW_scratch6 = h800038ac 0 32 h0 RW HEX
; Desc_SW_scratch6 TX RTS Input BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch7_reg Address h800038b0
_SW_scratch7_reg = 2147498160 0 32 b00000000000000000000000000000000 RW
SW_scratch7 = h800038b0 0 32 h0 RW HEX
; Desc_SW_scratch7 TX RTS Input BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch8_reg Address h800038b4
_SW_scratch8_reg = 2147498164 0 32 b00000000000000000000000000000000 RW
SW_scratch8 = h800038b4 0 32 h0 RW HEX
; Desc_SW_scratch8 TX RTS Input BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch9_reg Address h800038b8
_SW_scratch9_reg = 2147498168 0 32 b00000000000000000000000000000000 RW
SW_scratch9 = h800038b8 0 32 h0 RW HEX
; Desc_SW_scratch9 TX RTS Input BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch10_reg Address h800038bc
_SW_scratch10_reg = 2147498172 0 32 b00000000000000000000000000000000 RW
SW_scratch10 = h800038bc 0 32 h0 RW HEX
; Desc_SW_scratch10 TX RTS Input BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch11_reg Address h800038c0
_SW_scratch11_reg = 2147498176 0 32 b00000000000000000000000000000000 RW
SW_scratch11 = h800038c0 0 32 h0 RW HEX
; Desc_SW_scratch11 TX RTS Input BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch12_reg Address h800038c4
_SW_scratch12_reg = 2147498180 0 32 b00000000000000000000000000000000 RW
SW_scratch12 = h800038c4 0 32 h0 RW HEX
; Desc_SW_scratch12 TX RTS Input BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch13_reg Address h800038c8
_SW_scratch13_reg = 2147498184 0 32 b00000000000000000000000000000000 RW
SW_scratch13 = h800038c8 0 32 h0 RW HEX
; Desc_SW_scratch13 TX RTS Input BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch14_reg Address h800038cc
_SW_scratch14_reg = 2147498188 0 32 b00000000000000000000000000000000 RW
SW_scratch14 = h800038cc 0 32 h0 RW HEX
; Desc_SW_scratch14 TX RTS Input BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch15_reg Address h800038d0
_SW_scratch15_reg = 2147498192 0 32 b00000000000000000000000000000000 RW
SW_scratch15 = h800038d0 0 32 h0 RW HEX
; Desc_SW_scratch15 TX RTS Input BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch16_reg Address h800038d4
_SW_scratch16_reg = 2147498196 0 32 b00000000000000000000000000000000 RW
SW_scratch16 = h800038d4 0 32 h0 RW HEX
; Desc_SW_scratch16 TX RTS Input BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch17_reg Address h800038d8
_SW_scratch17_reg = 2147498200 0 32 b00000000000000000000000000000000 RW
SW_scratch17 = h800038d8 0 32 h0 RW HEX
; Desc_SW_scratch17 TX RTS Input BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch18_reg Address h800038dc
_SW_scratch18_reg = 2147498204 0 32 b00000000000000000000000000000000 RW
SW_scratch18 = h800038dc 0 32 h0 RW HEX
; Desc_SW_scratch18 TX RTS Output BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch19_reg Address h800038e0
_SW_scratch19_reg = 2147498208 0 32 b00000000000000000000000000000000 RW
SW_scratch19 = h800038e0 0 32 h0 RW HEX
; Desc_SW_scratch19 TX RTS Output BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch20_reg Address h800038e4
_SW_scratch20_reg = 2147498212 0 32 b00000000000000000000000000000000 RW
SW_scratch20 = h800038e4 0 32 h0 RW HEX
; Desc_SW_scratch20 TX RTS Output BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch21_reg Address h800038e8
_SW_scratch21_reg = 2147498216 0 32 b00000000000000000000000000000000 RW
SW_scratch21 = h800038e8 0 32 h0 RW HEX
; Desc_SW_scratch21 TX RTS Output BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch22_reg Address h800038ec
_SW_scratch22_reg = 2147498220 0 32 b00000000000000000000000000000000 RW
SW_scratch22 = h800038ec 0 32 h0 RW HEX
; Desc_SW_scratch22 TX RTS Output BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch23_reg Address h800038f0
_SW_scratch23_reg = 2147498224 0 32 b00000000000000000000000000000000 RW
SW_scratch23 = h800038f0 0 32 h0 RW HEX
; Desc_SW_scratch23 TX RTS Output BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch24_reg Address h800038f4
_SW_scratch24_reg = 2147498228 0 32 b00000000000000000000000000000000 RW
SW_scratch24 = h800038f4 0 32 h0 RW HEX
; Desc_SW_scratch24 TX RTS Output BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch25_reg Address h800038f8
_SW_scratch25_reg = 2147498232 0 32 b00000000000000000000000000000000 RW
SW_scratch25 = h800038f8 0 32 h0 RW HEX
; Desc_SW_scratch25 TX RTS Output BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch26_reg Address h800038fc
_SW_scratch26_reg = 2147498236 0 32 b00000000000000000000000000000000 RW
SW_scratch26 = h800038fc 0 32 h0 RW HEX
; Desc_SW_scratch26 TX RTS Output BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch27_reg Address h80003900
_SW_scratch27_reg = 2147498240 0 32 b00000000000000000000000000000000 RW
SW_scratch27 = h80003900 0 32 h0 RW HEX
; Desc_SW_scratch27 TX RTS Output BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch28_reg Address h80003904
_SW_scratch28_reg = 2147498244 0 32 b00000000000000000000000000000000 RW
SW_scratch28 = h80003904 0 32 h0 RW HEX
; Desc_SW_scratch28 TX RTS Output BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch29_reg Address h80003908
_SW_scratch29_reg = 2147498248 0 32 b00000000000000000000000000000000 RW
SW_scratch29 = h80003908 0 32 h0 RW HEX
; Desc_SW_scratch29 TX RTS Output BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch30_reg Address h8000390c
_SW_scratch30_reg = 2147498252 0 32 b00000000000000000000000000000000 RW
SW_scratch30 = h8000390c 0 32 h0 RW HEX
; Desc_SW_scratch30 TX RTS Output BW Meter Histogram (after the Fetch Pacer)



; REGISTER SW_scratch31_reg Address h80003910
_SW_scratch31_reg = 2147498256 0 32 b00000000000000000000000000000000 RW
SW_scratch31 = h80003910 0 32 h0 RW HEX
; Desc_SW_scratch31 TX RTS Output BW Meter Histogram (after the Fetch Pacer)



; REGISTER soc_pwm0_high_cycles_reg Address h80003a00
_soc_pwm0_high_cycles_reg = 2147498496 0 32 b00000000000000000000000000001010 RW
soc_pwm0_high_cycles = h80003a00 0 32 ha RW HEX
; Desc_soc_pwm0_high_cycles TX RTS Output BW Meter Histogram (after the Fetch Pacer)



; REGISTER soc_pwm0_low_cycles_reg Address h80003a04
_soc_pwm0_low_cycles_reg = 2147498500 0 32 b00000000000000000000000000001010 RW
soc_pwm0_low_cycles = h80003a04 0 32 ha RW HEX
; Desc_soc_pwm0_low_cycles TX RTS Output BW Meter Histogram (after the Fetch Pacer)



; REGISTER soc_pwm0_pwm_cfg Address h80003a08
_soc_pwm0_pwm_cfg = 2147498504 0 32 b00000000000000000000000000000000 RW
soc_pwm0_mode = h80003a08 0 2 h0 RW HEX
; Desc_soc_pwm0_mode TX RTS Output BW Meter Histogram (after the Fetch Pacer)
soc_pwm0_enable = h80003a08 2 1 h0 RW BIN
; Desc_soc_pwm0_enable TX RTS Output BW Meter Histogram (after the Fetch Pacer)



; REGISTER soc_pwm1_high_cycles_reg Address h80003a10
_soc_pwm1_high_cycles_reg = 2147498512 0 32 b00000000000000000000000000001010 RW
soc_pwm1_high_cycles = h80003a10 0 32 ha RW HEX
; Desc_soc_pwm1_high_cycles TX RTS Output BW Meter Histogram (after the Fetch Pacer)



; REGISTER soc_pwm1_low_cycles_reg Address h80003a14
_soc_pwm1_low_cycles_reg = 2147498516 0 32 b00000000000000000000000000001010 RW
soc_pwm1_low_cycles = h80003a14 0 32 ha RW HEX
; Desc_soc_pwm1_low_cycles TX RTS Output BW Meter Histogram (after the Fetch Pacer)



; REGISTER soc_pwm1_pwm_cfg Address h80003a18
_soc_pwm1_pwm_cfg = 2147498520 0 32 b00000000000000000000000000000000 RW
soc_pwm1_mode = h80003a18 0 2 h0 RW HEX
; Desc_soc_pwm1_mode TX RTS Output BW Meter Histogram (after the Fetch Pacer)
soc_pwm1_enable = h80003a18 2 1 h0 RW BIN
; Desc_soc_pwm1_enable TX RTS Output BW Meter Histogram (after the Fetch Pacer)



; REGISTER soc_pwm2_high_cycles_reg Address h80003a20
_soc_pwm2_high_cycles_reg = 2147498528 0 32 b00000000000000000000000000001010 RW
soc_pwm2_high_cycles = h80003a20 0 32 ha RW HEX
; Desc_soc_pwm2_high_cycles configurable TX Additional fixed delayscalculated as the number of cycles after leaving the ApktTxRTS



; REGISTER soc_pwm2_low_cycles_reg Address h80003a24
_soc_pwm2_low_cycles_reg = 2147498532 0 32 b00000000000000000000000000001010 RW
soc_pwm2_low_cycles = h80003a24 0 32 ha RW HEX
; Desc_soc_pwm2_low_cycles timeout configuration in case the Async FIFO is not empty but still did not reach the threshold



; REGISTER soc_pwm2_pwm_cfg Address h80003a28
_soc_pwm2_pwm_cfg = 2147498536 0 32 b00000000000000000000000000000000 RW
soc_pwm2_mode = h80003a28 0 2 h0 RW HEX
; Desc_soc_pwm2_mode PCS IF TX trn clock testbus select
soc_pwm2_enable = h80003a28 2 1 h0 RW BIN
; Desc_soc_pwm2_enable PCS IF TX trn clock testbus select



; REGISTER soc_pwm3_high_cycles_reg Address h80003a30
_soc_pwm3_high_cycles_reg = 2147498544 0 32 b00000000000000000000000000001010 RW
soc_pwm3_high_cycles = h80003a30 0 32 ha RW HEX
; Desc_soc_pwm3_high_cycles TX Retransmission requests Statistics counters enable



; REGISTER soc_pwm3_low_cycles_reg Address h80003a34
_soc_pwm3_low_cycles_reg = 2147498548 0 32 b00000000000000000000000000001010 RW
soc_pwm3_low_cycles = h80003a34 0 32 ha RW HEX
; Desc_soc_pwm3_low_cycles Max Time between Retrain Signal from TX PCS until CMR (sCMax) Indication is Received



; REGISTER soc_pwm3_pwm_cfg Address h80003a38
_soc_pwm3_pwm_cfg = 2147498552 0 32 b00000000000000000000000000000000 RW
soc_pwm3_mode = h80003a38 0 2 h0 RW HEX
; Desc_soc_pwm3_mode Sum of all 'RetrainTime' accumulated since last clear signal
soc_pwm3_enable = h80003a38 2 1 h0 RW BIN
; Desc_soc_pwm3_enable Sum of all 'RetrainTime' accumulated since last clear signal



; REGISTER soc_pwm0_ctrl_reg Address h80003a40
_soc_pwm0_ctrl_reg = 2147498560 0 32 b00000000000000000000000000000000 RW
soc_pwm0_ctrl = h80003a40 0 1 h0 RW BIN
; Desc_soc_pwm0_ctrl MaxRetrainTime Interrupt Threshold



; REGISTER soc_pwm1_ctrl_reg Address h80003a44
_soc_pwm1_ctrl_reg = 2147498564 0 32 b00000000000000000000000000000000 RW
soc_pwm1_ctrl = h80003a44 0 1 h0 RW BIN
; Desc_soc_pwm1_ctrl ApktTxDelayCalc block errors status (sticky bits)



; REGISTER soc_pwm2_ctrl_reg Address h80003a48
_soc_pwm2_ctrl_reg = 2147498568 0 32 b00000000000000000000000000000000 RW
soc_pwm2_ctrl = h80003a48 0 1 h0 RW BIN
; Desc_soc_pwm2_ctrl Enable block operation



; REGISTER soc_pwm3_ctrl_reg Address h80003a4c
_soc_pwm3_ctrl_reg = 2147498572 0 32 b00000000000000000000000000000000 RW
soc_pwm3_ctrl = h80003a4c 0 1 h0 RW BIN
; Desc_soc_pwm3_ctrl The original header field will perform logical AND operation with the correspond bits from this vector.



; REGISTER h1_external0_int_mask_reg Address h80003b00
_h1_external0_int_mask_reg = 2147498752 0 32 b11111111111111111111111111111111 RW
h1_external0_int_mask = h80003b00 0 32 hffffffff RW HEX
; Desc_h1_external0_int_mask The original header field will perform logical AND operation with the correspond bits from this vector.



; REGISTER h1_internal0_int_mask_reg Address h80003b04
_h1_internal0_int_mask_reg = 2147498756 0 27 b00000111111111111111111111111111 RW
h1_internal0_int_mask = h80003b04 0 27 h7ffffff RW HEX
; Desc_h1_internal0_int_mask The result of the AND operation will perform logical OR operation with the correspond bits from this vector



; REGISTER h1_external1_int_mask_reg Address h80003b08
_h1_external1_int_mask_reg = 2147498760 0 32 b11111111111111111111111111111111 RW
h1_external1_int_mask = h80003b08 0 32 hffffffff RW HEX
; Desc_h1_external1_int_mask The result of the AND operation will perform logical OR operation with the correspond bits from this vector



; REGISTER h1_internal1_int_mask_reg Address h80003b0c
_h1_internal1_int_mask_reg = 2147498764 0 27 b00000111111111111111111111111111 RW
h1_internal1_int_mask = h80003b0c 0 27 h7ffffff RW HEX
; Desc_h1_internal1_int_mask The result of the OR operation will perform logical XOR operation with the correspond bits from this vector



; REGISTER h2_external0_int_mask_reg Address h80003b40
_h2_external0_int_mask_reg = 2147498816 0 32 b11111111111111111111111111111111 RW
h2_external0_int_mask = h80003b40 0 32 hffffffff RW HEX
; Desc_h2_external0_int_mask The result of the OR operation will perform logical XOR operation with the correspond bits from this vector



; REGISTER h2_internal0_int_mask_reg Address h80003b44
_h2_internal0_int_mask_reg = 2147498820 0 27 b00000111111111111111111111111111 RW
h2_internal0_int_mask = h80003b44 0 27 h7ffffff RW HEX
; Desc_h2_internal0_int_mask The initial value of the PRBS register after reset



; REGISTER h2_external1_int_mask_reg Address h80003b48
_h2_external1_int_mask_reg = 2147498824 0 32 b11111111111111111111111111111111 RW
h2_external1_int_mask = h80003b48 0 32 hffffffff RW HEX
; Desc_h2_external1_int_mask Set the min value for error ratio



; REGISTER h2_internal1_int_mask_reg Address h80003b4c
_h2_internal1_int_mask_reg = 2147498828 0 27 b00000111111111111111111111111111 RW
h2_internal1_int_mask = h80003b4c 0 27 h7ffffff RW HEX
; Desc_h2_internal1_int_mask Stop error injection after injecting errors to cont_limit A-packets – value of 0 in this port is continuous mode without limit



; REGISTER gpio_data_reg_0 Address h80000100
_gpio_data_reg_0 = 2147483904 0 32 b00000000000000000000000000000000 RW
gpio_data_0 = h80000100 0 32 h0 RW HEX
; Desc_gpio_data_0 Chip Version



; REGISTER gpio_data_reg_1 Address h80000104
_gpio_data_reg_1 = 2147483908 0 32 b00000000000000000000000000000000 RW
gpio_data_1 = h80000104 0 32 h0 RW HEX
; Desc_gpio_data_1 Enable Debug Port Access to secure places



; REGISTER gpio_data_reg_2 Address h80000108
_gpio_data_reg_2 = 2147483912 0 32 b00000000000000000000000000000000 RW
gpio_data_2 = h80000108 0 32 h0 RW HEX
; Desc_gpio_data_2 Clock Source for system clock select



; REGISTER TSWSOC_Block_Reset_1_done Address h80010014
_TSWSOC_Block_Reset_1_done = 2147549204 0 32 b00000000000000000000000000000000 RO
tswsoc_blocks_reset_done[31:0] = h80010014 0 32 h0 RO HEX
; Desc_tswsoc_blocks_reset_done[31:0]  'one hot' hot field that indicates the port of which rx_ove counter be cleared.
Mips34Kc_reset_n_done = h80010014 0 1 h0 RO BIN
arbiter_reset_n_done = h80010014 1 1 h0 RO BIN
PmsUart_reset_n_done = h80010014 2 1 h0 RO BIN
qspi_reset_n_done = h80010014 3 1 h0 RO BIN
Rom_reset_n_done = h80010014 4 1 h0 RO BIN
watchdog_reset_n_done = h80010014 5 1 h0 RO BIN
i2c_slave_reset_n_done = h80010014 6 1 h0 RO BIN
SGPHY_reset_n_done = h80010014 7 1 h0 RO BIN
ethernet_mac_reset_n_done = h80010014 8 1 h0 RO BIN
tswsoc_register_block_reset_n_done = h80010014 9 1 h0 RO BIN
hdcp_coprocessor_reset_n_done = h80010014 10 1 h0 RO BIN
zerozin_hdcp_reset_n_done = h80010014 11 1 h0 RO BIN
tb_chain_reset_n_done = h80010014 12 1 h0 RO BIN
tsw_dma_reset_n_done = h80010014 13 1 h0 RO BIN
efuse_reset_n_done = h80010014 14 1 h0 RO BIN
otp0_reset_n_done = h80010014 15 1 h0 RO BIN
test_cpu_reset_n_done = h80010014 16 1 h0 RO BIN
boot_loader_reset_n_done = h80010014 17 1 h0 RO BIN
fbc_reset_n_done = h80010014 18 1 h0 RO BIN
ram_protection_reset_n_done = h80010014 19 1 h0 RO BIN
rom_protection_reset_n_done = h80010014 20 1 h0 RO BIN
otp1_reset_n_done = h80010014 21 1 h0 RO BIN
otp2_reset_n_done = h80010014 22 1 h0 RO BIN
otp3_reset_n_done = h80010014 23 1 h0 RO BIN
acmp0_reset_n_done = h80010014 24 1 h0 RO BIN
i2c1_slave_reset_n_done = h80010014 25 1 h0 RO BIN
acmp1_reset_n_done = h80010014 26 1 h0 RO BIN
spi_sl_msg_reset_n_done = h80010014 27 1 h0 RO BIN
spare_04_28_reset_n_done = h80010014 28 1 h0 RO BIN
spare_04_29_reset_n_done = h80010014 29 1 h0 RO BIN
spare_04_30_reset_n_done = h80010014 30 1 h0 RO BIN
spare_04_31_reset_n_done = h80010014 31 1 h0 RO BIN



; REGISTER TSWSOC_Block_Reset_2_done Address h80010018
_TSWSOC_Block_Reset_2_done = 2147549208 0 32 b00000000000000000000000000000000 RO
tswsoc_blocks_reset_done[63:32] = h80010018 0 32 h0 RO HEX
; Desc_tswsoc_blocks_reset_done[63:32] int out of each port. 'OR' between 8 interrupts of each port.s[0] int out of HLIC port 0s[1] int out of HLIC port 1s…s[15] int out of HLIC port 15s[16] int out of EMAC port
rif_uart_00_reset_n_done = h80010018 0 1 h0 RO BIN
rif_uart_01_reset_n_done = h80010018 1 1 h0 RO BIN
rif_uart_02_reset_n_done = h80010018 2 1 h0 RO BIN
rif_uart_03_reset_n_done = h80010018 3 1 h0 RO BIN
pwm0_reset_n_done = h80010018 4 1 h0 RO BIN
pwm1_reset_n_done = h80010018 5 1 h0 RO BIN
pwm2_reset_n_done = h80010018 6 1 h0 RO BIN
pwm3_reset_n_done = h80010018 7 1 h0 RO BIN
spare_08_8_reset_n_done = h80010018 8 1 h0 RO BIN
spare_08_9_reset_n_done = h80010018 9 1 h0 RO BIN
spare_08_10_reset_n_done = h80010018 10 1 h0 RO BIN
spare_08_11_reset_n_done = h80010018 11 1 h0 RO BIN
spare_08_12_reset_n_done = h80010018 12 1 h0 RO BIN
spare_08_13_reset_n_done = h80010018 13 1 h0 RO BIN
spare_08_14_reset_n_done = h80010018 14 1 h0 RO BIN
spare_08_15_reset_n_done = h80010018 15 1 h0 RO BIN
spare_08_16_reset_n_done = h80010018 16 1 h0 RO BIN
spare_08_17_reset_n_done = h80010018 17 1 h0 RO BIN
spare_08_18_reset_n_done = h80010018 18 1 h0 RO BIN
spare_08_19_reset_n_done = h80010018 19 1 h0 RO BIN
Master_I2C_reset_n_done = h80010018 20 1 h0 RO BIN
spare_08_21_reset_n_done = h80010018 21 1 h0 RO BIN
spare_08_22_reset_n_done = h80010018 22 1 h0 RO BIN
spare_08_23_reset_n_done = h80010018 23 1 h0 RO BIN
spare_08_24_reset_n_done = h80010018 24 1 h0 RO BIN
spare_08_25_reset_n_done = h80010018 25 1 h0 RO BIN
spare_08_26_reset_n_done = h80010018 26 1 h0 RO BIN
spare_08_27_reset_n_done = h80010018 27 1 h0 RO BIN
spare_08_28_reset_n_done = h80010018 28 1 h0 RO BIN
spare_08_29_reset_n_done = h80010018 29 1 h0 RO BIN
spare_08_30_reset_n_done = h80010018 30 1 h0 RO BIN
spare_08_31_reset_n_done = h80010018 31 1 h0 RO BIN



; REGISTER TSWSOC_Block_Reset_3_done Address h8001001c
_TSWSOC_Block_Reset_3_done = 2147549212 0 32 b00000000000000000000000000000000 RO
tswsoc_blocks_reset_done[95:64] = h8001001c 0 32 h0 RO HEX
; Desc_tswsoc_blocks_reset_done[95:64] The value in this register determines the time interval elapsed between two adjacent polling of the same HLIC Tx BDring after end of transmission due to emptiness of the Tx BDRing .  sThis situation is detected by the DMA when there is no BD with its R bit set to 1. 
vm_clk_reset_n_done = h8001001c 0 1 h0 RO BIN
vm_0_reset_n_done = h8001001c 1 1 h0 RO BIN
vm_1_reset_n_done = h8001001c 2 1 h0 RO BIN
vm_2_reset_n_done = h8001001c 3 1 h0 RO BIN
vm_3_reset_n_done = h8001001c 4 1 h0 RO BIN
vm_4_reset_n_done = h8001001c 5 1 h0 RO BIN
vm_5_reset_n_done = h8001001c 6 1 h0 RO BIN
vm_6_reset_n_done = h8001001c 7 1 h0 RO BIN
vm_7_reset_n_done = h8001001c 8 1 h0 RO BIN
ts_clk_reset_n_done = h8001001c 9 1 h0 RO BIN
ts_0_reset_n_done = h8001001c 10 1 h0 RO BIN
ts_1_reset_n_done = h8001001c 11 1 h0 RO BIN
ts_2_reset_n_done = h8001001c 12 1 h0 RO BIN
ts_3_reset_n_done = h8001001c 13 1 h0 RO BIN
ts_4_reset_n_done = h8001001c 14 1 h0 RO BIN
ts_5_reset_n_done = h8001001c 15 1 h0 RO BIN
ts_6_reset_n_done = h8001001c 16 1 h0 RO BIN
ts_7_reset_n_done = h8001001c 17 1 h0 RO BIN
pd_clk_reset_n_done = h8001001c 18 1 h0 RO BIN
pd_0_clk_reset_n_done = h8001001c 19 1 h0 RO BIN
pd_1_clk_reset_n_done = h8001001c 20 1 h0 RO BIN
pd_2_clk_reset_n_done = h8001001c 21 1 h0 RO BIN
pd_3_clk_reset_n_done = h8001001c 22 1 h0 RO BIN
pd_4_clk_reset_n_done = h8001001c 23 1 h0 RO BIN
pd_5_clk_reset_n_done = h8001001c 24 1 h0 RO BIN
pd_6_clk_reset_n_done = h8001001c 25 1 h0 RO BIN
pd_7_clk_reset_n_done = h8001001c 26 1 h0 RO BIN
spare_0C_27_reset_n_done = h8001001c 27 1 h0 RO BIN
spare_0C_28_reset_n_done = h8001001c 28 1 h0 RO BIN
spare_0C_29_reset_n_done = h8001001c 29 1 h0 RO BIN
spare_0C_30_reset_n_done = h8001001c 30 1 h0 RO BIN
spare_0C_31_reset_n_done = h8001001c 31 1 h0 RO BIN



; REGISTER TSWSOC_Mips_SW_Reset Address h80010010
_TSWSOC_Mips_SW_Reset = 2147549200 0 32 b00000000000000000000000000000000 SC



; REGISTER TSWSOC_Block_Reset_1 Address h80010004
_TSWSOC_Block_Reset_1 = 2147549188 0 32 b00000000000110010100001000011111 RW
tswsoc_blocks_reset_n[31:0] = h80010004 0 32 h19421f RW HEX
; Desc_tswsoc_blocks_reset_n[31:0] clear interrupts in interrupt controller bits [63:32] for VPE0 - write 1 to clear a specific interrupt source (generates internal clear pulse)
Mips34Kc_reset_n = h80010004 0 1 h1 RW BIN
>>DESC Mips34Kc_reset_n = 2, b0, reset, b1, enable
arbiter_reset_n = h80010004 1 1 h1 RW BIN
>>DESC arbiter_reset_n = 2, b0, reset, b1, enable
PmsUart_reset_n = h80010004 2 1 h1 RW BIN
>>DESC PmsUart_reset_n = 2, b0, reset, b1, enable
qspi_reset_n = h80010004 3 1 h1 RW BIN
>>DESC qspi_reset_n = 2, b0, reset, b1, enable
Rom_reset_n = h80010004 4 1 h1 RW BIN
>>DESC Rom_reset_n = 2, b0, reset, b1, enable
watchdog_reset_n = h80010004 5 1 h0 RW BIN
>>DESC watchdog_reset_n = 2, b0, reset, b1, enable
i2c_slave_reset_n = h80010004 6 1 h0 RW BIN
>>DESC i2c_slave_reset_n = 2, b0, reset, b1, enable
SGPHY_reset_n = h80010004 7 1 h0 RW BIN
>>DESC SGPHY_reset_n = 2, b0, reset, b1, enable
ethernet_mac_reset_n = h80010004 8 1 h0 RW BIN
>>DESC ethernet_mac_reset_n = 2, b0, reset, b1, enable
tswsoc_register_block_reset_n = h80010004 9 1 h1 RW BIN
>>DESC tswsoc_register_block_reset_n = 2, b0, reset, b1, enable
hdcp_coprocessor_reset_n = h80010004 10 1 h0 RW BIN
>>DESC hdcp_coprocessor_reset_n = 2, b0, reset, b1, enable
zerozin_hdcp_reset_n = h80010004 11 1 h0 RW BIN
>>DESC zerozin_hdcp_reset_n = 2, b0, reset, b1, enable
tb_chain_reset_n = h80010004 12 1 h0 RW BIN
>>DESC tb_chain_reset_n = 2, b0, reset, b1, enable
tsw_dma_reset_n = h80010004 13 1 h0 RW BIN
>>DESC tsw_dma_reset_n = 2, b0, reset, b1, enable
efuse_reset_n = h80010004 14 1 h1 RW BIN
>>DESC efuse_reset_n = 2, b0, reset, b1, enable
otp0_reset_n = h80010004 15 1 h0 RW BIN
>>DESC otp0_reset_n = 2, b0, reset, b1, enable
test_cpu_reset_n = h80010004 16 1 h1 RW BIN
>>DESC test_cpu_reset_n = 2, b0, reset, b1, enable
boot_loader_reset_n = h80010004 17 1 h0 RW BIN
>>DESC boot_loader_reset_n = 2, b0, reset, b1, enable
fbc_reset_n = h80010004 18 1 h0 RW BIN
>>DESC fbc_reset_n = 2, b0, reset, b1, enable
ram_protection_reset_n = h80010004 19 1 h1 RW BIN
>>DESC ram_protection_reset_n = 2, b0, reset, b1, enable
rom_protection_reset_n = h80010004 20 1 h1 RW BIN
>>DESC rom_protection_reset_n = 2, b0, reset, b1, enable
otp1_reset_n = h80010004 21 1 h0 RW BIN
>>DESC otp1_reset_n = 2, b0, reset, b1, enable
otp2_reset_n = h80010004 22 1 h0 RW BIN
>>DESC otp2_reset_n = 2, b0, reset, b1, enable
otp3_reset_n = h80010004 23 1 h0 RW BIN
>>DESC otp3_reset_n = 2, b0, reset, b1, enable
acmp0_reset_n = h80010004 24 1 h0 RW BIN
>>DESC acmp0_reset_n = 2, b0, reset, b1, enable
i2c1_slave_reset_n = h80010004 25 1 h0 RW BIN
>>DESC i2c1_slave_reset_n = 2, b0, reset, b1, enable
acmp1_reset_n = h80010004 26 1 h0 RW BIN
>>DESC acmp1_reset_n = 2, b0, reset, b1, enable
spi_sl_msg_reset_n = h80010004 27 1 h0 RW BIN
>>DESC spi_sl_msg_reset_n = 2, b0, reset, b1, enable
spare_04_28_reset_n = h80010004 28 1 h0 RW BIN
>>DESC spare_04_28_reset_n = 2, b0, reset, b1, enable
spare_04_29_reset_n = h80010004 29 1 h0 RW BIN
>>DESC spare_04_29_reset_n = 2, b0, reset, b1, enable
spare_04_30_reset_n = h80010004 30 1 h0 RW BIN
>>DESC spare_04_30_reset_n = 2, b0, reset, b1, enable
spare_04_31_reset_n = h80010004 31 1 h0 RW BIN
>>DESC spare_04_31_reset_n = 2, b0, reset, b1, enable



; REGISTER TSWSOC_Block_Reset_2 Address h80010008
_TSWSOC_Block_Reset_2 = 2147549192 0 32 b00000000000000000000000000000000 RW
tswsoc_blocks_reset_n[63:32] = h80010008 0 32 h0 RW HEX
; Desc_tswsoc_blocks_reset_n[63:32] mask interrupts in interrupt controller bits [31:0]  for VPE1: mask = 1
rif_uart_00_reset_n = h80010008 0 1 h0 RW BIN
>>DESC rif_uart_00_reset_n = 2, b0, reset, b1, enable
rif_uart_01_reset_n = h80010008 1 1 h0 RW BIN
>>DESC rif_uart_01_reset_n = 2, b0, reset, b1, enable
rif_uart_02_reset_n = h80010008 2 1 h0 RW BIN
>>DESC rif_uart_02_reset_n = 2, b0, reset, b1, enable
rif_uart_03_reset_n = h80010008 3 1 h0 RW BIN
>>DESC rif_uart_03_reset_n = 2, b0, reset, b1, enable
pwm0_reset_n = h80010008 4 1 h0 RW BIN
>>DESC pwm0_reset_n = 2, b0, reset, b1, enable
pwm1_reset_n = h80010008 5 1 h0 RW BIN
>>DESC pwm1_reset_n = 2, b0, reset, b1, enable
pwm2_reset_n = h80010008 6 1 h0 RW BIN
>>DESC pwm2_reset_n = 2, b0, reset, b1, enable
pwm3_reset_n = h80010008 7 1 h0 RW BIN
>>DESC pwm3_reset_n = 2, b0, reset, b1, enable
spare_08_8_reset_n = h80010008 8 1 h0 RW BIN
>>DESC spare_08_8_reset_n = 2, b0, reset, b1, enable
spare_08_9_reset_n = h80010008 9 1 h0 RW BIN
>>DESC spare_08_9_reset_n = 2, b0, reset, b1, enable
spare_08_10_reset_n = h80010008 10 1 h0 RW BIN
>>DESC spare_08_10_reset_n = 2, b0, reset, b1, enable
spare_08_11_reset_n = h80010008 11 1 h0 RW BIN
>>DESC spare_08_11_reset_n = 2, b0, reset, b1, enable
spare_08_12_reset_n = h80010008 12 1 h0 RW BIN
>>DESC spare_08_12_reset_n = 2, b0, reset, b1, enable
spare_08_13_reset_n = h80010008 13 1 h0 RW BIN
>>DESC spare_08_13_reset_n = 2, b0, reset, b1, enable
spare_08_14_reset_n = h80010008 14 1 h0 RW BIN
>>DESC spare_08_14_reset_n = 2, b0, reset, b1, enable
spare_08_15_reset_n = h80010008 15 1 h0 RW BIN
>>DESC spare_08_15_reset_n = 2, b0, reset, b1, enable
spare_08_16_reset_n = h80010008 16 1 h0 RW BIN
>>DESC spare_08_16_reset_n = 2, b0, reset, b1, enable
spare_08_17_reset_n = h80010008 17 1 h0 RW BIN
>>DESC spare_08_17_reset_n = 2, b0, reset, b1, enable
spare_08_18_reset_n = h80010008 18 1 h0 RW BIN
>>DESC spare_08_18_reset_n = 2, b0, reset, b1, enable
spare_08_19_reset_n = h80010008 19 1 h0 RW BIN
>>DESC spare_08_19_reset_n = 2, b0, reset, b1, enable
Master_I2C_reset_n = h80010008 20 1 h0 RW BIN
>>DESC Master_I2C_reset_n = 2, b0, reset, b1, enable
spare_08_21_reset_n = h80010008 21 1 h0 RW BIN
>>DESC spare_08_21_reset_n = 2, b0, reset, b1, enable
spare_08_22_reset_n = h80010008 22 1 h0 RW BIN
>>DESC spare_08_22_reset_n = 2, b0, reset, b1, enable
spare_08_23_reset_n = h80010008 23 1 h0 RW BIN
>>DESC spare_08_23_reset_n = 2, b0, reset, b1, enable
spare_08_24_reset_n = h80010008 24 1 h0 RW BIN
>>DESC spare_08_24_reset_n = 2, b0, reset, b1, enable
spare_08_25_reset_n = h80010008 25 1 h0 RW BIN
>>DESC spare_08_25_reset_n = 2, b0, reset, b1, enable
spare_08_26_reset_n = h80010008 26 1 h0 RW BIN
>>DESC spare_08_26_reset_n = 2, b0, reset, b1, enable
spare_08_27_reset_n = h80010008 27 1 h0 RW BIN
>>DESC spare_08_27_reset_n = 2, b0, reset, b1, enable
spare_08_28_reset_n = h80010008 28 1 h0 RW BIN
>>DESC spare_08_28_reset_n = 2, b0, reset, b1, enable
spare_08_29_reset_n = h80010008 29 1 h0 RW BIN
>>DESC spare_08_29_reset_n = 2, b0, reset, b1, enable
spare_08_30_reset_n = h80010008 30 1 h0 RW BIN
>>DESC spare_08_30_reset_n = 2, b0, reset, b1, enable
spare_08_31_reset_n = h80010008 31 1 h0 RW BIN
>>DESC spare_08_31_reset_n = 2, b0, reset, b1, enable



; REGISTER TSWSOC_Block_Reset_3 Address h8001000c
_TSWSOC_Block_Reset_3 = 2147549196 0 32 b00000000000000000000000000000000 RW
tswsoc_blocks_reset_n[95:64] = h8001000c 0 32 h0 RW HEX
; Desc_tswsoc_blocks_reset_n[95:64] interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 16 to 20
vm_clk_reset_n = h8001000c 0 1 h0 RW BIN
>>DESC vm_clk_reset_n = 2, b0, reset, b1, enable
vm_0_reset_n = h8001000c 1 1 h0 RW BIN
>>DESC vm_0_reset_n = 2, b0, reset, b1, enable
vm_1_reset_n = h8001000c 2 1 h0 RW BIN
>>DESC vm_1_reset_n = 2, b0, reset, b1, enable
vm_2_reset_n = h8001000c 3 1 h0 RW BIN
>>DESC vm_2_reset_n = 2, b0, reset, b1, enable
vm_3_reset_n = h8001000c 4 1 h0 RW BIN
>>DESC vm_3_reset_n = 2, b0, reset, b1, enable
vm_4_reset_n = h8001000c 5 1 h0 RW BIN
>>DESC vm_4_reset_n = 2, b0, reset, b1, enable
vm_5_reset_n = h8001000c 6 1 h0 RW BIN
>>DESC vm_5_reset_n = 2, b0, reset, b1, enable
vm_6_reset_n = h8001000c 7 1 h0 RW BIN
>>DESC vm_6_reset_n = 2, b0, reset, b1, enable
vm_7_reset_n = h8001000c 8 1 h0 RW BIN
>>DESC vm_7_reset_n = 2, b0, reset, b1, enable
ts_clk_reset_n = h8001000c 9 1 h0 RW BIN
>>DESC ts_clk_reset_n = 2, b0, reset, b1, enable
ts_0_reset_n = h8001000c 10 1 h0 RW BIN
>>DESC ts_0_reset_n = 2, b0, reset, b1, enable
ts_1_reset_n = h8001000c 11 1 h0 RW BIN
>>DESC ts_1_reset_n = 2, b0, reset, b1, enable
ts_2_reset_n = h8001000c 12 1 h0 RW BIN
>>DESC ts_2_reset_n = 2, b0, reset, b1, enable
ts_3_reset_n = h8001000c 13 1 h0 RW BIN
>>DESC ts_3_reset_n = 2, b0, reset, b1, enable
ts_4_reset_n = h8001000c 14 1 h0 RW BIN
>>DESC ts_4_reset_n = 2, b0, reset, b1, enable
ts_5_reset_n = h8001000c 15 1 h0 RW BIN
>>DESC ts_5_reset_n = 2, b0, reset, b1, enable
ts_6_reset_n = h8001000c 16 1 h0 RW BIN
>>DESC ts_6_reset_n = 2, b0, reset, b1, enable
ts_7_reset_n = h8001000c 17 1 h0 RW BIN
>>DESC ts_7_reset_n = 2, b0, reset, b1, enable
pd_clk_reset_n = h8001000c 18 1 h0 RW BIN
>>DESC pd_clk_reset_n = 2, b0, reset, b1, enable
pd_0_clk_reset_n = h8001000c 19 1 h0 RW BIN
>>DESC pd_0_clk_reset_n = 2, b0, reset, b1, enable
pd_1_clk_reset_n = h8001000c 20 1 h0 RW BIN
>>DESC pd_1_clk_reset_n = 2, b0, reset, b1, enable
pd_2_clk_reset_n = h8001000c 21 1 h0 RW BIN
>>DESC pd_2_clk_reset_n = 2, b0, reset, b1, enable
pd_3_clk_reset_n = h8001000c 22 1 h0 RW BIN
>>DESC pd_3_clk_reset_n = 2, b0, reset, b1, enable
pd_4_clk_reset_n = h8001000c 23 1 h0 RW BIN
>>DESC pd_4_clk_reset_n = 2, b0, reset, b1, enable
pd_5_clk_reset_n = h8001000c 24 1 h0 RW BIN
>>DESC pd_5_clk_reset_n = 2, b0, reset, b1, enable
pd_6_clk_reset_n = h8001000c 25 1 h0 RW BIN
>>DESC pd_6_clk_reset_n = 2, b0, reset, b1, enable
pd_7_clk_reset_n = h8001000c 26 1 h0 RW BIN
>>DESC pd_7_clk_reset_n = 2, b0, reset, b1, enable
spare_0C_27_reset_n = h8001000c 27 1 h0 RW BIN
>>DESC spare_0C_27_reset_n = 2, b0, reset, b1, enable
spare_0C_28_reset_n = h8001000c 28 1 h0 RW BIN
>>DESC spare_0C_28_reset_n = 2, b0, reset, b1, enable
spare_0C_29_reset_n = h8001000c 29 1 h0 RW BIN
>>DESC spare_0C_29_reset_n = 2, b0, reset, b1, enable
spare_0C_30_reset_n = h8001000c 30 1 h0 RW BIN
>>DESC spare_0C_30_reset_n = 2, b0, reset, b1, enable
spare_0C_31_reset_n = h8001000c 31 1 h0 RW BIN
>>DESC spare_0C_31_reset_n = 2, b0, reset, b1, enable



; REGISTER fpga_status_0_reg Address h90000048
_fpga_status_0_reg = 2415919176 0 32 b00000000000000000000000000000000 RO
fpga_status_0 = h90000048 0 32 h0 RO HEX
; Desc_fpga_status_0 HLIC Maximum length of Rx data Buffer in octets.sAll Rx buffers are filled up to this value, unless End of packet or Rx error condition occurred. All Rx buffers should be at least as large as this value. This value cannot be changed on line while the DMA is operating. sThe value should be between 64 to 2048 and an integral power of 2.
adc_rx_rdy_phase_align_0 = h90000048 0 1 h0 RO BIN
adc_rx_rdy_phase_align_1 = h90000048 1 1 h0 RO BIN
adc_rx_rdy_word_align_0 = h90000048 2 1 h0 RO BIN
adc_rx_rdy_word_align_1 = h90000048 3 1 h0 RO BIN
dac_tx_rdy_phase_align_0 = h90000048 4 1 h0 RO BIN
dac_tx_rdy_phase_align_1 = h90000048 5 1 h0 RO BIN
dac_tx_rdy_word_align_0 = h90000048 6 1 h0 RO BIN
dac_tx_rdy_word_align_1 = h90000048 7 1 h0 RO BIN
dac_tx_lvds_txpll_lock_0 = h90000048 8 1 h0 RO BIN
dac_tx_lvds_txpll_lock_1 = h90000048 9 1 h0 RO BIN
dac_cn_tx_rdy_phase_align_0 = h90000048 10 1 h0 RO BIN
dac_cn_tx_rdy_phase_align_1 = h90000048 11 1 h0 RO BIN
dac_cn_tx_rdy_word_align_0 = h90000048 12 1 h0 RO BIN
dac_cn_tx_rdy_word_align_1 = h90000048 13 1 h0 RO BIN
dac_cn_tx_lvds_txpll_lock_0 = h90000048 14 1 h0 RO BIN
dac_cn_tx_lvds_txpll_lock_1 = h90000048 15 1 h0 RO BIN



; REGISTER fpga_status_1_reg Address h9000004c
_fpga_status_1_reg = 2415919180 0 32 b00000000000000000000000000000000 RO
fpga_status_1 = h9000004c 0 32 h0 RO HEX
; Desc_fpga_status_1 Init value in which each HLIC port's rx_timeout down counter is set at reset and when clear of rx_timeout_clk_evt
adc_rx_rdy_phase_align_2 = h9000004c 0 1 h0 RO BIN
adc_rx_rdy_phase_align_3 = h9000004c 1 1 h0 RO BIN
adc_rx_rdy_word_align_2 = h9000004c 2 1 h0 RO BIN
adc_rx_rdy_word_align_3 = h9000004c 3 1 h0 RO BIN
dac_tx_rdy_phase_align_2 = h9000004c 4 1 h0 RO BIN
dac_tx_rdy_phase_align_3 = h9000004c 5 1 h0 RO BIN
dac_tx_rdy_word_align_2 = h9000004c 6 1 h0 RO BIN
dac_tx_rdy_word_align_3 = h9000004c 7 1 h0 RO BIN
dac_tx_lvds_txpll_lock_2 = h9000004c 8 1 h0 RO BIN
dac_tx_lvds_txpll_lock_3 = h9000004c 9 1 h0 RO BIN
dac_cn_tx_rdy_phase_align_2 = h9000004c 10 1 h0 RO BIN
dac_cn_tx_rdy_phase_align_3 = h9000004c 11 1 h0 RO BIN
dac_cn_tx_rdy_word_align_2 = h9000004c 12 1 h0 RO BIN
dac_cn_tx_rdy_word_align_3 = h9000004c 13 1 h0 RO BIN
dac_cn_tx_lvds_txpll_lock_2 = h9000004c 14 1 h0 RO BIN
dac_cn_tx_lvds_txpll_lock_3 = h9000004c 15 1 h0 RO BIN



; REGISTER rom_bist_stat Address h90000090
_rom_bist_stat = 2415919248 0 32 b00000000000000000000000000000000 RO
rom_bist_result = h90000090 0 16 h0 RO HEX
; Desc_rom_bist_result The value in this register determines the time interval elapsed between two adjacent polling of the same EMAC Tx BDring after end of transmission due to emptiness of the Tx BDRing .  sThis situation is detected by the DMA when there is no BD with its R bit set to 1. 
rom_bist_done = h90000090 16 1 h0 RO BIN
; Desc_rom_bist_done The value in this register determines the time interval elapsed between two adjacent polling of the same EMAC Tx BDring after end of transmission due to emptiness of the Tx BDRing .  sThis situation is detected by the DMA when there is no BD with its R bit set to 1. 



; REGISTER ram_bist_stat Address h90000098
_ram_bist_stat = 2415919256 0 32 b00000000000000000000000000000000 RO
ram_bist_done = h90000098 0 1 h0 RO BIN
; Desc_ram_bist_done EMAC Maximum length of Rx data Buffer in octets.sAll Rx buffers are filled up to this value, unless End of packet or Rx error condition occurred. All Rx buffers should be at least as large as this value. This value cannot be changed on line while the DMA is operating. sThe value should be between 64 to 2048 and an integral power of 2.
ram_bist_fail = h90000098 1 1 h0 RO BIN
; Desc_ram_bist_fail EMAC Maximum length of Rx data Buffer in octets.sAll Rx buffers are filled up to this value, unless End of packet or Rx error condition occurred. All Rx buffers should be at least as large as this value. This value cannot be changed on line while the DMA is operating. sThe value should be between 64 to 2048 and an integral power of 2.
ram_bist_stm = h90000098 2 3 h0 RO HEX
; Desc_ram_bist_stm EMAC Maximum length of Rx data Buffer in octets.sAll Rx buffers are filled up to this value, unless End of packet or Rx error condition occurred. All Rx buffers should be at least as large as this value. This value cannot be changed on line while the DMA is operating. sThe value should be between 64 to 2048 and an integral power of 2.
ram_ctrl_stm = h90000098 7 4 h0 RO HEX
; Desc_ram_ctrl_stm EMAC Maximum length of Rx data Buffer in octets.sAll Rx buffers are filled up to this value, unless End of packet or Rx error condition occurred. All Rx buffers should be at least as large as this value. This value cannot be changed on line while the DMA is operating. sThe value should be between 64 to 2048 and an integral power of 2.
startup_bist_done = h90000098 11 1 h0 RO BIN
; Desc_startup_bist_done EMAC Maximum length of Rx data Buffer in octets.sAll Rx buffers are filled up to this value, unless End of packet or Rx error condition occurred. All Rx buffers should be at least as large as this value. This value cannot be changed on line while the DMA is operating. sThe value should be between 64 to 2048 and an integral power of 2.



; REGISTER chip_rev_id_reg Address h900000c0
_chip_rev_id_reg = 2415919296 0 32 b00000000000000000000000000000000 RO
chip_rev_id = h900000c0 0 32 h0 RO HEX
; Desc_chip_rev_id Init value in which EMAC port's rx_timeout down counter is set at reset and when clear of rx_timeout_clk_evt
rom_version = h900000c0 0 16 h0 RO HEX
chip_version_numbering = h900000c0 16 12 h0 RO HEX
chip_version_character = h900000c0 28 4 h0 RO HEX



; REGISTER rclk_pll_status_reg Address h90000f58
_rclk_pll_status_reg = 2415923032 0 32 b00000000000000000000000000000000 RO
rclk_pll_LOCK = h90000f58 0 1 h0 RO BIN
; Desc_rclk_pll_LOCK Port enable for Tx direction (scratchpad to port)
rclk_pll_OFFSETCALLOCK = h90000f58 1 1 h0 RO BIN
; Desc_rclk_pll_OFFSETCALLOCK Port enable for Tx direction (scratchpad to port)
rclk_pll_OFFSETCALOUT = h90000f58 2 12 h0 RO HEX
; Desc_rclk_pll_OFFSETCALOUT Port enable for Tx direction (scratchpad to port)



; REGISTER test_strap_val_reg Address h90000f78
_test_strap_val_reg = 2415923064 0 32 b00000000000000000000000000000000 RO
test_strap_val = h90000f78 0 4 h0 RO HEX
; Desc_test_strap_val Pointer to the base address of port's  Tx BD ring
test_mode = h90000f78 4 3 h0 RO HEX
; Desc_test_mode Pointer to the base address of port's  Tx BD ring



; REGISTER i2c_clk_data_reg Address h90000718
_i2c_clk_data_reg = 2415920920 0 32 b00000000000000000000000000000000 RO
i2c_mstr_scl_sync = h90000718 0 1 h0 RO BIN
; Desc_i2c_mstr_scl_sync Pointer to the base address of port's Rx BD ring
i2c_mstr_sda_sync = h90000718 1 1 h0 RO BIN
; Desc_i2c_mstr_sda_sync Pointer to the base address of port's Rx BD ring



; REGISTER afe_pll_status_reg Address h90000730
_afe_pll_status_reg = 2415920944 0 32 b00000000000000000000000000000000 RO
afe_pll_locked_ind = h90000730 0 1 h0 RO BIN
; Desc_afe_pll_locked_ind status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info
hdphy_cmn_pll_lockdet = h90000730 1 1 h0 RO BIN
; Desc_hdphy_cmn_pll_lockdet status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info
hdphy_cmn_pll_vcocal_done = h90000730 3 1 h0 RO BIN
; Desc_hdphy_cmn_pll_vcocal_done status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info



; REGISTER tba_int_stat_reg Address h90000870
_tba_int_stat_reg = 2415921264 0 32 b00000000000000000000000000000000 RO
tba_trigger_occured_stat = h90000870 0 1 h0 RO BIN
; Desc_tba_trigger_occured_stat Port enable for Tx direction (scratchpad to port)
tba_window_ready_stat = h90000870 1 1 h0 RO BIN
; Desc_tba_window_ready_stat Port enable for Tx direction (scratchpad to port)
tba_output_done_stat = h90000870 2 1 h0 RO BIN
; Desc_tba_output_done_stat Port enable for Tx direction (scratchpad to port)



; REGISTER tba_int_clr_reg Address h90000874
_tba_int_clr_reg = 2415921268 0 32 b00000000000000000000000000000000 SC
tba_trigger_occured_clr = h90000874 0 1 h0 SC BIN
; Desc_tba_trigger_occured_clr Pointer to the base address of port's  Tx BD ring
tba_window_ready_clr = h90000874 1 1 h0 SC BIN
; Desc_tba_window_ready_clr Pointer to the base address of port's  Tx BD ring
tba_output_done_clr = h90000874 2 1 h0 SC BIN
; Desc_tba_output_done_clr Pointer to the base address of port's  Tx BD ring



; REGISTER tba_rif_uart_stat_reg Address h90000880
_tba_rif_uart_stat_reg = 2415921280 0 32 b00000000000000000000000000000000 RO
tba_rif_uart_tx_fifo_used = h90000880 0 4 h0 RO HEX
; Desc_tba_rif_uart_tx_fifo_used Pointer to the base address of port's Rx BD ring
tba_rif_uart_tx_interrupt = h90000880 4 1 h0 RO BIN
; Desc_tba_rif_uart_tx_interrupt Pointer to the base address of port's Rx BD ring



; REGISTER tba_rif_rd_data_reg Address h90000890
_tba_rif_rd_data_reg = 2415921296 0 32 b00000000000000000000000000000000 SC
tba_rif_rd_data = h90000890 0 32 h0 SC HEX
; Desc_tba_rif_rd_data status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info



; REGISTER TBA_tba_status_write_ptr_reg Address h90000998
_TBA_tba_status_write_ptr_reg = 2415921560 0 32 b00000000000000000000000000000000 RO
TBA_tba_status_write_ptr = h90000998 0 16 h0 RO HEX
; Desc_TBA_tba_status_write_ptr Port enable for Tx direction (scratchpad to port)



; REGISTER TBA_tba_status_read_ptr_reg Address h9000099c
_TBA_tba_status_read_ptr_reg = 2415921564 0 32 b00000000000000000000000000000000 RO
TBA_tba_status_read_ptr = h9000099c 0 16 h0 RO HEX
; Desc_TBA_tba_status_read_ptr Pointer to the base address of port's  Tx BD ring



; REGISTER top_blocks_reset_done_reg Address h90002004
_top_blocks_reset_done_reg = 2415927300 0 32 b00000000000000000000000000000000 RO
top_blocks_reset_done = h90002004 0 32 h0 RO HEX
; Desc_top_blocks_reset_done Pointer to the base address of port's Rx BD ring
dac_afeif_reset_n_done = h90002004 0 1 h0 RO BIN
adc_afeif_reset_n_done = h90002004 1 1 h0 RO BIN
link_sys_reset_n_done = h90002004 8 1 h0 RO BIN
dsp_sys_reset_n_done = h90002004 9 1 h0 RO BIN
testbus_sys_reset_n_done = h90002004 11 1 h0 RO BIN
src_afe_sys_reset_n_done = h90002004 12 1 h0 RO BIN
csi_top_sys_reset_n_done = h90002004 13 1 h0 RO BIN
rts_sys_reset_n_done = h90002004 15 1 h0 RO BIN
trn_reset_n_done = h90002004 16 1 h0 RO BIN
pd_sys_reset_n_done = h90002004 19 1 h0 RO BIN
vm_sys_reset_n_done = h90002004 20 1 h0 RO BIN
ts_sys_reset_n_done = h90002004 21 1 h0 RO BIN
tba_sys_reset_n_done = h90002004 30 1 h0 RO BIN
tba_rif_uart_sys_reset_n_done = h90002004 31 1 h0 RO BIN



; REGISTER fpga_status_2_reg Address h90002014
_fpga_status_2_reg = 2415927316 0 32 b00000000000000000000000000000000 RO
fpga_status_2 = h90002014 0 32 h0 RO HEX
; Desc_fpga_status_2 status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info



; REGISTER fpga_status_3_reg Address h90002018
_fpga_status_3_reg = 2415927320 0 32 b00000000000000000000000000000000 RO
fpga_status_3 = h90002018 0 32 h0 RO HEX
; Desc_fpga_status_3 Port enable for Tx direction (scratchpad to port)



; REGISTER fpga_status_4_reg Address h9000201c
_fpga_status_4_reg = 2415927324 0 32 b00000000000000000000000000000000 RO
fpga_status_4 = h9000201c 0 32 h0 RO HEX
; Desc_fpga_status_4 Pointer to the base address of port's  Tx BD ring



; REGISTER fpga_status_5_reg Address h90002020
_fpga_status_5_reg = 2415927328 0 32 b00000000000000000000000000000000 RO
fpga_status_5 = h90002020 0 32 h0 RO HEX
; Desc_fpga_status_5 Pointer to the base address of port's Rx BD ring



; REGISTER fpga_status_6_reg Address h90002024
_fpga_status_6_reg = 2415927332 0 32 b00000000000000000000000000000000 RO
fpga_status_6 = h90002024 0 32 h0 RO HEX
; Desc_fpga_status_6 status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info



; REGISTER fpga_status_7_reg Address h90002028
_fpga_status_7_reg = 2415927336 0 32 b00000000000000000000000000000000 RO
fpga_status_7 = h90002028 0 32 h0 RO HEX
; Desc_fpga_status_7 defines the MIPS internal DMA arbiter priority for the D-RAM OCP
ytc_pll_dbg46_32 = h90002028 0 16 h0 RO HEX



; REGISTER fpga_status_8_reg Address h9000202c
_fpga_status_8_reg = 2415927340 0 32 b00000000000000000000000000000000 RO
fpga_status_8 = h9000202c 0 32 h0 RO HEX
; Desc_fpga_status_8 



; REGISTER fpga_status_9_reg Address h90002030
_fpga_status_9_reg = 2415927344 0 32 b00000000000000000000000000000000 RO
fpga_status_9 = h90002030 0 32 h0 RO HEX
; Desc_fpga_status_9 



; REGISTER fpga_status_10_reg Address h90002034
_fpga_status_10_reg = 2415927348 0 32 b00000000000000000000000000000000 RO
fpga_status_10 = h90002034 0 32 h0 RO HEX
; Desc_fpga_status_10 Efuse write ready indication



; REGISTER fpga_status_11_reg Address h90002038
_fpga_status_11_reg = 2415927352 0 32 b00000000000000000000000000000000 RO
fpga_status_11 = h90002038 0 32 h0 RO HEX
; Desc_fpga_status_11 (former Active Low Program Enable, will be driven from pads)



; REGISTER fpga_status_12_reg Address h9000203c
_fpga_status_12_reg = 2415927356 0 32 b00000000000000000000000000000000 RO
fpga_status_12 = h9000203c 0 32 h0 RO HEX
; Desc_fpga_status_12 mips access to read from OTP



; REGISTER fpga_status_13_reg Address h90002040
_fpga_status_13_reg = 2415927360 0 32 b00000000000000000000000000000000 RO
fpga_status_13 = h90002040 0 32 h0 RO HEX
; Desc_fpga_status_13 0 = disable clock to SBPI bus



; REGISTER fpga_status_14_reg Address h90002044
_fpga_status_14_reg = 2415927364 0 32 b00000000000000000000000000000000 RO
fpga_status_14 = h90002044 0 32 h0 RO HEX
; Desc_fpga_status_14 data write to the OTP



; REGISTER fpga_status_15_reg Address h90002048
_fpga_status_15_reg = 2415927368 0 32 b00000000000000000000000000000000 RO
fpga_status_15 = h90002048 0 32 h0 RO HEX
; Desc_fpga_status_15 store last o_MISO when FLAG was negated



; REGISTER safety_ctrl_intr_status Address h90002164
_safety_ctrl_intr_status = 2415927652 0 32 b00000000000000000000000000000000 RO
safety_intr_status = h90002164 0 7 h0 RO HEX
; Desc_safety_intr_status QSR output
main_safety_stm = h90002164 7 3 h0 RO HEX
; Desc_main_safety_stm QSR output



; REGISTER safety_ctrl_check_reg Address h90002168
_safety_ctrl_check_reg = 2415927656 0 32 b00000000000000000000000000000000 SC
safety_ctrl_reg_status = h90002168 0 20 h0 SC HEX
; Desc_safety_ctrl_reg_status QRR output



; REGISTER safety_ctrl_status0 Address h9000216c
_safety_ctrl_status0 = 2415927660 0 32 b00000000000000000000000000000000 SC
sm_sc_fail_status_0 = h9000216c 0 24 h0 SC HEX
; Desc_sm_sc_fail_status_0 data read (registers) from OTP



; REGISTER safety_ctrl_status01 Address h90002170
_safety_ctrl_status01 = 2415927664 0 32 b00000000000000000000000000000000 RO
sm_sc_fail_status_1 = h90002170 0 24 h0 RO HEX
; Desc_sm_sc_fail_status_1 QSR output



; REGISTER safety_ctrl_status1 Address h90002174
_safety_ctrl_status1 = 2415927668 0 32 b00000000000000000000000000000000 SC
sm_op_fail_status_0 = h90002174 0 24 h0 SC HEX
; Desc_sm_op_fail_status_0 width of CK in cycles (tRP - READ pulse width).  11.7ns - 1clk@50Mhz



; REGISTER safety_ctrl_status11 Address h90002178
_safety_ctrl_status11 = 2415927672 0 32 b00000000000000000000000000000000 RO
sm_op_fail_status_1 = h90002178 0 24 h0 RO HEX
; Desc_sm_op_fail_status_1 



; REGISTER safety_ctrl_status2 Address h9000217c
_safety_ctrl_status2 = 2415927676 0 32 b00000000000000000000000000000000 SC
sm_sc_done_status_0 = h9000217c 0 24 h0 SC HEX
; Desc_sm_sc_done_status_0 



; REGISTER safety_ctrl_status22 Address h90002180
_safety_ctrl_status22 = 2415927680 0 32 b00000000000000000000000000000000 RO
sm_sc_done_status_1 = h90002180 0 24 h0 RO HEX
; Desc_sm_sc_done_status_1 



; REGISTER safety_ctrl_status3 Address h90002184
_safety_ctrl_status3 = 2415927684 0 32 b00000000000000000000000000000000 SC
local_reg_check_status = h90002184 0 4 h0 SC HEX
; Desc_local_reg_check_status Indicates reference clock freq: 1 - 25Mhz, 0 - 125Mhz
safety_remote_in_err_status = h90002184 4 1 h0 SC BIN
; Desc_safety_remote_in_err_status Indicates reference clock freq: 1 - 25Mhz, 0 - 125Mhz
safety_in_err_status = h90002184 5 1 h0 SC BIN
; Desc_safety_in_err_status Indicates reference clock freq: 1 - 25Mhz, 0 - 125Mhz
sc_timer_exp_status = h90002184 6 1 h0 SC BIN
; Desc_sc_timer_exp_status Indicates reference clock freq: 1 - 25Mhz, 0 - 125Mhz
safety_remote_in_sc_err = h90002184 7 4 h0 SC HEX
; Desc_safety_remote_in_sc_err Indicates reference clock freq: 1 - 25Mhz, 0 - 125Mhz
safety_remote_in_err_bus = h90002184 11 4 h0 SC HEX
; Desc_safety_remote_in_err_bus Indicates reference clock freq: 1 - 25Mhz, 0 - 125Mhz
safety_in_sc_err = h90002184 15 1 h0 SC BIN
; Desc_safety_in_sc_err Indicates reference clock freq: 1 - 25Mhz, 0 - 125Mhz



; REGISTER sys_clk_target_cntr_val_reg Address h9000224c
_sys_clk_target_cntr_val_reg = 2415927884 0 32 b00000000000000000000000000000000 RO
sys_clk_target_cntr_val = h9000224c 0 32 h0 RO HEX
; Desc_sys_clk_target_cntr_val read timer 0 value, write set the value and start the timer 0



; REGISTER sys_clk_safety_reg_status_reg Address h90002250
_sys_clk_safety_reg_status_reg = 2415927888 0 32 b00000000000000000000000000000000 SC
sys_clk_safety_reg_status = h90002250 0 7 h0 SC HEX
; Desc_sys_clk_safety_reg_status read timer 1 value, write set the value and start the timer 1
sys_clk_min_target_lsb = h90002250 0 1 h0 SC BIN
sys_clk_min_target_msb = h90002250 1 1 h0 SC BIN
sys_clk_max_target_lsb = h90002250 2 1 h0 SC BIN
sys_clk_max_target_msb = h90002250 3 1 h0 SC BIN
sys_clk_twind_base_lsb = h90002250 4 1 h0 SC BIN
sys_clk_twind_base_msb = h90002250 5 1 h0 SC BIN
sys_clk_wait_oper_fail_ind = h90002250 6 1 h0 SC BIN



; REGISTER sys_clk_clk_mon_debug_reg Address h90002254
_sys_clk_clk_mon_debug_reg = 2415927892 0 32 b00000000000000000000000000000000 RO
sys_clk_clk_mon_debug = h90002254 0 6 h0 RO HEX
; Desc_sys_clk_clk_mon_debug read timer 2 value, write set the value and start the timer 2
sys_clk_sc_stm = h90002254 0 3 h0 RO HEX
sys_clk_main_stm = h90002254 3 3 h0 RO HEX



; REGISTER sys_clk_sc_status_reg Address h90002258
_sys_clk_sc_status_reg = 2415927896 0 32 b00000000000000000000000000000000 RO
sys_clk_sc_status = h90002258 0 4 h0 RO HEX
; Desc_sys_clk_sc_status read timer 3 value, write set the value and start the timer 3
sys_clk_safety_reg_fail = h90002258 4 1 h0 RO BIN
; Desc_sys_clk_safety_reg_fail read timer 3 value, write set the value and start the timer 3
sys_clk_bad_freq = h90002258 5 1 h0 RO BIN
; Desc_sys_clk_bad_freq read timer 3 value, write set the value and start the timer 3
sys_clk_max_comparator_fail = h90002258 0 1 h0 RO BIN
sys_clk_min_comparator_fail = h90002258 1 1 h0 RO BIN
sys_clk_target_cntr_zero = h90002258 2 1 h0 RO BIN
sys_clk_safety_reg_fail_sc_pms = h90002258 3 1 h0 RO BIN



; REGISTER pll_lock_safety_status_reg Address h90002304
_pll_lock_safety_status_reg = 2415928068 0 32 b00000000000000000000000000000000 RO
pll_lock_safety_reg_status = h90002304 0 1 h0 RO BIN
; Desc_pll_lock_safety_reg_status read timer 4 value, write set the value and start the timer 4
pll_lock_safety_mech_main_stm = h90002304 1 3 h0 RO HEX
; Desc_pll_lock_safety_mech_main_stm read timer 4 value, write set the value and start the timer 4



; REGISTER pll_lock_fail_intr_stat_reg Address h90002310
_pll_lock_fail_intr_stat_reg = 2415928080 0 32 b00000000000000000000000000000000 RO
pll_lock_fail_intr_stat = h90002310 0 1 h0 RO BIN
; Desc_pll_lock_fail_intr_stat read timer 5 value, write set the value and start the timer 5



; REGISTER pd_functional_measurement_read_register Address h90002440
_pd_functional_measurement_read_register = 2415928384 0 32 b00000000000000000000000000000000 RO
pd_functional_measurement_value = h90002440 0 12 h0 RO HEX
; Desc_pd_functional_measurement_value read timer 6 value, write set the value and start the timer 6



; REGISTER pd_functional_status_read_register Address h90002444
_pd_functional_status_read_register = 2415928388 0 32 b00000000000000000000000000000000 RO
pd_functional_status_value = h90002444 0 12 h0 RO HEX
; Desc_pd_functional_status_value read timer 7 value, write set the value and start the timer 7



; REGISTER pd_status_register Address h90002450
_pd_status_register = 2415928400 0 32 b00000000000000000000000000000100 RO
pd_rdy_measurement = h90002450 0 1 h0 RO BIN
; Desc_pd_rdy_measurement read timer 8 value, write set the value and start the timer 8
pd_rdy_status = h90002450 1 1 h0 RO BIN
; Desc_pd_rdy_status read timer 8 value, write set the value and start the timer 8
pd_rdy_to_load = h90002450 2 1 h1 RO BIN
; Desc_pd_rdy_to_load read timer 8 value, write set the value and start the timer 8
pd_timeout1 = h90002450 3 1 h0 RO BIN
; Desc_pd_timeout1 read timer 8 value, write set the value and start the timer 8



; REGISTER pd_error_register Address h90002454
_pd_error_register = 2415928404 0 32 b00000000000000000000000000000000 SC
pd_fault = h90002454 0 1 h0 SC BIN
; Desc_pd_fault read timer 9 value, write set the value and start the timer 9
pd_timeout = h90002454 1 1 h0 SC BIN
; Desc_pd_timeout read timer 9 value, write set the value and start the timer 9



; REGISTER pd_output_register Address h9000245c
_pd_output_register = 2415928412 0 32 b00000000000000000000000000000000 RO
pd_dout_value = h9000245c 0 12 h0 RO HEX
; Desc_pd_dout_value read timer 10 value, write set the value and start the timer 10
pd_dout_type_value = h9000245c 12 1 h0 RO BIN
; Desc_pd_dout_type_value read timer 10 value, write set the value and start the timer 10



; REGISTER functional_voltage_read_vin0_register Address h90002670
_functional_voltage_read_vin0_register = 2415928944 0 32 b00000000000000000000000000000000 SC
functional_voltage_read_crc_vin0 = h90002670 0 8 h0 SC HEX
; Desc_functional_voltage_read_crc_vin0 read timer 11 value, write set the value and start the timer 11
functional_voltage_value_vin0 = h90002670 8 14 h0 SC HEX
; Desc_functional_voltage_value_vin0 read timer 11 value, write set the value and start the timer 11
functional_voltage_measured_port_vin0 = h90002670 22 6 h0 SC HEX
; Desc_functional_voltage_measured_port_vin0 read timer 11 value, write set the value and start the timer 11
functional_voltage_seq_id_vin0 = h90002670 28 4 h0 SC HEX
; Desc_functional_voltage_seq_id_vin0 read timer 11 value, write set the value and start the timer 11



; REGISTER functional_voltage_read_vin1_register Address h90002674
_functional_voltage_read_vin1_register = 2415928948 0 32 b00000001000000000000000000000000 SC
functional_voltage_read_crc_vin1 = h90002674 0 8 h0 SC HEX
; Desc_functional_voltage_read_crc_vin1 read timer 12 value, write set the value and start the timer 12
functional_voltage_value_vin1 = h90002674 8 14 h0 SC HEX
; Desc_functional_voltage_value_vin1 read timer 12 value, write set the value and start the timer 12
functional_voltage_measured_port_vin1 = h90002674 22 6 h4 SC HEX
; Desc_functional_voltage_measured_port_vin1 read timer 12 value, write set the value and start the timer 12
functional_voltage_seq_id_vin1 = h90002674 28 4 h0 SC HEX
; Desc_functional_voltage_seq_id_vin1 read timer 12 value, write set the value and start the timer 12



; REGISTER functional_voltage_read_vin2_sel0_register Address h90002678
_functional_voltage_read_vin2_sel0_register = 2415928952 0 32 b00000010000000000000000000000000 SC
functional_voltage_read_crc_vin2_sel0 = h90002678 0 8 h0 SC HEX
; Desc_functional_voltage_read_crc_vin2_sel0 read timer 13 value, write set the value and start the timer 13
functional_voltage_value_vin2_sel0 = h90002678 8 14 h0 SC HEX
; Desc_functional_voltage_value_vin2_sel0 read timer 13 value, write set the value and start the timer 13
functional_voltage_measured_port_vin2_sel0 = h90002678 22 6 h8 SC HEX
; Desc_functional_voltage_measured_port_vin2_sel0 read timer 13 value, write set the value and start the timer 13
functional_voltage_seq_id_vin2_sel0 = h90002678 28 4 h0 SC HEX
; Desc_functional_voltage_seq_id_vin2_sel0 read timer 13 value, write set the value and start the timer 13



; REGISTER functional_voltage_read_vin2_sel1_register Address h9000267c
_functional_voltage_read_vin2_sel1_register = 2415928956 0 32 b00000010010000000000000000000000 SC
functional_voltage_read_crc_vin2_sel1 = h9000267c 0 8 h0 SC HEX
; Desc_functional_voltage_read_crc_vin2_sel1 read timer 14 value, write set the value and start the timer 14
functional_voltage_value_vin2_sel1 = h9000267c 8 14 h0 SC HEX
; Desc_functional_voltage_value_vin2_sel1 read timer 14 value, write set the value and start the timer 14
functional_voltage_measured_port_vin2_sel1 = h9000267c 22 6 h9 SC HEX
; Desc_functional_voltage_measured_port_vin2_sel1 read timer 14 value, write set the value and start the timer 14
functional_voltage_seq_id_vin2_sel1 = h9000267c 28 4 h0 SC HEX
; Desc_functional_voltage_seq_id_vin2_sel1 read timer 14 value, write set the value and start the timer 14



; REGISTER functional_voltage_read_vin2_sel2_register Address h90002680
_functional_voltage_read_vin2_sel2_register = 2415928960 0 32 b00000010100000000000000000000000 SC
functional_voltage_read_crc_vin2_sel2 = h90002680 0 8 h0 SC HEX
; Desc_functional_voltage_read_crc_vin2_sel2 read timer 15 value, write set the value and start the timer 15
functional_voltage_value_vin2_sel2 = h90002680 8 14 h0 SC HEX
; Desc_functional_voltage_value_vin2_sel2 read timer 15 value, write set the value and start the timer 15
functional_voltage_measured_port_vin2_sel2 = h90002680 22 6 ha SC HEX
; Desc_functional_voltage_measured_port_vin2_sel2 read timer 15 value, write set the value and start the timer 15
functional_voltage_seq_id_vin2_sel2 = h90002680 28 4 h0 SC HEX
; Desc_functional_voltage_seq_id_vin2_sel2 read timer 15 value, write set the value and start the timer 15



; REGISTER functional_voltage_read_vin2_sel3_register Address h90002684
_functional_voltage_read_vin2_sel3_register = 2415928964 0 32 b00000010110000000000000000000000 SC
functional_voltage_read_crc_vin2_sel3 = h90002684 0 8 h0 SC HEX
; Desc_functional_voltage_read_crc_vin2_sel3 pas timers interupt latched status (1 in any bit indicates interrupt captured). SW is responsible to clear the bits using the corresponding pas_timer_int_clr_reg bit. sNote that timers 7-0 status is also updated here, although they are to be managed by the VPE0/VPE1 interupt status regs as they are directly connected to the main CPU vector interrupts.
functional_voltage_value_vin2_sel3 = h90002684 8 14 h0 SC HEX
; Desc_functional_voltage_value_vin2_sel3 pas timers interupt latched status (1 in any bit indicates interrupt captured). SW is responsible to clear the bits using the corresponding pas_timer_int_clr_reg bit. sNote that timers 7-0 status is also updated here, although they are to be managed by the VPE0/VPE1 interupt status regs as they are directly connected to the main CPU vector interrupts.
functional_voltage_measured_port_vin2_sel3 = h90002684 22 6 hb SC HEX
; Desc_functional_voltage_measured_port_vin2_sel3 pas timers interupt latched status (1 in any bit indicates interrupt captured). SW is responsible to clear the bits using the corresponding pas_timer_int_clr_reg bit. sNote that timers 7-0 status is also updated here, although they are to be managed by the VPE0/VPE1 interupt status regs as they are directly connected to the main CPU vector interrupts.
functional_voltage_seq_id_vin2_sel3 = h90002684 28 4 h0 SC HEX
; Desc_functional_voltage_seq_id_vin2_sel3 pas timers interupt latched status (1 in any bit indicates interrupt captured). SW is responsible to clear the bits using the corresponding pas_timer_int_clr_reg bit. sNote that timers 7-0 status is also updated here, although they are to be managed by the VPE0/VPE1 interupt status regs as they are directly connected to the main CPU vector interrupts.



; REGISTER functional_voltage_read_vin3_register Address h90002688
_functional_voltage_read_vin3_register = 2415928968 0 32 b00000011000000000000000000000000 SC
functional_voltage_read_crc_vin3 = h90002688 0 8 h0 SC HEX
; Desc_functional_voltage_read_crc_vin3 each bit clears the corresponding pas_timer_int_stat bit. See note in pas_timer_int_stat
functional_voltage_value_vin3 = h90002688 8 14 h0 SC HEX
; Desc_functional_voltage_value_vin3 each bit clears the corresponding pas_timer_int_stat bit. See note in pas_timer_int_stat
functional_voltage_measured_port_vin3 = h90002688 22 6 hc SC HEX
; Desc_functional_voltage_measured_port_vin3 each bit clears the corresponding pas_timer_int_stat bit. See note in pas_timer_int_stat
functional_voltage_seq_id_vin3 = h90002688 28 4 h0 SC HEX
; Desc_functional_voltage_seq_id_vin3 each bit clears the corresponding pas_timer_int_stat bit. See note in pas_timer_int_stat



; REGISTER functional_voltage_read_vin4_register Address h9000268c
_functional_voltage_read_vin4_register = 2415928972 0 32 b00000100000000000000000000000000 SC
functional_voltage_read_crc_vin4 = h9000268c 0 8 h0 SC HEX
; Desc_functional_voltage_read_crc_vin4 each bit masks the corresponding pas_timer_int. sHas no affect on timers 7-0 (bits 7-0) - as these are directly connected and manged by the CPU's interrupt controllers
functional_voltage_value_vin4 = h9000268c 8 14 h0 SC HEX
; Desc_functional_voltage_value_vin4 each bit masks the corresponding pas_timer_int. sHas no affect on timers 7-0 (bits 7-0) - as these are directly connected and manged by the CPU's interrupt controllers
functional_voltage_measured_port_vin4 = h9000268c 22 6 h10 SC HEX
; Desc_functional_voltage_measured_port_vin4 each bit masks the corresponding pas_timer_int. sHas no affect on timers 7-0 (bits 7-0) - as these are directly connected and manged by the CPU's interrupt controllers
functional_voltage_seq_id_vin4 = h9000268c 28 4 h0 SC HEX
; Desc_functional_voltage_seq_id_vin4 each bit masks the corresponding pas_timer_int. sHas no affect on timers 7-0 (bits 7-0) - as these are directly connected and manged by the CPU's interrupt controllers



; REGISTER functional_voltage_read_vin5_register Address h90002690
_functional_voltage_read_vin5_register = 2415928976 0 32 b00000101000000000000000000000000 SC
functional_voltage_read_crc_vin5 = h90002690 0 8 h0 SC HEX
; Desc_functional_voltage_read_crc_vin5 for SW use
functional_voltage_value_vin5 = h90002690 8 14 h0 SC HEX
; Desc_functional_voltage_value_vin5 for SW use
functional_voltage_measured_port_vin5 = h90002690 22 6 h14 SC HEX
; Desc_functional_voltage_measured_port_vin5 for SW use
functional_voltage_seq_id_vin5 = h90002690 28 4 h0 SC HEX
; Desc_functional_voltage_seq_id_vin5 for SW use



; REGISTER functional_voltage_read_vin6_register Address h90002694
_functional_voltage_read_vin6_register = 2415928980 0 32 b00000110000000000000000000000000 SC
functional_voltage_read_crc_vin6 = h90002694 0 8 h0 SC HEX
; Desc_functional_voltage_read_crc_vin6 for SW use
functional_voltage_value_vin6 = h90002694 8 14 h0 SC HEX
; Desc_functional_voltage_value_vin6 for SW use
functional_voltage_measured_port_vin6 = h90002694 22 6 h18 SC HEX
; Desc_functional_voltage_measured_port_vin6 for SW use
functional_voltage_seq_id_vin6 = h90002694 28 4 h0 SC HEX
; Desc_functional_voltage_seq_id_vin6 for SW use



; REGISTER functional_voltage_read_vin7_register Address h90002698
_functional_voltage_read_vin7_register = 2415928984 0 32 b00000111000000000000000000000000 SC
functional_voltage_read_crc_vin7 = h90002698 0 8 h0 SC HEX
; Desc_functional_voltage_read_crc_vin7 for SW use
functional_voltage_value_vin7 = h90002698 8 14 h0 SC HEX
; Desc_functional_voltage_value_vin7 for SW use
functional_voltage_measured_port_vin7 = h90002698 22 6 h1c SC HEX
; Desc_functional_voltage_measured_port_vin7 for SW use
functional_voltage_seq_id_vin7 = h90002698 28 4 h0 SC HEX
; Desc_functional_voltage_seq_id_vin7 for SW use



; REGISTER functional_voltage_read_vin8_register Address h9000269c
_functional_voltage_read_vin8_register = 2415928988 0 32 b00001000000000000000000000000000 SC
functional_voltage_read_crc_vin8 = h9000269c 0 8 h0 SC HEX
; Desc_functional_voltage_read_crc_vin8 for SW use
functional_voltage_value_vin8 = h9000269c 8 14 h0 SC HEX
; Desc_functional_voltage_value_vin8 for SW use
functional_voltage_measured_port_vin8 = h9000269c 22 6 h20 SC HEX
; Desc_functional_voltage_measured_port_vin8 for SW use
functional_voltage_seq_id_vin8 = h9000269c 28 4 h0 SC HEX
; Desc_functional_voltage_seq_id_vin8 for SW use



; REGISTER functional_voltage_read_vin9_register Address h900026a0
_functional_voltage_read_vin9_register = 2415928992 0 32 b00001001000000000000000000000000 SC
functional_voltage_read_crc_vin9 = h900026a0 0 8 h0 SC HEX
; Desc_functional_voltage_read_crc_vin9 for SW use
functional_voltage_value_vin9 = h900026a0 8 14 h0 SC HEX
; Desc_functional_voltage_value_vin9 for SW use
functional_voltage_measured_port_vin9 = h900026a0 22 6 h24 SC HEX
; Desc_functional_voltage_measured_port_vin9 for SW use
functional_voltage_seq_id_vin9 = h900026a0 28 4 h0 SC HEX
; Desc_functional_voltage_seq_id_vin9 for SW use



; REGISTER functional_voltage_read_vin10_register Address h900026a4
_functional_voltage_read_vin10_register = 2415928996 0 32 b00001010000000000000000000000000 SC
functional_voltage_read_crc_vin10 = h900026a4 0 8 h0 SC HEX
; Desc_functional_voltage_read_crc_vin10 for SW use
functional_voltage_value_vin10 = h900026a4 8 14 h0 SC HEX
; Desc_functional_voltage_value_vin10 for SW use
functional_voltage_measured_port_vin10 = h900026a4 22 6 h28 SC HEX
; Desc_functional_voltage_measured_port_vin10 for SW use
functional_voltage_seq_id_vin10 = h900026a4 28 4 h0 SC HEX
; Desc_functional_voltage_seq_id_vin10 for SW use



; REGISTER functional_voltage_read_vin11_register Address h900026a8
_functional_voltage_read_vin11_register = 2415929000 0 32 b00001011000000000000000000000000 SC
functional_voltage_read_crc_vin11 = h900026a8 0 8 h0 SC HEX
; Desc_functional_voltage_read_crc_vin11 for SW use
functional_voltage_value_vin11 = h900026a8 8 14 h0 SC HEX
; Desc_functional_voltage_value_vin11 for SW use
functional_voltage_measured_port_vin11 = h900026a8 22 6 h2c SC HEX
; Desc_functional_voltage_measured_port_vin11 for SW use
functional_voltage_seq_id_vin11 = h900026a8 28 4 h0 SC HEX
; Desc_functional_voltage_seq_id_vin11 for SW use



; REGISTER functional_voltage_read_vin12_register Address h900026ac
_functional_voltage_read_vin12_register = 2415929004 0 32 b00001100000000000000000000000000 SC
functional_voltage_read_crc_vin12 = h900026ac 0 8 h0 SC HEX
; Desc_functional_voltage_read_crc_vin12 for SW use
functional_voltage_value_vin12 = h900026ac 8 14 h0 SC HEX
; Desc_functional_voltage_value_vin12 for SW use
functional_voltage_measured_port_vin12 = h900026ac 22 6 h30 SC HEX
; Desc_functional_voltage_measured_port_vin12 for SW use
functional_voltage_seq_id_vin12 = h900026ac 28 4 h0 SC HEX
; Desc_functional_voltage_seq_id_vin12 for SW use



; REGISTER functional_voltage_read_vin13_register Address h900026b0
_functional_voltage_read_vin13_register = 2415929008 0 32 b00001101000000000000000000000000 SC
functional_voltage_read_crc_vin13 = h900026b0 0 8 h0 SC HEX
; Desc_functional_voltage_read_crc_vin13 for SW use
functional_voltage_value_vin13 = h900026b0 8 14 h0 SC HEX
; Desc_functional_voltage_value_vin13 for SW use
functional_voltage_measured_port_vin13 = h900026b0 22 6 h34 SC HEX
; Desc_functional_voltage_measured_port_vin13 for SW use
functional_voltage_seq_id_vin13 = h900026b0 28 4 h0 SC HEX
; Desc_functional_voltage_seq_id_vin13 for SW use



; REGISTER functional_voltage_read_vin14_register Address h900026b4
_functional_voltage_read_vin14_register = 2415929012 0 32 b00001110000000000000000000000000 SC
functional_voltage_read_crc_vin14 = h900026b4 0 8 h0 SC HEX
; Desc_functional_voltage_read_crc_vin14 for SW use
functional_voltage_value_vin14 = h900026b4 8 14 h0 SC HEX
; Desc_functional_voltage_value_vin14 for SW use
functional_voltage_measured_port_vin14 = h900026b4 22 6 h38 SC HEX
; Desc_functional_voltage_measured_port_vin14 for SW use
functional_voltage_seq_id_vin14 = h900026b4 28 4 h0 SC HEX
; Desc_functional_voltage_seq_id_vin14 for SW use



; REGISTER functional_voltage_read_vin15_register Address h900026b8
_functional_voltage_read_vin15_register = 2415929016 0 32 b00001111000000000000000000000000 SC
functional_voltage_read_crc_vin15 = h900026b8 0 8 h0 SC HEX
; Desc_functional_voltage_read_crc_vin15 for SW use
functional_voltage_value_vin15 = h900026b8 8 14 h0 SC HEX
; Desc_functional_voltage_value_vin15 for SW use
functional_voltage_measured_port_vin15 = h900026b8 22 6 h3c SC HEX
; Desc_functional_voltage_measured_port_vin15 for SW use
functional_voltage_seq_id_vin15 = h900026b8 28 4 h0 SC HEX
; Desc_functional_voltage_seq_id_vin15 for SW use



; REGISTER functional_voltage_read_vinternal_register Address h900026bc
_functional_voltage_read_vinternal_register = 2415929020 0 32 b00001111010000000000000000000000 SC
functional_voltage_read_crc_vinternal = h900026bc 0 8 h0 SC HEX
; Desc_functional_voltage_read_crc_vinternal for SW use
functional_voltage_value_vinternal = h900026bc 8 14 h0 SC HEX
; Desc_functional_voltage_value_vinternal for SW use
functional_voltage_measured_port_vinternal = h900026bc 22 6 h3d SC HEX
; Desc_functional_voltage_measured_port_vinternal for SW use
functional_voltage_seq_id_vinternal = h900026bc 28 4 h0 SC HEX
; Desc_functional_voltage_seq_id_vinternal for SW use



; REGISTER vm_status_register Address h900026c0
_vm_status_register = 2415929024 0 32 b00000000000000000000000000000100 RO
vm_rdy_measurement = h900026c0 0 1 h0 RO BIN
; Desc_vm_rdy_measurement for SW use
vm_rdy_status = h900026c0 1 1 h0 RO BIN
; Desc_vm_rdy_status for SW use
vm_rdy_to_load = h900026c0 2 1 h1 RO BIN
; Desc_vm_rdy_to_load for SW use



; REGISTER voltage_monitors_errors_register Address h900026c4
_voltage_monitors_errors_register = 2415929028 0 32 b00000000000000000000000000000000 SC
vm_vin0_out_of_limit = h900026c4 0 1 h0 SC BIN
; Desc_vm_vin0_out_of_limit for SW use
vm_vin1_out_of_limit = h900026c4 1 1 h0 SC BIN
; Desc_vm_vin1_out_of_limit for SW use
vm_vin2_sel0_out_of_limit = h900026c4 2 1 h0 SC BIN
; Desc_vm_vin2_sel0_out_of_limit for SW use
vm_vin2_sel1_out_of_limit = h900026c4 3 1 h0 SC BIN
; Desc_vm_vin2_sel1_out_of_limit for SW use
vm_vin2_sel2_out_of_limit = h900026c4 4 1 h0 SC BIN
; Desc_vm_vin2_sel2_out_of_limit for SW use
vm_vin2_sel3_out_of_limit = h900026c4 5 1 h0 SC BIN
; Desc_vm_vin2_sel3_out_of_limit for SW use
vm_vin3_out_of_limit = h900026c4 6 1 h0 SC BIN
; Desc_vm_vin3_out_of_limit for SW use
vm_vin4_out_of_limit = h900026c4 7 1 h0 SC BIN
; Desc_vm_vin4_out_of_limit for SW use
vm_vin5_out_of_limit = h900026c4 8 1 h0 SC BIN
; Desc_vm_vin5_out_of_limit for SW use
vm_vin6_out_of_limit = h900026c4 9 1 h0 SC BIN
; Desc_vm_vin6_out_of_limit for SW use
vm_vin7_out_of_limit = h900026c4 10 1 h0 SC BIN
; Desc_vm_vin7_out_of_limit for SW use
vm_vin8_out_of_limit = h900026c4 11 1 h0 SC BIN
; Desc_vm_vin8_out_of_limit for SW use
vm_vin9_out_of_limit = h900026c4 12 1 h0 SC BIN
; Desc_vm_vin9_out_of_limit for SW use
vm_vin10_out_of_limit = h900026c4 13 1 h0 SC BIN
; Desc_vm_vin10_out_of_limit for SW use
vm_vin11_out_of_limit = h900026c4 14 1 h0 SC BIN
; Desc_vm_vin11_out_of_limit for SW use
vm_vin12_out_of_limit = h900026c4 15 1 h0 SC BIN
; Desc_vm_vin12_out_of_limit for SW use
vm_vin13_out_of_limit = h900026c4 16 1 h0 SC BIN
; Desc_vm_vin13_out_of_limit for SW use
vm_vin14_out_of_limit = h900026c4 17 1 h0 SC BIN
; Desc_vm_vin14_out_of_limit for SW use
vm_vin15_out_of_limit = h900026c4 18 1 h0 SC BIN
; Desc_vm_vin15_out_of_limit for SW use
vm_vinternal_out_of_limit = h900026c4 19 1 h0 SC BIN
; Desc_vm_vinternal_out_of_limit for SW use
vm_analog_fault = h900026c4 20 1 h0 SC BIN
; Desc_vm_analog_fault for SW use
vm_timeout = h900026c4 21 1 h0 SC BIN
; Desc_vm_timeout for SW use
vm_safety_reg_fail = h900026c4 22 1 h0 SC BIN
; Desc_vm_safety_reg_fail for SW use



; REGISTER voltage_monitor_error_count_vin0_register Address h900026c8
_voltage_monitor_error_count_vin0_register = 2415929032 0 32 b00000000000000000000000000000000 SC
voltage_monitor_error_count_vin0 = h900026c8 0 8 h0 SC HEX
; Desc_voltage_monitor_error_count_vin0 for SW use



; REGISTER voltage_monitor_error_count_vin1_register Address h900026cc
_voltage_monitor_error_count_vin1_register = 2415929036 0 32 b00000000000000000000000000000000 SC
voltage_monitor_error_count_vin1 = h900026cc 0 8 h0 SC HEX
; Desc_voltage_monitor_error_count_vin1 for SW use



; REGISTER voltage_monitor_error_count_vin2_sel0_register Address h900026d0
_voltage_monitor_error_count_vin2_sel0_register = 2415929040 0 32 b00000000000000000000000000000000 SC
voltage_monitor_error_count_vin2_sel0 = h900026d0 0 8 h0 SC HEX
; Desc_voltage_monitor_error_count_vin2_sel0 



; REGISTER voltage_monitor_error_count_vin2_sel1_register Address h900026d4
_voltage_monitor_error_count_vin2_sel1_register = 2415929044 0 32 b00000000000000000000000000000000 SC
voltage_monitor_error_count_vin2_sel1 = h900026d4 0 8 h0 SC HEX
; Desc_voltage_monitor_error_count_vin2_sel1 



; REGISTER voltage_monitor_error_count_vin2_sel2_register Address h900026d8
_voltage_monitor_error_count_vin2_sel2_register = 2415929048 0 32 b00000000000000000000000000000000 SC
voltage_monitor_error_count_vin2_sel2 = h900026d8 0 8 h0 SC HEX
; Desc_voltage_monitor_error_count_vin2_sel2 



; REGISTER voltage_monitor_error_count_vin2_sel3_register Address h900026dc
_voltage_monitor_error_count_vin2_sel3_register = 2415929052 0 32 b00000000000000000000000000000000 SC
voltage_monitor_error_count_vin2_sel3 = h900026dc 0 8 h0 SC HEX
; Desc_voltage_monitor_error_count_vin2_sel3 which DRAM to use: 0-Instruction DRAM, 1-Data DRAM



; REGISTER voltage_monitor_error_count_vin3_register Address h900026e0
_voltage_monitor_error_count_vin3_register = 2415929056 0 32 b00000000000000000000000000000000 SC
voltage_monitor_error_count_vin3 = h900026e0 0 8 h0 SC HEX
; Desc_voltage_monitor_error_count_vin3 



; REGISTER voltage_monitor_error_count_vin4_register Address h900026e4
_voltage_monitor_error_count_vin4_register = 2415929060 0 32 b00000000000000000000000000000000 SC
voltage_monitor_error_count_vin4 = h900026e4 0 8 h0 SC HEX
; Desc_voltage_monitor_error_count_vin4 



; REGISTER voltage_monitor_error_count_vin5_register Address h900026e8
_voltage_monitor_error_count_vin5_register = 2415929064 0 32 b00000000000000000000000000000000 SC
voltage_monitor_error_count_vin5 = h900026e8 0 8 h0 SC HEX
; Desc_voltage_monitor_error_count_vin5 



; REGISTER voltage_monitor_error_count_vin6_register Address h900026ec
_voltage_monitor_error_count_vin6_register = 2415929068 0 32 b00000000000000000000000000000000 SC
voltage_monitor_error_count_vin6 = h900026ec 0 8 h0 SC HEX
; Desc_voltage_monitor_error_count_vin6 



; REGISTER voltage_monitor_error_count_vin7_register Address h900026f0
_voltage_monitor_error_count_vin7_register = 2415929072 0 32 b00000000000000000000000000000000 SC
voltage_monitor_error_count_vin7 = h900026f0 0 8 h0 SC HEX
; Desc_voltage_monitor_error_count_vin7 



; REGISTER voltage_monitor_error_count_vin8_register Address h900026f4
_voltage_monitor_error_count_vin8_register = 2415929076 0 32 b00000000000000000000000000000000 SC
voltage_monitor_error_count_vin8 = h900026f4 0 8 h0 SC HEX
; Desc_voltage_monitor_error_count_vin8 



; REGISTER voltage_monitor_error_count_vin9_register Address h900026f8
_voltage_monitor_error_count_vin9_register = 2415929080 0 32 b00000000000000000000000000000000 SC
voltage_monitor_error_count_vin9 = h900026f8 0 8 h0 SC HEX
; Desc_voltage_monitor_error_count_vin9 



; REGISTER voltage_monitor_error_count_vin10_register Address h900026fc
_voltage_monitor_error_count_vin10_register = 2415929084 0 32 b00000000000000000000000000000000 SC
voltage_monitor_error_count_vin10 = h900026fc 0 8 h0 SC HEX
; Desc_voltage_monitor_error_count_vin10 



; REGISTER voltage_monitor_error_count_vin11_register Address h90002700
_voltage_monitor_error_count_vin11_register = 2415929088 0 32 b00000000000000000000000000000000 SC
voltage_monitor_error_count_vin11 = h90002700 0 8 h0 SC HEX
; Desc_voltage_monitor_error_count_vin11 



; REGISTER voltage_monitor_error_count_vin12_register Address h90002704
_voltage_monitor_error_count_vin12_register = 2415929092 0 32 b00000000000000000000000000000000 SC
voltage_monitor_error_count_vin12 = h90002704 0 8 h0 SC HEX
; Desc_voltage_monitor_error_count_vin12 



; REGISTER voltage_monitor_error_count_vin13_register Address h90002708
_voltage_monitor_error_count_vin13_register = 2415929096 0 32 b00000000000000000000000000000000 SC
voltage_monitor_error_count_vin13 = h90002708 0 8 h0 SC HEX
; Desc_voltage_monitor_error_count_vin13 bl interupt latched status (1 in any bit indicates interrupt captured). SW is responsible to clear the bits using the corresponding bl_int_clr_reg bit



; REGISTER voltage_monitor_error_count_vin14_register Address h9000270c
_voltage_monitor_error_count_vin14_register = 2415929100 0 32 b00000000000000000000000000000000 SC
voltage_monitor_error_count_vin14 = h9000270c 0 8 h0 SC HEX
; Desc_voltage_monitor_error_count_vin14 each bit clears the corresponding bl_int_stat bit



; REGISTER voltage_monitor_error_count_vin15_register Address h90002710
_voltage_monitor_error_count_vin15_register = 2415929104 0 32 b00000000000000000000000000000000 SC
voltage_monitor_error_count_vin15 = h90002710 0 8 h0 SC HEX
; Desc_voltage_monitor_error_count_vin15 



; REGISTER voltage_monitor_error_count_vinternal_register Address h90002714
_voltage_monitor_error_count_vinternal_register = 2415929108 0 32 b00000000000000000000000000000000 SC
voltage_monitor_error_count_vinternal = h90002714 0 8 h0 SC HEX
; Desc_voltage_monitor_error_count_vinternal 



; REGISTER voltage_monitor_error_count_self_test_register Address h90002718
_voltage_monitor_error_count_self_test_register = 2415929112 0 32 b00000000000000000000000000000000 SC
voltage_monitor_error_count_self_test = h90002718 0 8 h0 SC HEX
; Desc_voltage_monitor_error_count_self_test 



; REGISTER voltage_monitor_safety_register_status1_register Address h90002720
_voltage_monitor_safety_register_status1_register = 2415929120 0 32 b00000000000000000000000000000000 SC
voltage_monitor_safety_register_status1 = h90002720 0 32 h0 SC HEX
; Desc_voltage_monitor_safety_register_status1 



; REGISTER voltage_monitor_safety_register_status2_register Address h90002724
_voltage_monitor_safety_register_status2_register = 2415929124 0 32 b00000000000000000000000000000000 RO
voltage_monitor_safety_register_status2 = h90002724 0 32 h0 RO HEX
; Desc_voltage_monitor_safety_register_status2 start working on new block



; REGISTER voltage_monitor_safety_register_status3_register Address h90002728
_voltage_monitor_safety_register_status3_register = 2415929128 0 32 b00000000000000000000000000000000 RO
voltage_monitor_safety_register_status3 = h90002728 0 32 h0 RO HEX
; Desc_voltage_monitor_safety_register_status3 



; REGISTER short_self_test_comperators_results_register1 Address h9000272c
_short_self_test_comperators_results_register1 = 2415929132 0 32 b00000000000000000000000000000000 RO
self_test_actual_results_step1 = h9000272c 0 2 h0 RO HEX
; Desc_self_test_actual_results_step1 
self_test_actual_results_step2 = h9000272c 2 2 h0 RO HEX
; Desc_self_test_actual_results_step2 
self_test_actual_results_step3 = h9000272c 4 2 h0 RO HEX
; Desc_self_test_actual_results_step3 
self_test_actual_results_step4 = h9000272c 6 2 h0 RO HEX
; Desc_self_test_actual_results_step4 
self_test_actual_results_step5 = h9000272c 8 2 h0 RO HEX
; Desc_self_test_actual_results_step5 
self_test_actual_results_step6 = h9000272c 10 2 h0 RO HEX
; Desc_self_test_actual_results_step6 
self_test_actual_results_step7 = h9000272c 12 2 h0 RO HEX
; Desc_self_test_actual_results_step7 
self_test_actual_results_step8 = h9000272c 14 2 h0 RO HEX
; Desc_self_test_actual_results_step8 



; REGISTER functional_comperators_results_register1 Address h90002730
_functional_comperators_results_register1 = 2415929136 0 32 b00000000000000000000000000000000 RO
vm_vin0_comp_results = h90002730 0 2 h0 RO HEX
; Desc_vm_vin0_comp_results 
vm_vin1_comp_results = h90002730 2 2 h0 RO HEX
; Desc_vm_vin1_comp_results 
vm_vin2_sel0_comp_results = h90002730 4 2 h0 RO HEX
; Desc_vm_vin2_sel0_comp_results 
vm_vin2_sel1_comp_results = h90002730 6 2 h0 RO HEX
; Desc_vm_vin2_sel1_comp_results 
vm_vin2_sel2_comp_results = h90002730 8 2 h0 RO HEX
; Desc_vm_vin2_sel2_comp_results 
vm_vin2_sel3_comp_results = h90002730 10 2 h0 RO HEX
; Desc_vm_vin2_sel3_comp_results 
vm_vin3_comp_results = h90002730 12 2 h0 RO HEX
; Desc_vm_vin3_comp_results 
vm_vin4_comp_results = h90002730 14 2 h0 RO HEX
; Desc_vm_vin4_comp_results 
vm_vin5_comp_results = h90002730 16 2 h0 RO HEX
; Desc_vm_vin5_comp_results 
vm_vin6_comp_results = h90002730 18 2 h0 RO HEX
; Desc_vm_vin6_comp_results 
vm_vin7_comp_results = h90002730 20 2 h0 RO HEX
; Desc_vm_vin7_comp_results 



; REGISTER functional_comperators_results_register2 Address h90002734
_functional_comperators_results_register2 = 2415929140 0 32 b00000000000000000000000000000000 RO
vm_vin8_comp_results = h90002734 0 2 h0 RO HEX
; Desc_vm_vin8_comp_results 
vm_vin9_comp_results = h90002734 2 2 h0 RO HEX
; Desc_vm_vin9_comp_results 
vm_vin10_comp_results = h90002734 4 2 h0 RO HEX
; Desc_vm_vin10_comp_results 
vm_vin11_comp_results = h90002734 6 2 h0 RO HEX
; Desc_vm_vin11_comp_results 
vm_vin12_comp_results = h90002734 8 2 h0 RO HEX
; Desc_vm_vin12_comp_results 
vm_vin13_comp_results = h90002734 10 2 h0 RO HEX
; Desc_vm_vin13_comp_results 
vm_vin14_comp_results = h90002734 12 2 h0 RO HEX
; Desc_vm_vin14_comp_results 
vm_vin15_comp_results = h90002734 14 2 h0 RO HEX
; Desc_vm_vin15_comp_results 
vm_vinternal_comp_results = h90002734 16 2 h0 RO HEX
; Desc_vm_vinternal_comp_results 



; REGISTER vm_out_of_error_count_limit_register Address h90002738
_vm_out_of_error_count_limit_register = 2415929144 0 32 b00000000000000000000000000000000 SC
vm_error_GTE_limit_vin0 = h90002738 0 1 h0 SC BIN
; Desc_vm_error_GTE_limit_vin0 
vm_error_GTE_limit_vin1 = h90002738 1 1 h0 SC BIN
; Desc_vm_error_GTE_limit_vin1 
vm_error_GTE_limit_vin2_sel0 = h90002738 2 1 h0 SC BIN
; Desc_vm_error_GTE_limit_vin2_sel0 
vm_error_GTE_limit_vin2_sel1 = h90002738 3 1 h0 SC BIN
; Desc_vm_error_GTE_limit_vin2_sel1 
vm_error_GTE_limit_vin2_sel2 = h90002738 4 1 h0 SC BIN
; Desc_vm_error_GTE_limit_vin2_sel2 
vm_error_GTE_limit_vin2_sel3 = h90002738 5 1 h0 SC BIN
; Desc_vm_error_GTE_limit_vin2_sel3 
vm_error_GTE_limit_vin3 = h90002738 6 1 h0 SC BIN
; Desc_vm_error_GTE_limit_vin3 
vm_error_GTE_limit_vin4 = h90002738 7 1 h0 SC BIN
; Desc_vm_error_GTE_limit_vin4 
vm_error_GTE_limit_vin5 = h90002738 8 1 h0 SC BIN
; Desc_vm_error_GTE_limit_vin5 
vm_error_GTE_limit_vin6 = h90002738 9 1 h0 SC BIN
; Desc_vm_error_GTE_limit_vin6 
vm_error_GTE_limit_vin7 = h90002738 10 1 h0 SC BIN
; Desc_vm_error_GTE_limit_vin7 
vm_error_GTE_limit_vin8 = h90002738 11 1 h0 SC BIN
; Desc_vm_error_GTE_limit_vin8 
vm_error_GTE_limit_vin9 = h90002738 12 1 h0 SC BIN
; Desc_vm_error_GTE_limit_vin9 
vm_error_GTE_limit_vin10 = h90002738 13 1 h0 SC BIN
; Desc_vm_error_GTE_limit_vin10 
vm_error_GTE_limit_vin11 = h90002738 14 1 h0 SC BIN
; Desc_vm_error_GTE_limit_vin11 
vm_error_GTE_limit_vin12 = h90002738 15 1 h0 SC BIN
; Desc_vm_error_GTE_limit_vin12 
vm_error_GTE_limit_vin13 = h90002738 16 1 h0 SC BIN
; Desc_vm_error_GTE_limit_vin13 
vm_error_GTE_limit_vin14 = h90002738 17 1 h0 SC BIN
; Desc_vm_error_GTE_limit_vin14 
vm_error_GTE_limit_vin15 = h90002738 18 1 h0 SC BIN
; Desc_vm_error_GTE_limit_vin15 
vm_error_GTE_limit_vinternal = h90002738 19 1 h0 SC BIN
; Desc_vm_error_GTE_limit_vinternal 
vm_error_GTE_limit_self_test = h90002738 20 1 h0 SC BIN
; Desc_vm_error_GTE_limit_self_test 



; REGISTER func_measurement_count_register Address h9000273c
_func_measurement_count_register = 2415929148 0 32 b00000000000000000000000000000000 RO
vm_func_measurement_count = h9000273c 0 24 h0 RO HEX
; Desc_vm_func_measurement_count 



; REGISTER func_measurement_iteration_count_register Address h90002740
_func_measurement_iteration_count_register = 2415929152 0 32 b00000000000000000000000000000000 RO
vm_func_measurement_iteration_count = h90002740 0 16 h0 RO HEX
; Desc_vm_func_measurement_iteration_count 



; REGISTER vm_fault_status_register Address h90002744
_vm_fault_status_register = 2415929156 0 32 b00000000000000000000000000000000 RO
vm_fault_status = h90002744 0 14 h0 RO HEX
; Desc_vm_fault_status 



; REGISTER voltage_monitor_output_register Address h90002750
_voltage_monitor_output_register = 2415929168 0 32 b00000000000000000000000000000000 RO
vm_voltage_value = h90002750 0 14 h0 RO HEX
; Desc_vm_voltage_value 
vm_dout_type_value = h90002750 14 1 h0 RO BIN
; Desc_vm_dout_type_value 



; REGISTER ts_functional_temperature_read_register Address h900028b0
_ts_functional_temperature_read_register = 2415929520 0 32 b00001111110000000000000000000000 SC
ts_functional_temperature_read_crc = h900028b0 0 8 h0 SC HEX
; Desc_ts_functional_temperature_read_crc 
ts_functional_temperature_value = h900028b0 8 12 h0 SC HEX
; Desc_ts_functional_temperature_value 
ts_functional_id = h900028b0 22 6 h3f SC HEX
; Desc_ts_functional_id 
ts_functional_temperature_seq_id = h900028b0 28 4 h0 SC HEX
; Desc_ts_functional_temperature_seq_id 



; REGISTER ts0_functional_read_register Address h900028b4
_ts0_functional_read_register = 2415929524 0 32 b00000000000000000000000000000000 RO
ts0_functional_temperature_value = h900028b4 0 12 h0 RO HEX
; Desc_ts0_functional_temperature_value 
ts0_functional_status_value = h900028b4 12 12 h0 RO HEX
; Desc_ts0_functional_status_value 



; REGISTER ts1_functional_read_register Address h900028b8
_ts1_functional_read_register = 2415929528 0 32 b00000000000000000000000000000000 RO
ts1_functional_temperature_value = h900028b8 0 12 h0 RO HEX
; Desc_ts1_functional_temperature_value 
ts1_functional_status_value = h900028b8 12 12 h0 RO HEX
; Desc_ts1_functional_status_value 



; REGISTER ts_status_register Address h900028bc
_ts_status_register = 2415929532 0 32 b00000000000000000000000000000100 RO
ts0_rdy_measurement = h900028bc 0 1 h0 RO BIN
; Desc_ts0_rdy_measurement 
ts0_rdy_status = h900028bc 1 1 h0 RO BIN
; Desc_ts0_rdy_status 
ts0_rdy_to_load = h900028bc 2 1 h1 RO BIN
; Desc_ts0_rdy_to_load 
ts1_rdy_measurement = h900028bc 3 1 h0 RO BIN
; Desc_ts1_rdy_measurement 
ts1_rdy_status = h900028bc 4 1 h0 RO BIN
; Desc_ts1_rdy_status 
ts1_rdy_to_load = h900028bc 5 1 h0 RO BIN
; Desc_ts1_rdy_to_load 



; REGISTER ts_absolute_diff_register Address h900028c0
_ts_absolute_diff_register = 2415929536 0 32 b00000000000000000000000000000000 RO
ts_absolute_diff = h900028c0 0 12 h0 RO HEX
; Desc_ts_absolute_diff 



; REGISTER temperature_sensors_measured_value_register Address h900028c8
_temperature_sensors_measured_value_register = 2415929544 0 32 b00000000000000000000000000000000 RO
ts0_measured_temperature = h900028c8 0 12 h0 RO HEX
; Desc_ts0_measured_temperature 
ts1_measured_temperature = h900028c8 12 12 h0 RO HEX
; Desc_ts1_measured_temperature 



; REGISTER temperature_sensors_status_register Address h900028cc
_temperature_sensors_status_register = 2415929548 0 32 b00000000000000000000000000000000 RO
ts0_rdy_out = h900028cc 0 1 h0 RO BIN
; Desc_ts0_rdy_out 
ts1_rdy_out = h900028cc 1 1 h0 RO BIN
; Desc_ts1_rdy_out 



; REGISTER temperature_sensors_errors_register Address h900028d0
_temperature_sensors_errors_register = 2415929552 0 32 b00000000000000000000000000000000 SC
ts0_out_of_limit = h900028d0 0 1 h0 SC BIN
; Desc_ts0_out_of_limit 
ts1_out_of_limit = h900028d0 1 1 h0 SC BIN
; Desc_ts1_out_of_limit 
ts_diff_out_of_limits = h900028d0 2 1 h0 SC BIN
; Desc_ts_diff_out_of_limits 
ts0_fault = h900028d0 3 1 h0 SC BIN
; Desc_ts0_fault 
ts1_fault = h900028d0 4 1 h0 SC BIN
; Desc_ts1_fault 
ts0_timeout = h900028d0 5 1 h0 SC BIN
; Desc_ts0_timeout 
ts1_timeout = h900028d0 6 1 h0 SC BIN
; Desc_ts1_timeout 
ts_safety_reg_fail = h900028d0 7 1 h0 SC BIN
; Desc_ts_safety_reg_fail 



; REGISTER temperature_sensor_error_count_register Address h900028d4
_temperature_sensor_error_count_register = 2415929556 0 32 b00000000000000000000000000000000 SC
ts_error_count_value = h900028d4 0 8 h0 SC HEX
; Desc_ts_error_count_value 



; REGISTER temperature_sensor_comparators_results__register Address h900028d8
_temperature_sensor_comparators_results__register = 2415929560 0 32 b00000000000000000000000000000000 RO
ts0_high_comp = h900028d8 0 1 h0 RO BIN
; Desc_ts0_high_comp 
ts0_low_comp = h900028d8 1 1 h0 RO BIN
; Desc_ts0_low_comp 
ts1_high_comp = h900028d8 2 1 h0 RO BIN
; Desc_ts1_high_comp 
ts1_low_comp = h900028d8 3 1 h0 RO BIN
; Desc_ts1_low_comp 
ts_diff_comp = h900028d8 4 1 h0 RO BIN
; Desc_ts_diff_comp 



; REGISTER ts_safety_register_status1_register Address h900028dc
_ts_safety_register_status1_register = 2415929564 0 32 b00000000000000000000000000000000 SC
ts_safety_register_status1 = h900028dc 0 32 h0 SC HEX
; Desc_ts_safety_register_status1 



; REGISTER ts_safety_register_status2_register Address h900028e0
_ts_safety_register_status2_register = 2415929568 0 32 b00000000000000000000000000000000 RO
ts_safety_register_status2 = h900028e0 0 32 h0 RO HEX
; Desc_ts_safety_register_status2 



; REGISTER ts_short_self_test_comperators_results_register1 Address h900028e4
_ts_short_self_test_comperators_results_register1 = 2415929572 0 32 b00000000000000000000000000000000 RO
ts_self_test_actual_results_step1 = h900028e4 0 5 h0 RO HEX
; Desc_ts_self_test_actual_results_step1 
ts_self_test_actual_results_step2 = h900028e4 5 5 h0 RO HEX
; Desc_ts_self_test_actual_results_step2 
ts_self_test_actual_results_step3 = h900028e4 10 5 h0 RO HEX
; Desc_ts_self_test_actual_results_step3 
ts_self_test_actual_results_step4 = h900028e4 15 5 h0 RO HEX
; Desc_ts_self_test_actual_results_step4 



; REGISTER ts_short_self_test_comperators_results_register2 Address h900028e8
_ts_short_self_test_comperators_results_register2 = 2415929576 0 32 b00000000000000000000000000000000 RO
ts_self_test_actual_results_step5 = h900028e8 0 5 h0 RO HEX
; Desc_ts_self_test_actual_results_step5 
ts_self_test_actual_results_step6 = h900028e8 5 5 h0 RO HEX
; Desc_ts_self_test_actual_results_step6 
ts_self_test_actual_results_step7 = h900028e8 10 5 h0 RO HEX
; Desc_ts_self_test_actual_results_step7 
ts_self_test_actual_results_step8 = h900028e8 15 5 h0 RO HEX
; Desc_ts_self_test_actual_results_step8 



; REGISTER temperature_sensors0_output_register Address h900028f4
_temperature_sensors0_output_register = 2415929588 0 32 b00000000000000000000000000000000 RO
ts0_dout_temperature_value = h900028f4 0 12 h0 RO HEX
; Desc_ts0_dout_temperature_value 
ts0_dout_type_value = h900028f4 12 1 h0 RO BIN
; Desc_ts0_dout_type_value 



; REGISTER temperature_sensors1_output_register Address h900028f8
_temperature_sensors1_output_register = 2415929592 0 32 b00000000000000000000000000000000 RO
ts1_dout_temperature_value = h900028f8 0 12 h0 RO HEX
; Desc_ts1_dout_temperature_value 
ts1_dout_type_value = h900028f8 12 1 h0 RO BIN
; Desc_ts1_dout_type_value 



; REGISTER TxRTS_TxBuffer_used_reg Address h90003034
_TxRTS_TxBuffer_used_reg = 2415931444 0 32 b00000000000000000000000000000000 RO
TxRTS_TxBuffer_used = h90003034 0 16 h0 RO HEX
; Desc_TxRTS_TxBuffer_used 
TxRTS_TxBuffer_mc_used = h90003034 16 8 h0 RO HEX
; Desc_TxRTS_TxBuffer_mc_used 
TxRTS_TxBuffer_original_mc_used = h90003034 24 8 h0 RO HEX
; Desc_TxRTS_TxBuffer_original_mc_used 



; REGISTER TxRTS_TxBuffer_max_used_reg Address h90003038
_TxRTS_TxBuffer_max_used_reg = 2415931448 0 32 b00000000000000000000000000000000 RO
TxRTS_TxBufferMaxWordsUsed = h90003038 0 16 h0 RO HEX
; Desc_TxRTS_TxBufferMaxWordsUsed 0: Work in progress. 1: Inactive.
TxRTS_TxBufferMaxMCWSize = h90003038 16 8 h0 RO HEX
; Desc_TxRTS_TxBufferMaxMCWSize 0: Work in progress. 1: Inactive.
TxRTS_TxBufferMaxOriginalMC = h90003038 24 8 h0 RO HEX
; Desc_TxRTS_TxBufferMaxOriginalMC 0: Work in progress. 1: Inactive.



; REGISTER TxRTS_ApktsInTotalCnt_reg Address h90003040
_TxRTS_ApktsInTotalCnt_reg = 2415931456 0 32 b00000000000000000000000000000000 RO
TxRTS_ApktsInTotalCnt = h90003040 0 32 h0 RO HEX
; Desc_TxRTS_ApktsInTotalCnt 



; REGISTER TxRTS_KeepAliveApktsCnt_reg Address h90003044
_TxRTS_KeepAliveApktsCnt_reg = 2415931460 0 32 b00000000000000000000000000000000 RO
TxRTS_KeepAliveApktsCnt = h90003044 0 16 h0 RO HEX
; Desc_TxRTS_KeepAliveApktsCnt 



; REGISTER TxRTS_MaxKeepAliveNoOriginCnt_reg Address h90003048
_TxRTS_MaxKeepAliveNoOriginCnt_reg = 2415931464 0 32 b00000000000000000000000000000000 RO
TxRTS_MaxKeepAliveNoOriginCnt = h90003048 0 16 h0 RO HEX
; Desc_TxRTS_MaxKeepAliveNoOriginCnt 



; REGISTER TxRTS_MaxBackpressureTime_reg Address h9000304c
_TxRTS_MaxBackpressureTime_reg = 2415931468 0 32 b00000000000000000000000000000000 RO
TxRTS_MaxBackpressureTime = h9000304c 0 16 h0 RO HEX
; Desc_TxRTS_MaxBackpressureTime 



; REGISTER TxRTS_ApktsSchedTotalCnt_reg Address h90003050
_TxRTS_ApktsSchedTotalCnt_reg = 2415931472 0 32 b00000000000000000000000000000000 RO
TxRTS_ApktsSchedTotalCnt = h90003050 0 32 h0 RO HEX
; Desc_TxRTS_ApktsSchedTotalCnt in general test mode, the CPU is kept in reset by default in order not to interveen with test cpu interface. This register enables to release the MIPS from reset in test cpu mode if there's a need to



; REGISTER TxRTS_ApktsSchedOriginalCnt_reg Address h90003054
_TxRTS_ApktsSchedOriginalCnt_reg = 2415931476 0 32 b00000000000000000000000000000000 RO
TxRTS_ApktsSchedOriginalCnt = h90003054 0 32 h0 RO HEX
; Desc_TxRTS_ApktsSchedOriginalCnt 



; REGISTER TxRTS_ApktsSchedReTxCnt_reg Address h90003058
_TxRTS_ApktsSchedReTxCnt_reg = 2415931480 0 32 b00000000000000000000000000000000 RO
TxRTS_ApktsSchedReTxCnt = h90003058 0 16 h0 RO HEX
; Desc_TxRTS_ApktsSchedReTxCnt hdcp pka interupt latched status (1 in any bit indicates interrupt captured). SW is responsible to clear the bits using the corresponding pka_int_clr_reg bit



; REGISTER TxRTS_ApktsSchedPreferOriginalCnt_reg Address h9000305c
_TxRTS_ApktsSchedPreferOriginalCnt_reg = 2415931484 0 32 b00000000000000000000000000000000 RO
TxRTS_ApktsSchedPreferOriginalCnt = h9000305c 0 16 h0 RO HEX
; Desc_TxRTS_ApktsSchedPreferOriginalCnt each bit clears the corresponding hdcp_int_stat bit



; REGISTER TxRTS_ApktsOriginNoTxCnt_reg Address h90003060
_TxRTS_ApktsOriginNoTxCnt_reg = 2415931488 0 32 b00000000000000000000000000000000 RO
TxRTS_ApktsOriginNoTxCnt = h90003060 0 8 h0 RO HEX
; Desc_TxRTS_ApktsOriginNoTxCnt 



; REGISTER TxRTS_InvalidAckCnt_reg Address h90003064
_TxRTS_InvalidAckCnt_reg = 2415931492 0 32 b00000000000000000000000000000000 RO
TxRTS_InvalidAckCnt = h90003064 0 8 h0 RO HEX
; Desc_TxRTS_InvalidAckCnt 



; REGISTER TxRTS_InvalidReTxCnt_reg Address h90003068
_TxRTS_InvalidReTxCnt_reg = 2415931496 0 32 b00000000000000000000000000000000 RO
TxRTS_InvalidReTxCnt = h90003068 0 8 h0 RO HEX
; Desc_TxRTS_InvalidReTxCnt efuse word data- which bits inside the word to burn



; REGISTER TxRTS_FirstRetReqOutCnt_reg Address h9000306c
_TxRTS_FirstRetReqOutCnt_reg = 2415931500 0 32 b00000000000000000000000000000000 RO
TxRTS_FirstRetReqOutCnt = h9000306c 0 32 h0 RO HEX
; Desc_TxRTS_FirstRetReqOutCnt enables word burn or bit burn



; REGISTER TxRTS_NonFirstRetReqOutCnt_reg Address h90003070
_TxRTS_NonFirstRetReqOutCnt_reg = 2415931504 0 32 b00000000000000000000000000000000 RO
TxRTS_NonFirstRetReqOutCnt = h90003070 0 32 h0 RO HEX
; Desc_TxRTS_NonFirstRetReqOutCnt enbles VP 0



; REGISTER TxRTS_MaxRetReqCnt_reg Address h90003074
_TxRTS_MaxRetReqCnt_reg = 2415931508 0 32 b00000000000000000000000000000000 RO
TxRTS_MaxFirstRetReqCnt = h90003074 0 8 h0 RO HEX
; Desc_TxRTS_MaxFirstRetReqCnt Light Sleep 0- normal mode. 1 - LS
TxRTS_MaxNonFirstRetReqCnt = h90003074 8 7 h0 RO HEX
; Desc_TxRTS_MaxNonFirstRetReqCnt Light Sleep 0- normal mode. 1 - LS



; REGISTER TxRTS_DiscardRetReqCnt_reg Address h90003078
_TxRTS_DiscardRetReqCnt_reg = 2415931512 0 32 b00000000000000000000000000000000 RO
TxRTS_DiscardTooLateRetReqCnt = h90003078 0 16 h0 RO HEX
; Desc_TxRTS_DiscardTooLateRetReqCnt Light Sleep 0- normal mode. 1 - LS
TxRTS_DiscardDupRetReqCnt = h90003078 16 16 h0 RO HEX
; Desc_TxRTS_DiscardDupRetReqCnt Light Sleep 0- normal mode. 1 - LS



; REGISTER TxRTS_DropInvalidRetReqCnt_reg Address h9000307c
_TxRTS_DropInvalidRetReqCnt_reg = 2415931516 0 32 b00000000000000000000000000000000 RO
TxRTS_DropInvalidRetReqCnt = h9000307c 0 16 h0 RO HEX
; Desc_TxRTS_DropInvalidRetReqCnt Light Sleep bit per 1Mbit mem device 0- normal mode. 1 - LS



; REGISTER TxRTS_ApktTxRetReq_err_stat_reg Address h9000308c
_TxRTS_ApktTxRetReq_err_stat_reg = 2415931532 0 32 b00000000000000000000000000000000 SC
TxRTS_ApktTxRetReq_err_stat = h9000308c 0 5 h0 SC HEX
; Desc_TxRTS_ApktTxRetReq_err_stat 



; REGISTER TxRTS_Atype_00_packets_reg Address h90003090
_TxRTS_Atype_00_packets_reg = 2415931536 0 32 b00000000000000000000000000000000 RO
TxRTS_Atype_00_packets = h90003090 0 32 h0 RO HEX
; Desc_TxRTS_Atype_00_packets changble for shorten the time of the delay between reads



; REGISTER TxRTS_Atype_01_packets_reg Address h90003094
_TxRTS_Atype_01_packets_reg = 2415931540 0 32 b00000000000000000000000000000000 RO
TxRTS_Atype_01_packets = h90003094 0 32 h0 RO HEX
; Desc_TxRTS_Atype_01_packets this register indicates the number of cycles that takes RAM to wakeup from SD/DS sleep modes (93ns=~33cycles, rounded to 40 cycles) in system clock 333MHz



; REGISTER TxRTS_Atype_02_packets_reg Address h90003098
_TxRTS_Atype_02_packets_reg = 2415931544 0 32 b00000000000000000000000000000000 RO
TxRTS_Atype_02_packets = h90003098 0 32 h0 RO HEX
; Desc_TxRTS_Atype_02_packets this register indicates the number of cycles that takes ROM to wakeup from SD sleep mode (18ns=~8cycles) in system clock 333MHz



; REGISTER TxRTS_Atype_03_packets_reg Address h9000309c
_TxRTS_Atype_03_packets_reg = 2415931548 0 32 b00000000000000000000000000000000 RO
TxRTS_Atype_03_packets = h9000309c 0 32 h0 RO HEX
; Desc_TxRTS_Atype_03_packets IRAM protection interrupt. Sticky  indication.represents that IRAM got an accsess while in sleep mode



; REGISTER TxRTS_Atype_04_packets_reg Address h900030a0
_TxRTS_Atype_04_packets_reg = 2415931552 0 32 b00000000000000000000000000000000 RO
TxRTS_Atype_04_packets = h900030a0 0 32 h0 RO HEX
; Desc_TxRTS_Atype_04_packets each bit clears the corresponding mem_protection_irq_stat bit



; REGISTER TxRTS_Atype_05_packets_reg Address h900030a4
_TxRTS_Atype_05_packets_reg = 2415931556 0 32 b00000000000000000000000000000000 RO
TxRTS_Atype_05_packets = h900030a4 0 32 h0 RO HEX
; Desc_TxRTS_Atype_05_packets masks the mem_protection_int, this interrupt is masked by defalut



; REGISTER TxRTS_Atype_06_packets_reg Address h900030a8
_TxRTS_Atype_06_packets_reg = 2415931560 0 32 b00000000000000000000000000000000 RO
TxRTS_Atype_06_packets = h900030a8 0 32 h0 RO HEX
; Desc_TxRTS_Atype_06_packets each bit represents the corresponding instance  of ROM that got an accsess while in sleep mode



; REGISTER TxRTS_Atype_07_packets_reg Address h900030ac
_TxRTS_Atype_07_packets_reg = 2415931564 0 32 b00000000000000000000000000000000 RO
TxRTS_Atype_07_packets = h900030ac 0 32 h0 RO HEX
; Desc_TxRTS_Atype_07_packets each bit represents the corresponding instance  of IRAM that got an accsess while in sleep mode



; REGISTER TxRTS_Atype_08_packets_reg Address h900030b0
_TxRTS_Atype_08_packets_reg = 2415931568 0 32 b00000000000000000000000000000000 RO
TxRTS_Atype_08_packets = h900030b0 0 32 h0 RO HEX
; Desc_TxRTS_Atype_08_packets each bit represents the corresponding instance  of DRAM that got an accsess while in sleep mode



; REGISTER TxRTS_Atype_09_packets_reg Address h900030b4
_TxRTS_Atype_09_packets_reg = 2415931572 0 32 b00000000000000000000000000000000 RO
TxRTS_Atype_09_packets = h900030b4 0 32 h0 RO HEX
; Desc_TxRTS_Atype_09_packets mips access to read from OTP



; REGISTER TxRTS_Atype_10_packets_reg Address h900030b8
_TxRTS_Atype_10_packets_reg = 2415931576 0 32 b00000000000000000000000000000000 RO
TxRTS_Atype_10_packets = h900030b8 0 32 h0 RO HEX
; Desc_TxRTS_Atype_10_packets 0 = disable clock to SBPI bus



; REGISTER TxRTS_Atype_11_packets_reg Address h900030bc
_TxRTS_Atype_11_packets_reg = 2415931580 0 32 b00000000000000000000000000000000 RO
TxRTS_Atype_11_packets = h900030bc 0 32 h0 RO HEX
; Desc_TxRTS_Atype_11_packets data write to the OTP



; REGISTER TxRTS_Atype_12_packets_reg Address h900030c0
_TxRTS_Atype_12_packets_reg = 2415931584 0 32 b00000000000000000000000000000000 RO
TxRTS_Atype_12_packets = h900030c0 0 32 h0 RO HEX
; Desc_TxRTS_Atype_12_packets store last o_MISO when FLAG was negated



; REGISTER TxRTS_Atype_13_packets_reg Address h900030c4
_TxRTS_Atype_13_packets_reg = 2415931588 0 32 b00000000000000000000000000000000 RO
TxRTS_Atype_13_packets = h900030c4 0 32 h0 RO HEX
; Desc_TxRTS_Atype_13_packets QSR output



; REGISTER TxRTS_Atype_14_packets_reg Address h900030c8
_TxRTS_Atype_14_packets_reg = 2415931592 0 32 b00000000000000000000000000000000 RO
TxRTS_Atype_14_packets = h900030c8 0 32 h0 RO HEX
; Desc_TxRTS_Atype_14_packets QRR output



; REGISTER TxRTS_Atype_15_packets_reg Address h900030cc
_TxRTS_Atype_15_packets_reg = 2415931596 0 32 b00000000000000000000000000000000 RO
TxRTS_Atype_15_packets = h900030cc 0 32 h0 RO HEX
; Desc_TxRTS_Atype_15_packets data read (registers) from OTP



; REGISTER TxRTS_RetReq_Bucket_0_cnt_reg Address h900030fc
_TxRTS_RetReq_Bucket_0_cnt_reg = 2415931644 0 32 b00000000000000000000000000000000 RO
TxRTS_RetReq_Bucket_0_cnt = h900030fc 0 32 h0 RO HEX
; Desc_TxRTS_RetReq_Bucket_0_cnt QSR output



; REGISTER TxRTS_RetReq_Bucket_1_cnt_reg Address h90003100
_TxRTS_RetReq_Bucket_1_cnt_reg = 2415931648 0 32 b00000000000000000000000000000000 RO
TxRTS_RetReq_Bucket_1_cnt = h90003100 0 32 h0 RO HEX
; Desc_TxRTS_RetReq_Bucket_1_cnt mips access to read from OTP



; REGISTER TxRTS_RetReq_Bucket_2_cnt_reg Address h90003104
_TxRTS_RetReq_Bucket_2_cnt_reg = 2415931652 0 32 b00000000000000000000000000000000 RO
TxRTS_RetReq_Bucket_2_cnt = h90003104 0 32 h0 RO HEX
; Desc_TxRTS_RetReq_Bucket_2_cnt 0 = disable clock to SBPI bus



; REGISTER TxRTS_RetReq_Bucket_3_cnt_reg Address h90003108
_TxRTS_RetReq_Bucket_3_cnt_reg = 2415931656 0 32 b00000000000000000000000000000000 RO
TxRTS_RetReq_Bucket_3_cnt = h90003108 0 32 h0 RO HEX
; Desc_TxRTS_RetReq_Bucket_3_cnt data write to the OTP



; REGISTER TxRTS_RetReq_Bucket_4_cnt_reg Address h9000310c
_TxRTS_RetReq_Bucket_4_cnt_reg = 2415931660 0 32 b00000000000000000000000000000000 RO
TxRTS_RetReq_Bucket_4_cnt = h9000310c 0 32 h0 RO HEX
; Desc_TxRTS_RetReq_Bucket_4_cnt store last o_MISO when FLAG was negated



; REGISTER TxRTS_RetReq_Bucket_5_cnt_reg Address h90003110
_TxRTS_RetReq_Bucket_5_cnt_reg = 2415931664 0 32 b00000000000000000000000000000000 RO
TxRTS_RetReq_Bucket_5_cnt = h90003110 0 32 h0 RO HEX
; Desc_TxRTS_RetReq_Bucket_5_cnt QSR output



; REGISTER TxRTS_RetReq_Bucket_6_cnt_reg Address h90003114
_TxRTS_RetReq_Bucket_6_cnt_reg = 2415931668 0 32 b00000000000000000000000000000000 RO
TxRTS_RetReq_Bucket_6_cnt = h90003114 0 32 h0 RO HEX
; Desc_TxRTS_RetReq_Bucket_6_cnt QRR output



; REGISTER TxRTS_RetReq_Bucket_7_cnt_reg Address h90003118
_TxRTS_RetReq_Bucket_7_cnt_reg = 2415931672 0 32 b00000000000000000000000000000000 RO
TxRTS_RetReq_Bucket_7_cnt = h90003118 0 32 h0 RO HEX
; Desc_TxRTS_RetReq_Bucket_7_cnt data read (registers) from OTP



; REGISTER TxRTS_RetReq_Bucket_8_cnt_reg Address h9000311c
_TxRTS_RetReq_Bucket_8_cnt_reg = 2415931676 0 32 b00000000000000000000000000000000 RO
TxRTS_RetReq_Bucket_8_cnt = h9000311c 0 32 h0 RO HEX
; Desc_TxRTS_RetReq_Bucket_8_cnt QSR output



; REGISTER TxRTS_RetReq_Bucket_9_cnt_reg Address h90003120
_TxRTS_RetReq_Bucket_9_cnt_reg = 2415931680 0 32 b00000000000000000000000000000000 RO
TxRTS_RetReq_Bucket_9_cnt = h90003120 0 32 h0 RO HEX
; Desc_TxRTS_RetReq_Bucket_9_cnt mips access to read from OTP



; REGISTER TxRTS_Input_BW_Bucket_0_cnt_reg Address h9000314c
_TxRTS_Input_BW_Bucket_0_cnt_reg = 2415931724 0 32 b00000000000000000000000000000000 RO
TxRTS_Input_BW_Bucket_0_cnt = h9000314c 0 32 h0 RO HEX
; Desc_TxRTS_Input_BW_Bucket_0_cnt 0 = disable clock to SBPI bus



; REGISTER TxRTS_Input_BW_Bucket_1_cnt_reg Address h90003150
_TxRTS_Input_BW_Bucket_1_cnt_reg = 2415931728 0 32 b00000000000000000000000000000000 RO
TxRTS_Input_BW_Bucket_1_cnt = h90003150 0 32 h0 RO HEX
; Desc_TxRTS_Input_BW_Bucket_1_cnt data write to the OTP



; REGISTER TxRTS_Input_BW_Bucket_2_cnt_reg Address h90003154
_TxRTS_Input_BW_Bucket_2_cnt_reg = 2415931732 0 32 b00000000000000000000000000000000 RO
TxRTS_Input_BW_Bucket_2_cnt = h90003154 0 32 h0 RO HEX
; Desc_TxRTS_Input_BW_Bucket_2_cnt store last o_MISO when FLAG was negated



; REGISTER TxRTS_Input_BW_Bucket_3_cnt_reg Address h90003158
_TxRTS_Input_BW_Bucket_3_cnt_reg = 2415931736 0 32 b00000000000000000000000000000000 RO
TxRTS_Input_BW_Bucket_3_cnt = h90003158 0 32 h0 RO HEX
; Desc_TxRTS_Input_BW_Bucket_3_cnt QSR output



; REGISTER TxRTS_Input_BW_Bucket_4_cnt_reg Address h9000315c
_TxRTS_Input_BW_Bucket_4_cnt_reg = 2415931740 0 32 b00000000000000000000000000000000 RO
TxRTS_Input_BW_Bucket_4_cnt = h9000315c 0 32 h0 RO HEX
; Desc_TxRTS_Input_BW_Bucket_4_cnt QRR output



; REGISTER TxRTS_Input_BW_Bucket_5_cnt_reg Address h90003160
_TxRTS_Input_BW_Bucket_5_cnt_reg = 2415931744 0 32 b00000000000000000000000000000000 RO
TxRTS_Input_BW_Bucket_5_cnt = h90003160 0 32 h0 RO HEX
; Desc_TxRTS_Input_BW_Bucket_5_cnt data read (registers) from OTP



; REGISTER TxRTS_Input_BW_Bucket_6_cnt_reg Address h90003164
_TxRTS_Input_BW_Bucket_6_cnt_reg = 2415931748 0 32 b00000000000000000000000000000000 RO
TxRTS_Input_BW_Bucket_6_cnt = h90003164 0 32 h0 RO HEX
; Desc_TxRTS_Input_BW_Bucket_6_cnt QSR output



; REGISTER TxRTS_Input_BW_Bucket_7_cnt_reg Address h90003168
_TxRTS_Input_BW_Bucket_7_cnt_reg = 2415931752 0 32 b00000000000000000000000000000000 RO
TxRTS_Input_BW_Bucket_7_cnt = h90003168 0 32 h0 RO HEX
; Desc_TxRTS_Input_BW_Bucket_7_cnt 



; REGISTER TxRTS_Input_BW_Bucket_8_cnt_reg Address h9000316c
_TxRTS_Input_BW_Bucket_8_cnt_reg = 2415931756 0 32 b00000000000000000000000000000000 RO
TxRTS_Input_BW_Bucket_8_cnt = h9000316c 0 32 h0 RO HEX
; Desc_TxRTS_Input_BW_Bucket_8_cnt 



; REGISTER TxRTS_Input_BW_Bucket_9_cnt_reg Address h90003170
_TxRTS_Input_BW_Bucket_9_cnt_reg = 2415931760 0 32 b00000000000000000000000000000000 RO
TxRTS_Input_BW_Bucket_9_cnt = h90003170 0 32 h0 RO HEX
; Desc_TxRTS_Input_BW_Bucket_9_cnt sticky indication for rd_access_wrong_controls



; REGISTER TxRTS_Output_BW_Bucket_0_cnt_reg Address h9000319c
_TxRTS_Output_BW_Bucket_0_cnt_reg = 2415931804 0 32 b00000000000000000000000000000000 RO
TxRTS_Output_BW_Bucket_0_cnt = h9000319c 0 32 h0 RO HEX
; Desc_TxRTS_Output_BW_Bucket_0_cnt 



; REGISTER TxRTS_Output_BW_Bucket_1_cnt_reg Address h900031a0
_TxRTS_Output_BW_Bucket_1_cnt_reg = 2415931808 0 32 b00000000000000000000000000000000 RO
TxRTS_Output_BW_Bucket_1_cnt = h900031a0 0 32 h0 RO HEX
; Desc_TxRTS_Output_BW_Bucket_1_cnt mask indication of rd_access_wrong_controls



; REGISTER TxRTS_Output_BW_Bucket_2_cnt_reg Address h900031a4
_TxRTS_Output_BW_Bucket_2_cnt_reg = 2415931812 0 32 b00000000000000000000000000000000 RO
TxRTS_Output_BW_Bucket_2_cnt = h900031a4 0 32 h0 RO HEX
; Desc_TxRTS_Output_BW_Bucket_2_cnt block enable



; REGISTER TxRTS_Output_BW_Bucket_3_cnt_reg Address h900031a8
_TxRTS_Output_BW_Bucket_3_cnt_reg = 2415931816 0 32 b00000000000000000000000000000000 RO
TxRTS_Output_BW_Bucket_3_cnt = h900031a8 0 32 h0 RO HEX
; Desc_TxRTS_Output_BW_Bucket_3_cnt This configuration represent a number of clock cycles that should be counted before an interrupt event will wake the cpu. (Setup time)



; REGISTER TxRTS_Output_BW_Bucket_4_cnt_reg Address h900031ac
_TxRTS_Output_BW_Bucket_4_cnt_reg = 2415931820 0 32 b00000000000000000000000000000000 RO
TxRTS_Output_BW_Bucket_4_cnt = h900031ac 0 32 h0 RO HEX
; Desc_TxRTS_Output_BW_Bucket_4_cnt This configuration represents a small number of clock cycles that will be counted before a sleep signal will propagate to RAM. The aim of this counting is letting the SI_Sleep be stable on 1'b1. 



; REGISTER TxRTS_Output_BW_Bucket_5_cnt_reg Address h900031b0
_TxRTS_Output_BW_Bucket_5_cnt_reg = 2415931824 0 32 b00000000000000000000000000000000 RO
TxRTS_Output_BW_Bucket_5_cnt = h900031b0 0 32 h0 RO HEX
; Desc_TxRTS_Output_BW_Bucket_5_cnt how many cycles the sm waits before starting opernationl mode after reciving sm_en



; REGISTER TxRTS_Output_BW_Bucket_6_cnt_reg Address h900031b4
_TxRTS_Output_BW_Bucket_6_cnt_reg = 2415931828 0 32 b00000000000000000000000000000000 RO
TxRTS_Output_BW_Bucket_6_cnt = h900031b4 0 32 h0 RO HEX
; Desc_TxRTS_Output_BW_Bucket_6_cnt 



; REGISTER TxRTS_Output_BW_Bucket_7_cnt_reg Address h900031b8
_TxRTS_Output_BW_Bucket_7_cnt_reg = 2415931832 0 32 b00000000000000000000000000000000 RO
TxRTS_Output_BW_Bucket_7_cnt = h900031b8 0 32 h0 RO HEX
; Desc_TxRTS_Output_BW_Bucket_7_cnt 



; REGISTER TxRTS_Output_BW_Bucket_8_cnt_reg Address h900031bc
_TxRTS_Output_BW_Bucket_8_cnt_reg = 2415931836 0 32 b00000000000000000000000000000000 RO
TxRTS_Output_BW_Bucket_8_cnt = h900031bc 0 32 h0 RO HEX
; Desc_TxRTS_Output_BW_Bucket_8_cnt 



; REGISTER TxRTS_Output_BW_Bucket_9_cnt_reg Address h900031c0
_TxRTS_Output_BW_Bucket_9_cnt_reg = 2415931840 0 32 b00000000000000000000000000000000 RO
TxRTS_Output_BW_Bucket_9_cnt = h900031c0 0 32 h0 RO HEX
; Desc_TxRTS_Output_BW_Bucket_9_cnt 



; REGISTER TxRTS_RetrainTime_reg Address h90003210
_TxRTS_RetrainTime_reg = 2415931920 0 32 b11111111111111110000000000000000 RO
TxRTS_MaxRetrainTime = h90003210 0 16 h0 RO HEX
; Desc_TxRTS_MaxRetrainTime 
TxRTS_MinRetrainTime = h90003210 16 16 hffff RO HEX
; Desc_TxRTS_MinRetrainTime 



; REGISTER TxRTS_AvgRetrainTime_reg Address h90003214
_TxRTS_AvgRetrainTime_reg = 2415931924 0 32 b00000000000000000000000000000000 RO
TxRTS_SumRetrainTime = h90003214 0 24 h0 RO HEX
; Desc_TxRTS_SumRetrainTime bit per register (iram_sm_cfg_reg_0..4) for register status + wr to register to clear status(for all)
TxRTS_TotalRetrainNum = h90003214 24 8 h0 RO HEX
; Desc_TxRTS_TotalRetrainNum bit per register (iram_sm_cfg_reg_0..4) for register status + wr to register to clear status(for all)



; REGISTER TxRTS_ApktTxDelayCalc_err_stat_reg Address h9000321c
_TxRTS_ApktTxDelayCalc_err_stat_reg = 2415931932 0 32 b00000000000000000000000000000000 SC
TxRTS_ApktTxDelayCalc_err_stat = h9000321c 0 1 h0 SC BIN
; Desc_TxRTS_ApktTxDelayCalc_err_stat bit per register (iram_sm_cfg_reg_0..4) for register status + wr to register to clear status(for all)



; REGISTER TxRTS_TxErrInj_TotalRelevantCnt_reg Address h9000324c
_TxRTS_TxErrInj_TotalRelevantCnt_reg = 2415931980 0 32 b00000000000000000000000000000000 RO
TxRTS_TxErrInj_TotalRelevantCnt = h9000324c 0 32 h0 RO HEX
; Desc_TxRTS_TxErrInj_TotalRelevantCnt 



; REGISTER TxRTS_TxErrInj_BadPayloadCnt_reg Address h90003250
_TxRTS_TxErrInj_BadPayloadCnt_reg = 2415931984 0 32 b00000000000000000000000000000000 RO
TxRTS_TxErrInj_BadPayloadCnt = h90003250 0 32 h0 RO HEX
; Desc_TxRTS_TxErrInj_BadPayloadCnt how many cycles the sm waits before starting opernationl mode after reciving sm_en



; REGISTER TxRTS_TxErrInj_BadHdrBadCrcCnt_reg Address h90003254
_TxRTS_TxErrInj_BadHdrBadCrcCnt_reg = 2415931988 0 32 b00000000000000000000000000000000 RO
TxRTS_TxErrInj_BadHdrBadCrcCnt = h90003254 0 32 h0 RO HEX
; Desc_TxRTS_TxErrInj_BadHdrBadCrcCnt 



; REGISTER TxRTS_TxErrInj_BadHdrGoodCrcCnt_reg Address h90003258
_TxRTS_TxErrInj_BadHdrGoodCrcCnt_reg = 2415931992 0 32 b00000000000000000000000000000000 RO
TxRTS_TxErrInj_BadHdrGoodCrcCnt = h90003258 0 32 h0 RO HEX
; Desc_TxRTS_TxErrInj_BadHdrGoodCrcCnt 



; REGISTER TxRTS_ErrInjection_done_reg Address h9000325c
_TxRTS_ErrInjection_done_reg = 2415931996 0 32 b00000000000000000000000000000000 RO
TxRTS_ErrInjection_done = h9000325c 0 1 h0 RO BIN
; Desc_TxRTS_ErrInjection_done 



; REGISTER RxRTS_RTS_Rx_driftest_reg Address h90003324
_RxRTS_RTS_Rx_driftest_reg = 2415932196 0 32 b00000000000000000000000000000000 RO
RxRTS_RTS_Rx_driftest = h90003324 0 16 h0 RO HEX
; Desc_RxRTS_RTS_Rx_driftest 



; REGISTER RxRTS_LinkQualityStatNum_reg Address h9000332c
_RxRTS_LinkQualityStatNum_reg = 2415932204 0 32 b00000000000000000000000000000000 RO
RxRTS_LinkQualityStatNum = h9000332c 0 5 h0 RO HEX
; Desc_RxRTS_LinkQualityStatNum bit per register (dram_sm_cfg_reg_0..4) for register status + wr to register to clear status(for all)



; REGISTER RxRTS_LinkQualStat_reg Address h90003330
_RxRTS_LinkQualStat_reg = 2415932208 0 32 b00000000000000000000000000000000 SC
RxRTS_LinkQualGoodDelivered = h90003330 0 16 h0 SC HEX
; Desc_RxRTS_LinkQualGoodDelivered bit per register (dram_sm_cfg_reg_0..4) for register status + wr to register to clear status(for all)
RxRTS_LinkQualGoodOrigDelivered = h90003330 16 16 h0 SC HEX
; Desc_RxRTS_LinkQualGoodOrigDelivered bit per register (dram_sm_cfg_reg_0..4) for register status + wr to register to clear status(for all)



; REGISTER RxRTS_LinkQualReTxDelivered_reg Address h90003334
_RxRTS_LinkQualReTxDelivered_reg = 2415932212 0 32 b00000000000000000000000000000000 RO
RxRTS_LinkQualReTxDelivered = h90003334 0 16 h0 RO HEX
; Desc_RxRTS_LinkQualReTxDelivered 



; REGISTER RxRTS_pcs_rx_fifo_max_used_reg Address h90003340
_RxRTS_pcs_rx_fifo_max_used_reg = 2415932224 0 32 b00000000000000000000000000000000 RO
RxRTS_rx_fifo_max_used = h90003340 0 9 h0 RO HEX
; Desc_RxRTS_rx_fifo_max_used 
RxRTS_AsyncFifoMaxUsed = h90003340 9 9 h0 RO HEX
; Desc_RxRTS_AsyncFifoMaxUsed 



; REGISTER RxRTS_RxBuffer_err_stat_reg Address h90003344
_RxRTS_RxBuffer_err_stat_reg = 2415932228 0 32 b00000000000000000000000000000000 SC
RxRTS_RxBuffer_err_stat = h90003344 0 17 h0 SC HEX
; Desc_RxRTS_RxBuffer_err_stat {28'b0,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}



; REGISTER RxRTS_GoodDeliveredCnt_reg Address h90003348
_RxRTS_GoodDeliveredCnt_reg = 2415932232 0 32 b00000000000000000000000000000000 RO
RxRTS_GoodDeliveredCnt = h90003348 0 32 h0 RO HEX
; Desc_RxRTS_GoodDeliveredCnt unicast address header valid i2c addr



; REGISTER RxRTS_BadDeliveredCnt_reg Address h9000334c
_RxRTS_BadDeliveredCnt_reg = 2415932236 0 32 b00000000000000000000000000000000 RO
RxRTS_BadDeliveredCnt = h9000334c 0 32 h0 RO HEX
; Desc_RxRTS_BadDeliveredCnt broadcast address header valid i2c addr



; REGISTER RxRTS_GoodOrigDeliveredCnt_reg Address h90003350
_RxRTS_GoodOrigDeliveredCnt_reg = 2415932240 0 32 b00000000000000000000000000000000 RO
RxRTS_GoodOrigDeliveredCnt = h90003350 0 32 h0 RO HEX
; Desc_RxRTS_GoodOrigDeliveredCnt  {uni_mc_not_ok,brod_mc_not_ok,acmd_wr_int,len_int,md_not_ok,pcrc_not_ok,hcrc_not_ok}



; REGISTER RxRTS_MinDeliveredCnt_reg Address h90003354
_RxRTS_MinDeliveredCnt_reg = 2415932244 0 32 b00000000000000000000000000000000 RO
RxRTS_MinDeliveredCnt = h90003354 0 32 h0 RO HEX
; Desc_RxRTS_MinDeliveredCnt  {uni_mc_not_ok,brod_mc_not_ok,acmd_wr_int,len_int,md_not_ok,pcrc_not_ok,hcrc_not_ok}



; REGISTER RxRTS_FixDeliveredCnt_reg Address h90003358
_RxRTS_FixDeliveredCnt_reg = 2415932248 0 32 b00000000000000000000000000000000 RO
RxRTS_FixDeliveredCnt = h90003358 0 32 h0 RO HEX
; Desc_RxRTS_FixDeliveredCnt {26'b0,reg_mask_fail,reg_wait_opr_fail,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}



; REGISTER RxRTS_KeepAliveCnt_reg Address h9000335c
_RxRTS_KeepAliveCnt_reg = 2415932252 0 32 b00000000000000000000000000000000 RO
RxRTS_KeepAliveCnt = h9000335c 0 32 h0 RO HEX
; Desc_RxRTS_KeepAliveCnt FSM value



; REGISTER RxRTS_MaxKeepAliveInARowCnt_reg Address h90003360
_RxRTS_MaxKeepAliveInARowCnt_reg = 2415932256 0 32 b00000000000000000000000000000000 RO
RxRTS_MaxKeepAliveInARowCnt = h90003360 0 32 h0 RO HEX
; Desc_RxRTS_MaxKeepAliveInARowCnt set unicast MC value



; REGISTER RxRTS_NotDeliveredCnt_reg Address h90003364
_RxRTS_NotDeliveredCnt_reg = 2415932260 0 32 b00000000000000000000000000000000 RO
RxRTS_NotDeliveredCnt = h90003364 0 32 h0 RO HEX
; Desc_RxRTS_NotDeliveredCnt set broadcast MC value



; REGISTER RxRTS_RetReqSentCnt_reg Address h90003368
_RxRTS_RetReqSentCnt_reg = 2415932264 0 32 b00000000000000000000000000000000 RO
RxRTS_RetReqSentCnt = h90003368 0 32 h0 RO HEX
; Desc_RxRTS_RetReqSentCnt ACMD address offset 16 MSB



; REGISTER RxRTS_GapSentCnt_reg Address h9000336c
_RxRTS_GapSentCnt_reg = 2415932268 0 32 b00000000000000000000000000000000 RO
RxRTS_GapSentCnt = h9000336c 0 32 h0 RO HEX
; Desc_RxRTS_GapSentCnt {len_cnt_start,first_addr[15:0]}



; REGISTER RxRTS_TotalMCsRequestedCnt_reg Address h90003370
_RxRTS_TotalMCsRequestedCnt_reg = 2415932272 0 32 b00000000000000000000000000000000 RO
RxRTS_TotalMCsRequestedCnt = h90003370 0 32 h0 RO HEX
; Desc_RxRTS_TotalMCsRequestedCnt {len_cnt_start,first_addr[15:0]}



; REGISTER RxRTS_FirstReTxDeliveredCnt_reg Address h90003374
_RxRTS_FirstReTxDeliveredCnt_reg = 2415932276 0 32 b00000000000000000000000000000000 RO
RxRTS_FirstReTxDeliveredCnt = h90003374 0 32 h0 RO HEX
; Desc_RxRTS_FirstReTxDeliveredCnt 



; REGISTER RxRTS_NonFirstReTxDeliveredCnt_reg Address h90003378
_RxRTS_NonFirstReTxDeliveredCnt_reg = 2415932280 0 32 b00000000000000000000000000000000 RO
RxRTS_NonFirstReTxDeliveredCnt = h90003378 0 32 h0 RO HEX
; Desc_RxRTS_NonFirstReTxDeliveredCnt {28'b0,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}



; REGISTER RxRTS_PendingReTxDeliveredCnt_reg Address h9000337c
_RxRTS_PendingReTxDeliveredCnt_reg = 2415932284 0 32 b00000000000000000000000000000000 RO
RxRTS_PendingReTxDeliveredCnt = h9000337c 0 32 h0 RO HEX
; Desc_RxRTS_PendingReTxDeliveredCnt unicast address header valid i2c addr



; REGISTER RxRTS_GoodReceivedCnt_reg Address h90003380
_RxRTS_GoodReceivedCnt_reg = 2415932288 0 32 b00000000000000000000000000000000 RO
RxRTS_GoodReceivedCnt = h90003380 0 32 h0 RO HEX
; Desc_RxRTS_GoodReceivedCnt broadcast address header valid i2c addr



; REGISTER RxRTS_BadReceivedCnt_reg Address h90003384
_RxRTS_BadReceivedCnt_reg = 2415932292 0 32 b00000000000000000000000000000000 RO
RxRTS_BadReceivedCnt = h90003384 0 32 h0 RO HEX
; Desc_RxRTS_BadReceivedCnt  {uni_mc_not_ok,brod_mc_not_ok,acmd_wr_int,len_int,md_not_ok,pcrc_not_ok,hcrc_not_ok}



; REGISTER RxRTS_GoodRtsReceivedCnt_reg Address h90003388
_RxRTS_GoodRtsReceivedCnt_reg = 2415932296 0 32 b00000000000000000000000000000000 RO
RxRTS_GoodRtsReceivedCnt = h90003388 0 32 h0 RO HEX
; Desc_RxRTS_GoodRtsReceivedCnt  {uni_mc_not_ok,brod_mc_not_ok,acmd_wr_int,len_int,md_not_ok,pcrc_not_ok,hcrc_not_ok}



; REGISTER RxRTS_BadRtsReceivedCnt_reg Address h9000338c
_RxRTS_BadRtsReceivedCnt_reg = 2415932300 0 32 b00000000000000000000000000000000 RO
RxRTS_BadRtsReceivedCnt = h9000338c 0 32 h0 RO HEX
; Desc_RxRTS_BadRtsReceivedCnt {26'b0,reg_mask_fail,reg_wait_opr_fail,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}



; REGISTER RxRTS_GoodOrigReceivedCnt_reg Address h90003390
_RxRTS_GoodOrigReceivedCnt_reg = 2415932304 0 32 b00000000000000000000000000000000 RO
RxRTS_GoodOrigReceivedCnt = h90003390 0 32 h0 RO HEX
; Desc_RxRTS_GoodOrigReceivedCnt FSM value



; REGISTER RxRTS_BadOrigReceivedCnt_reg Address h90003394
_RxRTS_BadOrigReceivedCnt_reg = 2415932308 0 32 b00000000000000000000000000000000 RO
RxRTS_BadOrigReceivedCnt = h90003394 0 32 h0 RO HEX
; Desc_RxRTS_BadOrigReceivedCnt set unicast MC value



; REGISTER RxRTS_MissingOrigReceivedCnt_reg Address h90003398
_RxRTS_MissingOrigReceivedCnt_reg = 2415932312 0 32 b00000000000000000000000000000000 RO
RxRTS_MissingOrigReceivedCnt = h90003398 0 32 h0 RO HEX
; Desc_RxRTS_MissingOrigReceivedCnt set broadcast MC value



; REGISTER RxRTS_ReTxTimeReg Address h9000339c
_RxRTS_ReTxTimeReg = 2415932316 0 32 b11111111111111110000000000000000 RO
RxRTS_MaxReTxTime = h9000339c 0 16 h0 RO HEX
; Desc_RxRTS_MaxReTxTime ACMD address offset 16 MSB
RxRTS_MinReTxTime = h9000339c 16 16 hffff RO HEX
; Desc_RxRTS_MinReTxTime ACMD address offset 16 MSB



; REGISTER RxRTS_SumReTxTimeReg Address h900033a0
_RxRTS_SumReTxTimeReg = 2415932320 0 32 b00000000000000000000000000000000 RO
RxRTS_SumReTxTime = h900033a0 0 32 h0 RO HEX
; Desc_RxRTS_SumReTxTime {len_cnt_start,first_addr[15:0]}



; REGISTER RxRTS_TotalReTxNumReg Address h900033a4
_RxRTS_TotalReTxNumReg = 2415932324 0 32 b00000000000000000000000000000000 RO
RxRTS_TotalReTxNum = h900033a4 0 32 h0 RO HEX
; Desc_RxRTS_TotalReTxNum {len_cnt_start,first_addr[15:0]}



; REGISTER RxRTS_MaxMCWindSizeReg Address h900033a8
_RxRTS_MaxMCWindSizeReg = 2415932328 0 32 b00000000000000000000000000000000 RO
RxRTS_MaxMCWindSize = h900033a8 0 8 h0 RO HEX
; Desc_RxRTS_MaxMCWindSize Number of entries in the RX FIFO



; REGISTER RxRTS_ApktBadHcrcCnt_reg Address h900033ac
_RxRTS_ApktBadHcrcCnt_reg = 2415932332 0 32 b00000000000000000000000000000000 RO
RxRTS_ApktBadHcrcCnt = h900033ac 0 32 h0 RO HEX
; Desc_RxRTS_ApktBadHcrcCnt I2C slave setup time in ns



; REGISTER RxRTS_ApktBadCrcCnt_reg Address h900033b0
_RxRTS_ApktBadCrcCnt_reg = 2415932336 0 32 b00000000000000000000000000000000 RO
RxRTS_ApktBadCrcCnt = h900033b0 0 32 h0 RO HEX
; Desc_RxRTS_ApktBadCrcCnt The Received Data Byte



; REGISTER RxRTS_ApktCorrectedCnt_reg Address h900033b4
_RxRTS_ApktCorrectedCnt_reg = 2415932340 0 32 b00000000000000000000000000000000 RO
RxRTS_ApktCorrectedCnt = h900033b4 0 32 h0 RO HEX
; Desc_RxRTS_ApktCorrectedCnt Data to be written to the transmit FIFO



; REGISTER RxRTS_ApktBadHeaderCnt_reg Address h900033b8
_RxRTS_ApktBadHeaderCnt_reg = 2415932344 0 32 b00000000000000000000000000000000 RO
RxRTS_ApktBadHeaderCnt = h900033b8 0 16 h0 RO HEX
; Desc_RxRTS_ApktBadHeaderCnt I2C slave WD counter 



; REGISTER RxRTS_AsyncFifoDropCnt_reg Address h900033bc
_RxRTS_AsyncFifoDropCnt_reg = 2415932348 0 32 b00000000000000000000000000000000 RO
RxRTS_AsyncFifoDropCnt = h900033bc 0 16 h0 RO HEX
; Desc_RxRTS_AsyncFifoDropCnt interrupt mask i2c_sl_rx_req,i2c_sl_tx_req,i2c_sl_addr_req,i2c_slv_int_wd



; REGISTER RxRTS_ApktGoodRespCnt_reg Address h900033c0
_RxRTS_ApktGoodRespCnt_reg = 2415932352 0 32 b00000000000000000000000000000000 RO
RxRTS_ApktGoodRespCnt = h900033c0 0 16 h0 RO HEX
; Desc_RxRTS_ApktGoodRespCnt i2c_sl_rx_req,i2c_sl_tx_req,i2c_sl_addr_req,i2c_slv_int_wd



; REGISTER RxRTS_ApktBadRespCnt_reg Address h900033c4
_RxRTS_ApktBadRespCnt_reg = 2415932356 0 32 b00000000000000000000000000000000 RO
RxRTS_ApktBadRespCnt = h900033c4 0 16 h0 RO HEX
; Desc_RxRTS_ApktBadRespCnt I2C slave WD stop address  



; REGISTER RxRTS_AckIndicationCnt_reg Address h900033c8
_RxRTS_AckIndicationCnt_reg = 2415932360 0 32 b00000000000000000000000000000000 RO
RxRTS_AckIndicationCnt = h900033c8 0 16 h0 RO HEX
; Desc_RxRTS_AckIndicationCnt 



; REGISTER RxRTS_Atype_all_crc_num_reg Address h900033cc
_RxRTS_Atype_all_crc_num_reg = 2415932364 0 32 b00000000000000000000000000000000 SC
RxRTS_Atype_all_crc_num = h900033cc 0 32 h0 SC HEX
; Desc_RxRTS_Atype_all_crc_num 



; REGISTER RxRTS_Atype_00_crc_num_reg Address h900033d0
_RxRTS_Atype_00_crc_num_reg = 2415932368 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_00_crc_num = h900033d0 0 32 h0 RO HEX
; Desc_RxRTS_Atype_00_crc_num 0 - SPI controls write to RxMessageFifos1 - RIF controls write to RxMessageFifo



; REGISTER RxRTS_Atype_01_crc_num_reg Address h900033d4
_RxRTS_Atype_01_crc_num_reg = 2415932372 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_01_crc_num = h900033d4 0 32 h0 RO HEX
; Desc_RxRTS_Atype_01_crc_num loopback mode (SDI -> SDO)



; REGISTER RxRTS_Atype_02_crc_num_reg Address h900033d8
_RxRTS_Atype_02_crc_num_reg = 2415932376 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_02_crc_num = h900033d8 0 32 h0 RO HEX
; Desc_RxRTS_Atype_02_crc_num light sleep : bit 0 - rx mem, bit 1 - tx mem



; REGISTER RxRTS_Atype_03_crc_num_reg Address h900033dc
_RxRTS_Atype_03_crc_num_reg = 2415932380 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_03_crc_num = h900033dc 0 32 h0 RO HEX
; Desc_RxRTS_Atype_03_crc_num put rx_msg_fifo_host to online



; REGISTER RxRTS_Atype_04_crc_num_reg Address h900033e0
_RxRTS_Atype_04_crc_num_reg = 2415932384 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_04_crc_num = h900033e0 0 32 h0 RO HEX
; Desc_RxRTS_Atype_04_crc_num put rx_msg_fifo_soc to online



; REGISTER RxRTS_Atype_05_crc_num_reg Address h900033e4
_RxRTS_Atype_05_crc_num_reg = 2415932388 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_05_crc_num = h900033e4 0 32 h0 RO HEX
; Desc_RxRTS_Atype_05_crc_num Number of current words in RxMessageFifo



; REGISTER RxRTS_Atype_06_crc_num_reg Address h900033e8
_RxRTS_Atype_06_crc_num_reg = 2415932392 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_06_crc_num = h900033e8 0 32 h0 RO HEX
; Desc_RxRTS_Atype_06_crc_num 



; REGISTER RxRTS_Atype_07_crc_num_reg Address h900033ec
_RxRTS_Atype_07_crc_num_reg = 2415932396 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_07_crc_num = h900033ec 0 32 h0 RO HEX
; Desc_RxRTS_Atype_07_crc_num 



; REGISTER RxRTS_Atype_08_crc_num_reg Address h900033f0
_RxRTS_Atype_08_crc_num_reg = 2415932400 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_08_crc_num = h900033f0 0 32 h0 RO HEX
; Desc_RxRTS_Atype_08_crc_num 



; REGISTER RxRTS_Atype_09_crc_num_reg Address h900033f4
_RxRTS_Atype_09_crc_num_reg = 2415932404 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_09_crc_num = h900033f4 0 32 h0 RO HEX
; Desc_RxRTS_Atype_09_crc_num 



; REGISTER RxRTS_Atype_10_crc_num_reg Address h900033f8
_RxRTS_Atype_10_crc_num_reg = 2415932408 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_10_crc_num = h900033f8 0 32 h0 RO HEX
; Desc_RxRTS_Atype_10_crc_num Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]sinitial_seq_id_an_vm1_sel0    [23:16]sinitial_seq_id_an_vm0    [15:8]sinitial_seq_id_internal    [7:0]



; REGISTER RxRTS_Atype_11_crc_num_reg Address h900033fc
_RxRTS_Atype_11_crc_num_reg = 2415932412 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_11_crc_num = h900033fc 0 32 h0 RO HEX
; Desc_RxRTS_Atype_11_crc_num Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]sinitial_seq_id_an_vm1_sel3    [23:16]sinitial_seq_id_an_vm1_sel2    [15:8]sinitial_seq_id_an_vm1_sel1    [7:0]



; REGISTER RxRTS_Atype_12_crc_num_reg Address h90003400
_RxRTS_Atype_12_crc_num_reg = 2415932416 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_12_crc_num = h90003400 0 32 h0 RO HEX
; Desc_RxRTS_Atype_12_crc_num Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]sinitial_seq_id_an_vm4    [23:16]sinitial_seq_id_an_vm3    [15:8]sinitial_seq_id_an_vm2    [7:0]



; REGISTER RxRTS_Atype_13_crc_num_reg Address h90003404
_RxRTS_Atype_13_crc_num_reg = 2415932420 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_13_crc_num = h90003404 0 32 h0 RO HEX
; Desc_RxRTS_Atype_13_crc_num Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]sinitial_seq_id_an_vm7    [23:16]sinitial_seq_id_an_vm6    [15:8]sinitial_seq_id_an_vm5    [7:0]



; REGISTER RxRTS_Atype_14_crc_num_reg Address h90003408
_RxRTS_Atype_14_crc_num_reg = 2415932424 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_14_crc_num = h90003408 0 32 h0 RO HEX
; Desc_RxRTS_Atype_14_crc_num controls the vmc functionalitysfield descriptionspd                       [0]                    Power down –s                                                   1’b0 – vm is actives                                                   1’b1 – vm is forced to power-downsS/L-St                  [1]                   Selects the type of self-tests                                                   1’b0 – when self-test activated – short self-test sequence will be executeds                                                   1’b1 – when self-test activated – long self-test sequence will be performed. The selected steps according to Long Self-test steps register see para. ‎0sreserved             [2]            sBypass mode     [3]           Selects bypass modes                                                  1’b0 – the vmc is activated in automatic mode. The vm are controlled according to predefined sequencess                                                  1’b1 – the vmc is activated in bypass modes                                                  The vm are controlled according to the control signals written by SW to Bypass Control register see para. ‎11.3ssingle_mode      [4]           vm_single run modesReserved           [23:5]ssMagic_number  [27:24]   Default value – identical for all registerssParity                 [31:28]   Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_15_crc_num_reg Address h9000340c
_RxRTS_Atype_15_crc_num_reg = 2415932428 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_15_crc_num = h9000340c 0 32 h0 RO HEX
; Desc_RxRTS_Atype_15_crc_num controls thevm activation while in bypass modesvm_pd                       [0]                     vm power down control bit while in bypass modesvm_rstn                    [1]                     vm reset control bit while in bypass mode svm_run                     [2]                     vm run control bit while in bypass modesvm_sde                     [3]                     vm serial enable_bitsvm_tm_tval              [4]                     vm tm_tval control bit while in bypass modesvm_tm_ld                 [5]                      vm tm_ld control bit while in bypass modesvm_sel_vin             [9:6]                   vm sel_vin control bits while in bypass modesvm_tm_a                 [13:10]              vm tm_a control bits while in bypass modesvm_trim                  [17:14]              vm trim control bitsssReserved                 [22:18]ssvm_clk_en              [23]                    Enables the clk_gator on clock driving the vm while in bypass modesMagic_number     [27:24]              Default value – identical for all registerssParity                      [31:28]              Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_00_packets_reg Address h90003410
_RxRTS_Atype_00_packets_reg = 2415932432 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_00_packets = h90003410 0 32 h0 RO HEX
; Desc_RxRTS_Atype_00_packets time gap between adjacent measuremenvmsmeasurement period     [22:0]              Defines number of clocks periods between voltage measurement – the actual period depend on the selected s                                                                          clock frequencysuse_mpr                               [23]                 Use measurement period register s                                                                          1’b0 – measuremenvm will be done at the maximum possible rate – once one measurement is done (on both vm) and values are sampled, a new measurement will be initiateds                                                                          1’b1 – measurement will be done at the rate specified by the measurement period fields                                                                          For example - measurement period = 23’h7D0 means 2000 / 1Mhz = 2 msecsMagic_number                  [27:24]             Default value – identical for all registerssParity                                     [31:28]           Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_01_packets_reg Address h90003414
_RxRTS_Atype_01_packets_reg = 2415932436 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_01_packets = h90003414 0 32 h0 RO HEX
; Desc_RxRTS_Atype_01_packets measurement timeout          [15:0]            Defines the waiting time from RUN activation until RDY is received – if the timeout period expires an error flag iss                                                                                 raised.s                                                                                The timeout counter resolution is the vm clock period.sReserved                                      [23:16]sMagic_number                          [27:24]         Default value – identical for all registerssParity                                             [31:28]         Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_02_packets_reg Address h90003418
_RxRTS_Atype_02_packets_reg = 2415932440 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_02_packets = h90003418 0 32 h0 RO HEX
; Desc_RxRTS_Atype_02_packets short_self_test_high_limit1       [11:0]                  When short self-test is selected this value is used as high_limit1sshort_self_test_low_limit1        [23:12]                When short self-test is selected this value is used as low_limit1sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_03_packets_reg Address h9000341c
_RxRTS_Atype_03_packets_reg = 2415932444 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_03_packets = h9000341c 0 32 h0 RO HEX
; Desc_RxRTS_Atype_03_packets short_self_test_high_limit2s         [11:0]                When short self-test is selected this value is used as high_limit2sshort_self_test_low_limit2           [23:12]             When short self-test is selected this value is used as low_limit2sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_04_packets_reg Address h90003420
_RxRTS_Atype_04_packets_reg = 2415932448 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_04_packets = h90003420 0 32 h0 RO HEX
; Desc_RxRTS_Atype_04_packets short_self_test_high_limit3s         [11:0]                When short self-test is selected this value is used as high_limit3sshort_self_test_low_limit3           [23:12]             When short self-test is selected this value is used as low_limit3sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_05_packets_reg Address h90003424
_RxRTS_Atype_05_packets_reg = 2415932452 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_05_packets = h90003424 0 32 h0 RO HEX
; Desc_RxRTS_Atype_05_packets short_self_test_forced_vm_value1             [11:0]               When short self-test is selected this value is used for comparison against above defined limitssshort_self_test_forced_vm_value2             [23:12]            When short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_06_packets_reg Address h90003428
_RxRTS_Atype_06_packets_reg = 2415932456 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_06_packets = h90003428 0 32 h0 RO HEX
; Desc_RxRTS_Atype_06_packets short_self_test_forced_vm_value3             [11:0]               When short self-test is selected this value is used for comparison against above defined limitssshort_self_test_forced_vm_value4             [23:12]            When short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_07_packets_reg Address h9000342c
_RxRTS_Atype_07_packets_reg = 2415932460 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_07_packets = h9000342c 0 32 h0 RO HEX
; Desc_RxRTS_Atype_07_packets short_self_test_DS_low_limit_high_value                [11:0]                 When short self-test is selected this value is used as high_limit against the high value ofs                                                                                                                         direct signature from vm sshort_self_test_DS_low_limit_low_value                 [23:12]              When short self-test is selected this value is used as low_limit against the low value ofs                                                                                                                         direct signature from vmsMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_08_packets_reg Address h90003430
_RxRTS_Atype_08_packets_reg = 2415932464 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_08_packets = h90003430 0 32 h0 RO HEX
; Desc_RxRTS_Atype_08_packets short_self_test_DS_high_limit_high_value               [11:0]                 When short self-test is selected this value is used as high_limit against the high value ofs                                                                                                                         direct signature from vm sshort_self_test_DS_high_limit_low_value                [23:12]               When short self-test is selected this value is used as low_limit against the low value ofs                                                                                                                         direct signature from vmsMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_09_packets_reg Address h90003434
_RxRTS_Atype_09_packets_reg = 2415932468 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_09_packets = h90003434 0 32 h0 RO HEX
; Desc_RxRTS_Atype_09_packets vm_high_comp              0                           vm comparison expected result  - step1s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               1                           vm comparison expected result - step1s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comps             2                           vm comparison expected result - step2s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               3                           vm comparison expected result - step2s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comp              4                           vm comparison expected result  - step3s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               5                           vm comparison expected result - step3s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comps             6                           vm comparison expected result - step4s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               7                           vm comparison expected resultv - step4s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comp              8                           vm comparison expected result  - step5s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               9                           vm comparison expected result - step5s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comps             10                           vm comparison expected result - step6s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               11                           vm comparison expected result - step6s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comp              12                           vm comparison expected result  - step7s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               13                           vm comparison expected result - step7s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comps             14                           vm comparison expected result - step8s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               15                           vm comparison expected result - step8s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsReserved                         [23:16]sMagic_number              [27:24]               Default value – identical for all registerssParity                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_10_packets_reg Address h90003438
_RxRTS_Atype_10_packets_reg = 2415932472 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_10_packets = h90003438 0 32 h0 RO HEX
; Desc_RxRTS_Atype_10_packets func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_11_packets_reg Address h9000343c
_RxRTS_Atype_11_packets_reg = 2415932476 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_11_packets = h9000343c 0 32 h0 RO HEX
; Desc_RxRTS_Atype_11_packets func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_12_packets_reg Address h90003440
_RxRTS_Atype_12_packets_reg = 2415932480 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_12_packets = h90003440 0 32 h0 RO HEX
; Desc_RxRTS_Atype_12_packets func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_13_packets_reg Address h90003444
_RxRTS_Atype_13_packets_reg = 2415932484 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_13_packets = h90003444 0 32 h0 RO HEX
; Desc_RxRTS_Atype_13_packets func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_14_packets_reg Address h90003448
_RxRTS_Atype_14_packets_reg = 2415932488 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_14_packets = h90003448 0 32 h0 RO HEX
; Desc_RxRTS_Atype_14_packets func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_15_packets_reg Address h9000344c
_RxRTS_Atype_15_packets_reg = 2415932492 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_15_packets = h9000344c 0 32 h0 RO HEX
; Desc_RxRTS_Atype_15_packets func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_pre_00_crc_num_reg Address h90003450
_RxRTS_Atype_pre_00_crc_num_reg = 2415932496 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_00_crc_num = h90003450 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_00_crc_num func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_pre_01_crc_num_reg Address h90003454
_RxRTS_Atype_pre_01_crc_num_reg = 2415932500 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_01_crc_num = h90003454 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_01_crc_num func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_pre_02_crc_num_reg Address h90003458
_RxRTS_Atype_pre_02_crc_num_reg = 2415932504 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_02_crc_num = h90003458 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_02_crc_num func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_pre_03_crc_num_reg Address h9000345c
_RxRTS_Atype_pre_03_crc_num_reg = 2415932508 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_03_crc_num = h9000345c 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_03_crc_num func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_pre_04_crc_num_reg Address h90003460
_RxRTS_Atype_pre_04_crc_num_reg = 2415932512 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_04_crc_num = h90003460 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_04_crc_num func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_pre_05_crc_num_reg Address h90003464
_RxRTS_Atype_pre_05_crc_num_reg = 2415932516 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_05_crc_num = h90003464 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_05_crc_num func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_pre_06_crc_num_reg Address h90003468
_RxRTS_Atype_pre_06_crc_num_reg = 2415932520 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_06_crc_num = h90003468 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_06_crc_num CRC calculated on bits [31:8]



; REGISTER RxRTS_Atype_pre_07_crc_num_reg Address h9000346c
_RxRTS_Atype_pre_07_crc_num_reg = 2415932524 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_07_crc_num = h9000346c 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_07_crc_num CRC calculated on bits [31:8]



; REGISTER RxRTS_Atype_pre_08_crc_num_reg Address h90003470
_RxRTS_Atype_pre_08_crc_num_reg = 2415932528 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_08_crc_num = h90003470 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_08_crc_num CRC calculated on bits [31:8]



; REGISTER RxRTS_Atype_pre_09_crc_num_reg Address h90003474
_RxRTS_Atype_pre_09_crc_num_reg = 2415932532 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_09_crc_num = h90003474 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_09_crc_num CRC calculated on bits [31:8]



; REGISTER RxRTS_Atype_pre_10_crc_num_reg Address h90003478
_RxRTS_Atype_pre_10_crc_num_reg = 2415932536 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_10_crc_num = h90003478 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_10_crc_num CRC calculated on bits [31:8]



; REGISTER RxRTS_Atype_pre_11_crc_num_reg Address h9000347c
_RxRTS_Atype_pre_11_crc_num_reg = 2415932540 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_11_crc_num = h9000347c 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_11_crc_num CRC calculated on bits [31:8]



; REGISTER RxRTS_Atype_pre_12_crc_num_reg Address h90003480
_RxRTS_Atype_pre_12_crc_num_reg = 2415932544 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_12_crc_num = h90003480 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_12_crc_num CRC calculated on bits [31:8]



; REGISTER RxRTS_Atype_pre_13_crc_num_reg Address h90003484
_RxRTS_Atype_pre_13_crc_num_reg = 2415932548 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_13_crc_num = h90003484 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_13_crc_num CRC calculated on bits [31:8]



; REGISTER RxRTS_Atype_pre_14_crc_num_reg Address h90003488
_RxRTS_Atype_pre_14_crc_num_reg = 2415932552 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_14_crc_num = h90003488 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_14_crc_num CRC calculated on bits [31:8]



; REGISTER RxRTS_Atype_pre_15_crc_num_reg Address h9000348c
_RxRTS_Atype_pre_15_crc_num_reg = 2415932556 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_15_crc_num = h9000348c 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_15_crc_num CRC calculated on bits [31:8]



; REGISTER RxRTS_Atype_pre_00_packets_reg Address h90003490
_RxRTS_Atype_pre_00_packets_reg = 2415932560 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_00_packets = h90003490 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_00_packets CRC calculated on bits [31:8]



; REGISTER RxRTS_Atype_pre_01_packets_reg Address h90003494
_RxRTS_Atype_pre_01_packets_reg = 2415932564 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_01_packets = h90003494 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_01_packets CRC calculated on bits [31:8]



; REGISTER RxRTS_Atype_pre_02_packets_reg Address h90003498
_RxRTS_Atype_pre_02_packets_reg = 2415932568 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_02_packets = h90003498 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_02_packets To be used while in Bypass mode to allow the SW to determine when the vm voltage value is ready and can be read



; REGISTER RxRTS_Atype_pre_03_packets_reg Address h9000349c
_RxRTS_Atype_pre_03_packets_reg = 2415932572 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_03_packets = h9000349c 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_03_packets vm measured voltage is out of the defined limits – either higher or lower



; REGISTER RxRTS_Atype_pre_04_packets_reg Address h900034a0
_RxRTS_Atype_pre_04_packets_reg = 2415932576 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_04_packets = h900034a0 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_04_packets error_limit                                                                      [4:0]                 when number of errors equals or exceeds this numbetrr failure indication will be reported.  sReserved                                                                         [23:5]sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_pre_05_packets_reg Address h900034a4
_RxRTS_Atype_pre_05_packets_reg = 2415932580 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_05_packets = h900034a4 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_05_packets Actual number of out_of_limit errors



; REGISTER RxRTS_Atype_pre_06_packets_reg Address h900034a8
_RxRTS_Atype_pre_06_packets_reg = 2415932584 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_06_packets = h900034a8 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_06_packets When active – the configuration register x, fail to meet the safety requiremenvm



; REGISTER RxRTS_Atype_pre_07_packets_reg Address h900034ac
_RxRTS_Atype_pre_07_packets_reg = 2415932588 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_07_packets = h900034ac 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_07_packets When active – the configuration register x, fail to meet the safety requiremenvm



; REGISTER RxRTS_Atype_pre_08_packets_reg Address h900034b0
_RxRTS_Atype_pre_08_packets_reg = 2415932592 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_08_packets = h900034b0 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_08_packets short_self_test_comperator results per self_test steps    [1]      vm_GT_high_limit step 1s    [0]      vm_LT_low_limit step 1



; REGISTER RxRTS_Atype_pre_09_packets_reg Address h900034b4
_RxRTS_Atype_pre_09_packets_reg = 2415932596 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_09_packets = h900034b4 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_09_packets functional comperator results for internal voltage measurements    [1]      vm_GT_high_limits    [0]      vm_LT_low_limit



; REGISTER RxRTS_Atype_pre_10_packets_reg Address h900034b8
_RxRTS_Atype_pre_10_packets_reg = 2415932600 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_10_packets = h900034b8 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_10_packets defines the voltage_monitor clocksvm_clk_up_width        [9:0]  - defines the length of high level of vm_clksvm_clk_down_width   [19:10]  - defines the length of low level of vm_clksreserve                        [23:20]sMagic_number          [27:24]              Default value – identical for all registerssParity                          [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_pre_11_packets_reg Address h900034bc
_RxRTS_Atype_pre_11_packets_reg = 2415932604 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_11_packets = h900034bc 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_11_packets defines the wait period for analog power-ypsvm_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_pre_12_packets_reg Address h900034c0
_RxRTS_Atype_pre_12_packets_reg = 2415932608 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_12_packets = h900034c0 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_12_packets defines the detection_enable for each error per portsvm_high_level_detect_en_internal       [0]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_internal        [1]  - defines if vm  low_level comparator will report a detected errorsvm_high_level_detect_en_vm0       [2]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vm0        [3]  - defines if vm  low_level comparator will report a detected errorrsvm_high_level_detect_en_vm1_sel0       [4]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vm1_sel0       [5]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vm1_sel1       [6]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vm1_sel1        [7]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vm1_sel2       [8]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vm1_sel2        [9]  - defines if vm  low_level comparator will report a detected errorsvm_high_level_detect_en_vm1_sel3       [10]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vm1_sel3        [11]  - defines if vm  low_level comparator will report a detected errorsvm_high_level_detect_en_vm2       [12]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vm2        [13]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vm3       [14]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vm3        [15]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vm4       [16]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vm4        [17]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vm5       [18]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vm5        [19]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vm6       [20]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vm6        [21]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vm7       [22]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vm7        [23]  - defines if vm  low_level comparator will report a detected errotsMagic_number                                                      [27:24]              Default value – identical for all registerssParity                                                                         [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_pre_13_packets_reg Address h900034c4
_RxRTS_Atype_pre_13_packets_reg = 2415932612 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_13_packets = h900034c4 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_13_packets defines the detection_enable for each error per portsparity_error_detect_en                                         [0]                   defines if register_parity error will be detected. sMagic_number                                                      [27:24]              Default value – identical for all registerssParity                                                                         [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_pre_14_packets_reg Address h900034c8
_RxRTS_Atype_pre_14_packets_reg = 2415932616 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_14_packets = h900034c8 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_14_packets defines the count enable  for each errorsvm_high_level_count_en_internal       [0]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_internal        [1]  - defines if vm  low_level comparator will report a detected errorsvm_high_level_count_en_vm0       [2]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vm0        [3]  - defines if vm  low_level comparator will report a detected errorrsvm_high_level_count_en_vm1_sel0       [4]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vm1_sel0       [5]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vm1_sel1       [6]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vm1_sel1        [7]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vm1_sel2       [8]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vm1_sel2        [9]  - defines if vm  low_level comparator will report a detected errorsvm_high_level_count_en_vm1_sel3       [10]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vm1_sel3        [11]  - defines if vm  low_level comparator will report a detected errorsvm_high_level_count_en_vm2       [12]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vm2        [13]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vm3       [14]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vm3        [15]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vm4       [16]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vm4        [17]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vm5       [18]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vm5        [19]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vm6       [20]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vm6        [21]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vm7       [22]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vm7        [23]  - defines if vm  low_level comparator will report a detected errotsMagic_number                                     [27:24]              Default value – identical for all registerssParity                                                     [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_Atype_pre_15_packets_reg Address h900034cc
_RxRTS_Atype_pre_15_packets_reg = 2415932620 0 32 b00000000000000000000000000000000 RO
RxRTS_Atype_pre_15_packets = h900034cc 0 32 h0 RO HEX
; Desc_RxRTS_Atype_pre_15_packets defines which inputs to the Voltage monitor will be measured during the self_test sequencesinternal_voltage_measurement_en                   [0]svm0_voltage_measurement_en                           [1]svm1_sel0_voltage_measurement_en                [2]svm1_sel1_voltage_measurement_en                [3]svm1_sel2_voltage_measurement_en                [4]svm1_sel3_voltage_measurement_en                [5]svm2_voltage_measurement_en                           [6]svm3_voltage_measurement_en                           [7]svm4_voltage_measurement_en                           [8]svm5_voltage_measurement_en                           [9]svm6_voltage_measurement_en                           [10]svm7_voltage_measurement_en                           [11]sreserved                                                                         [23:12]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_pre_total_packets_reg Address h900034d0
_RxRTS_pre_total_packets_reg = 2415932624 0 32 b00000000000000000000000000000000 SC
RxRTS_pre_total_packets = h900034d0 0 32 h0 SC HEX
; Desc_RxRTS_pre_total_packets defines which inputs to the Voltage monitor will be measured during the fnctional sequencesinternal_voltage_measurement_en                   [0]svm0_voltage_measurement_en                           [1]svm1_sel0_voltage_measurement_en                [2]svm1_sel1_voltage_measurement_en                [3]svm1_sel2_voltage_measurement_en                [4]svm1_sel3_voltage_measurement_en                [5]svm2_voltage_measurement_en                           [6]svm3_voltage_measurement_en                           [7]svm4_voltage_measurement_en                           [8]svm5_voltage_measurement_en                           [9]svm6_voltage_measurement_en                           [10]svm7_voltage_measurement_en                           [11]sreserved                                                                         [23:12]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_post_total_packets_reg Address h900034d4
_RxRTS_post_total_packets_reg = 2415932628 0 32 b00000000000000000000000000000000 SC
RxRTS_post_total_packets = h900034d4 0 32 h0 SC HEX
; Desc_RxRTS_post_total_packets defines the required stabilization time - resolution in vm_clksmax between  - Voltage monitor stabilization time when switching between the analog inputs s                          - stabilization time when swithcing between vmref output voltagesstabilization time                  [7:0]sreserved                                  [23:8]sMagic_number                      [27:24]              Default value – identical for all registerssParity                                      [31:28]               Parity calculation on bits[27:0] 



; REGISTER ApktRTS_blocks_reset_n_done_reg Address h90003604
_ApktRTS_blocks_reset_n_done_reg = 2415932932 0 32 b00000000000000000000000000000000 RO
ApktRTS_blocks_reset_n_done = h90003604 0 5 h0 RO HEX
; Desc_ApktRTS_blocks_reset_n_done vm_data_error_gen                                                      [11:0]                  each bit set in this field will invert the corresponding bit in the vm_data to cause intentional error  sReserved                                                                         [22:12]svm_rdy_error_gen                                                        [23]                     setting this bit will set the vm_rdy to 1'b0 - for error and timeout testssMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
ApktRTS_trn_reset_n_done = h90003604 0 1 h0 RO BIN
ApktRTS_rcv_reset_n_done = h90003604 1 1 h0 RO BIN
ApktTxRTS_sys_reset_n_done = h90003604 2 1 h0 RO BIN
ApktRxRTS_sys_reset_n_done = h90003604 3 1 h0 RO BIN
ApktRTS_tb_reset_n_done = h90003604 4 1 h0 RO BIN



; REGISTER ApktRTS_int_clr_reg Address h9000360c
_ApktRTS_int_clr_reg = 2415932940 0 32 b00000000000000000000000000000000 SC
ApktRTS_int_clr = h9000360c 0 1 h0 SC BIN



; REGISTER ApktRTS_int_stat_reg Address h90003614
_ApktRTS_int_stat_reg = 2415932948 0 32 b00000000000000000000000000000000 RO
ApktRTS_int_stat = h90003614 0 20 h0 RO HEX
; Desc_ApktRTS_int_stat func_measurement_count               [15:0]                number of measurement done - counts all the meaurements done when the VMU is in functional safety mode
ApktTxRetReq_int_stat = h90003614 0 4 h0 RO HEX
ApktTxDelayCalc_int_stat = h90003614 4 1 h0 RO BIN
TxBuffer_original_no_tx_int_stat = h90003614 5 1 h0 RO BIN
TxBuffer_original_pre_retx_int_stat = h90003614 6 1 h0 RO BIN
TxBuffer_addr_override_int_stat = h90003614 7 1 h0 RO BIN
TxBuffer_mc_used_int_stat = h90003614 8 1 h0 RO BIN
TxBuffer_used_int_stat = h90003614 9 1 h0 RO BIN
MaxRetrainTime_int_stat = h90003614 10 1 h0 RO BIN
ErrInjection_done_int = h90003614 11 1 h0 RO BIN
NoRx_int_stat = h90003614 12 1 h0 RO BIN
NoRxKA_int_stat = h90003614 13 1 h0 RO BIN
LinkQuality_int_stat = h90003614 14 1 h0 RO BIN
RxBuffer_err_int_stat = h90003614 15 1 h0 RO BIN
rx_fifo_overflow_int_stat = h90003614 16 1 h0 RO BIN
header_error_int_stat = h90003614 17 1 h0 RO BIN
async_fifo_drop_int_stat = h90003614 18 1 h0 RO BIN
packet_error_int_stat = h90003614 19 1 h0 RO BIN



; REGISTER sw_int_stat0_reg Address h90004020
_sw_int_stat0_reg = 2415935520 0 32 b00000000000000000000000000000000 RO
sw_int_stat0 = h90004020 0 32 h0 RO HEX
; Desc_sw_int_stat0 func_measurement_iteration_count               [15:0]                number of measurement loops each loops include all the measurements defined in  func_mode_measurement_en



; REGISTER sw_int_stat1_reg Address h90004024
_sw_int_stat1_reg = 2415935524 0 32 b00000000000000000000000000000000 RO
sw_int_stat1 = h90004024 0 32 h0 RO HEX
; Desc_sw_int_stat1 tbd                                                                                     [23:0]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER sw_int_stat2_reg Address h90004028
_sw_int_stat2_reg = 2415935528 0 32 b00000000000000000000000000000000 RO
sw_int_stat2 = h90004028 0 32 h0 RO HEX
; Desc_sw_int_stat2 enable                                                 [0]svbg_selvdd                                         [1]svbg_trim                                          [3:2]svsrc_sel                                              [4]svmref_trim                                      [6:5]sabt_sel                                             [8:7]sspare                                               [12:9]sreserved                                         [23:13]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER sw_int_stat3_reg Address h9000402c
_sw_int_stat3_reg = 2415935532 0 32 b00000000000000000000000000000000 RO
sw_int_stat3 = h9000402c 0 32 h0 RO HEX
; Desc_sw_int_stat3 Initial SEQ_ID Value added to the read temperature register. This values will be incremented automatically after every read access to the read temperature register: sfield descriptionsparity                [31:28]smagic_number [27:24]sReserved           [23:8]sinitial_seq_id    [7:0]



; REGISTER sw_int_stat4_reg Address h90004030
_sw_int_stat4_reg = 2415935536 0 32 b00000000000000000000000000000000 RO
sw_int_stat4 = h90004030 0 32 h0 RO HEX
; Desc_sw_int_stat4 controls the TSC functionalitysfield descriptionspd                       [0]                    Power down –s                                                   1’b0 – both TS are actives                                                   1’b1 – both TS are forced to power-downsS/L-St                  [1]                   Selects the type of self-tests                                                   1’b0 – when self-test activated – short self-test sequence will be executeds                                                   1’b1 – when self-test activated – long self-test sequence will be performed. The selected steps according to Long Self-test steps register see para. ‎0sSh_st_type         [2]            Selects the type of short self-tests                                                  1’b0 – when short self-test activated – automatic short self-test will be performeds                                                  1’b1 - when short self-test activated – manual driven short self-test will be performedsBypass mode     [3]           Selects bypass modes                                                  1’b0 – the TSC is activated in automatic mode. The TS are controlled according to predefined sequencess                                                  1’b1 – the TSC is activated in bypass modes                                                  The TS are controlled according to the control signals written by SW to Bypass Control register see para. ‎11.3sPar/sep              [4]            Selects the Temperature Sensors activity modes                                                  1’b0 – parallel (normal) mode – the Temperature Sensors are activated in parallel s                                                  1’b1 – separated mode – each temperature sensor is activated separately. This mode will be used while in bypass mode and for debug purposes.smaster               [5]           Selects which Temperature Sensor is read when the temperature read register is accesseds                                                  1’b0 – TS0 sampled value will be read when the temperature read register is accesseds                                                  1’b1 – TS1 sampled value will be read when the temperature read register is accessedsReserved           [23:6]ssMagic_number  [27:24]   Default value – identical for all registerssParity                 [31:28]   Parity calculation on bits[27:0] 



; REGISTER sw_int_stat5_reg Address h90004034
_sw_int_stat5_reg = 2415935540 0 32 b00000000000000000000000000000000 RO
sw_int_stat5 = h90004034 0 32 h0 RO HEX
; Desc_sw_int_stat5 controls theTS activation while in bypass modesTs0_pd                       [0]                     ts0 power down control bit while in bypass modesTs0_rstn                    [1]                     ts0 reset control bit while in bypass mode sTs0_run                     [2]                     ts0 run control bit while in bypass modesTs0_sgn_en             [3]                     ts0 sgn_en control bit while in bypass modesTs0_cal                      [4]                     ts0 cal control bit while in bypass modesTs0_tm_an              [8:5]                  ts0 tm_an control bits while in bypass modests0_ser_en               [9]                     ts0 serial enable_bitsts0_single_mode    [10]                     ts0_single run modesReserved                 [11]ssTs1_pd                     [12]                    ts1 power down control bit while in bypass modesTs1_rstn                  [13]                    ts1 reset control bit while in bypass mode sTs1_run                   [14]                    ts1 run control bit while in bypass modesTs1_sgn_en           [15]                    ts1 sgn_en control bit while in bypass modesTs1_cal                    [16]                    ts1 cal control bit while in bypass modesTs1_tm_an            [20:17]              ts1 tm_an control bits while in bypass modests1_ser_en               [21]                     ts0 serial enable_bitsts1_single_mode    [22]                     ts1_single run modesTs_clk_en              [23]                    Enables the clk_gator on clock driving the TS while in bypass modesMagic_numbers  [27:24]              Default value – identical for all registerssParity                      [31:28]              Parity calculation on bits[27:0] 



; REGISTER sw_int_stat6_reg Address h90004038
_sw_int_stat6_reg = 2415935544 0 32 b00000000000000000000000000000000 RO
sw_int_stat6 = h90004038 0 32 h0 RO HEX
; Desc_sw_int_stat6 time gap between adjacent measurementssmeasurement period     [22:0]              Defines number of clocks periods between temperature measurement – the actual period depend on the selected s                                                                          clock frequencysuse_mpr                               [23]                 Use measurement period register s                                                                          1’b0 – measurements will be done at the maximum possible rate – once one measurement is done (on both TS) and values are sampled, a new measurement will be initiateds                                                                          1’b1 – measurement will be done at the rate specified by the measurement period fields                                                                          For example - measurement period = 23’h7D00 means 32000 / 2Mhz = 16 msecsMagic_number                  [27:24]           Default value – identical for all registerssParity                                     [31:28]           Parity calculation on bits[27:0] 



; REGISTER sw_int_stat7_reg Address h9000403c
_sw_int_stat7_reg = 2415935548 0 32 b00000000000000000000000000000000 RO
sw_int_stat7 = h9000403c 0 32 h0 RO HEX
; Desc_sw_int_stat7 measurement timeout          [15:0]            Defines the waiting time from RUN activation until RDY is received – if the timeout period expires an error flag iss                                                                                 raised.s                                                                                The timeout counter resolution is the TS lock period.sReserved                                      [23:16]sMagic_number                          [27:24]         Default value – identical for all registerssParity                                             [31:28]         Parity calculation on bits[27:0] 



; REGISTER func_bist_run Address h900000b4
_func_bist_run = 2415919284 0 32 b00000000000000000000000000000000 SC



; REGISTER pll_lock_safety_reg_status_clr_reg Address h90002308
_pll_lock_safety_reg_status_clr_reg = 2415928072 0 32 b00000000000000000000000000000000 SC



; REGISTER pll_lock_fail_intr_clr Address h9000230c
_pll_lock_fail_intr_clr = 2415928076 0 32 b00000000000000000000000000000000 SC



; REGISTER pd_configuration_load_register Address h90002410
_pd_configuration_load_register = 2415928336 0 32 b00000000000000000000000000000000 SC



; REGISTER vm_configuration_load_register Address h90002520
_vm_configuration_load_register = 2415928608 0 32 b00000000000000000000000000000000 SC



; REGISTER ts_configuration_load_register Address h90002814
_ts_configuration_load_register = 2415929364 0 32 b00000000000000000000000000000000 SC



; REGISTER sw_int_src0_reg Address h90004000
_sw_int_src0_reg = 2415935488 0 32 b00000000000000000000000000000000 SC



; REGISTER sw_int_src1_reg Address h90004004
_sw_int_src1_reg = 2415935492 0 32 b00000000000000000000000000000000 SC



; REGISTER sw_int_src2_reg Address h90004008
_sw_int_src2_reg = 2415935496 0 32 b00000000000000000000000000000000 SC



; REGISTER sw_int_src3_reg Address h9000400c
_sw_int_src3_reg = 2415935500 0 32 b00000000000000000000000000000000 SC



; REGISTER sw_int_src4_reg Address h90004010
_sw_int_src4_reg = 2415935504 0 32 b00000000000000000000000000000000 SC



; REGISTER sw_int_src5_reg Address h90004014
_sw_int_src5_reg = 2415935508 0 32 b00000000000000000000000000000000 SC



; REGISTER sw_int_src6_reg Address h90004018
_sw_int_src6_reg = 2415935512 0 32 b00000000000000000000000000000000 SC



; REGISTER sw_int_src7_reg Address h9000401c
_sw_int_src7_reg = 2415935516 0 32 b00000000000000000000000000000000 SC



; REGISTER sw_int_clr0 Address h90004060
_sw_int_clr0 = 2415935584 0 32 b00000000000000000000000000000000 SC



; REGISTER sw_int_clr1 Address h90004064
_sw_int_clr1 = 2415935588 0 32 b00000000000000000000000000000000 SC



; REGISTER sw_int_clr2 Address h90004068
_sw_int_clr2 = 2415935592 0 32 b00000000000000000000000000000000 SC



; REGISTER sw_int_clr3 Address h9000406c
_sw_int_clr3 = 2415935596 0 32 b00000000000000000000000000000000 SC



; REGISTER sw_int_clr4 Address h90004070
_sw_int_clr4 = 2415935600 0 32 b00000000000000000000000000000000 SC



; REGISTER sw_int_clr5 Address h90004074
_sw_int_clr5 = 2415935604 0 32 b00000000000000000000000000000000 SC



; REGISTER sw_int_clr6 Address h90004078
_sw_int_clr6 = 2415935608 0 32 b00000000000000000000000000000000 SC



; REGISTER sw_int_clr7 Address h9000407c
_sw_int_clr7 = 2415935612 0 32 b00000000000000000000000000000000 SC



; REGISTER top_software_reg_0 Address h90000000
_top_software_reg_0 = 2415919104 0 32 b00000000000000000000000000000000 RW
software_0 = h90000000 0 32 h0 RW HEX
; Desc_software_0 Chip Version



; REGISTER top_software_reg_1 Address h90000004
_top_software_reg_1 = 2415919108 0 32 b00000000000000000000000000000000 RW
software_1 = h90000004 0 32 h0 RW HEX
; Desc_software_1 mask interrupts in interrupt controller bits [31:0]  for VPE0: mask = 1



; REGISTER top_software_reg_2 Address h90000008
_top_software_reg_2 = 2415919112 0 32 b00000000000000000000000000000000 RW
software_2 = h90000008 0 32 h0 RW HEX
; Desc_software_2 mask interrupts in interrupt controller bits [63:32]  for VPE1: mask = 1



; REGISTER top_software_reg_3 Address h9000000c
_top_software_reg_3 = 2415919116 0 32 b00000000000000000000000000000000 RW
software_3 = h9000000c 0 32 h0 RW HEX
; Desc_software_3 interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 21 to 25



; REGISTER top_software_reg_4 Address h90000010
_top_software_reg_4 = 2415919120 0 32 b00000000000000000000000000000000 RW
software_4 = h90000010 0 32 h0 RW HEX
; Desc_software_4 interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 46 to 50



; REGISTER top_software_reg_5 Address h90000014
_top_software_reg_5 = 2415919124 0 32 b00000000000000000000000000000000 RW
software_5 = h90000014 0 32 h0 RW HEX
; Desc_software_5 interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 1 to 5



; REGISTER top_software_reg_6 Address h90000018
_top_software_reg_6 = 2415919128 0 32 b00000000000000000000000000000000 RW
software_6 = h90000018 0 32 h0 RW HEX
; Desc_software_6 interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 11 to 15



; REGISTER top_software_reg_7 Address h9000001c
_top_software_reg_7 = 2415919132 0 32 b00000000000000000000000000000000 RW
software_7 = h9000001c 0 32 h0 RW HEX
; Desc_software_7 interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 31 to 35



; REGISTER top_software_reg_8 Address h90000020
_top_software_reg_8 = 2415919136 0 32 b00000000000000000000000000000000 RW
software_8 = h90000020 0 32 h0 RW HEX
; Desc_software_8 interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 51 to 55



; REGISTER top_software_reg_9 Address h90000024
_top_software_reg_9 = 2415919140 0 32 b00000000000000000000000000000000 RW
software_9 = h90000024 0 32 h0 RW HEX
; Desc_software_9 interrupt controller 0: defines shadow set of registers for interrupts 17 to 24.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER top_software_reg_10 Address h90000028
_top_software_reg_10 = 2415919144 0 32 b00000000000000000000000000000000 RW
software_10 = h90000028 0 32 h0 RW HEX
; Desc_software_10 interrupt controller 0: defines shadow set of registers for interrupts 57 to 63.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER top_software_reg_11 Address h9000002c
_top_software_reg_11 = 2415919148 0 32 b00000000000000000000000000000000 RW
software_11 = h9000002c 0 32 h0 RW HEX
; Desc_software_11 interrupt controller 1: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER top_software_reg_12 Address h90000030
_top_software_reg_12 = 2415919152 0 32 b00000000000000000000000000000000 RW
software_12 = h90000030 0 32 h0 RW HEX
; Desc_software_12 Read/Write Current Data on the GPIO pins



; REGISTER top_software_reg_13 Address h90000034
_top_software_reg_13 = 2415919156 0 32 b00000000000000000000000000000000 RW
software_13 = h90000034 0 32 h0 RW HEX
; Desc_software_13 GPIO Interrupts status and clear upon write



; REGISTER top_software_reg_14 Address h90000038
_top_software_reg_14 = 2415919160 0 32 b00000000000000000000000000000000 RW
software_14 = h90000038 0 32 h0 RW HEX
; Desc_software_14 0 = works as GPIO. 1 = PAD's other option (in case that there's any)



; REGISTER top_software_reg_15 Address h9000003c
_top_software_reg_15 = 2415919164 0 32 b00000000000000000000000000000000 RW
software_15 = h9000003c 0 32 h0 RW HEX
; Desc_software_15 Pull Enable - Default 1



; REGISTER gen_spare_reg_0_reg Address h90000040
_gen_spare_reg_0_reg = 2415919168 0 32 b00000000000000000000000000000000 RW
gen_spare_reg_0 = h90000040 0 32 h0 RW HEX
; Desc_gen_spare_reg_0 Drive Strength - Default 00 - weakest drive



; REGISTER gen_spare_reg_1_reg Address h90000044
_gen_spare_reg_1_reg = 2415919172 0 32 b00000000000000000000000000000000 RW
gen_spare_reg_1 = h90000044 0 32 h0 RW HEX
; Desc_gen_spare_reg_1 Drive Strength - Default 00 - weakest drive



; REGISTER fpga_config_0_reg Address h90000050
_fpga_config_0_reg = 2415919184 0 32 b00000000000000000000000000000000 RW
fpga_config_0 = h90000050 0 32 h0 RW HEX
; Desc_fpga_config_0 div ratio of the rif UART divide by N+1 from the system clock
adc_rx_rstn_0 = h90000050 0 1 h0 RW BIN
adc_rx_rstn_1 = h90000050 1 1 h0 RW BIN
start_adc_rx_word_align_0 = h90000050 2 1 h0 RW BIN
start_adc_rx_word_align_1 = h90000050 3 1 h0 RW BIN
dac_tx_rstn_0 = h90000050 4 1 h0 RW BIN
dac_tx_rstn_1 = h90000050 5 1 h0 RW BIN
sel_dac_tx_data_0 = h90000050 6 2 h0 RW HEX
sel_dac_tx_data_1 = h90000050 8 2 h0 RW HEX
start_dac_tx_phase_align_0 = h90000050 10 1 h0 RW BIN
start_dac_tx_phase_align_1 = h90000050 11 1 h0 RW BIN
start_dac_tx_word_align_0 = h90000050 12 1 h0 RW BIN
start_dac_tx_word_align_1 = h90000050 13 1 h0 RW BIN
dac_cn_tx_rstn_0 = h90000050 14 1 h0 RW BIN
dac_cn_tx_rstn_1 = h90000050 15 1 h0 RW BIN
sel_dac_cn_tx_data_0 = h90000050 16 2 h0 RW HEX
sel_dac_cn_tx_data_1 = h90000050 18 2 h0 RW HEX
start_dac_cn_tx_phase_align_0 = h90000050 20 1 h0 RW BIN
start_dac_cn_tx_phase_align_1 = h90000050 21 1 h0 RW BIN
start_dac_cn_tx_word_align_0 = h90000050 22 1 h0 RW BIN
start_dac_cn_tx_word_align_1 = h90000050 23 1 h0 RW BIN



; REGISTER fpga_config_1_reg Address h90000054
_fpga_config_1_reg = 2415919188 0 32 b00000000000000000000000000000000 RW
fpga_config_1 = h90000054 0 32 h0 RW HEX
; Desc_fpga_config_1 div ratio of the rif UART divide by N+1 from the system clock
adc_rx_rstn_2 = h90000054 0 1 h0 RW BIN
adc_rx_rstn_3 = h90000054 1 1 h0 RW BIN
start_adc_rx_word_align_2 = h90000054 2 1 h0 RW BIN
start_adc_rx_word_align_3 = h90000054 3 1 h0 RW BIN
dac_tx_rstn_2 = h90000054 4 1 h0 RW BIN
dac_tx_rstn_3 = h90000054 5 1 h0 RW BIN
sel_dac_tx_data_2 = h90000054 6 2 h0 RW HEX
sel_dac_tx_data_3 = h90000054 8 2 h0 RW HEX
start_dac_tx_phase_align_2 = h90000054 10 1 h0 RW BIN
start_dac_tx_phase_align_3 = h90000054 11 1 h0 RW BIN
start_dac_tx_word_align_2 = h90000054 12 1 h0 RW BIN
start_dac_tx_word_align_3 = h90000054 13 1 h0 RW BIN
dac_cn_tx_rstn_2 = h90000054 14 1 h0 RW BIN
dac_cn_tx_rstn_3 = h90000054 15 1 h0 RW BIN
sel_dac_cn_tx_data_2 = h90000054 16 2 h0 RW HEX
sel_dac_cn_tx_data_3 = h90000054 18 2 h0 RW HEX
start_dac_cn_tx_phase_align_2 = h90000054 20 1 h0 RW BIN
start_dac_cn_tx_phase_align_3 = h90000054 21 1 h0 RW BIN
start_dac_cn_tx_word_align_2 = h90000054 22 1 h0 RW BIN
start_dac_cn_tx_word_align_3 = h90000054 23 1 h0 RW BIN



; REGISTER general_config_reg Address h90000058
_general_config_reg = 2415919192 0 32 b00000000000000000000000000000011 RW
c_sys_clk_div = h90000058 0 4 h3 RW HEX
; Desc_c_sys_clk_div rif uart protocol errors counter



; REGISTER MeronSrc_efuse_test_cfg Address h90000074
_MeronSrc_efuse_test_cfg = 2415919220 0 3 b00000000000000000000000000000000 RW
efuse_trc_2sc = h90000074 0 1 h0 RW BIN
; Desc_efuse_trc_2sc The number of entries in the RX RAM
efuse_at_2sc = h90000074 1 2 h0 RW HEX
; Desc_efuse_at_2sc The number of entries in the RX RAM



; REGISTER rom_bist_cfg_reg Address h9000008c
_rom_bist_cfg_reg = 2415919244 0 32 b00000000000000000000000000000000 RW
rom_bist_start_reg = h9000008c 0 1 h0 RW BIN
; Desc_rom_bist_start_reg 



; REGISTER ram_bist_ctrl Address h90000094
_ram_bist_ctrl = 2415919252 0 21 b00000000000000000000000000000000 RW
ram_bist_sms_bp = h90000094 1 8 h0 RW HEX
; Desc_ram_bist_sms_bp 



; REGISTER sys_clk_alt_src_reg Address h900000b0
_sys_clk_alt_src_reg = 2415919280 0 2 b00000000000000000000000000000000 RW
afe_i2s_pll_sys_clk_sel_2or = h900000b0 1 1 h0 RW BIN
; Desc_afe_i2s_pll_sys_clk_sel_2or 



; REGISTER pad_mux0_register Address h90000100
_pad_mux0_register = 2415919360 0 32 b00000000000000000000000000000000 RW
pad_mux0_reg = h90000100 0 32 h0 RW HEX
; Desc_pad_mux0_reg 
GPIO1_mux = h90000100 0 2 h0 RW HEX
>>DESC GPIO1_mux = 4, b00, GPIO1, b01, GPIO_AL_D4, b10, GPIO_AL_D5, b11, TBA_UART_TX
GPIO0_mux = h90000100 2 2 h0 RW HEX
>>DESC GPIO0_mux = 4, b00, GPIO_AL_D1, b01, GPIO0, b10, VL_SOC_PWM0, b11, Reserved
SENS_INT_mux = h90000100 4 2 h0 RW HEX
>>DESC SENS_INT_mux = 4, b00, SENS_INT_GPIO_AL_D3, b01, GPIO3, b10, VL_SOC_PWM1, b11, Reserved
FSYNC_mux = h90000100 6 2 h0 RW HEX
>>DESC FSYNC_mux = 4, b00, FSYNC_GPO_AL_D2_PWM1, b01, GPO2, b10, VL_SOC_PWM2, b11, Reserved
I2C_SCL_MASTER_mux = h90000100 8 2 h0 RW HEX
>>DESC I2C_SCL_MASTER_mux = 4, b00, I2C_SCL_MASTER_H, b01, I2C_SCL_MASTER_T, b10, Reserved, b11, Reserved
I2C_SDA_MASTER_mux = h90000100 10 2 h0 RW HEX
>>DESC I2C_SDA_MASTER_mux = 4, b00, I2C_SDA_MASTER_H, b01, I2C_SDA_MASTER_T, b10, Reserved, b11, Reserved
RCLK_mux = h90000100 12 2 h0 RW HEX
>>DESC RCLK_mux = 4, b00, RCLK_test_clk_out, b01, GPO3, b10, Reserved, b11, Reserved
I2C_SDA_SLAVE_H_mux = h90000100 14 2 h0 RW HEX
>>DESC I2C_SDA_SLAVE_H_mux = 4, b00, I2C_SDA_SLAVE_H, b01, GPIO2, b10, GPIO_AL_D4, b11, Reserved
GPO0_mux = h90000100 16 2 h0 RW HEX
>>DESC GPO0_mux = 4, b00, INT_OUT, b01, GPO_AL_D0_PWM0, b10, GPO0, b11, Reserved
pad_mux_reserved = h90000100 18 14 h0 RW HEX



; REGISTER pad_pe0_register Address h90000104
_pad_pe0_register = 2415919364 0 32 b00000000000000000000111111111111 RW
pad_pe0 = h90000104 0 32 hfff RW HEX
; Desc_pad_pe0 
GPIO1_pe = h90000104 0 1 h1 RW BIN
>>DESC GPIO1_pe = 2, b0, pull_disable, b1, pull_enable
GPIO0_pe = h90000104 1 1 h1 RW BIN
>>DESC GPIO0_pe = 2, b0, pull_disable, b1, pull_enable
PMS_UART_RX_pe = h90000104 2 1 h1 RW BIN
>>DESC PMS_UART_RX_pe = 2, b0, pull_disable, b1, pull_enable
PMS_UART_TX_pe = h90000104 3 1 h1 RW BIN
>>DESC PMS_UART_TX_pe = 2, b0, pull_disable, b1, pull_enable
SENS_INT_pe = h90000104 4 1 h1 RW BIN
>>DESC SENS_INT_pe = 2, b0, pull_disable, b1, pull_enable
FSYNC_pe = h90000104 5 1 h1 RW BIN
>>DESC FSYNC_pe = 2, b0, pull_disable, b1, pull_enable
I2C_SCL_MASTER_pe = h90000104 6 1 h1 RW BIN
>>DESC I2C_SCL_MASTER_pe = 2, b0, pull_disable, b1, pull_enable
I2C_SDA_MASTER_pe = h90000104 7 1 h1 RW BIN
>>DESC I2C_SDA_MASTER_pe = 2, b0, pull_disable, b1, pull_enable
RCLK_pe = h90000104 8 1 h1 RW BIN
>>DESC RCLK_pe = 2, b0, pull_disable, b1, pull_enable
I2C_SDA_SLAVE_H_pe = h90000104 9 1 h1 RW BIN
>>DESC I2C_SDA_SLAVE_H_pe = 2, b0, pull_disable, b1, pull_enable
I2C_SCL_SLAVE_H_pe = h90000104 10 1 h1 RW BIN
>>DESC I2C_SCL_SLAVE_H_pe = 2, b0, pull_disable, b1, pull_enable
GPO0_pe = h90000104 11 1 h1 RW BIN
>>DESC GPO0_pe = 2, b0, pull_disable, b1, pull_enable
pad_pe_reserved = h90000104 12 20 h0 RW HEX



; REGISTER pad_ps0_register Address h90000108
_pad_ps0_register = 2415919368 0 32 b00000000000000000000111111100100 RW
pad_ps0 = h90000108 0 32 hfe4 RW HEX
; Desc_pad_ps0 
GPIO1_ps = h90000108 0 1 h0 RW BIN
>>DESC GPIO1_ps = 2, b0, pull_down, b1, pull_up
GPIO0_ps = h90000108 1 1 h0 RW BIN
>>DESC GPIO0_ps = 2, b0, pull_down, b1, pull_up
PMS_UART_RX_ps = h90000108 2 1 h1 RW BIN
>>DESC PMS_UART_RX_ps = 2, b0, pull_down, b1, pull_up
PMS_UART_TX_ps = h90000108 3 1 h0 RW BIN
>>DESC PMS_UART_TX_ps = 2, b0, pull_down, b1, pull_up
SENS_INT_ps = h90000108 4 1 h0 RW BIN
>>DESC SENS_INT_ps = 2, b0, pull_down, b1, pull_up
FSYNC_ps = h90000108 5 1 h1 RW BIN
>>DESC FSYNC_ps = 2, b0, pull_down, b1, pull_up
I2C_SCL_MASTER_ps = h90000108 6 1 h1 RW BIN
>>DESC I2C_SCL_MASTER_ps = 2, b0, pull_down, b1, pull_up
I2C_SDA_MASTER_ps = h90000108 7 1 h1 RW BIN
>>DESC I2C_SDA_MASTER_ps = 2, b0, pull_down, b1, pull_up
RCLK_ps = h90000108 8 1 h1 RW BIN
>>DESC RCLK_ps = 2, b0, pull_down, b1, pull_up
I2C_SDA_SLAVE_H_ps = h90000108 9 1 h1 RW BIN
>>DESC I2C_SDA_SLAVE_H_ps = 2, b0, pull_down, b1, pull_up
I2C_SCL_SLAVE_H_ps = h90000108 10 1 h1 RW BIN
>>DESC I2C_SCL_SLAVE_H_ps = 2, b0, pull_down, b1, pull_up
GPO0_ps = h90000108 11 1 h1 RW BIN
>>DESC GPO0_ps = 2, b0, pull_down, b1, pull_up
pad_ps_reserved = h90000108 12 20 h0 RW HEX



; REGISTER pad_slew0_register Address h9000010c
_pad_slew0_register = 2415919372 0 32 b00000000000000000000000000000000 RW
pad_slew0 = h9000010c 0 32 h0 RW HEX
; Desc_pad_slew0 
GPIO1_slew = h9000010c 0 1 h0 RW BIN
GPIO0_slew = h9000010c 1 1 h0 RW BIN
PMS_UART_RX_slew = h9000010c 2 1 h0 RW BIN
PMS_UART_TX_slew = h9000010c 3 1 h0 RW BIN
SENS_INT_slew = h9000010c 4 1 h0 RW BIN
FSYNC_slew = h9000010c 5 1 h0 RW BIN
I2C_SCL_MASTER_slew = h9000010c 6 1 h0 RW BIN
I2C_SDA_MASTER_slew = h9000010c 7 1 h0 RW BIN
RCLK_slew = h9000010c 8 1 h0 RW BIN
I2C_SDA_SLAVE_H_slew = h9000010c 9 1 h0 RW BIN
I2C_SCL_SLAVE_H_slew = h9000010c 10 1 h0 RW BIN
GPO0_slew = h9000010c 11 1 h0 RW BIN
pad_slew_reserved = h9000010c 12 20 h0 RW HEX



; REGISTER pad_spu0_register Address h90000110
_pad_spu0_register = 2415919376 0 32 b00000000000000000000000000000000 RW
pad_spu0 = h90000110 0 32 h0 RW HEX
; Desc_pad_spu0 
GPIO1_spu = h90000110 0 1 h0 RW BIN
>>DESC GPIO1_spu = 2, b0, disable, b1, enable
GPIO0_spu = h90000110 1 1 h0 RW BIN
>>DESC GPIO0_spu = 2, b0, disable, b1, enable
PMS_UART_RX_spu = h90000110 2 1 h0 RW BIN
>>DESC PMS_UART_RX_spu = 2, b0, disable, b1, enable
PMS_UART_TX_spu = h90000110 3 1 h0 RW BIN
>>DESC PMS_UART_TX_spu = 2, b0, disable, b1, enable
SENS_INT_spu = h90000110 4 1 h0 RW BIN
>>DESC SENS_INT_spu = 2, b0, disable, b1, enable
FSYNC_spu = h90000110 5 1 h0 RW BIN
>>DESC FSYNC_spu = 2, b0, disable, b1, enable
I2C_SCL_MASTER_spu = h90000110 6 1 h0 RW BIN
>>DESC I2C_SCL_MASTER_spu = 2, b0, disable, b1, enable
I2C_SDA_MASTER_spu = h90000110 7 1 h0 RW BIN
>>DESC I2C_SDA_MASTER_spu = 2, b0, disable, b1, enable
RCLK_spu = h90000110 8 1 h0 RW BIN
>>DESC RCLK_spu = 2, b0, disable, b1, enable
I2C_SDA_SLAVE_H_spu = h90000110 9 1 h0 RW BIN
>>DESC I2C_SDA_SLAVE_H_spu = 2, b0, disable, b1, enable
I2C_SCL_SLAVE_H_spu = h90000110 10 1 h0 RW BIN
>>DESC I2C_SCL_SLAVE_H_spu = 2, b0, disable, b1, enable
GPO0_spu = h90000110 11 1 h0 RW BIN
>>DESC GPO0_spu = 2, b0, disable, b1, enable
pad_spu_reserved = h90000110 12 20 h0 RW HEX



; REGISTER pad_smt0_register Address h90000114
_pad_smt0_register = 2415919380 0 32 b00000000000000000000000000000000 RW
pad_smt0 = h90000114 0 32 h0 RW HEX
; Desc_pad_smt0 
GPIO1_smt = h90000114 0 1 h0 RW BIN
GPIO1_smt_reserved = h90000114 1 1 h0 RW BIN
GPIO0_smt = h90000114 2 1 h0 RW BIN
GPIO0_smt_reserved = h90000114 3 1 h0 RW BIN
PMS_UART_RX_smt = h90000114 4 1 h0 RW BIN
PMS_UART_RX_smt_reserved = h90000114 5 1 h0 RW BIN
PMS_UART_TX_smt = h90000114 6 1 h0 RW BIN
PMS_UART_TX_smt_reserved = h90000114 7 1 h0 RW BIN
SENS_INT_smt = h90000114 8 1 h0 RW BIN
SENS_INT_smt_reserved = h90000114 9 1 h0 RW BIN
FSYNC_smt = h90000114 10 1 h0 RW BIN
FSYNC_smt_reserved = h90000114 11 1 h0 RW BIN
I2C_SCL_MASTER_smt = h90000114 12 1 h0 RW BIN
I2C_SCL_MASTER_smt_reserved = h90000114 13 1 h0 RW BIN
I2C_SDA_MASTER_smt = h90000114 14 1 h0 RW BIN
I2C_SDA_MASTER_smt_reserved = h90000114 15 1 h0 RW BIN
RCLK_smt = h90000114 16 1 h0 RW BIN
RCLK_smt_reserved = h90000114 17 1 h0 RW BIN
I2C_SDA_SLAVE_H_smt = h90000114 18 1 h0 RW BIN
I2C_SDA_SLAVE_H_smt_reserved = h90000114 19 1 h0 RW BIN
I2C_SCL_SLAVE_H_smt = h90000114 20 1 h0 RW BIN
I2C_SCL_SLAVE_H_smt_reserved = h90000114 21 1 h0 RW BIN
GPO0_smt = h90000114 22 1 h0 RW BIN
GPO0_smt_reserved = h90000114 23 1 h0 RW BIN
pad_smt_reserved = h90000114 24 8 h0 RW HEX



; REGISTER pad_drv0_register Address h90000118
_pad_drv0_register = 2415919384 0 32 b10001000100010001000100010001000 RW
pad_drv0 = h90000118 0 32 h88888888 RW HEX
; Desc_pad_drv0 
GPIO1_drv = h90000118 0 4 h8 RW HEX
GPIO0_drv = h90000118 4 4 h8 RW HEX
PMS_UART_RX_drv = h90000118 8 4 h8 RW HEX
PMS_UART_TX_drv = h90000118 12 4 h8 RW HEX
SENS_INT_drv = h90000118 16 4 h8 RW HEX
FSYNC_drv = h90000118 20 4 h8 RW HEX
I2C_SCL_MASTER_drv = h90000118 24 4 h8 RW HEX
I2C_SDA_MASTER_drv = h90000118 28 4 h8 RW HEX



; REGISTER pad_drv1_register Address h9000011c
_pad_drv1_register = 2415919388 0 32 b00000000000000001000100010001000 RW
pad_drv1 = h9000011c 0 32 h8888 RW HEX
; Desc_pad_drv1 
RCLK_drv = h9000011c 0 4 h8 RW HEX
I2C_SDA_SLAVE_H_drv = h9000011c 4 4 h8 RW HEX
I2C_SCL_SLAVE_H_drv = h9000011c 8 4 h8 RW HEX
GPO0_drv = h9000011c 12 4 h8 RW HEX
pad_drv_reserved = h9000011c 16 16 h0 RW HEX



; REGISTER test_clk_sel_reg Address h90000714
_test_clk_sel_reg = 2415920916 0 32 b00000000000000000000010010000000 RW
test_clk_sel = h90000714 0 6 h0 RW HEX
; Desc_test_clk_sel bit per register (iram_sm_cfg_reg_0..4) for register status + wr to register to clear status(for all)
pll_lock_indication = h90000714 6 1 h0 RW BIN
; Desc_pll_lock_indication bit per register (iram_sm_cfg_reg_0..4) for register status + wr to register to clear status(for all)
test_clk_out_div_sel = h90000714 7 1 h1 RW BIN
; Desc_test_clk_out_div_sel bit per register (iram_sm_cfg_reg_0..4) for register status + wr to register to clear status(for all)
burnin_htol_out_sel = h90000714 8 2 h0 RW HEX
; Desc_burnin_htol_out_sel bit per register (iram_sm_cfg_reg_0..4) for register status + wr to register to clear status(for all)
pll_gator_cfg = h90000714 10 4 h1 RW HEX
; Desc_pll_gator_cfg bit per register (iram_sm_cfg_reg_0..4) for register status + wr to register to clear status(for all)
tdo_csi_test_mode_sel = h90000714 14 1 h0 RW BIN
; Desc_tdo_csi_test_mode_sel bit per register (iram_sm_cfg_reg_0..4) for register status + wr to register to clear status(for all)



; REGISTER general_config_2_reg Address h9000082c
_general_config_2_reg = 2415921196 0 32 b01100100000010010001000000000000 RW
int_out_pol_sel = h9000082c 0 1 h0 RW BIN
; Desc_int_out_pol_sel Number of entries in the RX FIFO
uart_tx_sel = h9000082c 1 1 h0 RW BIN
; Desc_uart_tx_sel Number of entries in the RX FIFO
cfg_trn_clk_div_val = h9000082c 12 4 h1 RW HEX
; Desc_cfg_trn_clk_div_val Number of entries in the RX FIFO
csi_pclk_div_val = h9000082c 16 4 h9 RW HEX
; Desc_csi_pclk_div_val Number of entries in the RX FIFO
safety_reg_wr_disable = h9000082c 20 1 h0 RW BIN
; Desc_safety_reg_wr_disable Number of entries in the RX FIFO
cfg_rcv_clk_div_val = h9000082c 21 4 h0 RW HEX
; Desc_cfg_rcv_clk_div_val Number of entries in the RX FIFO
csi_cfg_clk_div_val = h9000082c 25 6 h32 RW HEX
; Desc_csi_cfg_clk_div_val Number of entries in the RX FIFO
safety_out_int_inv = h9000082c 31 1 h0 RW BIN
; Desc_safety_out_int_inv Number of entries in the RX FIFO



; REGISTER general_config_3_reg Address h90000830
_general_config_3_reg = 2415921200 0 4 b00000000000000000000000000000001 RW
cfg_dac_scan_clk_div_val = h90000830 0 4 h1 RW HEX
; Desc_cfg_dac_scan_clk_div_val The Received Data Byte



; REGISTER tba_int_mask_reg Address h90000878
_tba_int_mask_reg = 2415921272 0 32 b00000000000000000000000000000111 RW
tba_trigger_occured_mask = h90000878 0 1 h1 RW BIN
; Desc_tba_trigger_occured_mask loopback mode (SDI -> SDO)
tba_window_ready_mask = h90000878 1 1 h1 RW BIN
; Desc_tba_window_ready_mask loopback mode (SDI -> SDO)
tba_output_done_mask = h90000878 2 1 h1 RW BIN
; Desc_tba_output_done_mask loopback mode (SDI -> SDO)



; REGISTER tba_rif_uart_cfg_reg Address h9000087c
_tba_rif_uart_cfg_reg = 2415921276 0 32 b00000000000000000000000011000000 RW
tba_rif_uart_enable = h9000087c 0 1 h0 RW BIN
; Desc_tba_rif_uart_enable put rx_msg_fifo_host to online
tba_rif_uart_parity_en = h9000087c 1 1 h0 RW BIN
; Desc_tba_rif_uart_parity_en put rx_msg_fifo_host to online
tba_rif_uart_odd_parity = h9000087c 2 1 h0 RW BIN
; Desc_tba_rif_uart_odd_parity put rx_msg_fifo_host to online
tba_rif_uart_tx_int_en = h9000087c 3 1 h0 RW BIN
; Desc_tba_rif_uart_tx_int_en put rx_msg_fifo_host to online
tba_rif_uart_stop_bits = h9000087c 4 2 h0 RW HEX
; Desc_tba_rif_uart_stop_bits put rx_msg_fifo_host to online
tba_rif_uart_data_size = h9000087c 6 2 h3 RW HEX
; Desc_tba_rif_uart_data_size put rx_msg_fifo_host to online
tba_rif_uart_int_val = h9000087c 8 10 h0 RW HEX
; Desc_tba_rif_uart_int_val put rx_msg_fifo_host to online
tba_rif_uart_frac_val = h9000087c 20 8 h0 RW HEX
; Desc_tba_rif_uart_frac_val put rx_msg_fifo_host to online
tba_rif_uart_tx_int_thr = h9000087c 28 4 h0 RW HEX
; Desc_tba_rif_uart_tx_int_thr put rx_msg_fifo_host to online



; REGISTER tba_ext_trig_en_gpio_reg Address h90000894
_tba_ext_trig_en_gpio_reg = 2415921300 0 32 b00000000000000000000000000000000 RW
tba_ext_trig_en_gpio = h90000894 0 32 h0 RW HEX
; Desc_tba_ext_trig_en_gpio Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]sinitial_seq_id_an_vm1_sel3    [23:16]sinitial_seq_id_an_vm1_sel2    [15:8]sinitial_seq_id_an_vm1_sel1    [7:0]



; REGISTER tba_src_sel_reg Address h90000898
_tba_src_sel_reg = 2415921304 0 14 b00000000000000000000000000000000 RW
tba_src_0_sel = h90000898 0 4 h0 RW HEX
; Desc_tba_src_0_sel Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]sinitial_seq_id_an_vm4    [23:16]sinitial_seq_id_an_vm3    [15:8]sinitial_seq_id_an_vm2    [7:0]
tba_src_1_sel = h90000898 4 2 h0 RW HEX
; Desc_tba_src_1_sel Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]sinitial_seq_id_an_vm4    [23:16]sinitial_seq_id_an_vm3    [15:8]sinitial_seq_id_an_vm2    [7:0]
tba_src_2_sel = h90000898 6 2 h0 RW HEX
; Desc_tba_src_2_sel Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]sinitial_seq_id_an_vm4    [23:16]sinitial_seq_id_an_vm3    [15:8]sinitial_seq_id_an_vm2    [7:0]
tba_src_3_sel = h90000898 8 2 h0 RW HEX
; Desc_tba_src_3_sel Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]sinitial_seq_id_an_vm4    [23:16]sinitial_seq_id_an_vm3    [15:8]sinitial_seq_id_an_vm2    [7:0]
tba_src_4_sel = h90000898 10 2 h0 RW HEX
; Desc_tba_src_4_sel Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]sinitial_seq_id_an_vm4    [23:16]sinitial_seq_id_an_vm3    [15:8]sinitial_seq_id_an_vm2    [7:0]
tba_src_5_sel = h90000898 12 2 h0 RW HEX
; Desc_tba_src_5_sel Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]sinitial_seq_id_an_vm4    [23:16]sinitial_seq_id_an_vm3    [15:8]sinitial_seq_id_an_vm2    [7:0]



; REGISTER TBA_tba_ctrl Address h90000900
_TBA_tba_ctrl = 2415921408 0 32 b00000000000000000000000000000000 RW
TBA_tba_src_sel = h90000900 0 3 h0 RW HEX
; Desc_TBA_tba_src_sel controls the vmc functionalitysfield descriptionspd                       [0]                    Power down –s                                                   1’b0 – vm is actives                                                   1’b1 – vm is forced to power-downsS/L-St                  [1]                   Selects the type of self-tests                                                   1’b0 – when self-test activated – short self-test sequence will be executeds                                                   1’b1 – when self-test activated – long self-test sequence will be performed. The selected steps according to Long Self-test steps register see para. ‎0sreserved             [2]            sBypass mode     [3]           Selects bypass modes                                                  1’b0 – the vmc is activated in automatic mode. The vm are controlled according to predefined sequencess                                                  1’b1 – the vmc is activated in bypass modes                                                  The vm are controlled according to the control signals written by SW to Bypass Control register see para. ‎11.3ssingle_mode      [4]           vm_single run modesReserved           [23:5]ssMagic_number  [27:24]   Default value – identical for all registerssParity                 [31:28]   Parity calculation on bits[27:0] 
TBA_tba_valid_sel = h90000900 4 2 h0 RW HEX
; Desc_TBA_tba_valid_sel controls the vmc functionalitysfield descriptionspd                       [0]                    Power down –s                                                   1’b0 – vm is actives                                                   1’b1 – vm is forced to power-downsS/L-St                  [1]                   Selects the type of self-tests                                                   1’b0 – when self-test activated – short self-test sequence will be executeds                                                   1’b1 – when self-test activated – long self-test sequence will be performed. The selected steps according to Long Self-test steps register see para. ‎0sreserved             [2]            sBypass mode     [3]           Selects bypass modes                                                  1’b0 – the vmc is activated in automatic mode. The vm are controlled according to predefined sequencess                                                  1’b1 – the vmc is activated in bypass modes                                                  The vm are controlled according to the control signals written by SW to Bypass Control register see para. ‎11.3ssingle_mode      [4]           vm_single run modesReserved           [23:5]ssMagic_number  [27:24]   Default value – identical for all registerssParity                 [31:28]   Parity calculation on bits[27:0] 
TBA_tba_trig_sel = h90000900 8 2 h0 RW HEX
; Desc_TBA_tba_trig_sel controls the vmc functionalitysfield descriptionspd                       [0]                    Power down –s                                                   1’b0 – vm is actives                                                   1’b1 – vm is forced to power-downsS/L-St                  [1]                   Selects the type of self-tests                                                   1’b0 – when self-test activated – short self-test sequence will be executeds                                                   1’b1 – when self-test activated – long self-test sequence will be performed. The selected steps according to Long Self-test steps register see para. ‎0sreserved             [2]            sBypass mode     [3]           Selects bypass modes                                                  1’b0 – the vmc is activated in automatic mode. The vm are controlled according to predefined sequencess                                                  1’b1 – the vmc is activated in bypass modes                                                  The vm are controlled according to the control signals written by SW to Bypass Control register see para. ‎11.3ssingle_mode      [4]           vm_single run modesReserved           [23:5]ssMagic_number  [27:24]   Default value – identical for all registerssParity                 [31:28]   Parity calculation on bits[27:0] 
TBA_tba_sw_capture_start = h90000900 12 1 h0 RW BIN
; Desc_TBA_tba_sw_capture_start controls the vmc functionalitysfield descriptionspd                       [0]                    Power down –s                                                   1’b0 – vm is actives                                                   1’b1 – vm is forced to power-downsS/L-St                  [1]                   Selects the type of self-tests                                                   1’b0 – when self-test activated – short self-test sequence will be executeds                                                   1’b1 – when self-test activated – long self-test sequence will be performed. The selected steps according to Long Self-test steps register see para. ‎0sreserved             [2]            sBypass mode     [3]           Selects bypass modes                                                  1’b0 – the vmc is activated in automatic mode. The vm are controlled according to predefined sequencess                                                  1’b1 – the vmc is activated in bypass modes                                                  The vm are controlled according to the control signals written by SW to Bypass Control register see para. ‎11.3ssingle_mode      [4]           vm_single run modesReserved           [23:5]ssMagic_number  [27:24]   Default value – identical for all registerssParity                 [31:28]   Parity calculation on bits[27:0] 
TBA_tba_clr = h90000900 16 1 h0 RW BIN
; Desc_TBA_tba_clr controls the vmc functionalitysfield descriptionspd                       [0]                    Power down –s                                                   1’b0 – vm is actives                                                   1’b1 – vm is forced to power-downsS/L-St                  [1]                   Selects the type of self-tests                                                   1’b0 – when self-test activated – short self-test sequence will be executeds                                                   1’b1 – when self-test activated – long self-test sequence will be performed. The selected steps according to Long Self-test steps register see para. ‎0sreserved             [2]            sBypass mode     [3]           Selects bypass modes                                                  1’b0 – the vmc is activated in automatic mode. The vm are controlled according to predefined sequencess                                                  1’b1 – the vmc is activated in bypass modes                                                  The vm are controlled according to the control signals written by SW to Bypass Control register see para. ‎11.3ssingle_mode      [4]           vm_single run modesReserved           [23:5]ssMagic_number  [27:24]   Default value – identical for all registerssParity                 [31:28]   Parity calculation on bits[27:0] 
TBA_tba_enable = h90000900 17 1 h0 RW BIN
; Desc_TBA_tba_enable controls the vmc functionalitysfield descriptionspd                       [0]                    Power down –s                                                   1’b0 – vm is actives                                                   1’b1 – vm is forced to power-downsS/L-St                  [1]                   Selects the type of self-tests                                                   1’b0 – when self-test activated – short self-test sequence will be executeds                                                   1’b1 – when self-test activated – long self-test sequence will be performed. The selected steps according to Long Self-test steps register see para. ‎0sreserved             [2]            sBypass mode     [3]           Selects bypass modes                                                  1’b0 – the vmc is activated in automatic mode. The vm are controlled according to predefined sequencess                                                  1’b1 – the vmc is activated in bypass modes                                                  The vm are controlled according to the control signals written by SW to Bypass Control register see para. ‎11.3ssingle_mode      [4]           vm_single run modesReserved           [23:5]ssMagic_number  [27:24]   Default value – identical for all registerssParity                 [31:28]   Parity calculation on bits[27:0] 
TBA_tba_rif_si_sel = h90000900 18 1 h0 RW BIN
; Desc_TBA_tba_rif_si_sel controls the vmc functionalitysfield descriptionspd                       [0]                    Power down –s                                                   1’b0 – vm is actives                                                   1’b1 – vm is forced to power-downsS/L-St                  [1]                   Selects the type of self-tests                                                   1’b0 – when self-test activated – short self-test sequence will be executeds                                                   1’b1 – when self-test activated – long self-test sequence will be performed. The selected steps according to Long Self-test steps register see para. ‎0sreserved             [2]            sBypass mode     [3]           Selects bypass modes                                                  1’b0 – the vmc is activated in automatic mode. The vm are controlled according to predefined sequencess                                                  1’b1 – the vmc is activated in bypass modes                                                  The vm are controlled according to the control signals written by SW to Bypass Control register see para. ‎11.3ssingle_mode      [4]           vm_single run modesReserved           [23:5]ssMagic_number  [27:24]   Default value – identical for all registerssParity                 [31:28]   Parity calculation on bits[27:0] 
TBA_tba_tb_ss_en = h90000900 19 1 h0 RW BIN
; Desc_TBA_tba_tb_ss_en controls the vmc functionalitysfield descriptionspd                       [0]                    Power down –s                                                   1’b0 – vm is actives                                                   1’b1 – vm is forced to power-downsS/L-St                  [1]                   Selects the type of self-tests                                                   1’b0 – when self-test activated – short self-test sequence will be executeds                                                   1’b1 – when self-test activated – long self-test sequence will be performed. The selected steps according to Long Self-test steps register see para. ‎0sreserved             [2]            sBypass mode     [3]           Selects bypass modes                                                  1’b0 – the vmc is activated in automatic mode. The vm are controlled according to predefined sequencess                                                  1’b1 – the vmc is activated in bypass modes                                                  The vm are controlled according to the control signals written by SW to Bypass Control register see para. ‎11.3ssingle_mode      [4]           vm_single run modesReserved           [23:5]ssMagic_number  [27:24]   Default value – identical for all registerssParity                 [31:28]   Parity calculation on bits[27:0] 
TBA_src_trig_sel = h90000900 20 3 h0 RW HEX
; Desc_TBA_src_trig_sel controls the vmc functionalitysfield descriptionspd                       [0]                    Power down –s                                                   1’b0 – vm is actives                                                   1’b1 – vm is forced to power-downsS/L-St                  [1]                   Selects the type of self-tests                                                   1’b0 – when self-test activated – short self-test sequence will be executeds                                                   1’b1 – when self-test activated – long self-test sequence will be performed. The selected steps according to Long Self-test steps register see para. ‎0sreserved             [2]            sBypass mode     [3]           Selects bypass modes                                                  1’b0 – the vmc is activated in automatic mode. The vm are controlled according to predefined sequencess                                                  1’b1 – the vmc is activated in bypass modes                                                  The vm are controlled according to the control signals written by SW to Bypass Control register see para. ‎11.3ssingle_mode      [4]           vm_single run modesReserved           [23:5]ssMagic_number  [27:24]   Default value – identical for all registerssParity                 [31:28]   Parity calculation on bits[27:0] 



; REGISTER TBA_tba_capture_count_reg Address h90000904
_TBA_tba_capture_count_reg = 2415921412 0 32 b00000000000000000000000000000000 RW
TBA_tba_capture_count = h90000904 0 32 h0 RW HEX
; Desc_TBA_tba_capture_count measurement timeout          [15:0]            Defines the waiting time from RUN activation until RDY is received – if the timeout period expires an error flag iss                                                                                 raised.s                                                                                The timeout counter resolution is the vm clock period.sReserved                                      [23:16]sMagic_number                          [27:24]         Default value – identical for all registerssParity                                             [31:28]         Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig0_exp_0val_reg Address h90000908
_TBA_tba_trig0_exp_0val_reg = 2415921416 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig0_exp_0val = h90000908 0 32 h0 RW HEX
; Desc_TBA_tba_trig0_exp_0val short_self_test_high_limit3s         [11:0]                When short self-test is selected this value is used as high_limit3sshort_self_test_low_limit3           [23:12]             When short self-test is selected this value is used as low_limit3sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig0_exp_1val_reg Address h9000090c
_TBA_tba_trig0_exp_1val_reg = 2415921420 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig0_exp_1val = h9000090c 0 32 h0 RW HEX
; Desc_TBA_tba_trig0_exp_1val short_self_test_DS_low_limit_high_value                [11:0]                 When short self-test is selected this value is used as high_limit against the high value ofs                                                                                                                         direct signature from vm sshort_self_test_DS_low_limit_low_value                 [23:12]              When short self-test is selected this value is used as low_limit against the low value ofs                                                                                                                         direct signature from vmsMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig0_exp_2val_reg Address h90000910
_TBA_tba_trig0_exp_2val_reg = 2415921424 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig0_exp_2val = h90000910 0 32 h0 RW HEX
; Desc_TBA_tba_trig0_exp_2val vm_high_comp              0                           vm comparison expected result  - step1s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               1                           vm comparison expected result - step1s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comps             2                           vm comparison expected result - step2s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               3                           vm comparison expected result - step2s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comp              4                           vm comparison expected result  - step3s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               5                           vm comparison expected result - step3s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comps             6                           vm comparison expected result - step4s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               7                           vm comparison expected resultv - step4s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comp              8                           vm comparison expected result  - step5s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               9                           vm comparison expected result - step5s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comps             10                           vm comparison expected result - step6s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               11                           vm comparison expected result - step6s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comp              12                           vm comparison expected result  - step7s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               13                           vm comparison expected result - step7s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comps             14                           vm comparison expected result - step8s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               15                           vm comparison expected result - step8s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsReserved                         [23:16]sMagic_number              [27:24]               Default value – identical for all registerssParity                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig1_exp_0val_reg Address h90000914
_TBA_tba_trig1_exp_0val_reg = 2415921428 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig1_exp_0val = h90000914 0 32 h0 RW HEX
; Desc_TBA_tba_trig1_exp_0val func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig1_exp_1val_reg Address h90000918
_TBA_tba_trig1_exp_1val_reg = 2415921432 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig1_exp_1val = h90000918 0 32 h0 RW HEX
; Desc_TBA_tba_trig1_exp_1val func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig1_exp_2val_reg Address h9000091c
_TBA_tba_trig1_exp_2val_reg = 2415921436 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig1_exp_2val = h9000091c 0 32 h0 RW HEX
; Desc_TBA_tba_trig1_exp_2val func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig2_exp_0val_reg Address h90000920
_TBA_tba_trig2_exp_0val_reg = 2415921440 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig2_exp_0val = h90000920 0 32 h0 RW HEX
; Desc_TBA_tba_trig2_exp_0val func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig2_exp_1val_reg Address h90000924
_TBA_tba_trig2_exp_1val_reg = 2415921444 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig2_exp_1val = h90000924 0 32 h0 RW HEX
; Desc_TBA_tba_trig2_exp_1val func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig2_exp_2val_reg Address h90000928
_TBA_tba_trig2_exp_2val_reg = 2415921448 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig2_exp_2val = h90000928 0 32 h0 RW HEX
; Desc_TBA_tba_trig2_exp_2val func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig3_exp_0val_reg Address h9000092c
_TBA_tba_trig3_exp_0val_reg = 2415921452 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig3_exp_0val = h9000092c 0 32 h0 RW HEX
; Desc_TBA_tba_trig3_exp_0val func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig3_exp_1val_reg Address h90000930
_TBA_tba_trig3_exp_1val_reg = 2415921456 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig3_exp_1val = h90000930 0 32 h0 RW HEX
; Desc_TBA_tba_trig3_exp_1val func_vm_high_limit                                                    [11:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsfunc_vm_low_limit                                                     [23:12]               The lowest voltage value allowed. lower voltage will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig3_exp_2val_reg Address h90000934
_TBA_tba_trig3_exp_2val_reg = 2415921460 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig3_exp_2val = h90000934 0 32 h0 RW HEX
; Desc_TBA_tba_trig3_exp_2val CRC calculated on bits [31:8]



; REGISTER TBA_tba_trig0_mask_0val_reg Address h90000938
_TBA_tba_trig0_mask_0val_reg = 2415921464 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig0_mask_0val = h90000938 0 32 h0 RW HEX
; Desc_TBA_tba_trig0_mask_0val CRC calculated on bits [31:8]



; REGISTER TBA_tba_trig0_mask_1val_reg Address h9000093c
_TBA_tba_trig0_mask_1val_reg = 2415921468 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig0_mask_1val = h9000093c 0 32 h0 RW HEX
; Desc_TBA_tba_trig0_mask_1val CRC calculated on bits [31:8]



; REGISTER TBA_tba_trig0_mask_2val_reg Address h90000940
_TBA_tba_trig0_mask_2val_reg = 2415921472 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig0_mask_2val = h90000940 0 32 h0 RW HEX
; Desc_TBA_tba_trig0_mask_2val CRC calculated on bits [31:8]



; REGISTER TBA_tba_trig1_mask_0val_reg Address h90000944
_TBA_tba_trig1_mask_0val_reg = 2415921476 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig1_mask_0val = h90000944 0 32 h0 RW HEX
; Desc_TBA_tba_trig1_mask_0val CRC calculated on bits [31:8]



; REGISTER TBA_tba_trig1_mask_1val_reg Address h90000948
_TBA_tba_trig1_mask_1val_reg = 2415921480 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig1_mask_1val = h90000948 0 32 h0 RW HEX
; Desc_TBA_tba_trig1_mask_1val CRC calculated on bits [31:8]



; REGISTER TBA_tba_trig1_mask_2val_reg Address h9000094c
_TBA_tba_trig1_mask_2val_reg = 2415921484 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig1_mask_2val = h9000094c 0 32 h0 RW HEX
; Desc_TBA_tba_trig1_mask_2val CRC calculated on bits [31:8]



; REGISTER TBA_tba_trig2_mask_0val_reg Address h90000950
_TBA_tba_trig2_mask_0val_reg = 2415921488 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig2_mask_0val = h90000950 0 32 h0 RW HEX
; Desc_TBA_tba_trig2_mask_0val vm measured voltage is out of the defined limits – either higher or lower



; REGISTER TBA_tba_trig2_mask_1val_reg Address h90000954
_TBA_tba_trig2_mask_1val_reg = 2415921492 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig2_mask_1val = h90000954 0 32 h0 RW HEX
; Desc_TBA_tba_trig2_mask_1val Actual number of out_of_limit errors



; REGISTER TBA_tba_trig2_mask_2val_reg Address h90000958
_TBA_tba_trig2_mask_2val_reg = 2415921496 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig2_mask_2val = h90000958 0 32 h0 RW HEX
; Desc_TBA_tba_trig2_mask_2val When active – the configuration register x, fail to meet the safety requiremenvm



; REGISTER TBA_tba_trig3_mask_0val_reg Address h9000095c
_TBA_tba_trig3_mask_0val_reg = 2415921500 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig3_mask_0val = h9000095c 0 32 h0 RW HEX
; Desc_TBA_tba_trig3_mask_0val short_self_test_comperator results per self_test steps    [1]      vm_GT_high_limit step 1s    [0]      vm_LT_low_limit step 1



; REGISTER TBA_tba_trig3_mask_1val_reg Address h90000960
_TBA_tba_trig3_mask_1val_reg = 2415921504 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig3_mask_1val = h90000960 0 32 h0 RW HEX
; Desc_TBA_tba_trig3_mask_1val defines the voltage_monitor clocksvm_clk_up_width        [9:0]  - defines the length of high level of vm_clksvm_clk_down_width   [19:10]  - defines the length of low level of vm_clksreserve                        [23:20]sMagic_number          [27:24]              Default value – identical for all registerssParity                          [31:28]               Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig3_mask_2val_reg Address h90000964
_TBA_tba_trig3_mask_2val_reg = 2415921508 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig3_mask_2val = h90000964 0 32 h0 RW HEX
; Desc_TBA_tba_trig3_mask_2val defines the detection_enable for each error per portsvm_high_level_detect_en_internal       [0]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_internal        [1]  - defines if vm  low_level comparator will report a detected errorsvm_high_level_detect_en_vm0       [2]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vm0        [3]  - defines if vm  low_level comparator will report a detected errorrsvm_high_level_detect_en_vm1_sel0       [4]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vm1_sel0       [5]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vm1_sel1       [6]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vm1_sel1        [7]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vm1_sel2       [8]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vm1_sel2        [9]  - defines if vm  low_level comparator will report a detected errorsvm_high_level_detect_en_vm1_sel3       [10]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vm1_sel3        [11]  - defines if vm  low_level comparator will report a detected errorsvm_high_level_detect_en_vm2       [12]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vm2        [13]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vm3       [14]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vm3        [15]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vm4       [16]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vm4        [17]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vm5       [18]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vm5        [19]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vm6       [20]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vm6        [21]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vm7       [22]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vm7        [23]  - defines if vm  low_level comparator will report a detected errotsMagic_number                                                      [27:24]              Default value – identical for all registerssParity                                                                         [31:28]               Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig0_sel_delay_reg Address h90000968
_TBA_tba_trig0_sel_delay_reg = 2415921512 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig0_sel_delay = h90000968 0 3 h0 RW HEX
; Desc_TBA_tba_trig0_sel_delay defines the count enable  for each errorsvm_high_level_count_en_internal       [0]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_internal        [1]  - defines if vm  low_level comparator will report a detected errorsvm_high_level_count_en_vm0       [2]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vm0        [3]  - defines if vm  low_level comparator will report a detected errorrsvm_high_level_count_en_vm1_sel0       [4]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vm1_sel0       [5]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vm1_sel1       [6]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vm1_sel1        [7]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vm1_sel2       [8]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vm1_sel2        [9]  - defines if vm  low_level comparator will report a detected errorsvm_high_level_count_en_vm1_sel3       [10]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vm1_sel3        [11]  - defines if vm  low_level comparator will report a detected errorsvm_high_level_count_en_vm2       [12]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vm2        [13]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vm3       [14]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vm3        [15]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vm4       [16]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vm4        [17]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vm5       [18]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vm5        [19]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vm6       [20]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vm6        [21]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vm7       [22]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vm7        [23]  - defines if vm  low_level comparator will report a detected errotsMagic_number                                     [27:24]              Default value – identical for all registerssParity                                                     [31:28]               Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig1_sel_delay_reg Address h9000096c
_TBA_tba_trig1_sel_delay_reg = 2415921516 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig1_sel_delay = h9000096c 0 3 h0 RW HEX
; Desc_TBA_tba_trig1_sel_delay defines which inputs to the Voltage monitor will be measured during the self_test sequencesinternal_voltage_measurement_en                   [0]svm0_voltage_measurement_en                           [1]svm1_sel0_voltage_measurement_en                [2]svm1_sel1_voltage_measurement_en                [3]svm1_sel2_voltage_measurement_en                [4]svm1_sel3_voltage_measurement_en                [5]svm2_voltage_measurement_en                           [6]svm3_voltage_measurement_en                           [7]svm4_voltage_measurement_en                           [8]svm5_voltage_measurement_en                           [9]svm6_voltage_measurement_en                           [10]svm7_voltage_measurement_en                           [11]sreserved                                                                         [23:12]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig2_sel_delay_reg Address h90000970
_TBA_tba_trig2_sel_delay_reg = 2415921520 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig2_sel_delay = h90000970 0 3 h0 RW HEX
; Desc_TBA_tba_trig2_sel_delay defines which inputs to the Voltage monitor will be measured during the fnctional sequencesinternal_voltage_measurement_en                   [0]svm0_voltage_measurement_en                           [1]svm1_sel0_voltage_measurement_en                [2]svm1_sel1_voltage_measurement_en                [3]svm1_sel2_voltage_measurement_en                [4]svm1_sel3_voltage_measurement_en                [5]svm2_voltage_measurement_en                           [6]svm3_voltage_measurement_en                           [7]svm4_voltage_measurement_en                           [8]svm5_voltage_measurement_en                           [9]svm6_voltage_measurement_en                           [10]svm7_voltage_measurement_en                           [11]sreserved                                                                         [23:12]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig3_sel_delay_reg Address h90000974
_TBA_tba_trig3_sel_delay_reg = 2415921524 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig3_sel_delay = h90000974 0 3 h0 RW HEX
; Desc_TBA_tba_trig3_sel_delay defines the required stabilization time - resolution in vm_clksmax between  - Voltage monitor stabilization time when switching between the analog inputs s                          - stabilization time when swithcing between vmref output voltagesstabilization time                  [7:0]sreserved                                  [23:8]sMagic_number                      [27:24]              Default value – identical for all registerssParity                                      [31:28]               Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig0_func_sel_reg Address h90000978
_TBA_tba_trig0_func_sel_reg = 2415921528 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig0_func_sel = h90000978 0 16 h0 RW HEX
; Desc_TBA_tba_trig0_func_sel vm_data_error_gen                                                      [11:0]                  each bit set in this field will invert the corresponding bit in the vm_data to cause intentional error  sReserved                                                                         [22:12]svm_rdy_error_gen                                                        [23]                     setting this bit will set the vm_rdy to 1'b0 - for error and timeout testssMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig1_func_sel_reg Address h9000097c
_TBA_tba_trig1_func_sel_reg = 2415921532 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig1_func_sel = h9000097c 0 16 h0 RW HEX
; Desc_TBA_tba_trig1_func_sel vmu_wait_oper                                                             [23:0]                defines # of clocks before funtional safety enters functional mode  sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                              [31:28]               Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig2_func_sel_reg Address h90000980
_TBA_tba_trig2_func_sel_reg = 2415921536 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig2_func_sel = h90000980 0 16 h0 RW HEX
; Desc_TBA_tba_trig2_func_sel func_measurement_count               [15:0]                number of measurement done - counts all the meaurements done when the VMU is in functional safety mode



; REGISTER TBA_tba_trig3_func_sel_reg Address h90000984
_TBA_tba_trig3_func_sel_reg = 2415921540 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig3_func_sel = h90000984 0 16 h0 RW HEX
; Desc_TBA_tba_trig3_func_sel func_measurement_iteration_count               [15:0]                number of measurement loops each loops include all the measurements defined in  func_mode_measurement_en



; REGISTER TBA_tba_trig0_elem_mux_sel_reg Address h90000988
_TBA_tba_trig0_elem_mux_sel_reg = 2415921544 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig0_elem_mux_sel = h90000988 0 16 h0 RW HEX
; Desc_TBA_tba_trig0_elem_mux_sel tbd                                                                                     [23:0]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig1_elem_mux_sel_reg Address h9000098c
_TBA_tba_trig1_elem_mux_sel_reg = 2415921548 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig1_elem_mux_sel = h9000098c 0 16 h0 RW HEX
; Desc_TBA_tba_trig1_elem_mux_sel enable                                                 [0]svbg_selvdd                                         [1]svbg_trim                                          [3:2]svsrc_sel                                              [4]svmref_trim                                      [6:5]sabt_sel                                             [8:7]sspare                                               [12:9]sreserved                                         [23:13]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig2_elem_mux_sel_reg Address h90000990
_TBA_tba_trig2_elem_mux_sel_reg = 2415921552 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig2_elem_mux_sel = h90000990 0 16 h0 RW HEX
; Desc_TBA_tba_trig2_elem_mux_sel Initial SEQ_ID Value added to the read temperature register. This values will be incremented automatically after every read access to the read temperature register: sfield descriptionsparity                [31:28]smagic_number [27:24]sReserved           [23:8]sinitial_seq_id    [7:0]



; REGISTER TBA_tba_trig3_elem_mux_sel_reg Address h90000994
_TBA_tba_trig3_elem_mux_sel_reg = 2415921556 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig3_elem_mux_sel = h90000994 0 16 h0 RW HEX
; Desc_TBA_tba_trig3_elem_mux_sel controls the TSC functionalitysfield descriptionspd                       [0]                    Power down –s                                                   1’b0 – both TS are actives                                                   1’b1 – both TS are forced to power-downsS/L-St                  [1]                   Selects the type of self-tests                                                   1’b0 – when self-test activated – short self-test sequence will be executeds                                                   1’b1 – when self-test activated – long self-test sequence will be performed. The selected steps according to Long Self-test steps register see para. ‎0sSh_st_type         [2]            Selects the type of short self-tests                                                  1’b0 – when short self-test activated – automatic short self-test will be performeds                                                  1’b1 - when short self-test activated – manual driven short self-test will be performedsBypass mode     [3]           Selects bypass modes                                                  1’b0 – the TSC is activated in automatic mode. The TS are controlled according to predefined sequencess                                                  1’b1 – the TSC is activated in bypass modes                                                  The TS are controlled according to the control signals written by SW to Bypass Control register see para. ‎11.3sPar/sep              [4]            Selects the Temperature Sensors activity modes                                                  1’b0 – parallel (normal) mode – the Temperature Sensors are activated in parallel s                                                  1’b1 – separated mode – each temperature sensor is activated separately. This mode will be used while in bypass mode and for debug purposes.smaster               [5]           Selects which Temperature Sensor is read when the temperature read register is accesseds                                                  1’b0 – TS0 sampled value will be read when the temperature read register is accesseds                                                  1’b1 – TS1 sampled value will be read when the temperature read register is accessedsReserved           [23:6]ssMagic_number  [27:24]   Default value – identical for all registerssParity                 [31:28]   Parity calculation on bits[27:0] 



; REGISTER TBA_tba_exp_valid_0_reg Address h900009a0
_TBA_tba_exp_valid_0_reg = 2415921568 0 32 b00000000000000000000000000000000 RW
TBA_tba_exp_valid_0 = h900009a0 0 32 h0 RW HEX
; Desc_TBA_tba_exp_valid_0 controls theTS activation while in bypass modesTs0_pd                       [0]                     ts0 power down control bit while in bypass modesTs0_rstn                    [1]                     ts0 reset control bit while in bypass mode sTs0_run                     [2]                     ts0 run control bit while in bypass modesTs0_sgn_en             [3]                     ts0 sgn_en control bit while in bypass modesTs0_cal                      [4]                     ts0 cal control bit while in bypass modesTs0_tm_an              [8:5]                  ts0 tm_an control bits while in bypass modests0_ser_en               [9]                     ts0 serial enable_bitsts0_single_mode    [10]                     ts0_single run modesReserved                 [11]ssTs1_pd                     [12]                    ts1 power down control bit while in bypass modesTs1_rstn                  [13]                    ts1 reset control bit while in bypass mode sTs1_run                   [14]                    ts1 run control bit while in bypass modesTs1_sgn_en           [15]                    ts1 sgn_en control bit while in bypass modesTs1_cal                    [16]                    ts1 cal control bit while in bypass modesTs1_tm_an            [20:17]              ts1 tm_an control bits while in bypass modests1_ser_en               [21]                     ts0 serial enable_bitsts1_single_mode    [22]                     ts1_single run modesTs_clk_en              [23]                    Enables the clk_gator on clock driving the TS while in bypass modesMagic_numbers  [27:24]              Default value – identical for all registerssParity                      [31:28]              Parity calculation on bits[27:0] 



; REGISTER TBA_tba_exp_valid_mask_0_reg Address h900009a4
_TBA_tba_exp_valid_mask_0_reg = 2415921572 0 32 b00000000000000000000000000000000 RW
TBA_exp_valid_mask_0 = h900009a4 0 32 h0 RW HEX
; Desc_TBA_exp_valid_mask_0 time gap between adjacent measurementssmeasurement period     [22:0]              Defines number of clocks periods between temperature measurement – the actual period depend on the selected s                                                                          clock frequencysuse_mpr                               [23]                 Use measurement period register s                                                                          1’b0 – measurements will be done at the maximum possible rate – once one measurement is done (on both TS) and values are sampled, a new measurement will be initiateds                                                                          1’b1 – measurement will be done at the rate specified by the measurement period fields                                                                          For example - measurement period = 23’h7D00 means 32000 / 2Mhz = 16 msecsMagic_number                  [27:24]           Default value – identical for all registerssParity                                     [31:28]           Parity calculation on bits[27:0] 



; REGISTER TBA_tba_exp_valid_1_reg Address h900009a8
_TBA_tba_exp_valid_1_reg = 2415921576 0 32 b00000000000000000000000000000000 RW
TBA_tba_exp_valid_1 = h900009a8 0 32 h0 RW HEX
; Desc_TBA_tba_exp_valid_1 measurement timeout          [15:0]            Defines the waiting time from RUN activation until RDY is received – if the timeout period expires an error flag iss                                                                                 raised.s                                                                                The timeout counter resolution is the TS lock period.sReserved                                      [23:16]sMagic_number                          [27:24]         Default value – identical for all registerssParity                                             [31:28]         Parity calculation on bits[27:0] 



; REGISTER TBA_tba_exp_valid_mask_1_reg Address h900009ac
_TBA_tba_exp_valid_mask_1_reg = 2415921580 0 32 b00000000000000000000000000000000 RW
TBA_exp_valid_mask_1 = h900009ac 0 32 h0 RW HEX
; Desc_TBA_exp_valid_mask_1 short_self_test_high_limit1       [11:0]                  When manual short self-test is selected this value is used as high_limit1sshort_self_test_low_limit1        [23:12]                When manual short self-test is selected this value is used as low_limit1sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 



; REGISTER TBA_tba_exp_valid_2_reg Address h900009b0
_TBA_tba_exp_valid_2_reg = 2415921584 0 32 b00000000000000000000000000000000 RW
TBA_tba_exp_valid_2 = h900009b0 0 32 h0 RW HEX
; Desc_TBA_tba_exp_valid_2 man_sh_st_high_limit2s         [11:0]                When manual short self-test is selected this value is used as high_limit2sman_sh_st_low_limit2           [23:12]             When manual short self-test is selected this value is used as low_limit2sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 



; REGISTER TBA_tba_exp_valid_mask_2_reg Address h900009b4
_TBA_tba_exp_valid_mask_2_reg = 2415921588 0 32 b00000000000000000000000000000000 RW
TBA_exp_valid_mask_2 = h900009b4 0 32 h0 RW HEX
; Desc_TBA_exp_valid_mask_2 man_sh_st_high_limit3s         [11:0]                When manual short self-test is selected this value is used as high_limit3sman_sh_st_low_limit3           [23:12]             When manual short self-test is selected this value is used as low_limit3sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig0_sub_elem_not_equal_reg Address h900009b8
_TBA_tba_trig0_sub_elem_not_equal_reg = 2415921592 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig0_sub_elem_not_equal = h900009b8 0 12 h0 RW HEX
; Desc_TBA_tba_trig0_sub_elem_not_equal man_sh_st_forced_ts0_value1             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssman_sh_st_forced_ts1_value1             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig1_sub_elem_not_equal_reg Address h900009bc
_TBA_tba_trig1_sub_elem_not_equal_reg = 2415921596 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig1_sub_elem_not_equal = h900009bc 0 12 h0 RW HEX
; Desc_TBA_tba_trig1_sub_elem_not_equal man_sh_st_forced_ts0_value2             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssman_sh_st_forced_ts1_value2             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig2_sub_elem_not_equal_reg Address h900009c0
_TBA_tba_trig2_sub_elem_not_equal_reg = 2415921600 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig2_sub_elem_not_equal = h900009c0 0 12 h0 RW HEX
; Desc_TBA_tba_trig2_sub_elem_not_equal man_sh_st_forced_ts0_value3             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssman_sh_st_forced_ts1_value3             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 



; REGISTER TBA_tba_trig3_sub_elem_not_equal_reg Address h900009c4
_TBA_tba_trig3_sub_elem_not_equal_reg = 2415921604 0 32 b00000000000000000000000000000000 RW
TBA_tba_trig3_sub_elem_not_equal = h900009c4 0 12 h0 RW HEX
; Desc_TBA_tba_trig3_sub_elem_not_equal man_sh_st1_allowed_diff1               [11:0]                      When manual short self-test is selected this value is used for comparison against the obtained difference between the forced valuessman_sh_st1_allowed_diff2               [23:12]                    When manual short self-test is selected this value is used for comparison against the obtained difference between the forced valuessMagic_number                                        [27:24]                   Default value – identical for all registerssParity                                                           [31:28]                  Parity calculation on bits[27:0] 



; REGISTER TBA_pack_data_sel_reg Address h900009d0
_TBA_pack_data_sel_reg = 2415921616 0 32 b00000000000000000000000000000000 RW
TBA_pack_data_sel = h900009d0 0 3 h0 RW HEX
; Desc_TBA_pack_data_sel man_sh_st2_allowed_diff1               [11:0]                      When manual short self-test is selected this value is used for comparison against the obtained difference between the forced valuessman_sh_st2_allowed_diff2               [23:12]                    When manual short self-test is selected this value is used for comparison against the obtained differencesMagic_number                                        [27:24]                   Default value – identical for all registerssParity                                                           [31:28]                  Parity calculation on bits[27:0] 



; REGISTER TBA_elem_trig_enable_reg Address h900009d4
_TBA_elem_trig_enable_reg = 2415921620 0 32 b00000000000000000000000000000000 RW
TBA_elem_trig_enable = h900009d4 0 4 h0 RW HEX
; Desc_TBA_elem_trig_enable man_sh_st_DS_low_limit_high_value                [11:0]                 When manual short self-test is selected this value is used as high_limit against the high value ofs                                                                                                                         direct signature from TS sman_sh_st_DS_low_limit_low_value                 [23:12]              When manual short self-test is selected this value is used as low_limit against the low value ofs                                                                                                                         direct signature from TSsMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER TBA_elem0_mux_in_enable_reg Address h900009d8
_TBA_elem0_mux_in_enable_reg = 2415921624 0 32 b00000000000000000000000000000000 RW
TBA_elem0_mux_in_enable = h900009d8 0 4 h0 RW HEX
; Desc_TBA_elem0_mux_in_enable man_sh_st_DS_high_limit_high_value               [11:0]                 When manual short self-test is selected this value is used as high_limit against the high value ofs                                                                                                                         direct signature from TS sman_sh_st_DS_high_limit_low_value                [23:12]               When manual short self-test is selected this value is used as low_limit against the low value ofs                                                                                                                         direct signature from TSsMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER TBA_elem1_mux_in_enable_reg Address h900009dc
_TBA_elem1_mux_in_enable_reg = 2415921628 0 32 b00000000000000000000000000000000 RW
TBA_elem1_mux_in_enable = h900009dc 0 4 h0 RW HEX
; Desc_TBA_elem1_mux_in_enable ts0_high_comp              0                           ts0 comparison expected result  - step1s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               1                           ts0 comparison expected result - step1s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             2                           ts1 comparison expected result - step1s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               3                           ts1 comparison expected result - step1s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        4                          temperature difference comparison expected result - step1s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              5                           ts0 comparison expected result  - step2s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               6                           ts0 comparison expected result - step2s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             7                           ts1 comparison expected result - step2s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               8                           ts1 comparison expected resultv - step2s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        9                          temperature difference comparison expected result - step2s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              10                           ts0 comparison expected result  - step3s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               11                           ts0 comparison expected result - step3s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             12                           ts1 comparison expected result - step3s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               13                           ts1 comparison expected result - step3s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        14                          temperature difference comparison expected result - step3s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              15                           ts0 comparison expected result  - step4s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               16                           ts0 comparison expected result - step4s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             17                           ts1 comparison expected result - step4s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               18                           ts1 comparison expected result - step4s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        19                          temperature difference comparison expected result - step4s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsReserved                         [23:20]sMagic_number              [27:24]               Default value – identical for all registerssParity                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER TBA_elem2_mux_in_enable_reg Address h900009e0
_TBA_elem2_mux_in_enable_reg = 2415921632 0 32 b00000000000000000000000000000000 RW
TBA_elem2_mux_in_enable = h900009e0 0 4 h0 RW HEX
; Desc_TBA_elem2_mux_in_enable ts0_high_comp              0                           ts0 comparison expected result  - step5s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               1                           ts0 comparison expected result - step5s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             2                           ts1 comparison expected result - step5s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               3                           ts1 comparison expected result - step5s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        4                          temperature difference comparison expected result - step5s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              5                           ts0 comparison expected result  - step6s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               6                           ts0 comparison expected result - step6s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             7                           ts1 comparison expected result - step6s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               8                           ts1 comparison expected resultv - step6s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        9                          temperature difference comparison expected result - step6s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              10                           ts0 comparison expected result  - step7s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               11                           ts0 comparison expected result - step7s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             12                           ts1 comparison expected result - step7s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               13                           ts1 comparison expected result - step7s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        14                          temperature difference comparison expected result - step7s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              15                           ts0 comparison expected result  - step8s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               16                           ts0 comparison expected result - step8s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             17                           ts1 comparison expected result - step8s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               18                           ts1 comparison expected result - step8s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        19                          temperature difference comparison expected result - step8s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsReserved                         [23:20]sMagic_number              [27:24]               Default value – identical for all registerssParity                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER TBA_elem3_mux_in_enable_reg Address h900009e4
_TBA_elem3_mux_in_enable_reg = 2415921636 0 32 b00000000000000000000000000000000 RW
TBA_elem3_mux_in_enable = h900009e4 0 4 h0 RW HEX
; Desc_TBA_elem3_mux_in_enable func_ts0_high_limit                                                    [11:0]                 The highest temperature value allowed. higher temperature will result in an error indicationsfunc_ts0_low_limit                                                     [23:12]               The lowest temperature value allowed. lower temperature will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER TBA_num_cons_events_sel_reg Address h900009e8
_TBA_num_cons_events_sel_reg = 2415921640 0 32 b00000000000000000000000000000001 RW
TBA_num_cons_events_sel = h900009e8 0 16 h1 RW HEX
; Desc_TBA_num_cons_events_sel func_ts1_high_limit                                                    [11:0]                The highest temperature value allowed. higher temperature will result in an error indication sfunc_ts1_low_limit                                                     [23:12]              The lowest temperature value allowed. lower temperature will result in an error indication sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]              Parity calculation on bits[27:0] 



; REGISTER TBA_sum_trig_func_sel_reg Address h900009ec
_TBA_sum_trig_func_sel_reg = 2415921644 0 32 b00000000000000000000000000000000 RW
TBA_sum_trig_func_sel = h900009ec 0 16 h0 RW HEX
; Desc_TBA_sum_trig_func_sel CRC calculated on bits [31:8]



; REGISTER TBA_tba_mem_power_modes Address h900009f0
_TBA_tba_mem_power_modes = 2415921648 0 32 b00000000000000000000000000000000 RW
TBA_tba_mem_ls = h900009f0 0 1 h0 RW BIN
; Desc_TBA_tba_mem_ls func_allowed_diff                                                       [11:0]                 The allowed difference between TS0 and TS1 measured temperatures sReserved                                                                         [23:12]sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
TBA_tba_mem_ds = h900009f0 1 1 h0 RW BIN
; Desc_TBA_tba_mem_ds func_allowed_diff                                                       [11:0]                 The allowed difference between TS0 and TS1 measured temperatures sReserved                                                                         [23:12]sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
TBA_tba_mem_sd = h900009f0 2 1 h0 RW BIN
; Desc_TBA_tba_mem_sd func_allowed_diff                                                       [11:0]                 The allowed difference between TS0 and TS1 measured temperatures sReserved                                                                         [23:12]sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER rclk_pll_cfg1 Address h90000f4c
_rclk_pll_cfg1 = 2415923020 0 32 b00000010000101000000000000000000 RW
rclk_pll_pre_PLLEN = h90000f4c 0 1 h0 RW BIN
; Desc_rclk_pll_pre_PLLEN {chip_version_char, chip_version_num, rom_version}
rclk_pll_pre_DACEN = h90000f4c 1 1 h0 RW BIN
; Desc_rclk_pll_pre_DACEN {chip_version_char, chip_version_num, rom_version}
rclk_pll_pre_DSMEN = h90000f4c 2 1 h0 RW BIN
; Desc_rclk_pll_pre_DSMEN {chip_version_char, chip_version_num, rom_version}
rclk_pll_pre_FREFCMLEN = h90000f4c 3 1 h0 RW BIN
; Desc_rclk_pll_pre_FREFCMLEN {chip_version_char, chip_version_num, rom_version}
rclk_pll_pre_FOUTEN = h90000f4c 4 4 h0 RW HEX
; Desc_rclk_pll_pre_FOUTEN {chip_version_char, chip_version_num, rom_version}
rclk_pll_pre_FOUTVCOBYP = h90000f4c 8 5 h0 RW HEX
; Desc_rclk_pll_pre_FOUTVCOBYP {chip_version_char, chip_version_num, rom_version}
rclk_pll_pre_FBDIV = h90000f4c 13 12 ha0 RW HEX
; Desc_rclk_pll_pre_FBDIV {chip_version_char, chip_version_num, rom_version}
rclk_pll_pre_REFDIV = h90000f4c 25 7 h1 RW HEX
; Desc_rclk_pll_pre_REFDIV {chip_version_char, chip_version_num, rom_version}



; REGISTER rclk_pll_cfg2 Address h90000f50
_rclk_pll_cfg2 = 2415923024 0 31 b00000000000000000000011100110000 RW
rclk_pll_pre_POSTDIV0 = h90000f50 0 4 h0 RW HEX
; Desc_rclk_pll_pre_POSTDIV0 Pads pull enable
rclk_pll_pre_POSTDIV1 = h90000f50 4 4 h3 RW HEX
; Desc_rclk_pll_pre_POSTDIV1 Pads pull enable
rclk_pll_pre_POSTDIV2 = h90000f50 8 4 h7 RW HEX
; Desc_rclk_pll_pre_POSTDIV2 Pads pull enable
rclk_pll_pre_POSTDIV3 = h90000f50 12 4 h0 RW HEX
; Desc_rclk_pll_pre_POSTDIV3 Pads pull enable
rclk_pll_pre_POSTDIV4 = h90000f50 16 2 h0 RW HEX
; Desc_rclk_pll_pre_POSTDIV4 Pads pull enable
rclk_pll_pre_FOUTVCOEN = h90000f50 30 1 h0 RW BIN
; Desc_rclk_pll_pre_FOUTVCOEN Pads pull enable



; REGISTER rclk_pll_cfg3 Address h90000f54
_rclk_pll_cfg3 = 2415923028 0 32 b00000000000000000000000000000000 RW
rclk_pll_pre_FRAC = h90000f54 0 24 h0 RW HEX
; Desc_rclk_pll_pre_FRAC Pads slew controls
rclk_pll_pre_FOUTDIFFEN = h90000f54 30 1 h0 RW BIN
; Desc_rclk_pll_pre_FOUTDIFFEN Pads slew controls
rclk_pll_pre_FOUTCMLEN = h90000f54 31 1 h0 RW BIN
; Desc_rclk_pll_pre_FOUTCMLEN Pads slew controls



; REGISTER rclk_pll_cfg4 Address h90000f5c
_rclk_pll_cfg4 = 2415923036 0 21 b00000000000000000000000000000000 RW
rclk_pll_pre_OFFSETCALIN = h90000f5c 0 12 h0 RW HEX
; Desc_rclk_pll_pre_OFFSETCALIN Pads drive strength
rclk_pll_pre_OFFSETCALBYP = h90000f5c 12 1 h0 RW BIN
; Desc_rclk_pll_pre_OFFSETCALBYP Pads drive strength
rclk_pll_pre_OFFSETCALCNT = h90000f5c 14 3 h0 RW HEX
; Desc_rclk_pll_pre_OFFSETCALCNT Pads drive strength
rclk_pll_pre_OFFSETCALEN = h90000f5c 17 1 h0 RW BIN
; Desc_rclk_pll_pre_OFFSETCALEN Pads drive strength
rclk_pll_pre_OFFSETFASTCAL = h90000f5c 18 1 h0 RW BIN
; Desc_rclk_pll_pre_OFFSETFASTCAL Pads drive strength
rclk_pll_pre_FOUTPHEN = h90000f5c 19 1 h0 RW BIN
; Desc_rclk_pll_pre_FOUTPHEN Pads drive strength
rclk_pll_pre_CLKPHSEL = h90000f5c 20 1 h0 RW BIN
; Desc_rclk_pll_pre_CLKPHSEL Pads drive strength



; REGISTER test_definition_bus_reg Address h90000f74
_test_definition_bus_reg = 2415923060 0 5 b00000000000000000000000000000000 RW
test_definition_bus = h90000f74 0 5 h0 RW HEX
; Desc_test_definition_bus 



; REGISTER top_blocks_reset_n_reg Address h90002000
_top_blocks_reset_n_reg = 2415927296 0 32 b00000000000000000000000000000000 RW
top_blocks_reset_n = h90002000 0 32 h0 RW HEX
; Desc_top_blocks_reset_n 
dac_afeif_reset_n = h90002000 0 1 h0 RW BIN
>>DESC dac_afeif_reset_n = 2, b0, reset, b1, enable
adc_afeif_reset_n = h90002000 1 1 h0 RW BIN
>>DESC adc_afeif_reset_n = 2, b0, reset, b1, enable
link_sys_reset_n = h90002000 8 1 h0 RW BIN
>>DESC link_sys_reset_n = 2, b0, reset, b1, enable
dsp_sys_reset_n = h90002000 9 1 h0 RW BIN
>>DESC dsp_sys_reset_n = 2, b0, reset, b1, enable
testbus_sys_reset_n = h90002000 11 1 h0 RW BIN
>>DESC testbus_sys_reset_n = 2, b0, reset, b1, enable
src_afe_sys_reset_n = h90002000 12 1 h0 RW BIN
>>DESC src_afe_sys_reset_n = 2, b0, reset, b1, enable
csi_top_sys_reset_n = h90002000 13 1 h0 RW BIN
>>DESC csi_top_sys_reset_n = 2, b0, reset, b1, enable
rts_sys_reset_n = h90002000 15 1 h0 RW BIN
>>DESC rts_sys_reset_n = 2, b0, reset, b1, enable
trn_reset_n = h90002000 16 1 h0 RW BIN
>>DESC trn_reset_n = 2, b0, reset, b1, enable
pd_sys_reset_n = h90002000 19 1 h0 RW BIN
>>DESC pd_sys_reset_n = 2, b0, reset, b1, enable
vm_sys_reset_n = h90002000 20 1 h0 RW BIN
>>DESC vm_sys_reset_n = 2, b0, reset, b1, enable
ts_sys_reset_n = h90002000 21 1 h0 RW BIN
>>DESC ts_sys_reset_n = 2, b0, reset, b1, enable
tba_sys_reset_n = h90002000 30 1 h0 RW BIN
>>DESC tba_sys_reset_n = 2, b0, reset, b1, enable
tba_rif_uart_sys_reset_n = h90002000 31 1 h0 RW BIN
>>DESC tba_rif_uart_sys_reset_n = 2, b0, reset, b1, enable



; REGISTER wrm_rst_enable_reg Address h90002010
_wrm_rst_enable_reg = 2415927312 0 32 b00000000000000000000000000000000 RW
wrm_rst_enable = h90002010 0 32 h0 RW HEX
; Desc_wrm_rst_enable 1 - h2_intterrupt , 0 -!h2_interrupt



; REGISTER fpga_config_2_reg Address h90002054
_fpga_config_2_reg = 2415927380 0 32 b00000000000000000000000000000000 RW
fpga_config_2 = h90002054 0 32 h0 RW HEX
; Desc_fpga_config_2 Internal trig expected value bits 31:0



; REGISTER fpga_config_3_reg Address h90002058
_fpga_config_3_reg = 2415927384 0 32 b00000000000000000000000000000000 RW
fpga_config_3 = h90002058 0 32 h0 RW HEX
; Desc_fpga_config_3 Internal trig expected value bits 95:64



; REGISTER fpga_config_4_reg Address h9000205c
_fpga_config_4_reg = 2415927388 0 32 b00000000000000000000000000000000 RW
fpga_config_4 = h9000205c 0 32 h0 RW HEX
; Desc_fpga_config_4 Internal trig expected value bits 63:32



; REGISTER fpga_config_5_reg Address h90002060
_fpga_config_5_reg = 2415927392 0 32 b00000000000000000000000000000000 RW
fpga_config_5 = h90002060 0 32 h0 RW HEX
; Desc_fpga_config_5 Internal trig expected value bits 95:64



; REGISTER fpga_config_6_reg Address h90002064
_fpga_config_6_reg = 2415927396 0 32 b00000000000000000000000000000000 RW
fpga_config_6 = h90002064 0 32 h0 RW HEX
; Desc_fpga_config_6 
ytc_pll_dbg31_0 = h90002064 0 32 h0 RW HEX



; REGISTER fpga_config_7_reg Address h90002068
_fpga_config_7_reg = 2415927400 0 32 b00000000000000000000000000000000 RW
fpga_config_7 = h90002068 0 32 h0 RW HEX
; Desc_fpga_config_7 



; REGISTER fpga_config_8_reg Address h9000206c
_fpga_config_8_reg = 2415927404 0 32 b00000000000000000000000000000000 RW
fpga_config_8 = h9000206c 0 32 h0 RW HEX
; Desc_fpga_config_8 



; REGISTER fpga_config_9_reg Address h90002070
_fpga_config_9_reg = 2415927408 0 32 b00000000000000000000000000000000 RW
fpga_config_9 = h90002070 0 32 h0 RW HEX
; Desc_fpga_config_9 



; REGISTER fpga_config_10_reg Address h90002074
_fpga_config_10_reg = 2415927412 0 32 b00000000000000000000000000000000 RW
fpga_config_10 = h90002074 0 32 h0 RW HEX
; Desc_fpga_config_10 



; REGISTER fpga_config_11_reg Address h90002078
_fpga_config_11_reg = 2415927416 0 32 b00000000000000000000000000000000 RW
fpga_config_11 = h90002078 0 32 h0 RW HEX
; Desc_fpga_config_11 



; REGISTER fpga_config_12_reg Address h9000207c
_fpga_config_12_reg = 2415927420 0 32 b00000000000000000000000000000000 RW
fpga_config_12 = h9000207c 0 32 h0 RW HEX
; Desc_fpga_config_12 



; REGISTER fpga_config_13_reg Address h90002080
_fpga_config_13_reg = 2415927424 0 32 b00000000000000000000000000000000 RW
fpga_config_13 = h90002080 0 32 h0 RW HEX
; Desc_fpga_config_13 



; REGISTER fpga_config_14_reg Address h90002084
_fpga_config_14_reg = 2415927428 0 32 b00000000000000000000000000000000 RW
fpga_config_14 = h90002084 0 32 h0 RW HEX
; Desc_fpga_config_14 



; REGISTER fpga_config_15_reg Address h90002088
_fpga_config_15_reg = 2415927432 0 32 b00000000000000000000000000000000 RW
fpga_config_15 = h90002088 0 32 h0 RW HEX
; Desc_fpga_config_15 



; REGISTER safety_ctrl_cfg0_reg Address h90002100
_safety_ctrl_cfg0_reg = 2415927552 0 32 b01010101000000000000000000000000 RW
safety_ctrl_cfg0 = h90002100 0 32 h55000000 RW HEX
; Desc_safety_ctrl_cfg0 
move_2_sc = h90002100 0 1 h0 RW BIN
move_2_normal = h90002100 1 1 h0 RW BIN
move_2_pre_normal = h90002100 2 1 h0 RW BIN
move_2_safety = h90002100 3 1 h0 RW BIN
rsrv = h90002100 4 20 h0 RW HEX
magic_number = h90002100 24 4 h5 RW HEX
parity = h90002100 28 4 h5 RW HEX



; REGISTER safety_ctrl_cfg1_reg Address h90002104
_safety_ctrl_cfg1_reg = 2415927556 0 32 b01000101000000000000000000000001 RW
safety_ctrl_cfg1 = h90002104 0 32 h45000001 RW HEX
; Desc_safety_ctrl_cfg1 
slf_chk_run = h90002104 0 24 h1 RW HEX
magic_number = h90002104 24 4 h5 RW HEX
parity = h90002104 28 4 h4 RW HEX



; REGISTER safety_ctrl_cfg011_reg Address h90002108
_safety_ctrl_cfg011_reg = 2415927560 0 32 b01010101000000000000000000000000 RW
safety_ctrl_cfg011 = h90002108 0 32 h55000000 RW HEX
; Desc_safety_ctrl_cfg011 
slf_chk_run = h90002108 0 24 h0 RW HEX
magic_number = h90002108 24 4 h5 RW HEX
parity = h90002108 28 4 h5 RW HEX



; REGISTER safety_ctrl_cfg2_reg Address h9000210c
_safety_ctrl_cfg2_reg = 2415927564 0 32 b01010101000000000000000000000000 RW
safety_ctrl_cfg2 = h9000210c 0 32 h55000000 RW HEX
; Desc_safety_ctrl_cfg2 
safety_chk_en = h9000210c 0 24 h0 RW HEX
magic_number = h9000210c 24 4 h5 RW HEX
parity = h9000210c 28 4 h5 RW HEX



; REGISTER safety_ctrl_cfg022_reg Address h90002110
_safety_ctrl_cfg022_reg = 2415927568 0 32 b01010101000000000000000000000000 RW
safety_ctrl_cfg022 = h90002110 0 32 h55000000 RW HEX
; Desc_safety_ctrl_cfg022 
safety_chk_en = h90002110 0 24 h0 RW HEX
magic_number = h90002110 24 4 h5 RW HEX
parity = h90002110 28 4 h5 RW HEX



; REGISTER safety_ctrl_cfg3_reg Address h90002114
_safety_ctrl_cfg3_reg = 2415927572 0 32 b01000101111111111111111111111110 RW
safety_ctrl_cfg3 = h90002114 0 32 h45fffffe RW HEX
; Desc_safety_ctrl_cfg3 
sm_sc_fail_state_mask = h90002114 0 24 hfffffe RW HEX
magic_number = h90002114 24 4 h5 RW HEX
parity = h90002114 28 4 h4 RW HEX



; REGISTER safety_ctrl_cfg033_reg Address h90002118
_safety_ctrl_cfg033_reg = 2415927576 0 32 b01010101111111111111111111111111 RW
safety_ctrl_cfg033 = h90002118 0 32 h55ffffff RW HEX
; Desc_safety_ctrl_cfg033 
sm_sc_fail_state_mask = h90002118 0 24 hffffff RW HEX
magic_number = h90002118 24 4 h5 RW HEX
parity = h90002118 28 4 h5 RW HEX



; REGISTER safety_ctrl_cfg4_reg Address h9000211c
_safety_ctrl_cfg4_reg = 2415927580 0 32 b01000101111111111111111111111110 RW
safety_ctrl_cfg4 = h9000211c 0 32 h45fffffe RW HEX
; Desc_safety_ctrl_cfg4 
sm_sc_fail_intr_mask = h9000211c 0 24 hfffffe RW HEX
magic_number = h9000211c 24 4 h5 RW HEX
parity = h9000211c 28 4 h4 RW HEX



; REGISTER safety_ctrl_cfg044_reg Address h90002120
_safety_ctrl_cfg044_reg = 2415927584 0 32 b01000101111111111111111111111110 RW
safety_ctrl_cfg044 = h90002120 0 32 h45fffffe RW HEX
; Desc_safety_ctrl_cfg044 
sm_sc_fail_intr_mask = h90002120 0 24 hfffffe RW HEX
magic_number = h90002120 24 4 h5 RW HEX
parity = h90002120 28 4 h4 RW HEX



; REGISTER safety_ctrl_cfg5_reg Address h90002124
_safety_ctrl_cfg5_reg = 2415927588 0 32 b01010101111111111111111111111111 RW
safety_ctrl_cfg5 = h90002124 0 32 h55ffffff RW HEX
; Desc_safety_ctrl_cfg5 
sm_fail_state_mask = h90002124 0 24 hffffff RW HEX
magic_number = h90002124 24 4 h5 RW HEX
parity = h90002124 28 4 h5 RW HEX



; REGISTER safety_ctrl_cfg055_reg Address h90002128
_safety_ctrl_cfg055_reg = 2415927592 0 32 b01010101111111111111111111111111 RW
safety_ctrl_cfg055 = h90002128 0 32 h55ffffff RW HEX
; Desc_safety_ctrl_cfg055 
sm_fail_state_mask = h90002128 0 24 hffffff RW HEX
magic_number = h90002128 24 4 h5 RW HEX
parity = h90002128 28 4 h5 RW HEX



; REGISTER safety_ctrl_cfg6_reg Address h9000212c
_safety_ctrl_cfg6_reg = 2415927596 0 32 b01010101111111111111111111111111 RW
safety_ctrl_cfg6 = h9000212c 0 32 h55ffffff RW HEX
; Desc_safety_ctrl_cfg6 
sm_fail_intr_mask = h9000212c 0 24 hffffff RW HEX
magic_number = h9000212c 24 4 h5 RW HEX
parity = h9000212c 28 4 h5 RW HEX



; REGISTER safety_ctrl_cfg066_reg Address h90002130
_safety_ctrl_cfg066_reg = 2415927600 0 32 b01010101111111111111111111111111 RW
safety_ctrl_cfg066 = h90002130 0 32 h55ffffff RW HEX
; Desc_safety_ctrl_cfg066 
sm_fail_intr_mask = h90002130 0 24 hffffff RW HEX
magic_number = h90002130 24 4 h5 RW HEX
parity = h90002130 28 4 h5 RW HEX



; REGISTER safety_ctrl_cfg9_reg Address h90002144
_safety_ctrl_cfg9_reg = 2415927620 0 32 b00000101000001111111111110101000 RW
safety_ctrl_cfg9 = h90002144 0 32 h507ffa8 RW HEX
; Desc_safety_ctrl_cfg9 
rsrv0 = h90002144 0 3 h0 RW HEX
safety_in_mode = h90002144 3 2 h1 RW HEX
safety_out_mode = h90002144 5 2 h1 RW HEX
slf_chk_timer = h90002144 7 16 hfff RW HEX
rsrv1 = h90002144 23 1 h0 RW BIN
magic_number = h90002144 24 4 h5 RW HEX
parity = h90002144 28 4 h0 RW HEX



; REGISTER safety_ctrl_cfg10_reg Address h90002148
_safety_ctrl_cfg10_reg = 2415927624 0 32 b10110101000111111111111111111111 RW
safety_ctrl_cfg10 = h90002148 0 32 hb51fffff RW HEX
; Desc_safety_ctrl_cfg10 
safety_gpio_state_mask = h90002148 0 3 h7 RW HEX
safety_gpio_intr_mask = h90002148 3 3 h7 RW HEX
safety_regs_state_mask = h90002148 6 4 hf RW HEX
safety_regs_intr_mask = h90002148 10 4 hf RW HEX
safety_intr_mask = h90002148 14 7 h7f RW HEX
rsrv = h90002148 21 3 h0 RW HEX
magic_number = h90002148 24 4 h5 RW HEX
parity = h90002148 28 4 hb RW HEX



; REGISTER safety_ctrl_cfg11_reg Address h9000214c
_safety_ctrl_cfg11_reg = 2415927628 0 32 b00000101000000000000001111101000 RW
safety_ctrl_cfg11 = h9000214c 0 32 h50003e8 RW HEX
; Desc_safety_ctrl_cfg11 
safety_remote_in_freq = h9000214c 0 14 h3e8 RW HEX
safety_remote_in_mapping = h9000214c 14 4 h0 RW HEX
rsrv = h9000214c 18 6 h0 RW HEX
magic_number = h9000214c 24 4 h5 RW HEX
parity = h9000214c 28 4 h0 RW HEX



; REGISTER safety_ctrl_cfg12_reg Address h90002150
_safety_ctrl_cfg12_reg = 2415927632 0 32 b00000101000000000000000011111010 RW
safety_ctrl_cfg12 = h90002150 0 32 h50000fa RW HEX
; Desc_safety_ctrl_cfg12 
safety_remote_out_freq = h90002150 0 14 hfa RW HEX
rsrv = h90002150 14 10 h0 RW HEX
magic_number = h90002150 24 4 h5 RW HEX
parity = h90002150 28 4 h0 RW HEX



; REGISTER safety_ctrl_cfg13_reg Address h90002154
_safety_ctrl_cfg13_reg = 2415927636 0 32 b00110101000000000000001111101011 RW
safety_ctrl_cfg13 = h90002154 0 32 h350003eb RW HEX
; Desc_safety_ctrl_cfg13 
safety_in_freq = h90002154 0 14 h3eb RW HEX
rsrv = h90002154 14 10 h0 RW HEX
magic_number = h90002154 24 4 h5 RW HEX
parity = h90002154 28 4 h3 RW HEX



; REGISTER safety_ctrl_cfg14_reg Address h90002158
_safety_ctrl_cfg14_reg = 2415927640 0 32 b00110101000000000000001111101011 RW
safety_ctrl_cfg14 = h90002158 0 32 h350003eb RW HEX
; Desc_safety_ctrl_cfg14 
safety_out_freq = h90002158 0 14 h3eb RW HEX
rsrv = h90002158 14 10 h0 RW HEX
magic_number = h90002158 24 4 h5 RW HEX
parity = h90002158 28 4 h3 RW HEX



; REGISTER safety_ctrl_cfg15_reg Address h9000215c
_safety_ctrl_cfg15_reg = 2415927644 0 32 b00110101000000000000001111101011 RW
safety_ctrl_cfg15 = h9000215c 0 32 h350003eb RW HEX
; Desc_safety_ctrl_cfg15 
pre_normal_timer = h9000215c 0 14 h3eb RW HEX
rsrv = h9000215c 14 10 h0 RW HEX
magic_number = h9000215c 24 4 h5 RW HEX
parity = h9000215c 28 4 h3 RW HEX



; REGISTER safety_ctrl_clr_intr_status Address h90002160
_safety_ctrl_clr_intr_status = 2415927648 0 7 b00000000000000000000000000000000 RW
safety_intr_clr = h90002160 0 7 h0 RW HEX
; Desc_safety_intr_clr 



; REGISTER sys_clk_min_target_lsb_reg Address h90002230
_sys_clk_min_target_lsb_reg = 2415927856 0 32 b00010101000000000010011100010000 RW
sys_clk_min_target_lsb = h90002230 0 32 h15002710 RW HEX
; Desc_sys_clk_min_target_lsb 
sys_clk_min_target_lsb_cfg = h90002230 0 24 h2710 RW HEX
sys_clk_min_target_lsb_magic_num = h90002230 24 4 h5 RW HEX
sys_clk_min_target_lsb_parity = h90002230 28 4 h1 RW HEX



; REGISTER sys_clk_min_target_msb_reg Address h90002234
_sys_clk_min_target_msb_reg = 2415927860 0 32 b01010101000000000000000000000000 RW
sys_clk_min_target_msb = h90002234 0 32 h55000000 RW HEX
; Desc_sys_clk_min_target_msb 
sys_clk_min_target_msb_cfg = h90002234 0 8 h0 RW HEX
sys_clk_min_target_msb_reserved = h90002234 8 16 h0 RW HEX
sys_clk_min_target_msb_magic_num = h90002234 24 4 h5 RW HEX
sys_clk_min_target_msb_parity = h90002234 28 4 h5 RW HEX



; REGISTER sys_clk_max_target_lsb_reg Address h90002238
_sys_clk_max_target_lsb_reg = 2415927864 0 32 b00000101000000000110000110101000 RW
sys_clk_max_target_lsb = h90002238 0 32 h50061a8 RW HEX
; Desc_sys_clk_max_target_lsb 
sys_clk_max_target_lsb_cfg = h90002238 0 24 h61a8 RW HEX
sys_clk_max_target_lsb_magic_num = h90002238 24 4 h5 RW HEX
sys_clk_max_target_lsb_parity = h90002238 28 4 h0 RW HEX



; REGISTER sys_clk_max_target_msb_reg Address h9000223c
_sys_clk_max_target_msb_reg = 2415927868 0 32 b01010101000000000000000000000000 RW
sys_clk_max_target_msb = h9000223c 0 32 h55000000 RW HEX
; Desc_sys_clk_max_target_msb 
sys_clk_max_target_msb_cfg = h9000223c 0 8 h0 RW HEX
sys_clk_max_target_msb_reserved = h9000223c 8 16 h0 RW HEX
sys_clk_max_target_msb_magic_num = h9000223c 24 4 h5 RW HEX
sys_clk_max_target_msb_parity = h9000223c 28 4 h5 RW HEX



; REGISTER sys_clk_twind_base_lsb_reg Address h90002240
_sys_clk_twind_base_lsb_reg = 2415927872 0 32 b00100101000000000010010001010100 RW
sys_clk_twind_base_lsb = h90002240 0 32 h25002454 RW HEX
; Desc_sys_clk_twind_base_lsb 
sys_clk_twind_base_lsb_cfg = h90002240 0 24 h2454 RW HEX
sys_clk_twind_base_lsb_magic_num = h90002240 24 4 h5 RW HEX
sys_clk_twind_base_lsb_parity = h90002240 28 4 h2 RW HEX



; REGISTER sys_clk_twind_base_msb_reg Address h90002244
_sys_clk_twind_base_msb_reg = 2415927876 0 32 b01010101000000000000000000000000 RW
sys_clk_twind_base_msb = h90002244 0 32 h55000000 RW HEX
; Desc_sys_clk_twind_base_msb 
sys_clk_twind_base_msb_cfg = h90002244 0 8 h0 RW HEX
sys_clk_twind_base_msb_reserved = h90002244 8 16 h0 RW HEX
sys_clk_twind_base_msb_magic_num = h90002244 24 4 h5 RW HEX
sys_clk_twind_base_msb_parity = h90002244 28 4 h5 RW HEX



; REGISTER sys_clk_wait_oper_reg Address h90002248
_sys_clk_wait_oper_reg = 2415927880 0 32 b11110101000000000000000000001010 RW
sys_clk_wait_oper = h90002248 0 32 hf500000a RW HEX
; Desc_sys_clk_wait_oper 
sys_clk_wait_oper_cfg = h90002248 0 24 ha RW HEX
sys_clk_wait_oper_magic_num = h90002248 24 4 h5 RW HEX
sys_clk_wait_oper_parity = h90002248 28 4 hf RW HEX



; REGISTER pll_lock_wait_oper_reg Address h90002300
_pll_lock_wait_oper_reg = 2415928064 0 32 b01110101000000000000000000000010 RW
pll_lock_wait_oper = h90002300 0 32 h75000002 RW HEX
; Desc_pll_lock_wait_oper 
pll_lock_wait_oper_cfg = h90002300 0 24 h2 RW HEX
magic_num = h90002300 24 4 h5 RW HEX
Parity = h90002300 28 4 h7 RW HEX



; REGISTER pll_lock_fail_intr_mask_reg Address h90002314
_pll_lock_fail_intr_mask_reg = 2415928084 0 32 b00000000000000000000000000000000 RW
pll_lock_fail_intr_mask = h90002314 0 1 h0 RW BIN
; Desc_pll_lock_fail_intr_mask 



; REGISTER pd_control_register Address h90002400
_pd_control_register = 2415928320 0 3 b00000000000000000000000000000101 RW
pd_rstn = h90002400 0 1 h1 RW BIN
; Desc_pd_rstn 
pd_run_cmd = h90002400 1 1 h0 RW BIN
; Desc_pd_run_cmd 
pd_single_mode = h90002400 2 1 h1 RW BIN
; Desc_pd_single_mode 



; REGISTER pd_cfg1_register Address h90002404
_pd_cfg1_register = 2415928324 0 8 b00000000000000000000000000000000 RW
pd_cfg1_sec_mode = h90002404 0 2 h0 RW HEX
; Desc_pd_cfg1_sec_mode 
pd_cfg1_pri_mode = h90002404 2 2 h0 RW HEX
; Desc_pd_cfg1_pri_mode 
pd_cfg1_ser_mode = h90002404 4 1 h0 RW BIN
; Desc_pd_cfg1_ser_mode 



; REGISTER pd_cfg2_register Address h90002408
_pd_cfg2_register = 2415928328 0 8 b00000000000000000000000000000000 RW
pd_cfg2_port_sel = h90002408 5 3 h0 RW HEX
; Desc_pd_cfg2_port_sel num of consecutive trig events to cause a trigger. 1 - For a single trig event 



; REGISTER pd_cfg3_register Address h9000240c
_pd_cfg3_register = 2415928332 0 8 b00000000000000000000000000000000 RW
pd_cfg3_pre_scale_div = h9000240c 0 4 h0 RW HEX
; Desc_pd_cfg3_pre_scale_div 
pd_cfg3_count_win_size = h9000240c 4 4 h0 RW HEX
; Desc_pd_cfg3_count_win_size 



; REGISTER pd_clk_width_reg Address h90002420
_pd_clk_width_reg = 2415928352 0 20 b00000000000000000101000000010100 RW
pd_clk_up_width = h90002420 0 10 h14 RW HEX
; Desc_pd_clk_up_width Mem lite sleep 0-normal mode. 1-lite sleep
pd_clk_down_width = h90002420 10 10 h14 RW HEX
; Desc_pd_clk_down_width Mem lite sleep 0-normal mode. 1-lite sleep



; REGISTER pd_analog_pu_clock_num_reg Address h90002424
_pd_analog_pu_clock_num_reg = 2415928356 0 8 b00000000000000000000000001111111 RW
pd_analog_pu_clock_num = h90002424 0 8 h7f RW HEX
; Desc_pd_analog_pu_clock_num top main modules reset control



; REGISTER measurement_timeout_register Address h90002428
_measurement_timeout_register = 2415928360 0 16 b00000000000000000000001000100000 RW
measurement_timeout = h90002428 0 16 h220 RW HEX
; Desc_measurement_timeout top main modules reset control



; REGISTER pd_error_generation_register Address h9000242c
_pd_error_generation_register = 2415928364 0 32 b00000000000000000000000000000000 RW
pd_data_error_gen = h9000242c 0 12 h0 RW HEX
; Desc_pd_data_error_gen warm reset enable - need to write magic sequence : 0x900dbabe, 0xbaadcafe
pd_faultn_error_gen = h9000242c 22 1 h0 RW BIN
; Desc_pd_faultn_error_gen warm reset enable - need to write magic sequence : 0x900dbabe, 0xbaadcafe
pd_rdy_error_gen = h9000242c 23 1 h0 RW BIN
; Desc_pd_rdy_error_gen warm reset enable - need to write magic sequence : 0x900dbabe, 0xbaadcafe



; REGISTER pd_cmd_width_register Address h90002448
_pd_cmd_width_register = 2415928392 0 4 b00000000000000000000000000000000 RW
pd_run_width = h90002448 0 2 h0 RW HEX
; Desc_pd_run_width General status FPGA use
pd_cload_width = h90002448 2 2 h0 RW HEX
; Desc_pd_cload_width General status FPGA use



; REGISTER pd_ring_oscilator_control_register Address h90002458
_pd_ring_oscilator_control_register = 2415928408 0 2 b00000000000000000000000000000000 RW
pd_ring_osc_en = h90002458 0 1 h0 RW BIN
; Desc_pd_ring_osc_en General status FPGA use
pd_ring_osc_gator_en = h90002458 1 1 h0 RW BIN
; Desc_pd_ring_osc_gator_en General status FPGA use



; REGISTER vm_initial_seq_id_1_register Address h90002500
_vm_initial_seq_id_1_register = 2415928576 0 32 b01010101000000000000000000000000 RW
vm_initial_seq_id_1 = h90002500 0 32 h55000000 RW HEX
; Desc_vm_initial_seq_id_1 General status FPGA use
vm_initial_seq_id_vin0 = h90002500 0 4 h0 RW HEX
vm_initial_seq_id_vin1 = h90002500 4 4 h0 RW HEX
vm_initial_seq_id_vin2_sel0 = h90002500 8 4 h0 RW HEX
vm_initial_seq_id_vin2_sel1 = h90002500 12 4 h0 RW HEX
vm_initial_seq_id_vin2_sel2 = h90002500 16 4 h0 RW HEX
vm_initial_seq_id_vin2_sel3 = h90002500 20 4 h0 RW HEX
magic_number = h90002500 24 4 h5 RW HEX
parity = h90002500 28 4 h5 RW HEX



; REGISTER vm_initial_seq_id_2_register Address h90002504
_vm_initial_seq_id_2_register = 2415928580 0 32 b01010101000000000000000000000000 RW
vm_initial_seq_id_2 = h90002504 0 32 h55000000 RW HEX
; Desc_vm_initial_seq_id_2 General status FPGA use
vm_initial_seq_id_vin3 = h90002504 0 4 h0 RW HEX
vm_initial_seq_id_vin4 = h90002504 4 4 h0 RW HEX
vm_initial_seq_id_vin5 = h90002504 8 4 h0 RW HEX
vm_initial_seq_id_vin6 = h90002504 12 4 h0 RW HEX
vm_initial_seq_id_vin7 = h90002504 16 4 h0 RW HEX
vm_initial_seq_id_vin8 = h90002504 20 4 h0 RW HEX
magic_number = h90002504 24 4 h5 RW HEX
parity = h90002504 28 4 h5 RW HEX



; REGISTER vm_initial_seq_id_3_register Address h90002508
_vm_initial_seq_id_3_register = 2415928584 0 32 b01010101000000000000000000000000 RW
vm_initial_seq_id_3 = h90002508 0 32 h55000000 RW HEX
; Desc_vm_initial_seq_id_3 General status FPGA use
vm_initial_seq_id_vin9 = h90002508 0 4 h0 RW HEX
vm_initial_seq_id_vin10 = h90002508 4 4 h0 RW HEX
vm_initial_seq_id_vin11 = h90002508 8 4 h0 RW HEX
vm_initial_seq_id_vin12 = h90002508 12 4 h0 RW HEX
vm_initial_seq_id_vin13 = h90002508 16 4 h0 RW HEX
vm_initial_seq_id_vin14 = h90002508 20 4 h0 RW HEX
magic_number = h90002508 24 4 h5 RW HEX
parity = h90002508 28 4 h5 RW HEX



; REGISTER vm_initial_seq_id_4_register Address h9000250c
_vm_initial_seq_id_4_register = 2415928588 0 32 b01010101000000000000000000000000 RW
vm_initial_seq_id_4 = h9000250c 0 32 h55000000 RW HEX
; Desc_vm_initial_seq_id_4 General status FPGA use
vm_initial_seq_id_vin15 = h9000250c 0 4 h0 RW HEX
vm_initial_seq_id_vinternal = h9000250c 4 4 h0 RW HEX
magic_number = h9000250c 24 4 h5 RW HEX
parity = h9000250c 28 4 h5 RW HEX



; REGISTER vm_control_register Address h90002510
_vm_control_register = 2415928592 0 32 b00010101000000000000000000000100 RW
vm_control = h90002510 0 32 h15000004 RW HEX
; Desc_vm_control General status FPGA use
vm_pd = h90002510 0 1 h0 RW BIN
vm_bypass_mode = h90002510 1 1 h0 RW BIN
vm_single_mode = h90002510 2 1 h1 RW BIN
magic_number = h90002510 24 4 h5 RW HEX
parity = h90002510 28 4 h1 RW HEX



; REGISTER vm_bypass_register Address h90002514
_vm_bypass_register = 2415928596 0 32 b01110101000000000000000000000010 RW
vm_bypass = h90002514 0 32 h75000002 RW HEX
; Desc_vm_bypass General status FPGA use
vm_pd_byapss = h90002514 0 1 h0 RW BIN
vm_rstn_bypass = h90002514 1 1 h1 RW BIN
vm_run_bypass = h90002514 2 1 h0 RW BIN
vm_cload_bypass = h90002514 3 1 h0 RW BIN
vm_an_sel = h90002514 4 4 h0 RW HEX
magic_number = h90002514 24 4 h5 RW HEX
parity = h90002514 28 4 h7 RW HEX



; REGISTER vm_cfg1_register Address h90002518
_vm_cfg1_register = 2415928600 0 32 b01110101000000000000000000100000 RW
vm_cfg1_reg = h90002518 0 32 h75000020 RW HEX
; Desc_vm_cfg1_reg General status FPGA use
vm_cfg1_sec_mode = h90002518 0 2 h0 RW HEX
vm_cfg1_pri_mode = h90002518 2 2 h0 RW HEX
vm_cfg1_ser_mode = h90002518 4 1 h0 RW BIN
vm_cfg1_resolution = h90002518 5 2 h1 RW HEX
magic_number = h90002518 24 4 h5 RW HEX
parity = h90002518 28 4 h7 RW HEX



; REGISTER vm_cfg2_register Address h9000251c
_vm_cfg2_register = 2415928604 0 32 b01010101000000000000000000000000 RW
vm_cfg2_reg = h9000251c 0 32 h55000000 RW HEX
; Desc_vm_cfg2_reg General status FPGA use
vm_cfg2_input_select = h9000251c 0 5 h0 RW HEX
vm_cfg2_voltage_ref_sel = h9000251c 7 1 h0 RW BIN
magic_number = h9000251c 24 4 h5 RW HEX
parity = h9000251c 28 4 h5 RW HEX



; REGISTER vm_clk_width_reg Address h90002524
_vm_clk_width_reg = 2415928612 0 32 b01010101000000010100000000010100 RW
vm_clk_width = h90002524 0 32 h55014014 RW HEX
; Desc_vm_clk_width General status FPGA use
vm_clk_up_width = h90002524 0 10 h14 RW HEX
vm_clk_down_width = h90002524 12 10 h14 RW HEX
magic_number = h90002524 24 4 h5 RW HEX
parity = h90002524 28 4 h5 RW HEX



; REGISTER vm_analog_pu_clock_num_reg Address h90002528
_vm_analog_pu_clock_num_reg = 2415928616 0 32 b11010101000000000000000001111111 RW
vm_analog_pu_clock_num = h90002528 0 32 hd500007f RW HEX
; Desc_vm_analog_pu_clock_num General status FPGA use
vm_analog_pu_clock_num_pms = h90002528 0 8 h7f RW HEX
magic_number = h90002528 24 4 h5 RW HEX
parity = h90002528 28 4 hd RW HEX



; REGISTER vm_measurement_period_register Address h9000252c
_vm_measurement_period_register = 2415928620 0 32 b01010101000000000000000000000000 RW
vm_measurement_period = h9000252c 0 32 h55000000 RW HEX
; Desc_vm_measurement_period General status FPGA use
vm_measurement_period_pms = h9000252c 0 23 h0 RW HEX
vm_use_mpr = h9000252c 23 1 h0 RW BIN
magic_number = h9000252c 24 4 h5 RW HEX
parity = h9000252c 28 4 h5 RW HEX



; REGISTER vm_measurement_timeout_register Address h90002530
_vm_measurement_timeout_register = 2415928624 0 32 b00010101000000000010000100110100 RW
vm_measurement_timeout = h90002530 0 32 h15002134 RW HEX
; Desc_vm_measurement_timeout General status FPGA use
vm_measurement_timeout_pms = h90002530 0 16 h2134 RW HEX
magic_number = h90002530 24 4 h5 RW HEX
parity = h90002530 28 4 h1 RW HEX



; REGISTER vm_short_self_test_high_limit_1_register Address h90002534
_vm_short_self_test_high_limit_1_register = 2415928628 0 32 b10010101000000000001110100000000 RW
vm_short_self_test_high_limit_1 = h90002534 0 32 h95001d00 RW HEX
; Desc_vm_short_self_test_high_limit_1 General config FPGA use
vm_short_self_test_high_limit1 = h90002534 0 14 h1d00 RW HEX
magic_number = h90002534 24 4 h5 RW HEX
parity = h90002534 28 4 h9 RW HEX



; REGISTER vm_short_self_test_low_limit_1_register Address h90002538
_vm_short_self_test_low_limit_1_register = 2415928632 0 32 b11100101000000000000101100000000 RW
vm_short_self_test_low_limit_1 = h90002538 0 32 he5000b00 RW HEX
; Desc_vm_short_self_test_low_limit_1 General config FPGA use
vm_short_self_test_low_limit1 = h90002538 0 14 hb00 RW HEX
magic_number = h90002538 24 4 h5 RW HEX
parity = h90002538 28 4 he RW HEX



; REGISTER vm_short_self_test_high_limit_2_register Address h9000253c
_vm_short_self_test_high_limit_2_register = 2415928636 0 32 b01110101000000000011000100000000 RW
vm_short_self_test_high_limit_2 = h9000253c 0 32 h75003100 RW HEX
; Desc_vm_short_self_test_high_limit_2 General config FPGA use
vm_short_self_test_high_limit2 = h9000253c 0 14 h3100 RW HEX
magic_number = h9000253c 24 4 h5 RW HEX
parity = h9000253c 28 4 h7 RW HEX



; REGISTER vm_short_self_test_low_limit_2_register Address h90002540
_vm_short_self_test_low_limit_2_register = 2415928640 0 32 b00010101000000000010011000000000 RW
vm_short_self_test_low_limit_2 = h90002540 0 32 h15002600 RW HEX
; Desc_vm_short_self_test_low_limit_2 General config FPGA use
vm_short_self_test_low_limit2 = h90002540 0 14 h2600 RW HEX
magic_number = h90002540 24 4 h5 RW HEX
parity = h90002540 28 4 h1 RW HEX



; REGISTER vm_short_self_test_high_limit_3_register Address h90002544
_vm_short_self_test_high_limit_3_register = 2415928644 0 32 b00010101000000000011000011111000 RW
vm_short_self_test_high_limit_3 = h90002544 0 32 h150030f8 RW HEX
; Desc_vm_short_self_test_high_limit_3 General config FPGA use
vm_short_self_test_high_limit3 = h90002544 0 14 h30f8 RW HEX
magic_number = h90002544 24 4 h5 RW HEX
parity = h90002544 28 4 h1 RW HEX



; REGISTER vm_short_self_test_low_limit_3_register Address h90002548
_vm_short_self_test_low_limit_3_register = 2415928648 0 32 b11010101000000000001111010001111 RW
vm_short_self_test_low_limit_3 = h90002548 0 32 hd5001e8f RW HEX
; Desc_vm_short_self_test_low_limit_3 General config FPGA use
vm_short_self_test_low_limit3 = h90002548 0 14 h1e8f RW HEX
magic_number = h90002548 24 4 h5 RW HEX
parity = h90002548 28 4 hd RW HEX



; REGISTER vm_short_self_test_forced_value1_register Address h9000254c
_vm_short_self_test_forced_value1_register = 2415928652 0 32 b11100101000000000011110111001001 RW
vm_short_self_test_forced_value1 = h9000254c 0 32 he5003dc9 RW HEX
; Desc_vm_short_self_test_forced_value1 General config FPGA use
vm_short_self_test_forced_vm_value1 = h9000254c 0 14 h3dc9 RW HEX
magic_number = h9000254c 24 4 h5 RW HEX
parity = h9000254c 28 4 he RW HEX



; REGISTER vm_short_self_test_forced_value2_register Address h90002550
_vm_short_self_test_forced_value2_register = 2415928656 0 32 b10110101000000000001001110000100 RW
vm_short_self_test_forced_value2 = h90002550 0 32 hb5001384 RW HEX
; Desc_vm_short_self_test_forced_value2 General config FPGA use
vm_short_self_test_forced_vm_value2 = h90002550 0 14 h1384 RW HEX
magic_number = h90002550 24 4 h5 RW HEX
parity = h90002550 28 4 hb RW HEX



; REGISTER vm_short_self_test_forced_value3_register Address h90002554
_vm_short_self_test_forced_value3_register = 2415928660 0 32 b01100101000000000010101101101100 RW
vm_short_self_test_forced_value3 = h90002554 0 32 h65002b6c RW HEX
; Desc_vm_short_self_test_forced_value3 General config FPGA use
vm_short_self_test_forced_vm_value3 = h90002554 0 14 h2b6c RW HEX
magic_number = h90002554 24 4 h5 RW HEX
parity = h90002554 28 4 h6 RW HEX



; REGISTER vm_short_self_test_direct_signature_low_limit_high_value_register Address h9000255c
_vm_short_self_test_direct_signature_low_limit_high_value_register = 2415928668 0 32 b01100101000000000011000000000000 RW
vm_short_self_test_direct_signature_low_limit_high_value = h9000255c 0 32 h65003000 RW HEX
; Desc_vm_short_self_test_direct_signature_low_limit_high_value General config FPGA use
vm_short_self_test_DS_low_limit_high_val = h9000255c 0 14 h3000 RW HEX
magic_number = h9000255c 24 4 h5 RW HEX
parity = h9000255c 28 4 h6 RW HEX



; REGISTER vm_short_self_test_direct_signature_high_limit_high_value_register Address h90002560
_vm_short_self_test_direct_signature_high_limit_high_value_register = 2415928672 0 32 b01110101000000000011000100000000 RW
vm_short_self_test_direct_signature_high_limit_high_value = h90002560 0 32 h75003100 RW HEX
; Desc_vm_short_self_test_direct_signature_high_limit_high_value General config FPGA use
vm_short_self_test_DS_high_limit_high_val = h90002560 0 14 h3100 RW HEX
magic_number = h90002560 24 4 h5 RW HEX
parity = h90002560 28 4 h7 RW HEX



; REGISTER vm_short_self_test_direct_signature_low_limit_low_value_register Address h90002564
_vm_short_self_test_direct_signature_low_limit_low_value_register = 2415928676 0 32 b10000101000000000000111100100000 RW
vm_short_self_test_direct_signature_low_limit_low_value = h90002564 0 32 h85000f20 RW HEX
; Desc_vm_short_self_test_direct_signature_low_limit_low_value General config FPGA use
vm_short_self_test_DS_low_limit_low_val = h90002564 0 14 hf20 RW HEX
magic_number = h90002564 24 4 h5 RW HEX
parity = h90002564 28 4 h8 RW HEX



; REGISTER vm_short_self_test_direct_signature_high_limit_low_value_register Address h90002568
_vm_short_self_test_direct_signature_high_limit_low_value_register = 2415928680 0 32 b00100101000000000000111110000000 RW
vm_short_self_test_direct_signature_high_limit_low_value = h90002568 0 32 h25000f80 RW HEX
; Desc_vm_short_self_test_direct_signature_high_limit_low_value General config FPGA use
vm_short_self_test_DS_high_limit_low_val = h90002568 0 14 hf80 RW HEX
magic_number = h90002568 24 4 h5 RW HEX
parity = h90002568 28 4 h2 RW HEX



; REGISTER vm_short_self_test_expected_comparators_results_register Address h9000256c
_vm_short_self_test_expected_comparators_results_register = 2415928684 0 32 b01000101000000001001100110001001 RW
vm_short_self_test_expected_comparators_results = h9000256c 0 32 h45009989 RW HEX
; Desc_vm_short_self_test_expected_comparators_results General config FPGA use
vm_high_comp_step1 = h9000256c 0 1 h1 RW BIN
vm_low_comp_step1 = h9000256c 1 1 h0 RW BIN
vm_high_comp_step2 = h9000256c 2 1 h0 RW BIN
vm_low_comp_step2 = h9000256c 3 1 h1 RW BIN
vm_high_comp_step3 = h9000256c 4 1 h0 RW BIN
vm_low_comp_step3 = h9000256c 5 1 h0 RW BIN
vm_high_comp_step4 = h9000256c 6 1 h0 RW BIN
vm_low_comp_step4 = h9000256c 7 1 h1 RW BIN
vm_high_comp_step5 = h9000256c 8 1 h1 RW BIN
vm_low_comp_step5 = h9000256c 9 1 h0 RW BIN
vm_high_comp_step6 = h9000256c 10 1 h0 RW BIN
vm_low_comp_step6 = h9000256c 11 1 h1 RW BIN
vm_high_comp_step7 = h9000256c 12 1 h1 RW BIN
vm_low_comp_step7 = h9000256c 13 1 h0 RW BIN
vm_high_comp_step8 = h9000256c 14 1 h0 RW BIN
vm_low_comp_step8 = h9000256c 15 1 h1 RW BIN
magic_number = h9000256c 24 4 h5 RW HEX
parity = h9000256c 28 4 h4 RW HEX



; REGISTER functional_voltage_monitor_high_limit_vin0_register Address h90002570
_functional_voltage_monitor_high_limit_vin0_register = 2415928688 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_high_limit_vin0 = h90002570 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_high_limit_vin0 
func_vm_high_limit_vin0 = h90002570 0 14 h0 RW HEX
magic_number = h90002570 24 4 h5 RW HEX
parity = h90002570 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_low_limit_vin0_register Address h90002574
_functional_voltage_monitor_low_limit_vin0_register = 2415928692 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_low_limit_vin0 = h90002574 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_low_limit_vin0 
func_vm_high_low_vin0 = h90002574 0 14 h0 RW HEX
magic_number = h90002574 24 4 h5 RW HEX
parity = h90002574 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_high_limit_vin1_register Address h90002578
_functional_voltage_monitor_high_limit_vin1_register = 2415928696 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_high_limit_vin1 = h90002578 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_high_limit_vin1 
func_vm_high_limit_vin1 = h90002578 0 14 h0 RW HEX
magic_number = h90002578 24 4 h5 RW HEX
parity = h90002578 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_low_limit_vin1_register Address h9000257c
_functional_voltage_monitor_low_limit_vin1_register = 2415928700 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_low_limit_vin1 = h9000257c 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_low_limit_vin1 
func_vm_high_low_vin1 = h9000257c 0 14 h0 RW HEX
magic_number = h9000257c 24 4 h5 RW HEX
parity = h9000257c 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_high_limit_vin2_sel0_register Address h90002580
_functional_voltage_monitor_high_limit_vin2_sel0_register = 2415928704 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_high_limit_vin2_sel0 = h90002580 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_high_limit_vin2_sel0 
func_vm_high_limit_vin2_sel0 = h90002580 0 14 h0 RW HEX
magic_number = h90002580 24 4 h5 RW HEX
parity = h90002580 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_low_limit_vin0_sel0_register Address h90002584
_functional_voltage_monitor_low_limit_vin0_sel0_register = 2415928708 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_low_limit_vin2_sel0 = h90002584 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_low_limit_vin2_sel0 
func_vm_high_low_vin0_sel0 = h90002584 0 14 h0 RW HEX
magic_number = h90002584 24 4 h5 RW HEX
parity = h90002584 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_high_limit_vin2_sel1_register Address h90002588
_functional_voltage_monitor_high_limit_vin2_sel1_register = 2415928712 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_high_limit_vin2_sel1 = h90002588 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_high_limit_vin2_sel1 
func_vm_high_limit_vin2_sel1 = h90002588 0 14 h0 RW HEX
magic_number = h90002588 24 4 h5 RW HEX
parity = h90002588 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_low_limit_vin2_sel1_register Address h9000258c
_functional_voltage_monitor_low_limit_vin2_sel1_register = 2415928716 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_low_limit_vin2_sel1 = h9000258c 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_low_limit_vin2_sel1 
func_vm_high_low_vin2_sel1 = h9000258c 0 14 h0 RW HEX
magic_number = h9000258c 24 4 h5 RW HEX
parity = h9000258c 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_high_limit_vin2_sel2_register Address h90002590
_functional_voltage_monitor_high_limit_vin2_sel2_register = 2415928720 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_high_limit_vin2_sel2 = h90002590 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_high_limit_vin2_sel2 
func_vm_high_limit_vin2_sel2 = h90002590 0 14 h0 RW HEX
magic_number = h90002590 24 4 h5 RW HEX
parity = h90002590 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_low_limit_vin2_sel2_register Address h90002594
_functional_voltage_monitor_low_limit_vin2_sel2_register = 2415928724 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_low_limit_vin2_sel2 = h90002594 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_low_limit_vin2_sel2 
func_vm_high_low_vin2_sel2 = h90002594 0 14 h0 RW HEX
magic_number = h90002594 24 4 h5 RW HEX
parity = h90002594 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_high_limit_vin2_sel3_register Address h90002598
_functional_voltage_monitor_high_limit_vin2_sel3_register = 2415928728 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_high_limit_vin2_sel3 = h90002598 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_high_limit_vin2_sel3 
func_vm_high_limit_vin2_sel3 = h90002598 0 14 h0 RW HEX
magic_number = h90002598 24 4 h5 RW HEX
parity = h90002598 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_low_limit_vin2_sel3_register Address h9000259c
_functional_voltage_monitor_low_limit_vin2_sel3_register = 2415928732 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_low_limit_vin2_sel3 = h9000259c 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_low_limit_vin2_sel3 
func_vm_high_low_vin2_sel3 = h9000259c 0 14 h0 RW HEX
magic_number = h9000259c 24 4 h5 RW HEX
parity = h9000259c 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_high_limit_vin3_register Address h900025a0
_functional_voltage_monitor_high_limit_vin3_register = 2415928736 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_high_limit_vin3 = h900025a0 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_high_limit_vin3 
func_vm_high_limit_vin3 = h900025a0 0 14 h0 RW HEX
magic_number = h900025a0 24 4 h5 RW HEX
parity = h900025a0 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_low_limit_vin3_register Address h900025a4
_functional_voltage_monitor_low_limit_vin3_register = 2415928740 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_low_limit_vin3 = h900025a4 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_low_limit_vin3 
func_vm_high_low_vin3 = h900025a4 0 14 h0 RW HEX
magic_number = h900025a4 24 4 h5 RW HEX
parity = h900025a4 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_high_limit_vin4_register Address h900025a8
_functional_voltage_monitor_high_limit_vin4_register = 2415928744 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_high_limit_vin4 = h900025a8 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_high_limit_vin4 
func_vm_high_limit_vin4 = h900025a8 0 14 h0 RW HEX
magic_number = h900025a8 24 4 h5 RW HEX
parity = h900025a8 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_low_limit_vin4_register Address h900025ac
_functional_voltage_monitor_low_limit_vin4_register = 2415928748 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_low_limit_vin4 = h900025ac 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_low_limit_vin4 
func_vm_high_low_vin4 = h900025ac 0 14 h0 RW HEX
magic_number = h900025ac 24 4 h5 RW HEX
parity = h900025ac 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_high_limit_vin5_register Address h900025b0
_functional_voltage_monitor_high_limit_vin5_register = 2415928752 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_high_limit_vin5 = h900025b0 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_high_limit_vin5 
func_vm_high_limit_vin5 = h900025b0 0 14 h0 RW HEX
magic_number = h900025b0 24 4 h5 RW HEX
parity = h900025b0 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_low_limit_vin5_register Address h900025b4
_functional_voltage_monitor_low_limit_vin5_register = 2415928756 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_low_limit_vin5 = h900025b4 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_low_limit_vin5 
func_vm_high_low_vin5 = h900025b4 0 14 h0 RW HEX
magic_number = h900025b4 24 4 h5 RW HEX
parity = h900025b4 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_high_limit_vin6_register Address h900025b8
_functional_voltage_monitor_high_limit_vin6_register = 2415928760 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_high_limit_vin6 = h900025b8 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_high_limit_vin6 
func_vm_high_limit_vin6 = h900025b8 0 14 h0 RW HEX
magic_number = h900025b8 24 4 h5 RW HEX
parity = h900025b8 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_low_limit_vin6_register Address h900025bc
_functional_voltage_monitor_low_limit_vin6_register = 2415928764 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_low_limit_vin6 = h900025bc 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_low_limit_vin6 
func_vm_high_low_vin6 = h900025bc 0 14 h0 RW HEX
magic_number = h900025bc 24 4 h5 RW HEX
parity = h900025bc 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_high_limit_vin7_register Address h900025c0
_functional_voltage_monitor_high_limit_vin7_register = 2415928768 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_high_limit_vin7 = h900025c0 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_high_limit_vin7 clr interrrupt per bit  {1'b0,ssafety_fail_state[5],s|local_reg_check_intr[4] ,s|gpio_intr[3]s ,|sm_op_fail_intr [2],s|sm_sc_fail_intr[1]s ,sm_sc_done_intr [0]}
func_vm_high_limit_vin7 = h900025c0 0 14 h0 RW HEX
magic_number = h900025c0 24 4 h5 RW HEX
parity = h900025c0 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_low_limit_vin7_register Address h900025c4
_functional_voltage_monitor_low_limit_vin7_register = 2415928772 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_low_limit_vin7 = h900025c4 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_low_limit_vin7 interrupt status intterupt 
func_vm_high_low_vin7 = h900025c4 0 14 h0 RW HEX
magic_number = h900025c4 24 4 h5 RW HEX
parity = h900025c4 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_high_limit_vin8_register Address h900025c8
_functional_voltage_monitor_high_limit_vin8_register = 2415928776 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_high_limit_vin8 = h900025c8 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_high_limit_vin8 status of register err check
func_vm_high_limit_vin8 = h900025c8 0 14 h0 RW HEX
magic_number = h900025c8 24 4 h5 RW HEX
parity = h900025c8 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_low_limit_vin8_register Address h900025cc
_functional_voltage_monitor_low_limit_vin8_register = 2415928780 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_low_limit_vin8 = h900025cc 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_low_limit_vin8 self check fail status per agent
func_vm_high_low_vin8 = h900025cc 0 14 h0 RW HEX
magic_number = h900025cc 24 4 h5 RW HEX
parity = h900025cc 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_high_limit_vin9_register Address h900025d0
_functional_voltage_monitor_high_limit_vin9_register = 2415928784 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_high_limit_vin9 = h900025d0 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_high_limit_vin9 self check fail status per agent
func_vm_high_limit_vin9 = h900025d0 0 14 h0 RW HEX
magic_number = h900025d0 24 4 h5 RW HEX
parity = h900025d0 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_low_limit_vin9_register Address h900025d4
_functional_voltage_monitor_low_limit_vin9_register = 2415928788 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_low_limit_vin9 = h900025d4 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_low_limit_vin9 operation mode fail status
func_vm_high_low_vin9 = h900025d4 0 14 h0 RW HEX
magic_number = h900025d4 24 4 h5 RW HEX
parity = h900025d4 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_high_limit_vin10_register Address h900025d8
_functional_voltage_monitor_high_limit_vin10_register = 2415928792 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_high_limit_vin10 = h900025d8 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_high_limit_vin10 operation mode fail status
func_vm_high_limit_vin10 = h900025d8 0 14 h0 RW HEX
magic_number = h900025d8 24 4 h5 RW HEX
parity = h900025d8 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_low_limit_vin10_register Address h900025dc
_functional_voltage_monitor_low_limit_vin10_register = 2415928796 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_low_limit_vin10 = h900025dc 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_low_limit_vin10 self check done status
func_vm_high_low_vin10 = h900025dc 0 14 h0 RW HEX
magic_number = h900025dc 24 4 h5 RW HEX
parity = h900025dc 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_high_limit_vin11_register Address h900025e0
_functional_voltage_monitor_high_limit_vin11_register = 2415928800 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_high_limit_vin11 = h900025e0 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_high_limit_vin11 self check done status
func_vm_high_limit_vin11 = h900025e0 0 14 h0 RW HEX
magic_number = h900025e0 24 4 h5 RW HEX
parity = h900025e0 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_low_limit_vin11_register Address h900025e4
_functional_voltage_monitor_low_limit_vin11_register = 2415928804 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_low_limit_vin11 = h900025e4 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_low_limit_vin11 [0]- reg_sc_err_sc_fail_inds[1]- reg_sc_err_op_fail_inds[2]- reg_sc_err_done_inds[3]- safety_ctrl_reg_failsclr by write to any bit of the [3:0]
func_vm_high_low_vin11 = h900025e4 0 14 h0 RW HEX
magic_number = h900025e4 24 4 h5 RW HEX
parity = h900025e4 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_high_limit_vin12_register Address h900025e8
_functional_voltage_monitor_high_limit_vin12_register = 2415928808 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_high_limit_vin12 = h900025e8 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_high_limit_vin12 the minimum number of target clocks inside the time window - 24 lsb
func_vm_high_limit_vin12 = h900025e8 0 14 h0 RW HEX
magic_number = h900025e8 24 4 h5 RW HEX
parity = h900025e8 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_low_limit_vin12_register Address h900025ec
_functional_voltage_monitor_low_limit_vin12_register = 2415928812 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_low_limit_vin12 = h900025ec 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_low_limit_vin12 the minimum number of target clocks inside the time window - 8 msb
func_vm_high_low_vin12 = h900025ec 0 14 h0 RW HEX
magic_number = h900025ec 24 4 h5 RW HEX
parity = h900025ec 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_high_limit_vin13_register Address h900025f0
_functional_voltage_monitor_high_limit_vin13_register = 2415928816 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_high_limit_vin13 = h900025f0 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_high_limit_vin13 the maximum number of target clocks inside the time window - 24 lsb
func_vm_high_limit_vin13 = h900025f0 0 14 h0 RW HEX
magic_number = h900025f0 24 4 h5 RW HEX
parity = h900025f0 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_low_limit_vin13_register Address h900025f4
_functional_voltage_monitor_low_limit_vin13_register = 2415928820 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_low_limit_vin13 = h900025f4 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_low_limit_vin13 the maximum number of target clocks inside the time window - 8 msb
func_vm_high_low_vin13 = h900025f4 0 14 h0 RW HEX
magic_number = h900025f4 24 4 h5 RW HEX
parity = h900025f4 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_high_limit_vin14_register Address h900025f8
_functional_voltage_monitor_high_limit_vin14_register = 2415928824 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_high_limit_vin14 = h900025f8 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_high_limit_vin14 the time window size in base_clk cycles - change only when enable=0smust be configured to something other than 0 - value of 0 not valid!!!
func_vm_high_limit_vin14 = h900025f8 0 14 h0 RW HEX
magic_number = h900025f8 24 4 h5 RW HEX
parity = h900025f8 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_low_limit_vin14_register Address h900025fc
_functional_voltage_monitor_low_limit_vin14_register = 2415928828 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_low_limit_vin14 = h900025fc 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_low_limit_vin14 the time window size in base_clk cycles - change only when enable=0smust be configured to something other than 0 - value of 0 not valid!!!
func_vm_high_low_vin14 = h900025fc 0 14 h0 RW HEX
magic_number = h900025fc 24 4 h5 RW HEX
parity = h900025fc 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_high_limit_vin15_register Address h90002600
_functional_voltage_monitor_high_limit_vin15_register = 2415928832 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_high_limit_vin15 = h90002600 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_high_limit_vin15 how many cycles the clk_monitor waits before starting opernationl mode after reciving sm_en
func_vm_high_limit_vin15 = h90002600 0 14 h0 RW HEX
magic_number = h90002600 24 4 h5 RW HEX
parity = h90002600 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_low_limit_vin15_register Address h90002604
_functional_voltage_monitor_low_limit_vin15_register = 2415928836 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_low_limit_vin15 = h90002604 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_low_limit_vin15 the value of the target clock counter at the end of the last time window
func_vm_high_low_vin15 = h90002604 0 14 h0 RW HEX
magic_number = h90002604 24 4 h5 RW HEX
parity = h90002604 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_high_limit_vinternal_register Address h90002608
_functional_voltage_monitor_high_limit_vinternal_register = 2415928840 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_high_limit_vinternal = h90002608 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_high_limit_vinternal 
func_vm_high_limit_vinternal = h90002608 0 14 h0 RW HEX
magic_number = h90002608 24 4 h5 RW HEX
parity = h90002608 28 4 h5 RW HEX



; REGISTER functional_voltage_monitor_low_limit_vinternal_register Address h9000260c
_functional_voltage_monitor_low_limit_vinternal_register = 2415928844 0 32 b01010101000000000000000000000000 RW
functional_voltage_monitor_low_limit_vinternal = h9000260c 0 32 h55000000 RW HEX
; Desc_functional_voltage_monitor_low_limit_vinternal 
func_vm_high_low_vinternal = h9000260c 0 14 h0 RW HEX
magic_number = h9000260c 24 4 h5 RW HEX
parity = h9000260c 28 4 h5 RW HEX



; REGISTER voltage_monitor_error_count_limit1_register Address h90002610
_voltage_monitor_error_count_limit1_register = 2415928848 0 32 b01000101000000010000000100000001 RW
voltage_monitor_error_count_limit1 = h90002610 0 32 h45010101 RW HEX
; Desc_voltage_monitor_error_count_limit1 
vm_error_count_limit_vin0 = h90002610 0 8 h1 RW HEX
vm_error_count_limit_vin1 = h90002610 8 8 h1 RW HEX
vm_error_count_limit_vin2_sel0 = h90002610 16 8 h1 RW HEX
magic_number = h90002610 24 4 h5 RW HEX
parity = h90002610 28 4 h4 RW HEX



; REGISTER voltage_monitor_error_count_limit2_register Address h90002614
_voltage_monitor_error_count_limit2_register = 2415928852 0 32 b01000101000000010000000100000001 RW
voltage_monitor_error_count_limit2 = h90002614 0 32 h45010101 RW HEX
; Desc_voltage_monitor_error_count_limit2 number of cycles between oper_en command from safety controller to oper_en internal  at pll_lock_check sm
vm_error_count_limit_vin2_sel1 = h90002614 0 8 h1 RW HEX
vm_error_count_limit_vin2_sel2 = h90002614 8 8 h1 RW HEX
vm_error_count_limit_vin2_sel3 = h90002614 16 8 h1 RW HEX
magic_number = h90002614 24 4 h5 RW HEX
parity = h90002614 28 4 h4 RW HEX



; REGISTER voltage_monitor_error_count_limit3_register Address h90002618
_voltage_monitor_error_count_limit3_register = 2415928856 0 32 b01000101000000010000000100000001 RW
voltage_monitor_error_count_limit3 = h90002618 0 32 h45010101 RW HEX
; Desc_voltage_monitor_error_count_limit3 wait_oper reg status
vm_error_count_limit_vin3 = h90002618 0 8 h1 RW HEX
vm_error_count_limit_vin4 = h90002618 8 8 h1 RW HEX
vm_error_count_limit_vin5 = h90002618 16 8 h1 RW HEX
magic_number = h90002618 24 4 h5 RW HEX
parity = h90002618 28 4 h4 RW HEX



; REGISTER voltage_monitor_error_count_limit4_register Address h9000261c
_voltage_monitor_error_count_limit4_register = 2415928860 0 32 b01000101000000010000000100000001 RW
voltage_monitor_error_count_limit4 = h9000261c 0 32 h45010101 RW HEX
; Desc_voltage_monitor_error_count_limit4 
vm_error_count_limit_vin6 = h9000261c 0 8 h1 RW HEX
vm_error_count_limit_vin7 = h9000261c 8 8 h1 RW HEX
vm_error_count_limit_vin8 = h9000261c 16 8 h1 RW HEX
magic_number = h9000261c 24 4 h5 RW HEX
parity = h9000261c 28 4 h4 RW HEX



; REGISTER voltage_monitor_error_count_limit5_register Address h90002620
_voltage_monitor_error_count_limit5_register = 2415928864 0 32 b01000101000000010000000100000001 RW
voltage_monitor_error_count_limit5 = h90002620 0 32 h45010101 RW HEX
; Desc_voltage_monitor_error_count_limit5 
vm_error_count_limit_vin9 = h90002620 0 8 h1 RW HEX
vm_error_count_limit_vin10 = h90002620 8 8 h1 RW HEX
vm_error_count_limit_vin11 = h90002620 16 8 h1 RW HEX
magic_number = h90002620 24 4 h5 RW HEX
parity = h90002620 28 4 h4 RW HEX



; REGISTER voltage_monitor_error_count_limit6_register Address h90002624
_voltage_monitor_error_count_limit6_register = 2415928868 0 32 b01000101000000010000000100000001 RW
voltage_monitor_error_count_limit6 = h90002624 0 32 h45010101 RW HEX
; Desc_voltage_monitor_error_count_limit6 pd reset control bit
vm_error_count_limit_vin12 = h90002624 0 8 h1 RW HEX
vm_error_count_limit_vin13 = h90002624 8 8 h1 RW HEX
vm_error_count_limit_vin14 = h90002624 16 8 h1 RW HEX
magic_number = h90002624 24 4 h5 RW HEX
parity = h90002624 28 4 h4 RW HEX



; REGISTER voltage_monitor_error_count_limit7_register Address h90002628
_voltage_monitor_error_count_limit7_register = 2415928872 0 32 b01000101000000010000000100000001 RW
voltage_monitor_error_count_limit7 = h90002628 0 32 h45010101 RW HEX
; Desc_voltage_monitor_error_count_limit7 cfg conversion mode
vm_error_count_limit_vin15 = h90002628 0 8 h1 RW HEX
vm_error_count_limit_vinternal = h90002628 8 8 h1 RW HEX
vm_error_count_limit_self_test = h90002628 16 8 h1 RW HEX
magic_number = h90002628 24 4 h5 RW HEX
parity = h90002628 28 4 h4 RW HEX



; REGISTER vm_detect_en1_reg Address h90002630
_vm_detect_en1_reg = 2415928880 0 32 b01010101111111111111111111111111 RW
vm_detect_en1 = h90002630 0 32 h55ffffff RW HEX
; Desc_vm_detect_en1 place holder
vm_high_level_detect_en_vin0 = h90002630 0 1 h1 RW BIN
vm_low_level_detect_en_vin0 = h90002630 1 1 h1 RW BIN
vm_high_level_detect_en_vin1 = h90002630 2 1 h1 RW BIN
vm_low_level_detect_en_vin1 = h90002630 3 1 h1 RW BIN
vm_high_level_detect_en_vin2_sel0 = h90002630 4 1 h1 RW BIN
vm_low_level_detect_en_vin2_sel0 = h90002630 5 1 h1 RW BIN
vm_high_level_detect_en_vin2_sel1 = h90002630 6 1 h1 RW BIN
vm_low_level_detect_en_vin2_sel1 = h90002630 7 1 h1 RW BIN
vm_high_level_detect_en_vin2_sel2 = h90002630 8 1 h1 RW BIN
vm_low_level_detect_en_vin2_sel2 = h90002630 9 1 h1 RW BIN
vm_high_level_detect_en_vin2_sel3 = h90002630 10 1 h1 RW BIN
vm_low_level_detect_en_vin2_sel03 = h90002630 11 1 h1 RW BIN
vm_high_level_detect_en_vin3 = h90002630 12 1 h1 RW BIN
vm_low_level_detect_en_vin3 = h90002630 13 1 h1 RW BIN
vm_high_level_detect_en_vin4 = h90002630 14 1 h1 RW BIN
vm_low_level_detect_en_vin4 = h90002630 15 1 h1 RW BIN
vm_high_level_detect_en_vin5 = h90002630 16 1 h1 RW BIN
vm_low_level_detect_en_vin5 = h90002630 17 1 h1 RW BIN
vm_high_level_detect_en_vin6 = h90002630 18 1 h1 RW BIN
vm_low_level_detect_en_vin6 = h90002630 19 1 h1 RW BIN
vm_high_level_detect_en_vin7 = h90002630 20 1 h1 RW BIN
vm_low_level_detect_en_vin7 = h90002630 21 1 h1 RW BIN
vm_high_level_detect_en_vin8 = h90002630 22 1 h1 RW BIN
vm_low_level_detect_en_vin8 = h90002630 23 1 h1 RW BIN
magic_number = h90002630 24 4 h5 RW HEX
parity = h90002630 28 4 h5 RW HEX



; REGISTER vm_detect_en2_reg Address h90002634
_vm_detect_en2_reg = 2415928884 0 32 b01100101000000111111111111111111 RW
vm_detect_en2 = h90002634 0 32 h6503ffff RW HEX
; Desc_vm_detect_en2 defines the length of high level of pd_clk - default value based onssys_clk = 250MHzspd_clk ~= 6.25MHz
vm_high_level_detect_en_vin9 = h90002634 0 1 h1 RW BIN
vm_low_level_detect_en_vin9 = h90002634 1 1 h1 RW BIN
vm_high_level_detect_en_vin10 = h90002634 2 1 h1 RW BIN
vm_low_level_detect_en_vin10 = h90002634 3 1 h1 RW BIN
vm_high_level_detect_en_vin11 = h90002634 4 1 h1 RW BIN
vm_low_level_detect_en_vin11 = h90002634 5 1 h1 RW BIN
vm_high_level_detect_en_vin12 = h90002634 6 1 h1 RW BIN
vm_low_level_detect_en_vin12 = h90002634 7 1 h1 RW BIN
vm_high_level_detect_en_vin13 = h90002634 8 1 h1 RW BIN
vm_low_level_detect_en_vin13 = h90002634 9 1 h1 RW BIN
vm_high_level_detect_en_vin14 = h90002634 10 1 h1 RW BIN
vm_low_level_detect_en_vin14 = h90002634 11 1 h1 RW BIN
vm_high_level_detect_en_vin15 = h90002634 12 1 h1 RW BIN
vm_low_level_detect_en_vin15 = h90002634 13 1 h1 RW BIN
vm_high_level_detect_en_internal = h90002634 14 1 h1 RW BIN
vm_low_level_detect_en_internal = h90002634 15 1 h1 RW BIN
vm_parity_error_detect_en = h90002634 16 1 h1 RW BIN
vm_analog_fault_detect_en = h90002634 17 1 h1 RW BIN
magic_number = h90002634 24 4 h5 RW HEX
parity = h90002634 28 4 h6 RW HEX



; REGISTER vm_count_en1_reg Address h90002638
_vm_count_en1_reg = 2415928888 0 32 b01010101111111111111111111111111 RW
vm_count_en1 = h90002638 0 32 h55ffffff RW HEX
; Desc_vm_count_en1 defines the length of the analog power-up  period
vm_high_level_count_en_vin0 = h90002638 0 1 h1 RW BIN
vm_low_level_count_en_vin0 = h90002638 1 1 h1 RW BIN
vm_high_level_count_en_vin1 = h90002638 2 1 h1 RW BIN
vm_low_level_count_en_vin1 = h90002638 3 1 h1 RW BIN
vm_high_level_count_en_vin2_sel0 = h90002638 4 1 h1 RW BIN
vm_low_level_count_en_vin2_sel0 = h90002638 5 1 h1 RW BIN
vm_high_level_count_en_vin2_sel1 = h90002638 6 1 h1 RW BIN
vm_low_level_count_en_vin2_sel1 = h90002638 7 1 h1 RW BIN
vm_high_level_count_en_vin2_sel2 = h90002638 8 1 h1 RW BIN
vm_low_level_count_en_vin2_sel2 = h90002638 9 1 h1 RW BIN
vm_high_level_count_en_vin2_sel3 = h90002638 10 1 h1 RW BIN
vm_low_level_count_en_vin2_sel3 = h90002638 11 1 h1 RW BIN
vm_high_level_count_en_vin3 = h90002638 12 1 h1 RW BIN
vm_low_level_count_en_vin3 = h90002638 13 1 h1 RW BIN
vm_high_level_count_en_vin4 = h90002638 14 1 h1 RW BIN
vm_low_level_count_en_vin4 = h90002638 15 1 h1 RW BIN
vm_high_level_count_en_vin5 = h90002638 16 1 h1 RW BIN
vm_low_level_count_en_vin5 = h90002638 17 1 h1 RW BIN
vm_high_level_count_en_vin6 = h90002638 18 1 h1 RW BIN
vm_low_level_count_en_vin6 = h90002638 19 1 h1 RW BIN
vm_high_level_count_en_vin7 = h90002638 20 1 h1 RW BIN
vm_low_level_count_en_vin7 = h90002638 21 1 h1 RW BIN
vm_high_level_count_en_vin8 = h90002638 22 1 h1 RW BIN
vm_low_level_count_en_vin8 = h90002638 23 1 h1 RW BIN
magic_number = h90002638 24 4 h5 RW HEX
parity = h90002638 28 4 h5 RW HEX



; REGISTER vm_count_en2_reg Address h9000263c
_vm_count_en2_reg = 2415928892 0 32 b01010101000000001111111111111111 RW
vm_count_en2 = h9000263c 0 32 h5500ffff RW HEX
; Desc_vm_count_en2 measurement timeout          [15:0]            Defines the waiting time from RUN activation until RDY is received – if the timeout period expires an error flag iss                                                                                 raised.s                                                                                The timeout counter resolution is the pd clock period.s
vm_high_level_count_en_vin9 = h9000263c 0 1 h1 RW BIN
vm_low_level_count_en_vin9 = h9000263c 1 1 h1 RW BIN
vm_high_level_count_en_vin10 = h9000263c 2 1 h1 RW BIN
vm_low_level_count_en_vin10 = h9000263c 3 1 h1 RW BIN
vm_high_level_count_en_vin11 = h9000263c 4 1 h1 RW BIN
vm_low_level_count_en_vin11 = h9000263c 5 1 h1 RW BIN
vm_high_level_count_en_vin12 = h9000263c 6 1 h1 RW BIN
vm_low_level_count_en_vin12 = h9000263c 7 1 h1 RW BIN
vm_high_level_count_en_vin13 = h9000263c 8 1 h1 RW BIN
vm_low_level_count_en_vin13 = h9000263c 9 1 h1 RW BIN
vm_high_level_count_en_vin14 = h9000263c 10 1 h1 RW BIN
vm_low_level_count_en_vin14 = h9000263c 11 1 h1 RW BIN
vm_high_level_count_en_vin15 = h9000263c 12 1 h1 RW BIN
vm_low_level_count_en_vin15 = h9000263c 13 1 h1 RW BIN
vm_high_level_count_en_internal = h9000263c 14 1 h1 RW BIN
vm_low_level_count_en_internal = h9000263c 15 1 h1 RW BIN
magic_number = h9000263c 24 4 h5 RW HEX
parity = h9000263c 28 4 h5 RW HEX



; REGISTER vm_self_test_measurement_en_register Address h90002640
_vm_self_test_measurement_en_register = 2415928896 0 32 b00110101000000000000000000000110 RW
vm_self_test_measurement_en = h90002640 0 32 h35000006 RW HEX
; Desc_vm_self_test_measurement_en each bit set in this field will invert the corresponding bit in the vm_data to cause intentional error
vm_self_test_vin0_voltage_measurement_en = h90002640 0 1 h0 RW BIN
vm_self_test_vin1_voltage_measurement_en = h90002640 1 1 h0 RW BIN
vm_self_test_vin2_sel0_voltage_measurement_en = h90002640 2 1 h1 RW BIN
vm_self_test_vin2_sel1_voltage_measurement_en = h90002640 3 1 h0 RW BIN
vm_self_test_vin2_sel2_voltage_measurement_en = h90002640 4 1 h0 RW BIN
vm_self_test_vin2_sel3_voltage_measurement_en = h90002640 5 1 h0 RW BIN
vm_self_test_vin3_voltage_measurement_en = h90002640 6 1 h0 RW BIN
vm_self_test_vin4_voltage_measurement_en = h90002640 7 1 h0 RW BIN
vm_self_test_vin5_voltage_measurement_en = h90002640 8 1 h0 RW BIN
vm_self_test_vin6_voltage_measurement_en = h90002640 9 1 h0 RW BIN
vm_self_test_vin7_voltage_measurement_en = h90002640 10 1 h0 RW BIN
vm_self_test_vin8_voltage_measurement_en = h90002640 11 1 h0 RW BIN
vm_self_test_vin9_voltage_measurement_en = h90002640 12 1 h0 RW BIN
vm_self_test_vin10_voltage_measurement_en = h90002640 13 1 h0 RW BIN
vm_self_test_vin11_voltage_measurement_en = h90002640 14 1 h0 RW BIN
vm_self_test_vin12_voltage_measurement_en = h90002640 15 1 h0 RW BIN
vm_self_test_vin13_voltage_measurement_en = h90002640 16 1 h0 RW BIN
vm_self_test_vin14_voltage_measurement_en = h90002640 17 1 h0 RW BIN
vm_self_test_vin15_voltage_measurement_en = h90002640 18 1 h0 RW BIN
vm_self_test_internal_voltage_measurement_en = h90002640 19 1 h0 RW BIN
magic_number = h90002640 24 4 h5 RW HEX
parity = h90002640 28 4 h3 RW HEX



; REGISTER vm_functional_measurement_en_register Address h90002644
_vm_functional_measurement_en_register = 2415928900 0 32 b00110101000000000000000000000110 RW
vm_functional_measurement_en = h90002644 0 32 h35000006 RW HEX
; Desc_vm_functional_measurement_en frequency  converted value from the process detector. 
vm_functional_vin0_voltage_measurement_en = h90002644 0 1 h1 RW BIN
vm_functional_vin1_voltage_measurement_en = h90002644 1 1 h1 RW BIN
vm_functional_vin2_sel0_voltage_measurement_en = h90002644 2 1 h1 RW BIN
vm_functional_vin2_sel1_voltage_measurement_en = h90002644 3 1 h0 RW BIN
vm_functional_vin2_sel2_voltage_measurement_en = h90002644 4 1 h0 RW BIN
vm_functional_vin2_sel3_voltage_measurement_en = h90002644 5 1 h0 RW BIN
vm_functional_vin3_voltage_measurement_en = h90002644 6 1 h0 RW BIN
vm_functional_vin4_voltage_measurement_en = h90002644 7 1 h0 RW BIN
vm_functional_vin5_voltage_measurement_en = h90002644 8 1 h0 RW BIN
vm_functional_vin6_voltage_measurement_en = h90002644 9 1 h0 RW BIN
vm_functional_vin7_voltage_measurement_en = h90002644 10 1 h0 RW BIN
vm_functional_vin8_voltage_measurement_en = h90002644 11 1 h0 RW BIN
vm_functional_vin9_voltage_measurement_en = h90002644 12 1 h0 RW BIN
vm_functional_vin10_voltage_measurement_en = h90002644 13 1 h0 RW BIN
vm_functional_vin11_voltage_measurement_en = h90002644 14 1 h0 RW BIN
vm_functional_vin12_voltage_measurement_en = h90002644 15 1 h0 RW BIN
vm_functional_vin13_voltage_measurement_en = h90002644 16 1 h0 RW BIN
vm_functional_vin14_voltage_measurement_en = h90002644 17 1 h0 RW BIN
vm_functional_vin15_voltage_measurement_en = h90002644 18 1 h0 RW BIN
vfunctional_internal_voltage_measurement_en = h90002644 19 1 h0 RW BIN
magic_number = h90002644 24 4 h5 RW HEX
parity = h90002644 28 4 h3 RW HEX



; REGISTER vm_measurement_switch_time_register Address h90002648
_vm_measurement_switch_time_register = 2415928904 0 32 b00010101000000000000000001000000 RW
vm_measurement_switch_time = h90002648 0 32 h15000040 RW HEX
; Desc_vm_measurement_switch_time status register value - report the cause of analog fault 
vm_stabilization_time = h90002648 0 8 h40 RW HEX
magic_number = h90002648 24 4 h5 RW HEX
parity = h90002648 28 4 h1 RW HEX



; REGISTER vm_cmd_width_register Address h9000264c
_vm_cmd_width_register = 2415928908 0 32 b01010101000000000000000000000000 RW
vm_cmd_width = h9000264c 0 32 h55000000 RW HEX
; Desc_vm_cmd_width pd_run_width                       [1:0]            Defines the width of RUN pulse.s                                                            2'h0 - RUN PULSE width = 1s                                                            2'h1 - RUN PULSE width = 2s                                                            2'h2 - RUN PULSE width = 3s                                                            2'h3 - RUN PULSE width = 4
vm_run_width_pms = h9000264c 0 2 h0 RW HEX
vm_cload_width_pms = h9000264c 2 2 h0 RW HEX
Magic_number = h9000264c 24 4 h5 RW HEX
Parity = h9000264c 28 4 h5 RW HEX



; REGISTER vmu_wait_oper_register Address h90002660
_vmu_wait_oper_register = 2415928928 0 32 b11010101000000000000000000001000 RW
vmu_wait_oper = h90002660 0 32 hd5000008 RW HEX
; Desc_vmu_wait_oper measurement data ready to be read
vmu_wait_oper_pms = h90002660 0 24 h8 RW HEX
Magic_number = h90002660 24 4 h5 RW HEX
Parity = h90002660 28 4 hd RW HEX



; REGISTER vmref_control_register Address h90002664
_vmref_control_register = 2415928932 0 32 b01010101000000000000000000000000 RW
vmref_control_reg = h90002664 0 32 h55000000 RW HEX
; Desc_vmref_control_reg pd reported a analog fault
enable = h90002664 0 1 h0 RW BIN
iout_trim = h90002664 1 3 h0 RW HEX
vsrc_sel = h90002664 4 1 h0 RW BIN
vmref_trim = h90002664 5 2 h0 RW HEX
abt_sel = h90002664 7 2 h0 RW HEX
iout_enable = h90002664 9 1 h0 RW BIN
spare = h90002664 10 4 h0 RW HEX
magic_number = h90002664 24 4 h5 RW HEX
parity = h90002664 28 4 h5 RW HEX



; REGISTER K3_store_register Address h90002668
_K3_store_register = 2415928936 0 32 b01010101000000000000000000000000 RW
K3_store = h90002668 0 32 h55000000 RW HEX
; Desc_K3_store enable the ring oscilator 
K3 = h90002668 0 24 h0 RW HEX
magic_number = h90002668 24 4 h5 RW HEX
parity = h90002668 28 4 h5 RW HEX



; REGISTER N0_store_register Address h9000266c
_N0_store_register = 2415928940 0 32 b01010101000000000000000000000000 RW
N0_store = h9000266c 0 32 h55000000 RW HEX
; Desc_N0_store pd data output value sampled at rdy
N0 = h9000266c 0 24 h0 RW HEX
magic_number = h9000266c 24 4 h5 RW HEX
parity = h9000266c 28 4 h5 RW HEX



; REGISTER vm_error_generation_register Address h9000274c
_vm_error_generation_register = 2415929164 0 32 b01010101000000000000000000000000 RW
vm_error_generation = h9000274c 0 32 h55000000 RW HEX
; Desc_vm_error_generation Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin2_sel3    [23:20]svm_initial_seq_id_vin2_sel2    [20:16]svm_initial_seq_id_vin2_sel1    [15:12]svm_initial_seq_id_vin2_sel0    [11:8]svm_initial_seq_id_vin1    [7:4]svm_initial_seq_id_vin0    [3:0]
vm_data_error_gen = h9000274c 0 12 h0 RW HEX
vm_rdy_error_gen = h9000274c 23 1 h0 RW BIN
magic_number = h9000274c 24 4 h5 RW HEX
parity = h9000274c 28 4 h5 RW HEX



; REGISTER initial_seq_id_register Address h90002800
_initial_seq_id_register = 2415929344 0 32 b01010101000000000000000000000000 RW
ts_initial_seq_id = h90002800 0 32 h55000000 RW HEX
; Desc_ts_initial_seq_id Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin8    [23:20]svm_initial_seq_id_vin7    [20:16]svm_initial_seq_id_vin6    [15:12]svm_initial_seq_id_vin5    [11:8]svm_initial_seq_id_vin4    [7:4]svm_initial_seq_id_vin3    [3:0]
ts_initial_seq_id_pms = h90002800 0 4 h0 RW HEX
magic_number = h90002800 24 4 h5 RW HEX
parity = h90002800 28 4 h5 RW HEX



; REGISTER ts_control_register Address h90002804
_ts_control_register = 2415929348 0 32 b00010101000000000000000000000100 RW
ts_control = h90002804 0 32 h15000004 RW HEX
; Desc_ts_control Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin14    [23:20]svm_initial_seq_id_vin13    [20:16]svm_initial_seq_id_vin12    [15:12]svm_initial_seq_id_vin11    [11:8]svm_initial_seq_id_vin10    [7:4]svm_initial_seq_id_vin9    [3:0]
ts_pd = h90002804 0 1 h0 RW BIN
ts_bypass_mode = h90002804 1 1 h0 RW BIN
ts_single_mode = h90002804 2 1 h1 RW BIN
ts_master = h90002804 3 1 h0 RW BIN
ts_operation_mode = h90002804 4 1 h0 RW BIN
magic_number = h90002804 24 4 h5 RW HEX
parity = h90002804 28 4 h1 RW HEX



; REGISTER ts_bypass_register Address h90002808
_ts_bypass_register = 2415929352 0 32 b01010101000000000011000000000011 RW
ts_bypass_control = h90002808 0 32 h55003003 RW HEX
; Desc_ts_bypass_control Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]sReserved    [23:8]svm_initial_seq_id_vin_internal    [7:4]svm_initial_seq_id_vin15    [3:0]
ts0_pd = h90002808 0 1 h1 RW BIN
ts0_rstn = h90002808 1 1 h1 RW BIN
ts0_run = h90002808 2 1 h0 RW BIN
ts0_cload = h90002808 3 1 h0 RW BIN
ts0_an_en = h90002808 4 1 h0 RW BIN
ts0_an_sel = h90002808 5 4 h0 RW HEX
ts1_pd = h90002808 12 1 h1 RW BIN
ts1_rstn = h90002808 13 1 h1 RW BIN
ts1_run = h90002808 14 1 h0 RW BIN
ts1_cload = h90002808 15 1 h0 RW BIN
ts1_an_en = h90002808 16 1 h0 RW BIN
ts1_an_sel = h90002808 17 4 h0 RW HEX
Magic_number = h90002808 24 4 h5 RW HEX
Parity = h90002808 28 4 h5 RW HEX



; REGISTER ts_cfg1_register Address h90002810
_ts_cfg1_register = 2415929360 0 32 b01010101000000000000000000000000 RW
ts_cfg1 = h90002810 0 32 h55000000 RW HEX
; Desc_ts_cfg1 controls the voltage monitor functionalitysfield descriptionspd                       [0]                    Power down –s                                                   1’b0 – vm is actives                                                   1’b1 – vm is forced to power-downsvm_bypass mode     [1]           Selects bypass modes                                                  1’b0 – the voltage_monitor is activated in automatic mode. The vm are controlled according to predefined sequencess                                                  1’b1 – the voltage_monitor is activated in bypass modes                                                  The vm are controlled according to the control signals written by SW to Bypass Control register see para. ‎11.3svm_single_mode      [2]           vm_single run modes                                                 1'b0 - the voltage monitor run in contineous mode -  run command is active until disabled - effective only in bypass modes                                                 1'b1 - the voltage monitor run in single mode - run command per measurementsReserved           [23:3]ssMagic_number  [27:24]   Default value – identical for all registerssParity                 [31:28]   Parity calculation on bits[27:0] 
vm_cfg1_sec_mode = h90002810 0 2 h0 RW HEX
vm_cfg1_pri_mode = h90002810 2 2 h0 RW HEX
vm_cfg1_ser_mode = h90002810 4 1 h0 RW BIN
vm_cfg1_resolution = h90002810 5 3 h0 RW HEX
magic_number = h90002810 24 4 h5 RW HEX
parity = h90002810 28 4 h5 RW HEX



; REGISTER ts_clk_width_reg Address h90002820
_ts_clk_width_reg = 2415929376 0 32 b01010101000000010100000000010100 RW
ts_clk_width = h90002820 0 32 h55014014 RW HEX
; Desc_ts_clk_width controls thevm activation while in bypass modesvm_pd                       [0]                     vm power down control bit while in bypass modesvm_rstn                    [1]                     vm reset control bit while in bypass mode svm_run                     [2]                     vm run control bit while in bypass modesvm_cload                 [3]                     vm load configuration bit while in bypass modesvm_an_sel              [7:4]                  vm analog select control bits while in bypass modesReserved                 [23:8]ssMagic_number     [27:24]              Default value – identical for all registerssParity                      [31:28]              Parity calculation on bits[27:0] 
ts_clk_up_width = h90002820 0 10 h14 RW HEX
ts_clk_down_width = h90002820 12 10 h14 RW HEX
Magic_number = h90002820 24 4 h5 RW HEX
Parity = h90002820 28 4 h5 RW HEX



; REGISTER ts_analog_pu_clock_num_reg Address h90002824
_ts_analog_pu_clock_num_reg = 2415929380 0 32 b11010101000000000000000001111111 RW
ts_analog_pu_clock_num = h90002824 0 32 hd500007f RW HEX
; Desc_ts_analog_pu_clock_num defines the configuration register1 of the voltage monitor svm_cf1_sec_mode      [1:0]          secondary_mode s                                                               for pri_mode = 2'b00 should be set to 2'b00s                                                               for pri_mode = 2'b01 should be set to 2'b00s                                                               for pri_mode = 2'b10s                                                                        2'b00 - signature direct mode                                      = 14'h30BCs                                                                        2'b01 - signature inverted direct mode                   = 14'h0F43s                                                                        2'b10 - signature conversion mode                           = 14'h30BCs                                                                        2'b10 - signature inverted conversion mode         = 14'h0F43svm_cf1_pri_mode      [3:2]          primary_modes                                                               2'b00 - voltage measurement modes                                                               2'b01 - read status modes                                                               2'b10 - read signature modes                                                               2'b11 - undefinedsvm_cf1_ser_mode     [4]               defines the output formats                                                                1'b0 - parallel mode s                                                                1'b1 - serial mode - MSb firstsvm_cfg1_resolution  [6:5]            defines the voltage monitor data out resolutions                                                                2'b00 - 14-bit resolutions                                                                2'b01 - 12-bit resolutions                                                                2'b10 - 10-bit resolutions                                                                2'b11 - 8-bit resolutionsreserved                         [23:7]sMagic_number             [27:24]              Default value – identical for all registerssParity                             [31:28]              Parity calculation on bits[27:0] 
ts_analog_pu_clock_num_pms = h90002824 0 8 h7f RW HEX
Magic_number = h90002824 24 4 h5 RW HEX
Parity = h90002824 28 4 hd RW HEX



; REGISTER ts_measurement_period_register Address h90002828
_ts_measurement_period_register = 2415929384 0 32 b01010101000000000000000000000000 RW
ts_measurement_period = h90002828 0 32 h55000000 RW HEX
; Desc_ts_measurement_period defines the configuration register2 of the voltage monitorsinput_select             [4:0]                  defines the input on which the measurement will be performeds                                                                   5'b00000 - vin0 will be measureds                                                                   5'b00001 - vin1 will be measuredss                                                                   5'b01111 - vin15 will be measureds                                                                   5'1xxxxx - internal voltage (VDD & VSS) will be  measuredsreserved                    [6:5]sreference select     [7]                       selects which reference voltage will be used s                                                                    1'b0 - internal references                                                                    1'b1 - external reference connected to an_io[0]sreserved                     [23:8]sMagic_number         [27:24]              Default value – identical for all registerssParity                             [31:28]              Parity calculation on bits[27:0] 
ts_measurement_period_pms = h90002828 0 23 h0 RW HEX
ts_use_mpr = h90002828 23 1 h0 RW BIN
magic_number = h90002828 24 4 h5 RW HEX
parity = h90002828 28 4 h5 RW HEX



; REGISTER ts_measurement_timeout_register Address h9000282c
_ts_measurement_timeout_register = 2415929388 0 32 b01100101000000000010000100000000 RW
ts_measurement_timeout = h9000282c 0 32 h65002100 RW HEX
; Desc_ts_measurement_timeout defines the voltage_monitor clocksvm_clk_up_width        [9:0]  - defines the length of high level of vm_clksreserve                          [11:10]svm_clk_down_width   [21:12]  - defines the length of low level of vm_clksreserve                          [23:22]sMagic_number             [27:24]       Default value – identical for all registerssParity                             [31:28]        Parity calculation on bits[27:0] 
ts_measurement_timeout_pms = h9000282c 0 16 h2100 RW HEX
magic_number = h9000282c 24 4 h5 RW HEX
parity = h9000282c 28 4 h6 RW HEX



; REGISTER ts_short_self_test_limit_1_register Address h90002830
_ts_short_self_test_limit_1_register = 2415929392 0 32 b11000101010000000000110100000000 RW
ts_short_self_test_limit_1 = h90002830 0 32 hc5400d00 RW HEX
; Desc_ts_short_self_test_limit_1 defines the wait period for analog power-ypsvm_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 
ts_short_self_test_high_limit1 = h90002830 0 12 hd00 RW HEX
ts_short_self_test_low_limit1 = h90002830 12 12 h400 RW HEX
magic_number = h90002830 24 4 h5 RW HEX
parity = h90002830 28 4 hc RW HEX



; REGISTER ts_short_self_test_limit_2_register Address h90002834
_ts_short_self_test_limit_2_register = 2415929396 0 32 b11000101010000000000110100000000 RW
ts_short_self_test_limit_2 = h90002834 0 32 hc5400d00 RW HEX
; Desc_ts_short_self_test_limit_2 time gap between adjacent measuremenvmsmeasurement period     [22:0]              Defines number of clocks periods between voltage measurement – the actual period depend on the selected s                                                                          clock frequencysuse_mpr                               [23]                 Use measurement period register s                                                                          1’b0 – measuremenvm will be done at the maximum possible rate – once one measurement is done (on both vm) and values are sampled, a new measurement will be initiateds                                                                          1’b1 – measurement will be done at the rate specified by the measurement period fields                                                                          For example - measurement period = 23’h30d4 means 12500 / 6.25Mhz = 2 msecsMagic_number                  [27:24]             Default value – identical for all registerssParity                                     [31:28]           Parity calculation on bits[27:0] 
ts_short_self_test_high_limit2 = h90002834 0 12 hd00 RW HEX
ts_short_self_test_low_limit2 = h90002834 12 12 h400 RW HEX
magic_number = h90002834 24 4 h5 RW HEX
parity = h90002834 28 4 hc RW HEX



; REGISTER ts_short_self_test_limit_3_register Address h90002838
_ts_short_self_test_limit_3_register = 2415929400 0 32 b11000101010000000000110100000000 RW
ts_short_self_test_limit_3 = h90002838 0 32 hc5400d00 RW HEX
; Desc_ts_short_self_test_limit_3 measurement timeout          [15:0]            Defines the waiting time from RUN activation until RDY is received – if the timeout period expires an error flag iss                                                                                 raised.s                                                                                The timeout counter resolution is the vm clock period.sReserved                                      [23:16]sMagic_number                          [27:24]         Default value – identical for all registerssParity                                             [31:28]         Parity calculation on bits[27:0] 
ts_short_self_test_high_limit3 = h90002838 0 12 hd00 RW HEX
ts_short_self_test_low_limit3 = h90002838 12 12 h400 RW HEX
magic_number = h90002838 24 4 h5 RW HEX
parity = h90002838 28 4 hc RW HEX



; REGISTER ts_short_self_test_forced_value1_register Address h9000283c
_ts_short_self_test_forced_value1_register = 2415929404 0 32 b00010101110101010100110111001001 RW
ts_short_self_test_forced_value1 = h9000283c 0 32 h15d54dc9 RW HEX
; Desc_ts_short_self_test_forced_value1 short_self_test_high_limit1       [13:0]                  When short self-test is selected this value is used as high_limit1sreserved                                         [23:14]sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 
ts_short_self_test_forced_ts0_value1 = h9000283c 0 12 hdc9 RW HEX
ts_short_self_test_forced_ts1_value1 = h9000283c 12 12 hd54 RW HEX
magic_number = h9000283c 24 4 h5 RW HEX
parity = h9000283c 28 4 h1 RW HEX



; REGISTER ts_short_self_test_forced_value2_register Address h90002840
_ts_short_self_test_forced_value2_register = 2415929408 0 32 b10100101001110111000001110000100 RW
ts_short_self_test_forced_value2 = h90002840 0 32 ha53b8384 RW HEX
; Desc_ts_short_self_test_forced_value2 short_self_test_low_limit1       [13:0]                  When short self-test is selected this value is used as low_limit1sreserved                                         [23:14]sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 
ts_short_self_test_forced_ts0_value2 = h90002840 0 12 h384 RW HEX
ts_short_self_test_forced_ts1_value2 = h90002840 12 12 h3b8 RW HEX
magic_number = h90002840 24 4 h5 RW HEX
parity = h90002840 28 4 ha RW HEX



; REGISTER ts_short_self_test_forced_value3_register Address h90002844
_ts_short_self_test_forced_value3_register = 2415929412 0 32 b10100101100100010110101101101100 RW
ts_short_self_test_forced_value3 = h90002844 0 32 ha5916b6c RW HEX
; Desc_ts_short_self_test_forced_value3 short_self_test_high_limit2s         [13:0]                When short self-test is selected this value is used as high_limit2sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
ts_short_self_test_forced_ts0_value3 = h90002844 0 12 hb6c RW HEX
ts_short_self_test_forced_ts1_value3 = h90002844 12 12 h916 RW HEX
magic_number = h90002844 24 4 h5 RW HEX
parity = h90002844 28 4 ha RW HEX



; REGISTER ts_short_self_test_1_allowed_diff_register Address h90002848
_ts_short_self_test_1_allowed_diff_register = 2415929416 0 32 b01010101000100000000000100000000 RW
ts_short_self_test_1_allowed_diff = h90002848 0 32 h55100100 RW HEX
; Desc_ts_short_self_test_1_allowed_diff short_self_test_low_limit2s         [13:0]                When short self-test is selected this value is used as low_limit2sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
ts_short_self_test1_allowed_diff1 = h90002848 0 12 h100 RW HEX
ts_short_self_test1_allowed_diff2 = h90002848 12 12 h100 RW HEX
magic_number = h90002848 24 4 h5 RW HEX
parity = h90002848 28 4 h5 RW HEX



; REGISTER ts_short_self_test_2_allowed_diff_register Address h9000284c
_ts_short_self_test_2_allowed_diff_register = 2415929420 0 32 b01010101000100000000000100000000 RW
ts_short_self_test_2_allowed_diff = h9000284c 0 32 h55100100 RW HEX
; Desc_ts_short_self_test_2_allowed_diff short_self_test_high_limit3s         [13:0]                When short self-test is selected this value is used as high_limit3sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
ts_short_self_test2_allowed_diff1 = h9000284c 0 12 h100 RW HEX
ts_short_self_test2_allowed_diff2 = h9000284c 12 12 h100 RW HEX
magic_number = h9000284c 24 4 h5 RW HEX
parity = h9000284c 28 4 h5 RW HEX



; REGISTER ts_short_self_test_direct_signature_low_limit_value_register Address h90002850
_ts_short_self_test_direct_signature_low_limit_value_register = 2415929424 0 32 b10110101010011000000101100101111 RW
ts_short_self_test_direct_signature_low_limit_value = h90002850 0 32 hb54c0b2f RW HEX
; Desc_ts_short_self_test_direct_signature_low_limit_value short_self_test_low_limit3s         [13:0]                When short self-test is selected this value is used as low_limit3sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
ts_short_self_test_DS_low_limit_high_value = h90002850 0 12 hb2f RW HEX
ts_short_self_test_DS_low_limit_low_value = h90002850 12 12 h4c0 RW HEX
magic_number = h90002850 24 4 h5 RW HEX
parity = h90002850 28 4 hb RW HEX



; REGISTER ts_short_self_test_direct_signature_high_limit_value_register Address h90002854
_ts_short_self_test_direct_signature_high_limit_value_register = 2415929428 0 32 b00110101010011010000101101000000 RW
ts_short_self_test_direct_signature_high_limit_value = h90002854 0 32 h354d0b40 RW HEX
; Desc_ts_short_self_test_direct_signature_high_limit_value short_self_test_forced_vm_value1             [13:0]               When short self-test is selected this value is used for comparison against above defined limitssreserved                                                                 [23:14] sMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
ts_short_self_test_DS_high_limit_high_value = h90002854 0 12 hb40 RW HEX
ts_short_self_test_DS_high_limit_low_value = h90002854 12 12 h4d0 RW HEX
magic_number = h90002854 24 4 h5 RW HEX
parity = h90002854 28 4 h3 RW HEX



; REGISTER ts_short_self_test_expected_comparators_results1_register Address h90002858
_ts_short_self_test_expected_comparators_results1_register = 2415929432 0 32 b01000101000001010100000101000101 RW
ts_short_self_test_expected_comparators_results1 = h90002858 0 32 h45054145 RW HEX
; Desc_ts_short_self_test_expected_comparators_results1 short_self_test_forced_vm_value3             [13:0]               When short self-test is selected this value is used for comparison against above defined limitssreserved                                                   [23:14]sMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
ts0_high_comp_step1 = h90002858 0 1 h1 RW BIN
ts0_low_comp_step1 = h90002858 1 1 h0 RW BIN
ts1_high_comp_step1 = h90002858 2 1 h1 RW BIN
ts1_low_comp_step1 = h90002858 3 1 h0 RW BIN
diff_comp_step1 = h90002858 4 1 h0 RW BIN
ts0_high_comp_step2 = h90002858 5 1 h0 RW BIN
ts0_low_comp_step2 = h90002858 6 1 h1 RW BIN
ts1_high_comp_step2 = h90002858 7 1 h0 RW BIN
ts1_low_comp_step2 = h90002858 8 1 h1 RW BIN
diff_comp_step2 = h90002858 9 1 h0 RW BIN
ts0_high_comp_step3 = h90002858 10 1 h0 RW BIN
ts0_low_comp_step3 = h90002858 11 1 h0 RW BIN
ts1_high_comp_step3 = h90002858 12 1 h0 RW BIN
ts1_low_comp_step3 = h90002858 13 1 h0 RW BIN
diff_comp_step3 = h90002858 14 1 h1 RW BIN
ts0_high_comp_step4 = h90002858 15 1 h0 RW BIN
ts0_low_comp_step4 = h90002858 16 1 h1 RW BIN
ts1_high_comp_step4 = h90002858 17 1 h0 RW BIN
ts1_low_comp_step4 = h90002858 18 1 h1 RW BIN
diff_comp_step4 = h90002858 19 1 h0 RW BIN
Magic_number = h90002858 24 4 h5 RW HEX
Parity = h90002858 28 4 h4 RW HEX



; REGISTER ts_short_self_test_expected_comparators_results2_register Address h9000285c
_ts_short_self_test_expected_comparators_results2_register = 2415929436 0 32 b01010101000001010001010101000101 RW
ts_short_self_test_expected_comparators_results2 = h9000285c 0 32 h55051545 RW HEX
; Desc_ts_short_self_test_expected_comparators_results2 short_self_test_forced_vm_value1             [13:0]               When short self-test is selected this value is used for comparison against above defined limitssreserved                                                   [23:14] sMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
ts0_high_comp_step5 = h9000285c 0 1 h1 RW BIN
ts0_low_comp_step5 = h9000285c 1 1 h0 RW BIN
ts1_high_comp_step5 = h9000285c 2 1 h1 RW BIN
ts1_low_comp_step5 = h9000285c 3 1 h0 RW BIN
diff_comp_step5 = h9000285c 4 1 h0 RW BIN
ts0_high_comp_step6 = h9000285c 5 1 h0 RW BIN
ts0_low_comp_step6 = h9000285c 6 1 h1 RW BIN
ts1_high_comp_step6 = h9000285c 7 1 h0 RW BIN
ts1_low_comp_step6 = h9000285c 8 1 h1 RW BIN
diff_comp_step6 = h9000285c 9 1 h0 RW BIN
ts0_high_comp_step7 = h9000285c 10 1 h1 RW BIN
ts0_low_comp_step7 = h9000285c 11 1 h0 RW BIN
ts1_high_comp_step7 = h9000285c 12 1 h1 RW BIN
ts1_low_comp_step7 = h9000285c 13 1 h0 RW BIN
diff_comp_step7 = h9000285c 14 1 h0 RW BIN
ts0_high_comp_step8 = h9000285c 15 1 h0 RW BIN
ts0_low_comp_step8 = h9000285c 16 1 h1 RW BIN
ts1_high_comp_step8 = h9000285c 17 1 h0 RW BIN
ts1_low_comp_step8 = h9000285c 18 1 h1 RW BIN
diff_comp_step8 = h9000285c 19 1 h0 RW BIN
Magic_number = h9000285c 24 4 h5 RW HEX
Parity = h9000285c 28 4 h5 RW HEX



; REGISTER ts_functional_temperature_sensor_0_limit_register Address h90002860
_ts_functional_temperature_sensor_0_limit_register = 2415929440 0 32 b01010101000000000000000000000000 RW
ts_functional_temperature_sensor_0_limit = h90002860 0 32 h55000000 RW HEX
; Desc_ts_functional_temperature_sensor_0_limit short_self_test_DS_low_limit_high_value                [13:0]                 When short self-test is selected this value is used as low_limit against the high value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
ts_func_ts0_high_limit = h90002860 0 12 h0 RW HEX
ts_func_ts0_low_limit = h90002860 12 12 h0 RW HEX
Magic_number = h90002860 24 4 h5 RW HEX
Parity = h90002860 28 4 h5 RW HEX



; REGISTER ts_functional_temperature_sensor_1_limit_register Address h90002864
_ts_functional_temperature_sensor_1_limit_register = 2415929444 0 32 b01010101000000000000000000000000 RW
ts_functional_temperature_sensor_1_limit = h90002864 0 32 h55000000 RW HEX
; Desc_ts_functional_temperature_sensor_1_limit short_self_test_DS_high_limit_high_value               [13:0]                 When short self-test is selected this value is used as high_limit against the high value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                 [31:28]               Parity calculation on bits[27:0] 
ts_func_ts1_high_limit = h90002864 0 12 h0 RW HEX
ts_func_ts1_low_limit = h90002864 12 12 h0 RW HEX
Magic_number = h90002864 24 4 h5 RW HEX
Parity = h90002864 28 4 h5 RW HEX



; REGISTER ts_functional_allowed_diff_register Address h90002868
_ts_functional_allowed_diff_register = 2415929448 0 32 b01010101000000000000000000000000 RW
ts_functional_allowed_diff = h90002868 0 32 h55000000 RW HEX
; Desc_ts_functional_allowed_diff short_self_test_DS_low_limit_low_value                [13:0]                 When short self-test is selected this value is used as low_limit against the low value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
ts_func_allowed_diff = h90002868 0 12 h0 RW HEX
Magic_number = h90002868 24 4 h5 RW HEX
Parity = h90002868 28 4 h5 RW HEX



; REGISTER temperature_sensor_error_count_limit_register Address h90002870
_temperature_sensor_error_count_limit_register = 2415929456 0 32 b01000101000000000000000000000001 RW
temperature_sensor_error_count_limit = h90002870 0 32 h45000001 RW HEX
; Desc_temperature_sensor_error_count_limit short_self_test_DS_high_limit_high_value               [13:0]                 When short self-test is selected this value is used as high_limit against the low value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                 [31:28]               Parity calculation on bits[27:0] 
error_limit = h90002870 0 8 h1 RW HEX
Magic_number = h90002870 24 4 h5 RW HEX
Parity = h90002870 28 4 h4 RW HEX



; REGISTER ts_detect_count_en_reg Address h90002874
_ts_detect_count_en_reg = 2415929460 0 32 b10010101000000000000000000111111 RW
ts_detect_count_en = h90002874 0 32 h9500003f RW HEX
; Desc_ts_detect_count_en vm_high_comp              0                           vm comparison expected result  - step1s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               1                           vm comparison expected result - step1s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comps             2                           vm comparison expected result - step2s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               3                           vm comparison expected result - step2s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comp              4                           vm comparison expected result  - step3s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               5                           vm comparison expected result - step3s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comps             6                           vm comparison expected result - step4s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               7                           vm comparison expected resultv - step4s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comp              8                           vm comparison expected result  - step5s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               9                           vm comparison expected result - step5s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comps             10                           vm comparison expected result - step6s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               11                           vm comparison expected result - step6s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comp              12                           vm comparison expected result  - step7s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               13                           vm comparison expected result - step7s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comps             14                           vm comparison expected result - step8s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               15                           vm comparison expected result - step8s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsReserved                         [23:16]sMagic_number              [27:24]               Default value – identical for all registerssParity                                 [31:28]               Parity calculation on bits[27:0] 
ts0_high_level_comparator_en = h90002874 0 1 h1 RW BIN
ts0_low_level_comparator_en = h90002874 1 1 h1 RW BIN
ts1_high_level_comparator_en = h90002874 2 1 h1 RW BIN
ts1_low_level_comparator_en = h90002874 3 1 h1 RW BIN
diff_comparator_en = h90002874 4 1 h1 RW BIN
register_parity_en = h90002874 5 1 h1 RW BIN
ts0_high_level_count_en = h90002874 12 1 h0 RW BIN
ts0_low_level_count_en = h90002874 13 1 h0 RW BIN
ts1_high_level_count_en = h90002874 14 1 h0 RW BIN
ts1_low_level_count_en = h90002874 15 1 h0 RW BIN
diff_comparator_count_en = h90002874 16 1 h0 RW BIN
Magic_number = h90002874 24 4 h5 RW HEX
Parity = h90002874 28 4 h9 RW HEX



; REGISTER ts_cmd_width_register Address h90002878
_ts_cmd_width_register = 2415929464 0 32 b01010101000000000000000000000000 RW
ts_cmd_width = h90002878 0 32 h55000000 RW HEX
; Desc_ts_cmd_width func_vm_high_limit_vin0                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
ts_run_width_pms = h90002878 0 2 h0 RW HEX
ts_cload_width_pms = h90002878 2 2 h0 RW HEX
Magic_number = h90002878 24 4 h5 RW HEX
Parity = h90002878 28 4 h5 RW HEX



; REGISTER ts_wait_oper_register Address h90002880
_ts_wait_oper_register = 2415929472 0 32 b11010101000000000000000000001000 RW
ts_wait_oper = h90002880 0 32 hd5000008 RW HEX
; Desc_ts_wait_oper func_vm_low_limit_vin0                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
tsu_wait_oper_pms = h90002880 0 24 h8 RW HEX
Magic_number = h90002880 24 4 h5 RW HEX
Parity = h90002880 28 4 hd RW HEX



; REGISTER ts0_A_calib_store_register Address h90002884
_ts0_A_calib_store_register = 2415929476 0 32 b01010101000000000000000000000000 RW
ts0_A_calib_store = h90002884 0 32 h55000000 RW HEX
; Desc_ts0_A_calib_store func_vm_high_limit_vin1                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
ts0_A_calib = h90002884 0 24 h0 RW HEX
magic_number = h90002884 24 4 h5 RW HEX
parity = h90002884 28 4 h5 RW HEX



; REGISTER ts0_B_calib_store_register Address h90002888
_ts0_B_calib_store_register = 2415929480 0 32 b01010101000000000000000000000000 RW
ts0_B_calib_store = h90002888 0 32 h55000000 RW HEX
; Desc_ts0_B_calib_store func_vm_low_limit_vin1                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
ts0_B_calib = h90002888 0 24 h0 RW HEX
magic_number = h90002888 24 4 h5 RW HEX
parity = h90002888 28 4 h5 RW HEX



; REGISTER ts1_A_calib_store_register Address h9000288c
_ts1_A_calib_store_register = 2415929484 0 32 b01010101000000000000000000000000 RW
ts1_A_calib_store = h9000288c 0 32 h55000000 RW HEX
; Desc_ts1_A_calib_store func_vm_high_limit_vin2_sel0                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
ts1_A_calib = h9000288c 0 24 h0 RW HEX
magic_number = h9000288c 24 4 h5 RW HEX
parity = h9000288c 28 4 h5 RW HEX



; REGISTER ts1_B_calib_store_register Address h90002890
_ts1_B_calib_store_register = 2415929488 0 32 b01010101000000000000000000000000 RW
ts1_B_calib_store = h90002890 0 32 h55000000 RW HEX
; Desc_ts1_B_calib_store func_vm_low_limit_vin2_sel0                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
ts1_B_calib = h90002890 0 24 h0 RW HEX
magic_number = h90002890 24 4 h5 RW HEX
parity = h90002890 28 4 h5 RW HEX



; REGISTER ts0_error_generation_register Address h900028ec
_ts0_error_generation_register = 2415929580 0 32 b01010101000000000000000000000000 RW
ts0_error_generation = h900028ec 0 32 h55000000 RW HEX
; Desc_ts0_error_generation func_vm_high_limit_vin2_sel1                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
ts0_data_error_gen = h900028ec 0 12 h0 RW HEX
ts0_rdy_error_gen = h900028ec 23 1 h0 RW BIN
Magic_number = h900028ec 24 4 h5 RW HEX
Parity = h900028ec 28 4 h5 RW HEX



; REGISTER ts1_error_generation_register Address h900028f0
_ts1_error_generation_register = 2415929584 0 32 b01010101000000000000000000000000 RW
ts1_error_generation = h900028f0 0 32 h55000000 RW HEX
; Desc_ts1_error_generation func_vm_low_limit_vin2_sel1                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
ts1_data_error_gen = h900028f0 0 12 h0 RW HEX
ts1_rdy_error_gen = h900028f0 23 1 h0 RW BIN
Magic_number = h900028f0 24 4 h5 RW HEX
Parity = h900028f0 28 4 h5 RW HEX



; REGISTER TxRTS_TxRTS_ctrl_reg Address h90003000
_TxRTS_TxRTS_ctrl_reg = 2415931392 0 16 b00000000000000000001111101111111 RW
TxRTS_FetchPacerEnable = h90003000 0 1 h1 RW BIN
; Desc_TxRTS_FetchPacerEnable func_vm_low_limit_vin2_sel2                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_TxDriftAddEn = h90003000 1 1 h1 RW BIN
; Desc_TxRTS_TxDriftAddEn func_vm_low_limit_vin2_sel2                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_RTS_enable = h90003000 2 1 h1 RW BIN
; Desc_TxRTS_RTS_enable func_vm_low_limit_vin2_sel2                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_KeepAliveEnable = h90003000 3 1 h1 RW BIN
; Desc_TxRTS_KeepAliveEnable func_vm_low_limit_vin2_sel2                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_CutThroughEnable = h90003000 4 1 h1 RW BIN
; Desc_TxRTS_CutThroughEnable func_vm_low_limit_vin2_sel2                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_PacketHold_en = h90003000 5 1 h1 RW BIN
; Desc_TxRTS_PacketHold_en func_vm_low_limit_vin2_sel2                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_ApktTxSCI_en = h90003000 6 1 h1 RW BIN
; Desc_TxRTS_ApktTxSCI_en func_vm_low_limit_vin2_sel2                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_sCMax = h90003000 7 2 h2 RW HEX
; Desc_TxRTS_sCMax func_vm_low_limit_vin2_sel2                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_Atype0_SCI = h90003000 9 2 h3 RW HEX
; Desc_TxRTS_Atype0_SCI func_vm_low_limit_vin2_sel2                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_ReTXsCMaxDiv2_en = h90003000 11 1 h1 RW BIN
; Desc_TxRTS_ReTXsCMaxDiv2_en func_vm_low_limit_vin2_sel2                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_TxDelayCalc_en = h90003000 12 1 h1 RW BIN
; Desc_TxRTS_TxDelayCalc_en func_vm_low_limit_vin2_sel2                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_PreferOriginalShift = h90003000 13 3 h0 RW HEX
; Desc_TxRTS_PreferOriginalShift func_vm_low_limit_vin2_sel2                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_FetchPacer_ctrl_reg Address h90003004
_TxRTS_FetchPacer_ctrl_reg = 2415931396 0 12 b00000000000000000000000011000011 RW
TxRTS_FetchPacer_Gear = h90003004 0 3 h3 RW HEX
; Desc_TxRTS_FetchPacer_Gear func_vm_high_limit_vin2_sel3                                [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_FetchPacer_ABPC_Denominator = h90003004 3 7 h18 RW HEX
; Desc_TxRTS_FetchPacer_ABPC_Denominator func_vm_high_limit_vin2_sel3                                [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_FetchPacer_StopTraffic = h90003004 10 1 h0 RW BIN
; Desc_TxRTS_FetchPacer_StopTraffic func_vm_high_limit_vin2_sel3                                [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_FetchPacer_StopTrafficMode = h90003004 11 1 h0 RW BIN
; Desc_TxRTS_FetchPacer_StopTrafficMode func_vm_high_limit_vin2_sel3                                [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_FetchPacer_BperiodsPerCycle_reg Address h90003008
_TxRTS_FetchPacer_BperiodsPerCycle_reg = 2415931400 0 28 b00000000000000000100000000000000 RW
TxRTS_FetchPacer_BperiodsPerCycle = h90003008 0 28 h4000 RW HEX
; Desc_TxRTS_FetchPacer_BperiodsPerCycle func_vm_low_limit_vin2_sel3                                       [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_SchedFetchPacer_ctrl_reg Address h9000300c
_TxRTS_SchedFetchPacer_ctrl_reg = 2415931404 0 8 b00000000000000000000000000000000 RW
TxRTS_SchedFetchPacerEnable = h9000300c 0 1 h0 RW BIN
; Desc_TxRTS_SchedFetchPacerEnable func_vm_high_limit_vin3                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_SchedFetchPacer_ABPC_Denominator = h9000300c 1 7 h0 RW HEX
; Desc_TxRTS_SchedFetchPacer_ABPC_Denominator func_vm_high_limit_vin3                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_SchedFetchPacer_BperiodsPerCycle_reg Address h90003010
_TxRTS_SchedFetchPacer_BperiodsPerCycle_reg = 2415931408 0 28 b00000000000010100011110101110000 RW
TxRTS_SchedFetchPacer_BperiodsPerCycle = h90003010 0 28 ha3d70 RW HEX
; Desc_TxRTS_SchedFetchPacer_BperiodsPerCycle func_vm_high_limit_vin4                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_TxBuffer_time_reg Address h90003014
_TxRTS_TxBuffer_time_reg = 2415931412 0 32 b00000110000000000000110000000000 RW
TxRTS_Max_RTS_Delay = h90003014 0 16 hc00 RW HEX
; Desc_TxRTS_Max_RTS_Delay func_vm_high_limit_vin5                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_KeepAliveTime = h90003014 16 16 h600 RW HEX
; Desc_TxRTS_KeepAliveTime func_vm_high_limit_vin5                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_MaxAckGap_reg Address h90003018
_TxRTS_MaxAckGap_reg = 2415931416 0 7 b00000000000000000000000000011111 RW
TxRTS_MaxAckGap = h90003018 0 7 h1f RW HEX
; Desc_TxRTS_MaxAckGap func_vm_high_limit_vin6                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_TxBuffer_used_intr_ctrl_reg Address h9000301c
_TxRTS_TxBuffer_used_intr_ctrl_reg = 2415931420 0 24 b00000000011100000000110110101100 RW
TxRTS_TxBuffer_used_threshold = h9000301c 0 16 hdac RW HEX
; Desc_TxRTS_TxBuffer_used_threshold func_vm_high_limit_vin7                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_TxBuffer_mc_used_threshold = h9000301c 16 8 h70 RW HEX
; Desc_TxRTS_TxBuffer_mc_used_threshold func_vm_high_limit_vin7                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_TxBuffer_orig_intr_ctrl_reg Address h90003020
_TxRTS_TxBuffer_orig_intr_ctrl_reg = 2415931424 0 32 b00000000000100000000000000100000 RW
TxRTS_TxBuffer_original_pre_retx_threshold = h90003020 0 16 h20 RW HEX
; Desc_TxRTS_TxBuffer_original_pre_retx_threshold func_vm_high_limit_vin8                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_TxBuffer_original_no_tx_threshold = h90003020 16 16 h10 RW HEX
; Desc_TxRTS_TxBuffer_original_no_tx_threshold func_vm_high_limit_vin8                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_PreferOriginalThr_reg Address h90003024
_TxRTS_PreferOriginalThr_reg = 2415931428 0 32 b00001000011001100000100110011010 RW
TxRTS_PreferOriginalHighThr = h90003024 0 16 h99a RW HEX
; Desc_TxRTS_PreferOriginalHighThr func_vm_high_limit_vin9                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_PreferOriginalLowThr = h90003024 16 16 h866 RW HEX
; Desc_TxRTS_PreferOriginalLowThr func_vm_high_limit_vin9                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_TxDrift_ctrl_reg Address h90003028
_TxRTS_TxDrift_ctrl_reg = 2415931432 0 18 b00000000000000100000000000000000 RW
TxRTS_Cpu_Drift = h90003028 0 16 h0 RW HEX
; Desc_TxRTS_Cpu_Drift func_vm_high_limit_vin10                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_Drift_from_cpu = h90003028 16 1 h0 RW BIN
; Desc_TxRTS_Drift_from_cpu func_vm_high_limit_vin10                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_DriftInvEnable = h90003028 17 1 h1 RW BIN
; Desc_TxRTS_DriftInvEnable func_vm_high_limit_vin10                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_drfWin_reg Address h9000302c
_TxRTS_drfWin_reg = 2415931436 0 32 b00000010000000000000000000000000 RW
TxRTS_drfWin = h9000302c 0 32 h2000000 RW HEX
; Desc_TxRTS_drfWin func_vm_high_limit_vin11                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_sys_testbus_sel_reg Address h90003030
_TxRTS_sys_testbus_sel_reg = 2415931440 0 4 b00000000000000000000000000000000 RW
TxRTS_sys_testbus_sel = h90003030 0 4 h0 RW HEX
; Desc_TxRTS_sys_testbus_sel func_vm_high_limit_vin12                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_TxRTSCntCtrl_reg Address h9000303c
_TxRTS_TxRTSCntCtrl_reg = 2415931452 0 9 b00000000000000000000000000000000 RW
TxRTS_RTSInCnt_en = h9000303c 0 1 h0 RW BIN
; Desc_TxRTS_RTSInCnt_en func_vm_high_limit_vin14                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_RTSInCnt_latch = h9000303c 1 1 h0 RW BIN
; Desc_TxRTS_RTSInCnt_latch func_vm_high_limit_vin14                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_RTSInCnt_wrap_en = h9000303c 2 1 h0 RW BIN
; Desc_TxRTS_RTSInCnt_wrap_en func_vm_high_limit_vin14                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_SchedulingCnt_en = h9000303c 3 1 h0 RW BIN
; Desc_TxRTS_SchedulingCnt_en func_vm_high_limit_vin14                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_SchedulingCnt_latch = h9000303c 4 1 h0 RW BIN
; Desc_TxRTS_SchedulingCnt_latch func_vm_high_limit_vin14                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_SchedulingCnt_wrap_en = h9000303c 5 1 h0 RW BIN
; Desc_TxRTS_SchedulingCnt_wrap_en func_vm_high_limit_vin14                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_RetReqCnt_en = h9000303c 6 1 h0 RW BIN
; Desc_TxRTS_RetReqCnt_en func_vm_high_limit_vin14                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_RetReqCnt_latch = h9000303c 7 1 h0 RW BIN
; Desc_TxRTS_RetReqCnt_latch func_vm_high_limit_vin14                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_RetReqCnt_wrap_en = h9000303c 8 1 h0 RW BIN
; Desc_TxRTS_RetReqCnt_wrap_en func_vm_high_limit_vin14                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
TxRTS_RTSInCnt_clear = h9000303c 9 1 h0 RW BIN
TxRTS_SchedulingCnt_clear = h9000303c 10 1 h0 RW BIN
TxRTS_RetReqCnt_clear = h9000303c 11 1 h0 RW BIN



; REGISTER TxRTS_DiscardTooLateRetReqCnt_thr_reg Address h90003080
_TxRTS_DiscardTooLateRetReqCnt_thr_reg = 2415931520 0 16 b00000000000000000000000000000000 RW
TxRTS_DiscardTooLateRetReqCnt_thr = h90003080 0 16 h0 RW HEX
; Desc_TxRTS_DiscardTooLateRetReqCnt_thr error_count_limit_vin2_sel1                                  [7:0]                when number of measurement error on vin2_sel1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel2                                  [15:8]              when number of measurement error on vin2_sel2 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel3                                  [23:16]            when number of measurement error on vin2_sel3 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_DiscardDupRetReqCnt_thr_reg Address h90003084
_TxRTS_DiscardDupRetReqCnt_thr_reg = 2415931524 0 16 b00000000000000000000000000000000 RW
TxRTS_DiscardDupRetReqCnt_thr = h90003084 0 16 h0 RW HEX
; Desc_TxRTS_DiscardDupRetReqCnt_thr error_count_limit_vin3                                  [7:0]                when number of measurement error on vin3 equals or exceeds this number failure indication will be reported. serror_count_limit_vin4                                  [15:8]              when number of measurement error on vin4 equals or exceeds this number failure indication will be reported. serror_count_limit_vin5                                  [23:16]            when number of measurement error on vin5 equals or exceeds this number failure indication will be reported. sMagic_number                                                [27:24]              Default value – identical for all registerssParity                                                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_DropInvalidRetReqCnt_thr_reg Address h90003088
_TxRTS_DropInvalidRetReqCnt_thr_reg = 2415931528 0 16 b00000000000000000000000000000000 RW
TxRTS_DropInvalidRetReqCnt_thr = h90003088 0 16 h0 RW HEX
; Desc_TxRTS_DropInvalidRetReqCnt_thr error_count_limit_vin6                                  [7:0]                when number of measurement error on vin6 equals or exceeds this number failure indication will be reported. serror_count_limit_vin7                                  [15:8]              when number of measurement error on vin7 equals or exceeds this number failure indication will be reported. serror_count_limit_vin8                                  [23:16]            when number of measurement error on vin8 equals or exceeds this number failure indication will be reported. sMagic_number                                                [27:24]              Default value – identical for all registerssParity                                                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_HistogramWindowSize_reg Address h900030d0
_TxRTS_HistogramWindowSize_reg = 2415931600 0 16 b00000000000000000000000000000000 RW
TxRTS_HistogramWindowSize = h900030d0 0 16 h0 RW HEX
; Desc_TxRTS_HistogramWindowSize error_count_limit_vin15                                  [7:0]                when number of measurement error on vin15 equals or exceeds this number failure indication will be reported. serror_count_limit_vinternal                          [15:8]              when number of measurement error on vinternal equals or exceeds this number failure indication will be reported. serror_count_limit_self_test                          [23:16]            when number of measurement error on self_test equals or exceeds this number failure indication will be reported. sMagic_number                                                [27:24]              Default value – identical for all registerssParity                                                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_RetReq_Bucket_0_thr_reg Address h900030d4
_TxRTS_RetReq_Bucket_0_thr_reg = 2415931604 0 8 b00000000000000000000000000000000 RW
TxRTS_RetReq_Bucket_0_thr = h900030d4 0 8 h0 RW HEX
; Desc_TxRTS_RetReq_Bucket_0_thr defines the detection_enable for each error per portsvm_high_level_detect_en_vin0       [0]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin0        [1]  - defines if vm  low_level comparator will report a detected errorrsvm_high_level_detect_en_vin1       [2]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin1        [3]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vin2_sel0       [4]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin2_sel0       [5]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vin2_sel1       [6]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin2_sel1        [7]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vin2_sel2       [8]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin2_sel2        [9]  - defines if vm  low_level comparator will report a detected errorsvm_high_level_detect_en_vin2_sel3       [10]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin2_sel3        [11]  - defines if vm  low_level comparator will report a detected errorsvm_high_level_detect_en_vin3       [12]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin3        [13]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vin4       [14]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin4        [15]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vin5       [16]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin5        [17]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vin6       [18]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin6        [19]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vin7       [20]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin7        [21]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vin8       [22]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin8        [23]  - defines if vm  low_level comparator will report a detected errotsMagic_number                                                      [27:24]              Default value – identical for all registerssParity                                                                         [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_RetReq_Bucket_1_thr_reg Address h900030d8
_TxRTS_RetReq_Bucket_1_thr_reg = 2415931608 0 8 b00000000000000000000000000000001 RW
TxRTS_RetReq_Bucket_1_thr = h900030d8 0 8 h1 RW HEX
; Desc_TxRTS_RetReq_Bucket_1_thr defines the detection_enable for each error per portsvm_high_level_detect_en_vin9       [0]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin9        [1]  - defines if vm  low_level comparator will report a detected errorrsvm_high_level_detect_en_vin10       [2]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin10        [3]  - defines if vm  low_level comparator will report a detected errorrsvm_high_level_detect_en_vin11       [4]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin11        [5]  - defines if vm  low_level comparator will report a detected errorrsvm_high_level_detect_en_vin12       [6]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin12        [7]  - defines if vm  low_level comparator will report a detected errorrsvm_high_level_detect_en_vin13       [8]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin13        [9]  - defines if vm  low_level comparator will report a detected errorrsvm_high_level_detect_en_vin14       [10]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin14        [11]  - defines if vm  low_level comparator will report a detected errorrsvm_high_level_detect_en_vin15       [12]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin15        [13]  - defines if vm  low_level comparator will report a detected errorrsvm_high_level_detect_en_internal       [14]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_internal        [15]  - defines if vm  low_level comparator will report a detected errorsparity_error_detect_en                            [16]   - defines if register_parity error will be detected. svm_analog_faultn                                     [17]  -  defines if analog fault error will be detectedsMagic_number                                                      [27:24]              Default value – identical for all registerssParity                                                                         [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_RetReq_Bucket_2_thr_reg Address h900030dc
_TxRTS_RetReq_Bucket_2_thr_reg = 2415931612 0 8 b00000000000000000000000000000010 RW
TxRTS_RetReq_Bucket_2_thr = h900030dc 0 8 h2 RW HEX
; Desc_TxRTS_RetReq_Bucket_2_thr defines the count enable  for each errorsvm_high_level_count_en_vin0       [0]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin0        [1]  - defines if vm  low_level comparator will report a detected errorrsvm_high_level_count_en_vin1       [2]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin1        [3]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin2_sel0       [4]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin2_sel0       [5]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin2_sel1       [6]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin2_sel1        [7]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin2_sel2       [8]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin2_sel2        [9]  - defines if vm  low_level comparator will report a detected errorsvm_high_level_count_en_vin2_sel3       [10]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin_sel3        [11]  - defines if vm  low_level comparator will report a detected errorsvm_high_level_count_en_vin3       [12]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin3        [13]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin4       [14]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin4        [15]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin5       [16]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin5        [17]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin6       [18]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin6        [19]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin7       [20]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin7        [21]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin8       [22]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin8        [23]  - defines if vm  low_level comparator will report a detected errotsMagic_number                                     [27:24]              Default value – identical for all registerssParity                                                     [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_RetReq_Bucket_3_thr_reg Address h900030e0
_TxRTS_RetReq_Bucket_3_thr_reg = 2415931616 0 8 b00000000000000000000000000000011 RW
TxRTS_RetReq_Bucket_3_thr = h900030e0 0 8 h3 RW HEX
; Desc_TxRTS_RetReq_Bucket_3_thr defines the count enable  for each errorsvm_high_level_count_en_vin9       [0]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin9       [1]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin10       [2]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vmin10       [3]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin11       [4]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin11        [5]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin12       [6]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin12        [7]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin13       [8]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vmin13     [9]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin14       [10]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vmin14      [11]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin15       [12]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vmin15     [13]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_internal  [14]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_internal   [15]  - defines if vm  low_level comparator will report a detected errorsMagic_number                                     [27:24]              Default value – identical for all registerssParity                                                     [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_RetReq_Bucket_4_thr_reg Address h900030e4
_TxRTS_RetReq_Bucket_4_thr_reg = 2415931620 0 8 b00000000000000000000000000000100 RW
TxRTS_RetReq_Bucket_4_thr = h900030e4 0 8 h4 RW HEX
; Desc_TxRTS_RetReq_Bucket_4_thr defines which inputs to the Voltage monitor will be measured during the self_test sequencesvin0_voltage_measurement_en                           [0]svin1_voltage_measurement_en                           [1]svin2_sel0_voltage_measurement_en                [2]svin2_sel1_voltage_measurement_en                [3]svin2_sel2_voltage_measurement_en                [4]svin2_sel3_voltage_measurement_en                [5]svin3_voltage_measurement_en                           [6]svin4_voltage_measurement_en                           [7]svin5_voltage_measurement_en                           [8]svin6_voltage_measurement_en                           [9]svin7_voltage_measurement_en                           [10]svin8_voltage_measurement_en                           [11]svin9_voltage_measurement_en                           [12]svin10_voltage_measurement_en                           [13]svin11_voltage_measurement_en                           [14]svin12_voltage_measurement_en                           [15]svin13_voltage_measurement_en                           [16]svin14_voltage_measurement_en                           [17]svin15_voltage_measurement_en                           [18]sinternal_voltage_measurement_en                   [19]sreserved                                                                         [23:20]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_RetReq_Bucket_5_thr_reg Address h900030e8
_TxRTS_RetReq_Bucket_5_thr_reg = 2415931624 0 8 b00000000000000000000000000000101 RW
TxRTS_RetReq_Bucket_5_thr = h900030e8 0 8 h5 RW HEX
; Desc_TxRTS_RetReq_Bucket_5_thr defines which inputs to the Voltage monitor will be measured during the fnctional sequencesvin0_voltage_measurement_en                           [0]svin1_voltage_measurement_en                           [1]svin2_sel0_voltage_measurement_en                [2]svin2_sel1_voltage_measurement_en                [3]svin2_sel2_voltage_measurement_en                [4]svin2_sel3_voltage_measurement_en                [5]svin3_voltage_measurement_en                           [6]svin4_voltage_measurement_en                           [7]svin5_voltage_measurement_en                           [8]svin6_voltage_measurement_en                           [9]svin7_voltage_measurement_en                           [10]svin8_voltage_measurement_en                           [11]svin9_voltage_measurement_en                           [12]svin10_voltage_measurement_en                           [13]svin11_voltage_measurement_en                           [14]svin12_voltage_measurement_en                           [15]svin13_voltage_measurement_en                           [16]svin14_voltage_measurement_en                           [17]svin15_voltage_measurement_en                           [18]sinternal_voltage_measurement_en                   [19]sreserved                                                                         [23:12]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_RetReq_Bucket_6_thr_reg Address h900030ec
_TxRTS_RetReq_Bucket_6_thr_reg = 2415931628 0 8 b00000000000000000000000000000110 RW
TxRTS_RetReq_Bucket_6_thr = h900030ec 0 8 h6 RW HEX
; Desc_TxRTS_RetReq_Bucket_6_thr defines the required stabilization time - resolution in vm_clksmax between  - Voltage monitor stabilization time when switching between the analog inputs s                          - stabilization time when swithcing between vmref output voltagesstabilization time                  [7:0]sreserved                                  [23:8]sMagic_number                      [27:24]              Default value – identical for all registerssParity                                      [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_RetReq_Bucket_7_thr_reg Address h900030f0
_TxRTS_RetReq_Bucket_7_thr_reg = 2415931632 0 8 b00000000000000000000000000000111 RW
TxRTS_RetReq_Bucket_7_thr = h900030f0 0 8 h7 RW HEX
; Desc_TxRTS_RetReq_Bucket_7_thr vm_run_width                       [1:0]            Defines the width of RUN pulse.s                                                            2'h0 - RUN PULSE width = 1s                                                            2'h1 - RUN PULSE width = 2s                                                            2'h2 - RUN PULSE width = 3s                                                            2'h3 - RUN PULSE width = 4svm_cload_width                    [3:2]            Defines the width of CLOAD pulse.s                                                            2'h0 - CLOAD PULSE width = 1s                                                            2'h1 - CLOAD PULSE width = 2s                                                            2'h2 - CLOAD PULSE width = 3s                                                            2'h3 - CLOAD PULSE width = 4sMagic_number                    [27:24]              Default value – identical for all registerssParity                                       [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_RetReq_Bucket_8_thr_reg Address h900030f4
_TxRTS_RetReq_Bucket_8_thr_reg = 2415931636 0 8 b00000000000000000000000000001000 RW
TxRTS_RetReq_Bucket_8_thr = h900030f4 0 8 h8 RW HEX
; Desc_TxRTS_RetReq_Bucket_8_thr vmu_wait_oper                                                             [23:0]                defines # of clocks before funtional safety enters functional mode  sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                              [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_RetReq_Bucket_9_thr_reg Address h900030f8
_TxRTS_RetReq_Bucket_9_thr_reg = 2415931640 0 8 b00000000000000000000000000001001 RW
TxRTS_RetReq_Bucket_9_thr = h900030f8 0 8 h9 RW HEX
; Desc_TxRTS_RetReq_Bucket_9_thr enable                                                 [0]siout_trim                                            [3:1]svsrc_sel                                              [4]svmref_trim                                      [6:5]sabt_sel                                             [8:7]siout_enable                                       [9]sspare                                                [13:10]sreserved                                         [23:14]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_Input_BW_Bucket_0_thr_reg Address h90003124
_TxRTS_Input_BW_Bucket_0_thr_reg = 2415931684 0 16 b00000000000000000000000100000000 RW
TxRTS_Input_BW_Bucket_0_thr = h90003124 0 16 h100 RW HEX
; Desc_TxRTS_Input_BW_Bucket_0_thr CRC calculated on bits [31:8]



; REGISTER TxRTS_Input_BW_Bucket_1_thr_reg Address h90003128
_TxRTS_Input_BW_Bucket_1_thr_reg = 2415931688 0 16 b00000000000000000000001000000000 RW
TxRTS_Input_BW_Bucket_1_thr = h90003128 0 16 h200 RW HEX
; Desc_TxRTS_Input_BW_Bucket_1_thr CRC calculated on bits [31:8]



; REGISTER TxRTS_Input_BW_Bucket_2_thr_reg Address h9000312c
_TxRTS_Input_BW_Bucket_2_thr_reg = 2415931692 0 16 b00000000000000000000001100000000 RW
TxRTS_Input_BW_Bucket_2_thr = h9000312c 0 16 h300 RW HEX
; Desc_TxRTS_Input_BW_Bucket_2_thr CRC calculated on bits [31:8]



; REGISTER TxRTS_Input_BW_Bucket_3_thr_reg Address h90003130
_TxRTS_Input_BW_Bucket_3_thr_reg = 2415931696 0 16 b00000000000000000000010000000000 RW
TxRTS_Input_BW_Bucket_3_thr = h90003130 0 16 h400 RW HEX
; Desc_TxRTS_Input_BW_Bucket_3_thr CRC calculated on bits [31:8]



; REGISTER TxRTS_Input_BW_Bucket_4_thr_reg Address h90003134
_TxRTS_Input_BW_Bucket_4_thr_reg = 2415931700 0 16 b00000000000000000000010100000000 RW
TxRTS_Input_BW_Bucket_4_thr = h90003134 0 16 h500 RW HEX
; Desc_TxRTS_Input_BW_Bucket_4_thr CRC calculated on bits [31:8]



; REGISTER TxRTS_Input_BW_Bucket_5_thr_reg Address h90003138
_TxRTS_Input_BW_Bucket_5_thr_reg = 2415931704 0 16 b00000000000000000000011000000000 RW
TxRTS_Input_BW_Bucket_5_thr = h90003138 0 16 h600 RW HEX
; Desc_TxRTS_Input_BW_Bucket_5_thr CRC calculated on bits [31:8]



; REGISTER TxRTS_Input_BW_Bucket_6_thr_reg Address h9000313c
_TxRTS_Input_BW_Bucket_6_thr_reg = 2415931708 0 16 b00000000000000000000011100000000 RW
TxRTS_Input_BW_Bucket_6_thr = h9000313c 0 16 h700 RW HEX
; Desc_TxRTS_Input_BW_Bucket_6_thr CRC calculated on bits [31:8]



; REGISTER TxRTS_Input_BW_Bucket_7_thr_reg Address h90003140
_TxRTS_Input_BW_Bucket_7_thr_reg = 2415931712 0 16 b00000000000000000000100000000000 RW
TxRTS_Input_BW_Bucket_7_thr = h90003140 0 16 h800 RW HEX
; Desc_TxRTS_Input_BW_Bucket_7_thr CRC calculated on bits [31:8]



; REGISTER TxRTS_Input_BW_Bucket_8_thr_reg Address h90003144
_TxRTS_Input_BW_Bucket_8_thr_reg = 2415931716 0 16 b00000000000000000000100100000000 RW
TxRTS_Input_BW_Bucket_8_thr = h90003144 0 16 h900 RW HEX
; Desc_TxRTS_Input_BW_Bucket_8_thr CRC calculated on bits [31:8]



; REGISTER TxRTS_Input_BW_Bucket_9_thr_reg Address h90003148
_TxRTS_Input_BW_Bucket_9_thr_reg = 2415931720 0 16 b00000000000000000000101000000000 RW
TxRTS_Input_BW_Bucket_9_thr = h90003148 0 16 ha00 RW HEX
; Desc_TxRTS_Input_BW_Bucket_9_thr CRC calculated on bits [31:8]



; REGISTER TxRTS_Output_BW_Bucket_0_thr_reg Address h90003174
_TxRTS_Output_BW_Bucket_0_thr_reg = 2415931764 0 16 b00000000000000000000000100000000 RW
TxRTS_Output_BW_Bucket_0_thr = h90003174 0 16 h100 RW HEX
; Desc_TxRTS_Output_BW_Bucket_0_thr Actual number of out_of_limit errors



; REGISTER TxRTS_Output_BW_Bucket_1_thr_reg Address h90003178
_TxRTS_Output_BW_Bucket_1_thr_reg = 2415931768 0 16 b00000000000000000000001000000000 RW
TxRTS_Output_BW_Bucket_1_thr = h90003178 0 16 h200 RW HEX
; Desc_TxRTS_Output_BW_Bucket_1_thr Actual number of out_of_limit errors



; REGISTER TxRTS_Output_BW_Bucket_2_thr_reg Address h9000317c
_TxRTS_Output_BW_Bucket_2_thr_reg = 2415931772 0 16 b00000000000000000000001100000000 RW
TxRTS_Output_BW_Bucket_2_thr = h9000317c 0 16 h300 RW HEX
; Desc_TxRTS_Output_BW_Bucket_2_thr Actual number of out_of_limit errors



; REGISTER TxRTS_Output_BW_Bucket_3_thr_reg Address h90003180
_TxRTS_Output_BW_Bucket_3_thr_reg = 2415931776 0 16 b00000000000000000000010000000000 RW
TxRTS_Output_BW_Bucket_3_thr = h90003180 0 16 h400 RW HEX
; Desc_TxRTS_Output_BW_Bucket_3_thr Actual number of out_of_limit errors



; REGISTER TxRTS_Output_BW_Bucket_4_thr_reg Address h90003184
_TxRTS_Output_BW_Bucket_4_thr_reg = 2415931780 0 16 b00000000000000000000010100000000 RW
TxRTS_Output_BW_Bucket_4_thr = h90003184 0 16 h500 RW HEX
; Desc_TxRTS_Output_BW_Bucket_4_thr Actual number of out_of_limit errors



; REGISTER TxRTS_Output_BW_Bucket_5_thr_reg Address h90003188
_TxRTS_Output_BW_Bucket_5_thr_reg = 2415931784 0 16 b00000000000000000000011000000000 RW
TxRTS_Output_BW_Bucket_5_thr = h90003188 0 16 h600 RW HEX
; Desc_TxRTS_Output_BW_Bucket_5_thr Actual number of out_of_limit errors



; REGISTER TxRTS_Output_BW_Bucket_6_thr_reg Address h9000318c
_TxRTS_Output_BW_Bucket_6_thr_reg = 2415931788 0 16 b00000000000000000000011100000000 RW
TxRTS_Output_BW_Bucket_6_thr = h9000318c 0 16 h700 RW HEX
; Desc_TxRTS_Output_BW_Bucket_6_thr Actual number of out_of_limit errors



; REGISTER TxRTS_Output_BW_Bucket_7_thr_reg Address h90003190
_TxRTS_Output_BW_Bucket_7_thr_reg = 2415931792 0 16 b00000000000000000000100000000000 RW
TxRTS_Output_BW_Bucket_7_thr = h90003190 0 16 h800 RW HEX
; Desc_TxRTS_Output_BW_Bucket_7_thr Actual number of out_of_limit errors



; REGISTER TxRTS_Output_BW_Bucket_8_thr_reg Address h90003194
_TxRTS_Output_BW_Bucket_8_thr_reg = 2415931796 0 16 b00000000000000000000100100000000 RW
TxRTS_Output_BW_Bucket_8_thr = h90003194 0 16 h900 RW HEX
; Desc_TxRTS_Output_BW_Bucket_8_thr Actual number of out_of_limit errors



; REGISTER TxRTS_Output_BW_Bucket_9_thr_reg Address h90003198
_TxRTS_Output_BW_Bucket_9_thr_reg = 2415931800 0 16 b00000000000000000000101000000000 RW
TxRTS_Output_BW_Bucket_9_thr = h90003198 0 16 ha00 RW HEX
; Desc_TxRTS_Output_BW_Bucket_9_thr Actual number of out_of_limit errors



; REGISTER TxRTS_TxDelayCalc_ctrl_reg Address h90003200
_TxRTS_TxDelayCalc_ctrl_reg = 2415931904 0 20 b00000000000001010000000000000000 RW
TxRTS_TxAddFixedDelay = h90003200 0 16 h0 RW HEX
; Desc_TxRTS_TxAddFixedDelay Actual number of out_of_limit errors
TxRTS_TxDelayUnit = h90003200 16 4 h5 RW HEX
; Desc_TxRTS_TxDelayUnit Actual number of out_of_limit errors



; REGISTER TxRTS_PacketHold_ctrl_reg Address h90003204
_TxRTS_PacketHold_ctrl_reg = 2415931908 0 13 b00000000000000000000001100100000 RW
TxRTS_PacketHold_timeout = h90003204 0 8 h20 RW HEX
; Desc_TxRTS_PacketHold_timeout Actual number of out_of_limit errors
TxRTS_PacketHold_thresh = h90003204 8 5 h3 RW HEX
; Desc_TxRTS_PacketHold_thresh Actual number of out_of_limit errors



; REGISTER TxRTS_trn_testbus_sel_reg Address h90003208
_TxRTS_trn_testbus_sel_reg = 2415931912 0 3 b00000000000000000000000000000000 RW
TxRTS_trn_testbus_sel = h90003208 0 3 h0 RW HEX
; Desc_TxRTS_trn_testbus_sel Actual number of out_of_limit errors



; REGISTER TxRTS_TxRTSCntCtrl_trn_reg Address h9000320c
_TxRTS_TxRTSCntCtrl_trn_reg = 2415931916 0 3 b00000000000000000000000000000000 RW
TxRTS_TxRTSCnt_en = h9000320c 0 1 h0 RW BIN
; Desc_TxRTS_TxRTSCnt_en When active – the configuration register x, fail to meet the safety requiremenvm
TxRTS_TxRTSCnt_latch = h9000320c 1 1 h0 RW BIN
; Desc_TxRTS_TxRTSCnt_latch When active – the configuration register x, fail to meet the safety requiremenvm
TxRTS_TxRTSCnt_wrap_en = h9000320c 2 1 h0 RW BIN
; Desc_TxRTS_TxRTSCnt_wrap_en When active – the configuration register x, fail to meet the safety requiremenvm
TxRTS_TxRTSCnt_clear = h9000320c 3 1 h0 RW BIN



; REGISTER TxRTS_MaxRetrainTime_thr_reg Address h90003218
_TxRTS_MaxRetrainTime_thr_reg = 2415931928 0 16 b00000000000000000000000000000000 RW
TxRTS_MaxRetrainTime_thr = h90003218 0 16 h0 RW HEX
; Desc_TxRTS_MaxRetrainTime_thr short_self_test_comperator results per self_test steps    [1]      vm_GT_high_limit step 1s    [0]      vm_LT_low_limit step 1



; REGISTER TxRTS_TxErrInj_ctrl_reg Address h90003220
_TxRTS_TxErrInj_ctrl_reg = 2415931936 0 20 b00000000000000000000000000000000 RW
TxRTS_TxErrInj_Enable = h90003220 0 1 h0 RW BIN
; Desc_TxRTS_TxErrInj_Enable functional comperator results for internal voltage measurements    [1]      vm_GT_high_limits    [0]      vm_LT_low_limit
TxRTS_TxErrInj_OrigOnly = h90003220 1 1 h0 RW BIN
; Desc_TxRTS_TxErrInj_OrigOnly functional comperator results for internal voltage measurements    [1]      vm_GT_high_limits    [0]      vm_LT_low_limit
TxRTS_TxErrInj_ErrInjMode = h90003220 2 1 h0 RW BIN
; Desc_TxRTS_TxErrInj_ErrInjMode functional comperator results for internal voltage measurements    [1]      vm_GT_high_limits    [0]      vm_LT_low_limit
TxRTS_TxErrInj_HdrFieldRnd_en = h90003220 3 1 h0 RW BIN
; Desc_TxRTS_TxErrInj_HdrFieldRnd_en functional comperator results for internal voltage measurements    [1]      vm_GT_high_limits    [0]      vm_LT_low_limit
TxRTS_TxErrInj_AtypeSelVec = h90003220 4 16 h0 RW HEX
; Desc_TxRTS_TxErrInj_AtypeSelVec functional comperator results for internal voltage measurements    [1]      vm_GT_high_limits    [0]      vm_LT_low_limit



; REGISTER TxRTS_TxErrInj_ErrVecAndOp_lsb_reg Address h90003224
_TxRTS_TxErrInj_ErrVecAndOp_lsb_reg = 2415931940 0 32 b11111111001111110111111100001111 RW
TxRTS_TxErrInj_ErrVecAndOp_lsb = h90003224 0 32 hff3f7f0f RW HEX
; Desc_TxRTS_TxErrInj_ErrVecAndOp_lsb vm error count is greater than the defined error limits



; REGISTER TxRTS_TxErrInj_ErrVecAndOp_msb_reg Address h90003228
_TxRTS_TxErrInj_ErrVecAndOp_msb_reg = 2415931944 0 24 b00000000111111111111111111111111 RW
TxRTS_TxErrInj_ErrVecAndOp_msb = h90003228 0 24 hffffff RW HEX
; Desc_TxRTS_TxErrInj_ErrVecAndOp_msb func_measurement_iteration_count               [15:0]                number of measurement loops each loops include all the measurements defined in  func_mode_measurement_en



; REGISTER TxRTS_TxErrInj_ErrVecOrOp_lsb_reg Address h9000322c
_TxRTS_TxErrInj_ErrVecOrOp_lsb_reg = 2415931948 0 32 b00000000000000000000000000000000 RW
TxRTS_TxErrInj_ErrVecOrOp_lsb = h9000322c 0 32 h0 RW HEX
; Desc_TxRTS_TxErrInj_ErrVecOrOp_lsb func_measurement_iteration_count               [15:0]                number of measurement loops each loops include all the measurements defined in  func_mode_measurement_en



; REGISTER TxRTS_TxErrInj_ErrVecOrOp_msb_reg Address h90003230
_TxRTS_TxErrInj_ErrVecOrOp_msb_reg = 2415931952 0 24 b00000000000000000000000000000000 RW
TxRTS_TxErrInj_ErrVecOrOp_msb = h90003230 0 24 h0 RW HEX
; Desc_TxRTS_TxErrInj_ErrVecOrOp_msb VM data output value sampled at rdy



; REGISTER TxRTS_TxErrInj_ErrVecXorOp_lsb_reg Address h90003234
_TxRTS_TxErrInj_ErrVecXorOp_lsb_reg = 2415931956 0 32 b10000001000100010111010000000001 RW
TxRTS_TxErrInj_ErrVecXorOp_lsb = h90003234 0 32 h81117401 RW HEX
; Desc_TxRTS_TxErrInj_ErrVecXorOp_lsb Initial SEQ_ID Value added to the read temperature register. This values will be incremented automatically after every read access to the read temperature register: sfield descriptionsparity                [31:28]smagic_number [27:24]sReserved           [23:4]sts_initial_seq_id    [3:0]



; REGISTER TxRTS_TxErrInj_ErrVecXorOp_msb_reg Address h90003238
_TxRTS_TxErrInj_ErrVecXorOp_msb_reg = 2415931960 0 24 b00000000000000010000000100000001 RW
TxRTS_TxErrInj_ErrVecXorOp_msb = h90003238 0 24 h10101 RW HEX
; Desc_TxRTS_TxErrInj_ErrVecXorOp_msb controls the TSC functionalitysfield descriptionsts_pd                       [0]                    Power down –s                                                   1’b0 – both TS are actives                                                   1’b1 – both TS are forced to power-downsts_bypass mode     [1]           Selects bypass modes                                                  1’b0 – the TS is activated in automatic mode. The TS are controlled according to predefined sequencess                                                  1’b1 – the TS is activated in bypass modes                                                  The TS are controlled according to the control signals written by SW to Bypass Control register see para. ‎11.3sts_single_mode      [2]           ts_single run modes                                                 1'b0 - the TS run in contineous mode -  run command is active until disabled - effective only in bypass modes                                                 1'b1 - the TS run in single mode - run command per measurementsts_master                 [3]           Selects which Temperature Sensor is read when the temperature read register is accesseds                                                  1’b0 – TS0 sampled value will be read when the temperature read register is accesseds                                                  1’b1 – TS1 sampled value will be read when the temperature read register is accessedsts_operation moode    [4]          selects the operarion mode s                                                  1'b0 - the temperature works in operation mode 1 - using coefficients A & Bs                                                  1'b1 - the temperature works in operation mode 2 - using coefficients G & HsReserved           [23:4]ssMagic_number  [27:24]   Default value – identical for all registerssParity                 [31:28]   Parity calculation on bits[27:0] 



; REGISTER TxRTS_TxErrInj_PrbsInitVal_reg Address h9000323c
_TxRTS_TxErrInj_PrbsInitVal_reg = 2415931964 0 17 b00000000000000010010001101000101 RW
TxRTS_TxErrInj_PrbsInitVal = h9000323c 0 17 h12345 RW HEX
; Desc_TxRTS_TxErrInj_PrbsInitVal controls theTS activation while in bypass modesTs0_pd                       [0]                     ts0 power down control bit while in bypass modesTs0_rstn                    [1]                     ts0 reset control bit while in bypass mode sTs0_run                     [2]                     ts0 run control bit while in bypass modesTs0_cload                 [3]                     ts0 sgn_en control bit while in bypass modests0_an_en                 [4]sTs0_an_sel             [8:5]                     ts0 cal control bit while in bypass modesreserve   d              [11:9]                  reservedsTs1_pd                     [12]                    ts1 power down control bit while in bypass modesTs1_rstn                  [13]                    ts1 reset control bit while in bypass mode sTs1_run                   [14]                    ts1 run control bit while in bypass modesTs1_cload              [15]                    ts1 sgn_en control bit while in bypass modests1_an_en               [16]sTs1_an_sel            [20:17]                    ts1 cal control bit while in bypass modesreserved                [23:21]            sMagic_numbers  [27:24]              Default value – identical for all registerssParity                      [31:28]              Parity calculation on bits[27:0] 



; REGISTER TxRTS_TxErrInj_ContErrRatio_reg Address h90003240
_TxRTS_TxErrInj_ContErrRatio_reg = 2415931968 0 21 b00000000000010110000000000000000 RW
TxRTS_TxErrInj_ContMinErrRatio = h90003240 0 16 h0 RW HEX
; Desc_TxRTS_TxErrInj_ContMinErrRatio defines the configuration register1 of the voltage monitor sts_cfg_sec_mode      [1:0]          secondary_mode s                                                               for pri_mode = 2'b00 should be set to 2'b00s                                                               for pri_mode = 2'b01 should be set to 2'b00s                                                               for pri_mode = 2'b10s                                                                        2'b00 - signature direct mode                                      = 12'hB32s                                                                        2'b01 - signature inverted direct mode                   = 12'h4CDs                                                                        2'b10 - signature conversion mode                           = 12'hB32s                                                                        2'b10 - signature inverted conversion mode         = 12'h4CDsts_cfg_pri_mode      [3:2]          primary_modes                                                               2'b00 - temperature measurement modes                                                               2'b01 - read status modes                                                               2'b10 - read signature modes                                                               2'b11 - undefinedsts_cfg_ser_mode     [4]               defines the output formats                                                                1'b0 - parallel mode s                                                                1'b1 - serial mode - MSb firststs_cfg_resolution  [7:5]            defines the voltage monitor data out resolutions                                                                3'b000 - 12-bit resolutions                                                                3'b001 - 10-bit resolutions                                                                3'b010 - 8-bit resolutions                                                                3'b011 - not alloweds                                                                3'b1xx - not allowedsreserved                         [23:8]sMagic_number             [27:24]              Default value – identical for all registerssParity                             [31:28]              Parity calculation on bits[27:0] 
TxRTS_TxErrInj_ContRangeExpErrRatio = h90003240 16 5 hb RW HEX
; Desc_TxRTS_TxErrInj_ContRangeExpErrRatio defines the configuration register1 of the voltage monitor sts_cfg_sec_mode      [1:0]          secondary_mode s                                                               for pri_mode = 2'b00 should be set to 2'b00s                                                               for pri_mode = 2'b01 should be set to 2'b00s                                                               for pri_mode = 2'b10s                                                                        2'b00 - signature direct mode                                      = 12'hB32s                                                                        2'b01 - signature inverted direct mode                   = 12'h4CDs                                                                        2'b10 - signature conversion mode                           = 12'hB32s                                                                        2'b10 - signature inverted conversion mode         = 12'h4CDsts_cfg_pri_mode      [3:2]          primary_modes                                                               2'b00 - temperature measurement modes                                                               2'b01 - read status modes                                                               2'b10 - read signature modes                                                               2'b11 - undefinedsts_cfg_ser_mode     [4]               defines the output formats                                                                1'b0 - parallel mode s                                                                1'b1 - serial mode - MSb firststs_cfg_resolution  [7:5]            defines the voltage monitor data out resolutions                                                                3'b000 - 12-bit resolutions                                                                3'b001 - 10-bit resolutions                                                                3'b010 - 8-bit resolutions                                                                3'b011 - not alloweds                                                                3'b1xx - not allowedsreserved                         [23:8]sMagic_number             [27:24]              Default value – identical for all registerssParity                             [31:28]              Parity calculation on bits[27:0] 



; REGISTER TxRTS_TxErrInj_ErrPktLen_reg Address h90003244
_TxRTS_TxErrInj_ErrPktLen_reg = 2415931972 0 26 b00000000000000000000000000000000 RW
TxRTS_TxErrInj_ContErrPktLen = h90003244 0 16 h0 RW HEX
; Desc_TxRTS_TxErrInj_ContErrPktLen defines the temperature_Sensor clocksts_clk_up_width        [9:0]            - defines the length off high level of ts_clksreserved                      [11:10]sts_clk_down_width   [21:12]       - defines the length off low level of ts_clksreserve                        [23:22]sMagic_number          [27:24]              Default value – identical for all registerssParity                          [31:28]               Parity calculation on bits[27:0] 
TxRTS_TxErrInj_GapErrPktLen = h90003244 16 10 h0 RW HEX
; Desc_TxRTS_TxErrInj_GapErrPktLen defines the temperature_Sensor clocksts_clk_up_width        [9:0]            - defines the length off high level of ts_clksreserved                      [11:10]sts_clk_down_width   [21:12]       - defines the length off low level of ts_clksreserve                        [23:22]sMagic_number          [27:24]              Default value – identical for all registerssParity                          [31:28]               Parity calculation on bits[27:0] 



; REGISTER TxRTS_TxErrInj_ContErrType_reg Address h90003248
_TxRTS_TxErrInj_ContErrType_reg = 2415931976 0 20 b00000000000011111101001110011000 RW
TxRTS_TxErrInj_ContErrTypeBound1 = h90003248 0 10 h398 RW HEX
; Desc_TxRTS_TxErrInj_ContErrTypeBound1 defines the wait period for analog power-ypsts_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 
TxRTS_TxErrInj_ContErrTypeBound2 = h90003248 10 10 h3f4 RW HEX
; Desc_TxRTS_TxErrInj_ContErrTypeBound2 defines the wait period for analog power-ypsts_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_RtsConfigReg Address h90003300
_RxRTS_RtsConfigReg = 2415932160 0 26 b00000001111100101101111101111101 RW
RxRTS_RtsEnable = h90003300 0 1 h1 RW BIN
; Desc_RxRTS_RtsEnable measurement timeout          [15:0]            Defines the waiting time from RUN activation until RDY is received – if the timeout period expires an error flag iss                                                                                 raised.s                                                                                The timeout counter resolution is the TS lock period.sReserved                                      [23:16]sMagic_number                          [27:24]         Default value – identical for all registerssParity                                             [31:28]         Parity calculation on bits[27:0] 
RxRTS_RtsMaxGap = h90003300 2 6 h1f RW HEX
; Desc_RxRTS_RtsMaxGap measurement timeout          [15:0]            Defines the waiting time from RUN activation until RDY is received – if the timeout period expires an error flag iss                                                                                 raised.s                                                                                The timeout counter resolution is the TS lock period.sReserved                                      [23:16]sMagic_number                          [27:24]         Default value – identical for all registerssParity                                             [31:28]         Parity calculation on bits[27:0] 
RxRTS_RtsGapIgnoreThr = h90003300 8 6 h1f RW HEX
; Desc_RxRTS_RtsGapIgnoreThr measurement timeout          [15:0]            Defines the waiting time from RUN activation until RDY is received – if the timeout period expires an error flag iss                                                                                 raised.s                                                                                The timeout counter resolution is the TS lock period.sReserved                                      [23:16]sMagic_number                          [27:24]         Default value – identical for all registerssParity                                             [31:28]         Parity calculation on bits[27:0] 
RxRTS_MaxRequestsNum = h90003300 14 3 h3 RW HEX
; Desc_RxRTS_MaxRequestsNum measurement timeout          [15:0]            Defines the waiting time from RUN activation until RDY is received – if the timeout period expires an error flag iss                                                                                 raised.s                                                                                The timeout counter resolution is the TS lock period.sReserved                                      [23:16]sMagic_number                          [27:24]         Default value – identical for all registerssParity                                             [31:28]         Parity calculation on bits[27:0] 
RxRTS_MinRequestsNum = h90003300 17 3 h1 RW HEX
; Desc_RxRTS_MinRequestsNum measurement timeout          [15:0]            Defines the waiting time from RUN activation until RDY is received – if the timeout period expires an error flag iss                                                                                 raised.s                                                                                The timeout counter resolution is the TS lock period.sReserved                                      [23:16]sMagic_number                          [27:24]         Default value – identical for all registerssParity                                             [31:28]         Parity calculation on bits[27:0] 
RxRTS_RxBufferMaxGap = h90003300 20 6 h1f RW HEX
; Desc_RxRTS_RxBufferMaxGap measurement timeout          [15:0]            Defines the waiting time from RUN activation until RDY is received – if the timeout period expires an error flag iss                                                                                 raised.s                                                                                The timeout counter resolution is the TS lock period.sReserved                                      [23:16]sMagic_number                          [27:24]         Default value – identical for all registerssParity                                             [31:28]         Parity calculation on bits[27:0] 



; REGISTER RxRTS_AckConfigReg Address h90003304
_RxRTS_AckConfigReg = 2415932164 0 26 b00000000100000000010000000000001 RW
RxRTS_PacketsAckEn = h90003304 0 1 h1 RW BIN
; Desc_RxRTS_PacketsAckEn ts_short_self_test_high_limit2s         [11:0]                When manual short self-test is selected this value is used as high_limit2sts_short_self_test_low_limit2           [23:12]             When manual short self-test is selected this value is used as low_limit2sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
RxRTS_PeriodicAckEn = h90003304 1 1 h0 RW BIN
; Desc_RxRTS_PeriodicAckEn ts_short_self_test_high_limit2s         [11:0]                When manual short self-test is selected this value is used as high_limit2sts_short_self_test_low_limit2           [23:12]             When manual short self-test is selected this value is used as low_limit2sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
RxRTS_PeriodicAckThreshold = h90003304 2 16 h800 RW HEX
; Desc_RxRTS_PeriodicAckThreshold ts_short_self_test_high_limit2s         [11:0]                When manual short self-test is selected this value is used as high_limit2sts_short_self_test_low_limit2           [23:12]             When manual short self-test is selected this value is used as low_limit2sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
RxRTS_PacketsAckThreshold = h90003304 18 8 h20 RW HEX
; Desc_RxRTS_PacketsAckThreshold ts_short_self_test_high_limit2s         [11:0]                When manual short self-test is selected this value is used as high_limit2sts_short_self_test_low_limit2           [23:12]             When manual short self-test is selected this value is used as low_limit2sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 



; REGISTER RxRTS_MaxRtsTimeReg Address h90003308
_RxRTS_MaxRtsTimeReg = 2415932168 0 32 b00000000000000000000111010110000 RW
RxRTS_MaxRtsTime = h90003308 0 16 heb0 RW HEX
; Desc_RxRTS_MaxRtsTime ts_short_self_test_forced_ts0_value1             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssts_short_self_test_forced_ts1_value1             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
RxRTS_MinLinkRTD = h90003308 16 16 h0 RW HEX
; Desc_RxRTS_MinLinkRTD ts_short_self_test_forced_ts0_value1             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssts_short_self_test_forced_ts1_value1             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 



; REGISTER RxRTS_GeneralConfigReg Address h9000330c
_RxRTS_GeneralConfigReg = 2415932172 0 22 b00000000000000000111110100001100 RW
RxRTS_sCMaxDetEn = h9000330c 0 1 h0 RW BIN
; Desc_RxRTS_sCMaxDetEn ts_short_self_test_forced_ts0_value3             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssts_short_self_test_forced_ts1_value3             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
RxRTS_RetrainDetEn = h9000330c 1 1 h0 RW BIN
; Desc_RxRTS_RetrainDetEn ts_short_self_test_forced_ts0_value3             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssts_short_self_test_forced_ts1_value3             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
RxRTS_AckDetEn = h9000330c 2 1 h1 RW BIN
; Desc_RxRTS_AckDetEn ts_short_self_test_forced_ts0_value3             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssts_short_self_test_forced_ts1_value3             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
RxRTS_RtsDetEn = h9000330c 3 1 h1 RW BIN
; Desc_RxRTS_RtsDetEn ts_short_self_test_forced_ts0_value3             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssts_short_self_test_forced_ts1_value3             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
RxRTS_FullMCReleaseEnable = h9000330c 4 1 h0 RW BIN
; Desc_RxRTS_FullMCReleaseEnable ts_short_self_test_forced_ts0_value3             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssts_short_self_test_forced_ts1_value3             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
RxRTS_CyclesForNextRequest = h9000330c 5 16 h3e8 RW HEX
; Desc_RxRTS_CyclesForNextRequest ts_short_self_test_forced_ts0_value3             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssts_short_self_test_forced_ts1_value3             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
RxRTS_ManualRetrainTriggerEnable = h9000330c 21 1 h0 RW BIN
; Desc_RxRTS_ManualRetrainTriggerEnable ts_short_self_test_forced_ts0_value3             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssts_short_self_test_forced_ts1_value3             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 



; REGISTER RxRTS_DelayReg Address h90003310
_RxRTS_DelayReg = 2415932176 0 20 b00000000000000000000000000000101 RW
RxRTS_TxDelayUnit = h90003310 0 4 h5 RW HEX
; Desc_RxRTS_TxDelayUnit ts_short_self_test2_allowed_diff1               [11:0]                      When manual short self-test is selected this value is used for comparison against the obtained difference between the forced valuessts_short_self_test2_allowed_diff2               [23:12]                    When manual short self-test is selected this value is used for comparison against the obtained differencesMagic_number                                        [27:24]                   Default value – identical for all registerssParity                                                           [31:28]                  Parity calculation on bits[27:0] 
RxRTS_RxAddFixedDelay = h90003310 4 16 h0 RW HEX
; Desc_RxRTS_RxAddFixedDelay ts_short_self_test2_allowed_diff1               [11:0]                      When manual short self-test is selected this value is used for comparison against the obtained difference between the forced valuessts_short_self_test2_allowed_diff2               [23:12]                    When manual short self-test is selected this value is used for comparison against the obtained differencesMagic_number                                        [27:24]                   Default value – identical for all registerssParity                                                           [31:28]                  Parity calculation on bits[27:0] 



; REGISTER RxRTS_Drift_Control Address h90003314
_RxRTS_Drift_Control = 2415932180 0 17 b00000000000000000000000000000000 RW
RxRTS_cpu_Drift = h90003314 0 16 h0 RW HEX
; Desc_RxRTS_cpu_Drift ts_short_self_test_DS_low_limit_high_value                [11:0]                 When manual short self-test is selected this value is used as high_limit against the high value ofs                                                                                                                         direct signature from TS sts_short_self_test_DS_low_limit_low_value                 [23:12]              When manual short self-test is selected this value is used as low_limit against the low value ofs                                                                                                                         direct signature from TSsMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
RxRTS_Drift_from_cpu = h90003314 16 1 h0 RW BIN
; Desc_RxRTS_Drift_from_cpu ts_short_self_test_DS_low_limit_high_value                [11:0]                 When manual short self-test is selected this value is used as high_limit against the high value ofs                                                                                                                         direct signature from TS sts_short_self_test_DS_low_limit_low_value                 [23:12]              When manual short self-test is selected this value is used as low_limit against the low value ofs                                                                                                                         direct signature from TSsMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_Drift_Parse_Ctrl Address h90003318
_RxRTS_Drift_Parse_Ctrl = 2415932184 0 2 b00000000000000000000000000000000 RW
RxRTS_DriftInvEnable = h90003318 0 1 h0 RW BIN
; Desc_RxRTS_DriftInvEnable ts_short_self_test_DS_high_limit_high_value               [11:0]                 When manual short self-test is selected this value is used as high_limit against the high value ofs                                                                                                                         direct signature from TS sts_short_self_test_DS_high_limit_low_value                [23:12]               When manual short self-test is selected this value is used as low_limit against the low value ofs                                                                                                                         direct signature from TSsMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                 [31:28]               Parity calculation on bits[27:0] 
RxRTS_DriftEnable = h90003318 1 1 h0 RW BIN
; Desc_RxRTS_DriftEnable ts_short_self_test_DS_high_limit_high_value               [11:0]                 When manual short self-test is selected this value is used as high_limit against the high value ofs                                                                                                                         direct signature from TS sts_short_self_test_DS_high_limit_low_value                [23:12]               When manual short self-test is selected this value is used as low_limit against the low value ofs                                                                                                                         direct signature from TSsMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_Drift_window_reg Address h9000331c
_RxRTS_Drift_window_reg = 2415932188 0 32 b00000010000000000000000000000000 RW
RxRTS_drfWin = h9000331c 0 32 h2000000 RW HEX
; Desc_RxRTS_drfWin ts0_high_comp              0                           ts0 comparison expected result  - step1s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               1                           ts0 comparison expected result - step1s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             2                           ts1 comparison expected result - step1s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               3                           ts1 comparison expected result - step1s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        4                          temperature difference comparison expected result - step1s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              5                           ts0 comparison expected result  - step2s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               6                           ts0 comparison expected result - step2s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             7                           ts1 comparison expected result - step2s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               8                           ts1 comparison expected resultv - step2s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        9                          temperature difference comparison expected result - step2s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              10                           ts0 comparison expected result  - step3s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               11                           ts0 comparison expected result - step3s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             12                           ts1 comparison expected result - step3s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               13                           ts1 comparison expected result - step3s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        14                          temperature difference comparison expected result - step3s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              15                           ts0 comparison expected result  - step4s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               16                           ts0 comparison expected result - step4s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             17                           ts1 comparison expected result - step4s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               18                           ts1 comparison expected result - step4s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        19                          temperature difference comparison expected result - step4s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsReserved                         [23:20]sMagic_number              [27:24]               Default value – identical for all registerssParity                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_RTS_Rx_test_bus Address h90003320
_RxRTS_RTS_Rx_test_bus = 2415932192 0 5 b00000000000000000000000000000000 RW
RxRTS_RTS_Rx_chain_sel = h90003320 0 5 h0 RW HEX
; Desc_RxRTS_RTS_Rx_chain_sel ts0_high_comp              0                           ts0 comparison expected result  - step5s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               1                           ts0 comparison expected result - step5s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             2                           ts1 comparison expected result - step5s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               3                           ts1 comparison expected result - step5s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        4                          temperature difference comparison expected result - step5s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              5                           ts0 comparison expected result  - step6s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               6                           ts0 comparison expected result - step6s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             7                           ts1 comparison expected result - step6s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               8                           ts1 comparison expected resultv - step6s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        9                          temperature difference comparison expected result - step6s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              10                           ts0 comparison expected result  - step7s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               11                           ts0 comparison expected result - step7s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             12                           ts1 comparison expected result - step7s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               13                           ts1 comparison expected result - step7s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        14                          temperature difference comparison expected result - step7s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              15                           ts0 comparison expected result  - step8s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               16                           ts0 comparison expected result - step8s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             17                           ts1 comparison expected result - step8s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               18                           ts1 comparison expected result - step8s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        19                          temperature difference comparison expected result - step8s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsReserved                         [23:20]sMagic_number              [27:24]               Default value – identical for all registerssParity                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_LinkQualityCtrl_reg Address h90003328
_RxRTS_LinkQualityCtrl_reg = 2415932200 0 17 b00000000000000000001000000000000 RW
RxRTS_LinkQualTotalWindSize = h90003328 0 16 h1000 RW HEX
; Desc_RxRTS_LinkQualTotalWindSize ts_func_allowed_diff                                                       [11:0]                 The allowed difference between TS0 and TS1 measured temperatures sReserved                                                                         [23:12]sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
RxRTS_LinkQualityEnable = h90003328 16 1 h0 RW BIN
; Desc_RxRTS_LinkQualityEnable ts_func_allowed_diff                                                       [11:0]                 The allowed difference between TS0 and TS1 measured temperatures sReserved                                                                         [23:12]sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_NoRxKeepAliveN_thr_reg Address h90003338
_RxRTS_NoRxKeepAliveN_thr_reg = 2415932216 0 24 b00000000000000000001000000000000 RW
RxRTS_NoRxKeepAliveN_thr = h90003338 0 24 h1000 RW HEX
; Desc_RxRTS_NoRxKeepAliveN_thr defines the detection_enable for each errorsts0_high_level_comparator_en       [0]  - defines if ts0  high_level comparator will report a detected errorsts0_low_level_comparator_en        [1]  - defines if ts0  low_level comparator will report a detected errorsts1_high_level_comparator_en       [2]  - defines if ts1  high_level comparator will report a detected errorsts1_low_level_comparator_en        [3]  - defines if ts1  low_level comparator will report a detected errorsdiff_comparator_en                             [4]  - defines if difference comparator will report a detected errorsregister_parity_en                                [5]  - defines if a register parity error will be reportedsreserve                                        [11:6]sts0_high_level_count_en                [12]  - defines if ts0  high_level errors will be countedsts0_low_level_count_en                 [13]  - defines if ts0  low_level errors will be countedsts1_high_level_count_en                [14]  - defines if ts1  high_level errors will be countedsts1_low_level_count_en                 [15]  - defines if ts1  low_level errors will be countedsdiff_comparator_count_en            [16]  - defines if difference errors will be countedsMagic_number                                  [27:24]              Default value – identical for all registerssParity                                                     [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_NoRxreg Address h9000333c
_RxRTS_NoRxreg = 2415932220 0 25 b00000000000100110001001011010000 RW
RxRTS_NoRxThreshold = h9000333c 0 24 h1312d0 RW HEX
; Desc_RxRTS_NoRxThreshold ts_run_width                       [1:0]            Defines the width of RUN pulse.s                                                            2'h0 - RUN PULSE width = 1s                                                            2'h1 - RUN PULSE width = 2s                                                            2'h2 - RUN PULSE width = 3s                                                            2'h3 - RUN PULSE width = 4sts_cload_width                    [3:2]            Defines the width of CLOAD pulse.s                                                            2'h0 - CLOAD PULSE width = 1s                                                            2'h1 - CLOAD PULSE width = 2s                                                            2'h2 - CLOAD PULSE width = 3s                                                            2'h3 - CLOAD PULSE width = 4sMagic_number                    [27:24]              Default value – identical for all registerssParity                                       [31:28]               Parity calculation on bits[27:0] 
RxRTS_NoRxEnable = h9000333c 24 1 h0 RW BIN
; Desc_RxRTS_NoRxEnable ts_run_width                       [1:0]            Defines the width of RUN pulse.s                                                            2'h0 - RUN PULSE width = 1s                                                            2'h1 - RUN PULSE width = 2s                                                            2'h2 - RUN PULSE width = 3s                                                            2'h3 - RUN PULSE width = 4sts_cload_width                    [3:2]            Defines the width of CLOAD pulse.s                                                            2'h0 - CLOAD PULSE width = 1s                                                            2'h1 - CLOAD PULSE width = 2s                                                            2'h2 - CLOAD PULSE width = 3s                                                            2'h3 - CLOAD PULSE width = 4sMagic_number                    [27:24]              Default value – identical for all registerssParity                                       [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_AtypeChecker_reg_1 Address h900034d8
_RxRTS_AtypeChecker_reg_1 = 2415932632 0 32 b00000000000000000000000000000000 RW
RxRTS_Atype_00_sid = h900034d8 0 8 h0 RW HEX
; Desc_RxRTS_Atype_00_sid ts1_B_calibration                             [17:0]                Bcalibration + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 
RxRTS_Atype_01_sid = h900034d8 8 8 h0 RW HEX
; Desc_RxRTS_Atype_01_sid ts1_B_calibration                             [17:0]                Bcalibration + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 
RxRTS_Atype_02_sid = h900034d8 16 8 h0 RW HEX
; Desc_RxRTS_Atype_02_sid ts1_B_calibration                             [17:0]                Bcalibration + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 
RxRTS_Atype_03_sid = h900034d8 24 8 h0 RW HEX
; Desc_RxRTS_Atype_03_sid ts1_B_calibration                             [17:0]                Bcalibration + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 



; REGISTER RxRTS_AtypeChecker_reg_2 Address h900034dc
_RxRTS_AtypeChecker_reg_2 = 2415932636 0 32 b00000000000000000000000000000000 RW
RxRTS_Atype_04_sid = h900034dc 0 8 h0 RW HEX
; Desc_RxRTS_Atype_04_sid CRC calculated on bits [31:8]
RxRTS_Atype_05_sid = h900034dc 8 8 h0 RW HEX
; Desc_RxRTS_Atype_05_sid CRC calculated on bits [31:8]
RxRTS_Atype_06_sid = h900034dc 16 8 h0 RW HEX
; Desc_RxRTS_Atype_06_sid CRC calculated on bits [31:8]
RxRTS_Atype_07_sid = h900034dc 24 8 h0 RW HEX
; Desc_RxRTS_Atype_07_sid CRC calculated on bits [31:8]



; REGISTER RxRTS_AtypeChecker_reg_3 Address h900034e0
_RxRTS_AtypeChecker_reg_3 = 2415932640 0 32 b00000000000000000000000000000000 RW
RxRTS_Atype_08_sid = h900034e0 0 8 h0 RW HEX
; Desc_RxRTS_Atype_08_sid Ts0 functional mode temperature value read
RxRTS_Atype_09_sid = h900034e0 8 8 h0 RW HEX
; Desc_RxRTS_Atype_09_sid Ts0 functional mode temperature value read
RxRTS_Atype_10_sid = h900034e0 16 8 h0 RW HEX
; Desc_RxRTS_Atype_10_sid Ts0 functional mode temperature value read
RxRTS_Atype_11_sid = h900034e0 24 8 h0 RW HEX
; Desc_RxRTS_Atype_11_sid Ts0 functional mode temperature value read



; REGISTER RxRTS_AtypeChecker_reg_4 Address h900034e4
_RxRTS_AtypeChecker_reg_4 = 2415932644 0 32 b00000000000000000000000000000000 RW
RxRTS_Atype_12_sid = h900034e4 0 8 h0 RW HEX
; Desc_RxRTS_Atype_12_sid Ts1 functional mode temperature value read
RxRTS_Atype_13_sid = h900034e4 8 8 h0 RW HEX
; Desc_RxRTS_Atype_13_sid Ts1 functional mode temperature value read
RxRTS_Atype_14_sid = h900034e4 16 8 h0 RW HEX
; Desc_RxRTS_Atype_14_sid Ts1 functional mode temperature value read
RxRTS_Atype_15_sid = h900034e4 24 8 h0 RW HEX
; Desc_RxRTS_Atype_15_sid Ts1 functional mode temperature value read



; REGISTER RxRTS_AtypeCheckerEnableReg Address h900034e8
_RxRTS_AtypeCheckerEnableReg = 2415932648 0 16 b00000000000000000000000000000000 RW
RxRTS_TypeCheckerEnable = h900034e8 0 16 h0 RW HEX
; Desc_RxRTS_TypeCheckerEnable measurement data ready to be read



; REGISTER RxRTS_Atype_RD_TypeReg Address h900034ec
_RxRTS_Atype_RD_TypeReg = 2415932652 0 16 b00000000000000000000000000000000 RW
RxRTS_Atype_RD_Type = h900034ec 0 16 h0 RW HEX
; Desc_RxRTS_Atype_RD_Type Read only register. Allows the SW to read the actual difference between TS0 and TS1 temperature measurements. The result is the absolute value  



; REGISTER RxRTS_RxStatCtrlReg Address h900034f0
_RxRTS_RxStatCtrlReg = 2415932656 0 18 b00000000000000001001001001001001 RW
RxRTS_DeliveredCtrl_en = h900034f0 0 1 h1 RW BIN
; Desc_RxRTS_DeliveredCtrl_en The measured temperature value from TS0
RxRTS_DeliveredCtrl_latch = h900034f0 1 1 h0 RW BIN
; Desc_RxRTS_DeliveredCtrl_latch The measured temperature value from TS0
RxRTS_DeliveredCtrl_wrap_en = h900034f0 2 1 h0 RW BIN
; Desc_RxRTS_DeliveredCtrl_wrap_en The measured temperature value from TS0
RxRTS_ReceivedCtrl_en = h900034f0 3 1 h1 RW BIN
; Desc_RxRTS_ReceivedCtrl_en The measured temperature value from TS0
RxRTS_ReceivedCtrl_latch = h900034f0 4 1 h0 RW BIN
; Desc_RxRTS_ReceivedCtrl_latch The measured temperature value from TS0
RxRTS_ReceivedCtrl_wrap_en = h900034f0 5 1 h0 RW BIN
; Desc_RxRTS_ReceivedCtrl_wrap_en The measured temperature value from TS0
RxRTS_AsyncFifoCtrl_en = h900034f0 6 1 h1 RW BIN
; Desc_RxRTS_AsyncFifoCtrl_en The measured temperature value from TS0
RxRTS_AsyncFifoCtrl_latch = h900034f0 7 1 h0 RW BIN
; Desc_RxRTS_AsyncFifoCtrl_latch The measured temperature value from TS0
RxRTS_AsyncFifoCtrl_wrap_en = h900034f0 8 1 h0 RW BIN
; Desc_RxRTS_AsyncFifoCtrl_wrap_en The measured temperature value from TS0
RxRTS_RequestSndCtrl_en = h900034f0 9 1 h1 RW BIN
; Desc_RxRTS_RequestSndCtrl_en The measured temperature value from TS0
RxRTS_RequestSndCtrl_latch = h900034f0 10 1 h0 RW BIN
; Desc_RxRTS_RequestSndCtrl_latch The measured temperature value from TS0
RxRTS_RequestSndCtrl_wrap_en = h900034f0 11 1 h0 RW BIN
; Desc_RxRTS_RequestSndCtrl_wrap_en The measured temperature value from TS0
RxRTS_RequestRcvCtrl_en = h900034f0 12 1 h1 RW BIN
; Desc_RxRTS_RequestRcvCtrl_en The measured temperature value from TS0
RxRTS_RequestRcvCtrl_latch = h900034f0 13 1 h0 RW BIN
; Desc_RxRTS_RequestRcvCtrl_latch The measured temperature value from TS0
RxRTS_RequestRcvCtrl_wrap_en = h900034f0 14 1 h0 RW BIN
; Desc_RxRTS_RequestRcvCtrl_wrap_en The measured temperature value from TS0
RxRTS_RxRTSCtrl_en = h900034f0 15 1 h1 RW BIN
; Desc_RxRTS_RxRTSCtrl_en The measured temperature value from TS0
RxRTS_RxRTSCtrl_latch = h900034f0 16 1 h0 RW BIN
; Desc_RxRTS_RxRTSCtrl_latch The measured temperature value from TS0
RxRTS_RxRTSCtrl_wrap_en = h900034f0 17 1 h0 RW BIN
; Desc_RxRTS_RxRTSCtrl_wrap_en The measured temperature value from TS0
RxRTS_DeliveredCtrl_clear = h900034f0 18 1 h0 RW BIN
RxRTS_ReceivedCtrl_clear = h900034f0 19 1 h0 RW BIN
RxRTS_AsyncFifoCtrl_clear = h900034f0 20 1 h0 RW BIN
RxRTS_RequestSndCtrl_clear = h900034f0 21 1 h0 RW BIN
RxRTS_RequestRcvCtrl_clear = h900034f0 22 1 h0 RW BIN
RxRTS_RxRTSCtrl_clear = h900034f0 23 1 h0 RW BIN



; REGISTER RxRTS_RxIntThresholdFIFOReg Address h900034f4
_RxRTS_RxIntThresholdFIFOReg = 2415932660 0 16 b00000000000000000000000000100000 RW
RxRTS_AsyncFifoDropCntThreshold = h900034f4 0 16 h20 RW HEX
; Desc_RxRTS_AsyncFifoDropCntThreshold To be used while in Bypass mode to allow the SW to determine when the TS0 temperature value is ready and can be read



; REGISTER RxRTS_RxIntThresholdCRCReg Address h900034f8
_RxRTS_RxIntThresholdCRCReg = 2415932664 0 32 b00000000001000000000000001000000 RW
RxRTS_ApktBadCrc32Threshold = h900034f8 0 16 h40 RW HEX
; Desc_RxRTS_ApktBadCrc32Threshold Ts0 measured temperature is out of the defined limits – either higher or lower
RxRTS_ApktBadHcrcThreshold = h900034f8 16 16 h20 RW HEX
; Desc_RxRTS_ApktBadHcrcThreshold Ts0 measured temperature is out of the defined limits – either higher or lower



; REGISTER ApktRTS_blocks_reset_n_reg Address h90003600
_ApktRTS_blocks_reset_n_reg = 2415932928 0 5 b00000000000000000000000000000000 RW
ApktRTS_blocks_reset_n = h90003600 0 5 h0 RW HEX
; Desc_ApktRTS_blocks_reset_n ts0 data output value sampled at rdy
ApktRTS_trn_reset_n = h90003600 0 1 h0 RW BIN
>>DESC ApktRTS_trn_reset_n = 2, b0, reset, b1, enable
ApktRTS_rcv_reset_n = h90003600 1 1 h0 RW BIN
>>DESC ApktRTS_rcv_reset_n = 2, b0, reset, b1, enable
ApktTxRTS_sys_reset_n = h90003600 2 1 h0 RW BIN
>>DESC ApktTxRTS_sys_reset_n = 2, b0, reset, b1, enable
ApktRxRTS_sys_reset_n = h90003600 3 1 h0 RW BIN
>>DESC ApktRxRTS_sys_reset_n = 2, b0, reset, b1, enable
ApktRTS_tb_reset_n = h90003600 4 1 h0 RW BIN
>>DESC ApktRTS_tb_reset_n = 2, b0, reset, b1, enable



; REGISTER ApktRTS_int_mask_reg Address h90003610
_ApktRTS_int_mask_reg = 2415932944 0 20 b00000000000000000000000000000011 RW
ApktRTS_int_mask = h90003610 0 20 h3 RW HEX
; Desc_ApktRTS_int_mask Sched Fetch Pacer enable      Only for Uplink!
ApktTxRetReq_int_mask = h90003610 0 4 h3 RW HEX
ApktTxDelayCalc_int_mask = h90003610 4 1 h0 RW BIN
TxBuffer_original_no_tx_int_mask = h90003610 5 1 h0 RW BIN
TxBuffer_original_pre_retx_int_mask = h90003610 6 1 h0 RW BIN
TxBuffer_addr_override_int_mask = h90003610 7 1 h0 RW BIN
TxBuffer_mc_used_int_mask = h90003610 8 1 h0 RW BIN
TxBuffer_used_int_mask = h90003610 9 1 h0 RW BIN
MaxRetrainTime_int_mask = h90003610 10 1 h0 RW BIN
ErrInjection_done_int = h90003610 11 1 h0 RW BIN
NoRx_int_mask = h90003610 12 1 h0 RW BIN
NoRxKA_int_mask = h90003610 13 1 h0 RW BIN
LinkQuality_int_mask = h90003610 14 1 h0 RW BIN
RxBuffer_err_int_mask = h90003610 15 1 h0 RW BIN
rx_fifo_overflow_int_mask = h90003610 16 1 h0 RW BIN
header_error_int_mask = h90003610 17 1 h0 RW BIN
async_fifo_drop_int_mask = h90003610 18 1 h0 RW BIN
packet_error_int_mask = h90003610 19 1 h0 RW BIN



; REGISTER ApktRTS_testbus_sel_reg Address h9000361c
_ApktRTS_testbus_sel_reg = 2415932956 0 1 b00000000000000000000000000000000 RW
ApktRTS_testbus_sel = h9000361c 0 1 h0 RW BIN
; Desc_ApktRTS_testbus_sel interrupt threshold for used number of words in the TX Buffer RAM



; REGISTER ApktRTS_Memory_Power_Mode Address h90003620
_ApktRTS_Memory_Power_Mode = 2415932960 0 6 b00000000000000000000000000000000 RW
TxBuffer_LS = h90003620 0 1 h0 RW BIN
; Desc_TxBuffer_LS Prefer Original High Threshold should be configured to 80% of MaxRTSTimesMeaning Raise Prefer Original at 80% near expiration
TxBuffer_DS = h90003620 1 1 h0 RW BIN
; Desc_TxBuffer_DS Prefer Original High Threshold should be configured to 80% of MaxRTSTimesMeaning Raise Prefer Original at 80% near expiration
TxBuffer_SD = h90003620 2 1 h0 RW BIN
; Desc_TxBuffer_SD Prefer Original High Threshold should be configured to 80% of MaxRTSTimesMeaning Raise Prefer Original at 80% near expiration
RxBuffer_LS = h90003620 3 1 h0 RW BIN
; Desc_RxBuffer_LS Prefer Original High Threshold should be configured to 80% of MaxRTSTimesMeaning Raise Prefer Original at 80% near expiration
RxBuffer_DS = h90003620 4 1 h0 RW BIN
; Desc_RxBuffer_DS Prefer Original High Threshold should be configured to 80% of MaxRTSTimesMeaning Raise Prefer Original at 80% near expiration
RxBuffer_SD = h90003620 5 1 h0 RW BIN
; Desc_RxBuffer_SD Prefer Original High Threshold should be configured to 80% of MaxRTSTimesMeaning Raise Prefer Original at 80% near expiration



; REGISTER sw_int_mask0_reg Address h90004040
_sw_int_mask0_reg = 2415935552 0 32 b00000000000000000000000000000000 RW
sw_int_mask0 = h90004040 0 32 h0 RW HEX
; Desc_sw_int_mask0 In continuous mode this input set the ratio of packets with bad payload relative to 1024 A-Packets



; REGISTER sw_int_mask1_reg Address h90004044
_sw_int_mask1_reg = 2415935556 0 32 b00000000000000000000000000000000 RW
sw_int_mask1 = h90004044 0 32 h0 RW HEX
; Desc_sw_int_mask1 Counter for A-Packets that satisfied the following Error Injection criteria: s1.sTheir Atype bit is set in the AtypeSelVec vectors2.sIn case orig_only is set – count only original packets, otherwise count also retransmitted packets 



; REGISTER sw_int_mask2_reg Address h90004048
_sw_int_mask2_reg = 2415935560 0 32 b00000000000000000000000000000000 RW
sw_int_mask2 = h90004048 0 32 h0 RW HEX
; Desc_sw_int_mask2 Count packets that their payload manipulated



; REGISTER sw_int_mask3_reg Address h9000404c
_sw_int_mask3_reg = 2415935564 0 32 b00000000000000000000000000000000 RW
sw_int_mask3 = h9000404c 0 32 h0 RW HEX
; Desc_sw_int_mask3 Count packets that their header manipulated and their CRC8 not fixed according to the new header data



; REGISTER sw_int_mask4_reg Address h90004050
_sw_int_mask4_reg = 2415935568 0 32 b00000000000000000000000000000000 RW
sw_int_mask4 = h90004050 0 32 h0 RW HEX
; Desc_sw_int_mask4 Count packets that their header manipulated and their CRC8 fixed according to the new header data



; REGISTER sw_int_mask5_reg Address h90004054
_sw_int_mask5_reg = 2415935572 0 32 b00000000000000000000000000000000 RW
sw_int_mask5 = h90004054 0 32 h0 RW HEX
; Desc_sw_int_mask5 Count packets that their header manipulated and their CRC8 fixed according to the new header data



; REGISTER sw_int_mask6_reg Address h90004058
_sw_int_mask6_reg = 2415935576 0 32 b00000000000000000000000000000000 RW
sw_int_mask6 = h90004058 0 32 h0 RW HEX
; Desc_sw_int_mask6 RTS Enable, when cleared, in RTS Bypass mode



; REGISTER sw_int_mask7_reg Address h9000405c
_sw_int_mask7_reg = 2415935580 0 32 b00000000000000000000000000000000 RW
sw_int_mask7 = h9000405c 0 32 h0 RW HEX
; Desc_sw_int_mask7 Enables Ack generation



; REGISTER memSD_bp Address h90004100
_memSD_bp = 2415935744 0 4 b00000000000000000000000000000000 RW
msio_memSD_bp = h90004100 0 1 h0 RW BIN
; Desc_msio_memSD_bp Max RTS Time as defined in Aphy Spec
>>DESC msio_memSD_bp = 2, b0,  no SD., b1, enable - memory in SD
csi_memSD_bp = h90004100 1 1 h0 RW BIN
; Desc_csi_memSD_bp Max RTS Time as defined in Aphy Spec
>>DESC csi_memSD_bp = 2, b0,  no SD., b1, enable - memory in SD
rts_memSD_bp = h90004100 2 1 h0 RW BIN
; Desc_rts_memSD_bp Max RTS Time as defined in Aphy Spec
>>DESC rts_memSD_bp = 2, b0,  no SD., b1, enable - memory in SD
afe_if_memSD_bp = h90004100 3 1 h0 RW BIN
; Desc_afe_if_memSD_bp Max RTS Time as defined in Aphy Spec
>>DESC afe_if_memSD_bp = 2, b0,  no SD., b1, enable - memory in SD



; REGISTER wrm_reset_indication_reg Address h9001000c
_wrm_reset_indication_reg = 2415984652 0 32 b00000000000000000000000000000000 SC
wrm_reset_indication = h9001000c 0 1 h0 SC BIN
; Desc_wrm_reset_indication short_self_test_high_limit1       [11:0]                  When manual short self-test is selected this value is used as high_limit1sshort_self_test_low_limit1        [23:12]                When manual short self-test is selected this value is used as low_limit1sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 



; REGISTER sw_sticky_reset_reg Address h90010010
_sw_sticky_reset_reg = 2415984656 0 32 b00000000000000000000000000000000 SC
reset_indication = h90010010 0 1 h0 SC BIN
; Desc_reset_indication man_sh_st_high_limit2s         [11:0]                When manual short self-test is selected this value is used as high_limit2sman_sh_st_low_limit2           [23:12]             When manual short self-test is selected this value is used as low_limit2sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 



; REGISTER wd_sticky_reset_reg Address h90010014
_wd_sticky_reset_reg = 2415984660 0 32 b00000000000000000000000000000000 SC
wd_reset_indication = h90010014 0 1 h0 SC BIN
; Desc_wd_reset_indication man_sh_st_high_limit3s         [11:0]                When manual short self-test is selected this value is used as high_limit3sman_sh_st_low_limit3           [23:12]             When manual short self-test is selected this value is used as low_limit3sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 



; REGISTER reset_configuration_bus_ovd_reg Address h90010000
_reset_configuration_bus_ovd_reg = 2415984640 0 32 b00000000000000000000000000000000 RW
reset_configuration_bus_ovd = h90010000 0 4 h0 RW HEX
; Desc_reset_configuration_bus_ovd Enable Debug Port Access to secure places



; REGISTER reset_configuration_bus_sel_reg Address h90010004
_reset_configuration_bus_sel_reg = 2415984644 0 32 b00000000000000000000000000000000 RW
reset_configuration_bus_sel = h90010004 0 4 h0 RW HEX
; Desc_reset_configuration_bus_sel mask interrupts in interrupt controller bits [63:32]  for VPE0: mask = 1



; REGISTER top_regs_reset_reg Address h90010008
_top_regs_reset_reg = 2415984648 0 1 b00000000000000000000000000000000 RW
top_regs_reset = h90010008 0 1 h0 RW BIN
; Desc_top_regs_reset read which interrupts set in interrupt controller bits [31:0]  for VPE1



; REGISTER fw_data0_reg Address h90010018
_fw_data0_reg = 2415984664 0 32 b00000000000000000000000000000000 RW
fw_data0 = h90010018 0 32 h0 RW HEX
; Desc_fw_data0 interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 16 to 20



; REGISTER fw_data1_reg Address h9001001c
_fw_data1_reg = 2415984668 0 32 b00000000000000000000000000000000 RW
fw_data1 = h9001001c 0 32 h0 RW HEX
; Desc_fw_data1 interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 36 to 40



; REGISTER fw_data2_reg Address h90010020
_fw_data2_reg = 2415984672 0 32 b00000000000000000000000000000000 RW
fw_data2 = h90010020 0 32 h0 RW HEX
; Desc_fw_data2 interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 56 to 60



; REGISTER fw_data3_reg Address h90010024
_fw_data3_reg = 2415984676 0 32 b00000000000000000000000000000000 RW
fw_data3 = h90010024 0 32 h0 RW HEX
; Desc_fw_data3 interrupt controller 0: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER fw_data4_reg Address h90010028
_fw_data4_reg = 2415984680 0 32 b00000000000000000000000000000000 RW
fw_data4 = h90010028 0 32 h0 RW HEX
; Desc_fw_data4 interrupt controller 1: defines shadow set of registers for interrupts 1 to 8.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER fw_data5_reg Address h9001002c
_fw_data5_reg = 2415984684 0 32 b00000000000000000000000000000000 RW
fw_data5 = h9001002c 0 32 h0 RW HEX
; Desc_fw_data5 interrupt controller 1: defines shadow set of registers for interrupts 41 to 48.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER fw_data6_reg Address h90010030
_fw_data6_reg = 2415984688 0 32 b00000000000000000000000000000000 RW
fw_data6 = h90010030 0 32 h0 RW HEX
; Desc_fw_data6 Set GPIO 32 Direction 1 = input



; REGISTER fw_data7_reg Address h90010034
_fw_data7_reg = 2415984692 0 32 b00000000000000000000000000000000 RW
fw_data7 = h90010034 0 32 h0 RW HEX
; Desc_fw_data7 GPIO Interrupts status and clear upon write



; REGISTER fw_data8_reg Address h90010038
_fw_data8_reg = 2415984696 0 32 b00000000000000000000000000000000 RW
fw_data8 = h90010038 0 32 h0 RW HEX
; Desc_fw_data8 Read/Write Current Data on the GPO pins



; REGISTER fw_data9_reg Address h9001003c
_fw_data9_reg = 2415984700 0 32 b00000000000000000000000000000000 RW
fw_data9 = h9001003c 0 32 h0 RW HEX
; Desc_fw_data9 Pull Enable - Default 1



; REGISTER fw_data10_reg Address h90010040
_fw_data10_reg = 2415984704 0 32 b00000000000000000000000000000000 RW
fw_data10 = h90010040 0 32 h0 RW HEX
; Desc_fw_data10 Drive Strength - Default 00 - weakest drive



; REGISTER fw_data11_reg Address h90010044
_fw_data11_reg = 2415984708 0 32 b00000000000000000000000000000000 RW
fw_data11 = h90010044 0 32 h0 RW HEX
; Desc_fw_data11 Drive Strength - Default 00 - weakest drive



; REGISTER fw_data12_reg Address h90010048
_fw_data12_reg = 2415984712 0 32 b00000000000000000000000000000000 RW
fw_data12 = h90010048 0 32 h0 RW HEX
; Desc_fw_data12 GPIO interrupt can be invoked on different edgess0:rise edge, 1: fall edge



; REGISTER fw_data13_reg Address h9001004c
_fw_data13_reg = 2415984716 0 32 b00000000000000000000000000000000 RW
fw_data13 = h9001004c 0 32 h0 RW HEX
; Desc_fw_data13 GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge



; REGISTER fw_data14_reg Address h90010050
_fw_data14_reg = 2415984720 0 32 b00000000000000000000000000000000 RW
fw_data14 = h90010050 0 32 h0 RW HEX
; Desc_fw_data14 rif uart protocol errors counter



; REGISTER fw_data15_reg Address h90010054
_fw_data15_reg = 2415984724 0 32 b00000000000000000000000000000000 RW
fw_data15 = h90010054 0 32 h0 RW HEX
; Desc_fw_data15 rif uart protocol errors counter



; REGISTER Meron_Source_dsp_blocks_reset_done_reg Address h90020004
_Meron_Source_dsp_blocks_reset_done_reg = 2416050180 0 32 b00000000000000000000000000000000 RO
Meron_Source_dsp_blocks_reset_done = h90020004 0 13 h0 RO HEX
; Desc_Meron_Source_dsp_blocks_reset_done man_sh_st_forced_ts0_value1             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssman_sh_st_forced_ts1_value1             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
DSP_TX_SYS_CLK_RESET_DONE = h90020004 0 1 h0 RO BIN
DSP_RX_SYS_CLK_RESET_DONE = h90020004 1 1 h0 RO BIN
PCS_8b10b_TRN_CLK_RESET_DONE = h90020004 2 1 h0 RO BIN
DSP_TRN_CLK_RESET_DONE = h90020004 3 1 h0 RO BIN
PCS_8b10b_RCV_CLK_RESET_DONE = h90020004 4 1 h0 RO BIN
DSP_RCV_CLK_RESET_DONE = h90020004 5 1 h0 RO BIN
PCS_PAMX_TRN_CLK_RESET_DONE = h90020004 6 1 h0 RO BIN
CHAN_TX_TRN_CLK_RESET_DONE = h90020004 7 1 h0 RO BIN
TM_TRN_CLK_RESET_DONE = h90020004 8 1 h0 RO BIN
APKT_TO_BYTES_TRN_CLK_RESET_DONE = h90020004 9 1 h0 RO BIN
TESTBUS_RCV_RESET_DONE = h90020004 10 1 h0 RO BIN
TESTBUS_TRN_RESET_DONE = h90020004 11 1 h0 RO BIN
NON_GATED_RESET_DONE = h90020004 12 1 h0 RO BIN



; REGISTER dsp_int_stat_reg Address h9002000c
_dsp_int_stat_reg = 2416050188 0 32 b00000000000000000000000000000000 SC
dsp_int_stat = h9002000c 0 12 h0 SC HEX
; Desc_dsp_int_stat man_sh_st_forced_ts0_value2             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssman_sh_st_forced_ts1_value2             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
Err_Measurements_MseErrRate_found_RO = h9002000c 0 1 h0 SC BIN
Err_Measurements_MaxErrRate_found_RO = h9002000c 1 1 h0 SC BIN
Sin_Measurements_MseSinRate_found_RO = h9002000c 2 1 h0 SC BIN
Sin_Measurements_MaxSinRate_found_RO = h9002000c 3 1 h0 SC BIN
RX_PCS_scr_lost_d = h9002000c 4 1 h0 SC BIN
RX_PCS_scr_lock_d = h9002000c 5 1 h0 SC BIN
PAMX_ptiInScmaxdiv2Interrupt = h9002000c 6 1 h0 SC BIN
pti_stm_PTI_TXIDLE_d = h9002000c 7 1 h0 SC BIN
pti_stm_PTI_TXISS_d = h9002000c 8 1 h0 SC BIN
pti_stm_PTI_NORMAL_d = h9002000c 9 1 h0 SC BIN
tba_final_trigger_out = h9002000c 10 1 h0 SC BIN
scm_fifo_read_ready_inter = h9002000c 11 1 h0 SC BIN



; REGISTER RX_SRC_RX_DSP_Timing_reg2 Address h90020188
_RX_SRC_RX_DSP_Timing_reg2 = 2416050568 0 32 b00000000000000000000000000000000 RO
RX_SRC_RX_DSP_Timing_sensor_RO = h90020188 0 21 h0 RO HEX
; Desc_RX_SRC_RX_DSP_Timing_sensor_RO man_sh_st_forced_ts0_value3             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssman_sh_st_forced_ts1_value3             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 



; REGISTER RX_SRC_RX_DSP_Sar_status_reg1 Address h90020198
_RX_SRC_RX_DSP_Sar_status_reg1 = 2416050584 0 32 b00000000000000000000000000000000 RO
RX_SRC_RX_DSP_SarCncl_SarCorr_RO = h90020198 0 15 h0 RO HEX
; Desc_RX_SRC_RX_DSP_SarCncl_SarCorr_RO man_sh_st1_allowed_diff1               [11:0]                      When manual short self-test is selected this value is used for comparison against the obtained difference between the forced valuessman_sh_st1_allowed_diff2               [23:12]                    When manual short self-test is selected this value is used for comparison against the obtained difference between the forced valuessMagic_number                                        [27:24]                   Default value – identical for all registerssParity                                                           [31:28]                  Parity calculation on bits[27:0] 



; REGISTER RX_SRC_RX_DSP_Sin_Measurements_status_reg_0 Address h900201a0
_RX_SRC_RX_DSP_Sin_Measurements_status_reg_0 = 2416050592 0 32 b00000000000000000000000000000000 RO
RX_SRC_RX_DSP_Sin_Measurements_MaxSin_RO = h900201a0 0 12 h0 RO HEX
; Desc_RX_SRC_RX_DSP_Sin_Measurements_MaxSin_RO man_sh_st2_allowed_diff1               [11:0]                      When manual short self-test is selected this value is used for comparison against the obtained difference between the forced valuessman_sh_st2_allowed_diff2               [23:12]                    When manual short self-test is selected this value is used for comparison against the obtained differencesMagic_number                                        [27:24]                   Default value – identical for all registerssParity                                                           [31:28]                  Parity calculation on bits[27:0] 
RX_SRC_RX_DSP_Sin_Measurements_MseSin_RO_wMH = h900201a0 12 17 h0 RO HEX
; Desc_RX_SRC_RX_DSP_Sin_Measurements_MseSin_RO_wMH man_sh_st2_allowed_diff1               [11:0]                      When manual short self-test is selected this value is used for comparison against the obtained difference between the forced valuessman_sh_st2_allowed_diff2               [23:12]                    When manual short self-test is selected this value is used for comparison against the obtained differencesMagic_number                                        [27:24]                   Default value – identical for all registerssParity                                                           [31:28]                  Parity calculation on bits[27:0] 
RX_SRC_RX_DSP_Sin_Measurements_MaxSinRate_found_RO = h900201a0 29 1 h0 RO BIN
; Desc_RX_SRC_RX_DSP_Sin_Measurements_MaxSinRate_found_RO man_sh_st2_allowed_diff1               [11:0]                      When manual short self-test is selected this value is used for comparison against the obtained difference between the forced valuessman_sh_st2_allowed_diff2               [23:12]                    When manual short self-test is selected this value is used for comparison against the obtained differencesMagic_number                                        [27:24]                   Default value – identical for all registerssParity                                                           [31:28]                  Parity calculation on bits[27:0] 
RX_SRC_RX_DSP_Sin_Measurements_MaxSin_rate_tmout_RO = h900201a0 30 1 h0 RO BIN
; Desc_RX_SRC_RX_DSP_Sin_Measurements_MaxSin_rate_tmout_RO man_sh_st2_allowed_diff1               [11:0]                      When manual short self-test is selected this value is used for comparison against the obtained difference between the forced valuessman_sh_st2_allowed_diff2               [23:12]                    When manual short self-test is selected this value is used for comparison against the obtained differencesMagic_number                                        [27:24]                   Default value – identical for all registerssParity                                                           [31:28]                  Parity calculation on bits[27:0] 
RX_SRC_RX_DSP_Sin_Measurements_MseSinRate_found_RO = h900201a0 31 1 h0 RO BIN
; Desc_RX_SRC_RX_DSP_Sin_Measurements_MseSinRate_found_RO man_sh_st2_allowed_diff1               [11:0]                      When manual short self-test is selected this value is used for comparison against the obtained difference between the forced valuessman_sh_st2_allowed_diff2               [23:12]                    When manual short self-test is selected this value is used for comparison against the obtained differencesMagic_number                                        [27:24]                   Default value – identical for all registerssParity                                                           [31:28]                  Parity calculation on bits[27:0] 



; REGISTER RX_SRC_RX_DSP_Sin_Meas_status_reg_1 Address h900201a4
_RX_SRC_RX_DSP_Sin_Meas_status_reg_1 = 2416050596 0 32 b00000000000000000000000000000000 RO
RX_SRC_RX_DSP_Sin_Measurements_MaxSinRate_evnts_RO = h900201a4 0 30 h0 RO HEX
; Desc_RX_SRC_RX_DSP_Sin_Measurements_MaxSinRate_evnts_RO man_sh_st_DS_low_limit_high_value                [11:0]                 When manual short self-test is selected this value is used as high_limit against the high value ofs                                                                                                                         direct signature from TS sman_sh_st_DS_low_limit_low_value                 [23:12]              When manual short self-test is selected this value is used as low_limit against the low value ofs                                                                                                                         direct signature from TSsMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
RX_SRC_RX_DSP_Sin_Measurements_MseSin_rate_tmout_RO = h900201a4 30 1 h0 RO BIN
; Desc_RX_SRC_RX_DSP_Sin_Measurements_MseSin_rate_tmout_RO man_sh_st_DS_low_limit_high_value                [11:0]                 When manual short self-test is selected this value is used as high_limit against the high value ofs                                                                                                                         direct signature from TS sman_sh_st_DS_low_limit_low_value                 [23:12]              When manual short self-test is selected this value is used as low_limit against the low value ofs                                                                                                                         direct signature from TSsMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER RX_SRC_RX_DSP_Sin_Meas_status_reg_2 Address h900201a8
_RX_SRC_RX_DSP_Sin_Meas_status_reg_2 = 2416050600 0 32 b00000000000000000000000000000000 RO
RX_SRC_RX_DSP_Sin_Measurements_MseSinRate_evnts_RO = h900201a8 0 30 h0 RO HEX
; Desc_RX_SRC_RX_DSP_Sin_Measurements_MseSinRate_evnts_RO man_sh_st_DS_high_limit_high_value               [11:0]                 When manual short self-test is selected this value is used as high_limit against the high value ofs                                                                                                                         direct signature from TS sman_sh_st_DS_high_limit_low_value                [23:12]               When manual short self-test is selected this value is used as low_limit against the low value ofs                                                                                                                         direct signature from TSsMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER RX_SRC_RX_DSP_DcCncl_DcEst_status_reg Address h900201ac
_RX_SRC_RX_DSP_DcCncl_DcEst_status_reg = 2416050604 0 32 b00000000000000000000000000000000 RO
RX_SRC_RX_DSP_DcCncl_DcEst_RO = h900201ac 0 11 h0 RO HEX
; Desc_RX_SRC_RX_DSP_DcCncl_DcEst_RO ts0_high_comp              0                           ts0 comparison expected result  - step1s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               1                           ts0 comparison expected result - step1s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             2                           ts1 comparison expected result - step1s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               3                           ts1 comparison expected result - step1s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        4                          temperature difference comparison expected result - step1s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              5                           ts0 comparison expected result  - step2s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               6                           ts0 comparison expected result - step2s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             7                           ts1 comparison expected result - step2s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               8                           ts1 comparison expected resultv - step2s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        9                          temperature difference comparison expected result - step2s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              10                           ts0 comparison expected result  - step3s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               11                           ts0 comparison expected result - step3s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             12                           ts1 comparison expected result - step3s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               13                           ts1 comparison expected result - step3s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        14                          temperature difference comparison expected result - step3s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              15                           ts0 comparison expected result  - step4s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               16                           ts0 comparison expected result - step4s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             17                           ts1 comparison expected result - step4s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               18                           ts1 comparison expected result - step4s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        19                          temperature difference comparison expected result - step4s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsReserved                         [23:20]sMagic_number              [27:24]               Default value – identical for all registerssParity                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER RX_SRC_RX_DSP_Err_Meas_status_reg_0 Address h900201b0
_RX_SRC_RX_DSP_Err_Meas_status_reg_0 = 2416050608 0 32 b00000000000000000000000000000000 RO
RX_SRC_RX_DSP_Err_Measurements_MaxErr_RO = h900201b0 0 10 h0 RO HEX
; Desc_RX_SRC_RX_DSP_Err_Measurements_MaxErr_RO ts0_high_comp              0                           ts0 comparison expected result  - step5s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               1                           ts0 comparison expected result - step5s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             2                           ts1 comparison expected result - step5s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               3                           ts1 comparison expected result - step5s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        4                          temperature difference comparison expected result - step5s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              5                           ts0 comparison expected result  - step6s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               6                           ts0 comparison expected result - step6s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             7                           ts1 comparison expected result - step6s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               8                           ts1 comparison expected resultv - step6s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        9                          temperature difference comparison expected result - step6s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              10                           ts0 comparison expected result  - step7s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               11                           ts0 comparison expected result - step7s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             12                           ts1 comparison expected result - step7s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               13                           ts1 comparison expected result - step7s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        14                          temperature difference comparison expected result - step7s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              15                           ts0 comparison expected result  - step8s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               16                           ts0 comparison expected result - step8s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             17                           ts1 comparison expected result - step8s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               18                           ts1 comparison expected result - step8s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        19                          temperature difference comparison expected result - step8s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsReserved                         [23:20]sMagic_number              [27:24]               Default value – identical for all registerssParity                                 [31:28]               Parity calculation on bits[27:0] 
RX_SRC_RX_DSP_Err_Measurements_MseErr_RO_W_MH = h900201b0 10 17 h0 RO HEX
; Desc_RX_SRC_RX_DSP_Err_Measurements_MseErr_RO_W_MH ts0_high_comp              0                           ts0 comparison expected result  - step5s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               1                           ts0 comparison expected result - step5s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             2                           ts1 comparison expected result - step5s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               3                           ts1 comparison expected result - step5s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        4                          temperature difference comparison expected result - step5s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              5                           ts0 comparison expected result  - step6s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               6                           ts0 comparison expected result - step6s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             7                           ts1 comparison expected result - step6s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               8                           ts1 comparison expected resultv - step6s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        9                          temperature difference comparison expected result - step6s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              10                           ts0 comparison expected result  - step7s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               11                           ts0 comparison expected result - step7s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             12                           ts1 comparison expected result - step7s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               13                           ts1 comparison expected result - step7s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        14                          temperature difference comparison expected result - step7s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              15                           ts0 comparison expected result  - step8s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               16                           ts0 comparison expected result - step8s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             17                           ts1 comparison expected result - step8s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               18                           ts1 comparison expected result - step8s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        19                          temperature difference comparison expected result - step8s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsReserved                         [23:20]sMagic_number              [27:24]               Default value – identical for all registerssParity                                 [31:28]               Parity calculation on bits[27:0] 
RX_SRC_RX_DSP_Err_Measurements_MaxErrRate_found_RO = h900201b0 27 1 h0 RO BIN
; Desc_RX_SRC_RX_DSP_Err_Measurements_MaxErrRate_found_RO ts0_high_comp              0                           ts0 comparison expected result  - step5s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               1                           ts0 comparison expected result - step5s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             2                           ts1 comparison expected result - step5s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               3                           ts1 comparison expected result - step5s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        4                          temperature difference comparison expected result - step5s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              5                           ts0 comparison expected result  - step6s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               6                           ts0 comparison expected result - step6s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             7                           ts1 comparison expected result - step6s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               8                           ts1 comparison expected resultv - step6s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        9                          temperature difference comparison expected result - step6s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              10                           ts0 comparison expected result  - step7s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               11                           ts0 comparison expected result - step7s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             12                           ts1 comparison expected result - step7s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               13                           ts1 comparison expected result - step7s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        14                          temperature difference comparison expected result - step7s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              15                           ts0 comparison expected result  - step8s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               16                           ts0 comparison expected result - step8s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             17                           ts1 comparison expected result - step8s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               18                           ts1 comparison expected result - step8s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        19                          temperature difference comparison expected result - step8s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsReserved                         [23:20]sMagic_number              [27:24]               Default value – identical for all registerssParity                                 [31:28]               Parity calculation on bits[27:0] 
RX_SRC_RX_DSP_Err_Measurements_MaxErr_rate_tmout_RO = h900201b0 28 1 h0 RO BIN
; Desc_RX_SRC_RX_DSP_Err_Measurements_MaxErr_rate_tmout_RO ts0_high_comp              0                           ts0 comparison expected result  - step5s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               1                           ts0 comparison expected result - step5s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             2                           ts1 comparison expected result - step5s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               3                           ts1 comparison expected result - step5s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        4                          temperature difference comparison expected result - step5s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              5                           ts0 comparison expected result  - step6s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               6                           ts0 comparison expected result - step6s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             7                           ts1 comparison expected result - step6s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               8                           ts1 comparison expected resultv - step6s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        9                          temperature difference comparison expected result - step6s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              10                           ts0 comparison expected result  - step7s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               11                           ts0 comparison expected result - step7s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             12                           ts1 comparison expected result - step7s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               13                           ts1 comparison expected result - step7s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        14                          temperature difference comparison expected result - step7s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              15                           ts0 comparison expected result  - step8s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               16                           ts0 comparison expected result - step8s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             17                           ts1 comparison expected result - step8s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               18                           ts1 comparison expected result - step8s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        19                          temperature difference comparison expected result - step8s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsReserved                         [23:20]sMagic_number              [27:24]               Default value – identical for all registerssParity                                 [31:28]               Parity calculation on bits[27:0] 
RX_SRC_RX_DSP_Err_Measurements_MseErrRate_found_RO = h900201b0 29 1 h0 RO BIN
; Desc_RX_SRC_RX_DSP_Err_Measurements_MseErrRate_found_RO ts0_high_comp              0                           ts0 comparison expected result  - step5s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               1                           ts0 comparison expected result - step5s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             2                           ts1 comparison expected result - step5s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               3                           ts1 comparison expected result - step5s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        4                          temperature difference comparison expected result - step5s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              5                           ts0 comparison expected result  - step6s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               6                           ts0 comparison expected result - step6s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             7                           ts1 comparison expected result - step6s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               8                           ts1 comparison expected resultv - step6s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        9                          temperature difference comparison expected result - step6s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              10                           ts0 comparison expected result  - step7s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               11                           ts0 comparison expected result - step7s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             12                           ts1 comparison expected result - step7s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               13                           ts1 comparison expected result - step7s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        14                          temperature difference comparison expected result - step7s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              15                           ts0 comparison expected result  - step8s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               16                           ts0 comparison expected result - step8s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             17                           ts1 comparison expected result - step8s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               18                           ts1 comparison expected result - step8s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        19                          temperature difference comparison expected result - step8s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsReserved                         [23:20]sMagic_number              [27:24]               Default value – identical for all registerssParity                                 [31:28]               Parity calculation on bits[27:0] 
RX_SRC_RX_DSP_Err_Measurements_Mse_rate_tmout_RO = h900201b0 30 1 h0 RO BIN
; Desc_RX_SRC_RX_DSP_Err_Measurements_Mse_rate_tmout_RO ts0_high_comp              0                           ts0 comparison expected result  - step5s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               1                           ts0 comparison expected result - step5s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             2                           ts1 comparison expected result - step5s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               3                           ts1 comparison expected result - step5s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        4                          temperature difference comparison expected result - step5s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              5                           ts0 comparison expected result  - step6s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               6                           ts0 comparison expected result - step6s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             7                           ts1 comparison expected result - step6s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               8                           ts1 comparison expected resultv - step6s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        9                          temperature difference comparison expected result - step6s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              10                           ts0 comparison expected result  - step7s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               11                           ts0 comparison expected result - step7s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             12                           ts1 comparison expected result - step7s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               13                           ts1 comparison expected result - step7s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        14                          temperature difference comparison expected result - step7s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsts0_high_comp              15                           ts0 comparison expected result  - step8s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts0_low_comp               16                           ts0 comparison expected result - step8s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsts1_high_comps             17                           ts1 comparison expected result - step8s                                                                              1’b0 – temperature is supposed to be less or equal than high limits                                                                              1’b1 -  temperature is supposed to be higher than high limitsts1_low_comp               18                           ts1 comparison expected result - step8s                                                                              1’b0 – temperature is supposed to be higher or equal than low limits                                                                              1’b1 -  temperature is supposed to be lower than low limitsdiff_comp                        19                          temperature difference comparison expected result - step8s                                                                              1’b0 – diff is supposed to be less or equal than diff limits                                                                              1’b1 -  diff is supposed to be higher than diff limitsReserved                         [23:20]sMagic_number              [27:24]               Default value – identical for all registerssParity                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER RX_SRC_RX_DSP_Err_Meas_status_reg_1 Address h900201b4
_RX_SRC_RX_DSP_Err_Meas_status_reg_1 = 2416050612 0 32 b00000000000000000000000000000000 RO
RX_SRC_RX_DSP_Err_Measurements_MaxErrRate_evnts_RO = h900201b4 0 30 h0 RO HEX
; Desc_RX_SRC_RX_DSP_Err_Measurements_MaxErrRate_evnts_RO func_ts0_high_limit                                                    [11:0]                 The highest temperature value allowed. higher temperature will result in an error indicationsfunc_ts0_low_limit                                                     [23:12]               The lowest temperature value allowed. lower temperature will result in an error indication sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER RX_SRC_RX_DSP_Err_Meas_status_reg_2 Address h900201bc
_RX_SRC_RX_DSP_Err_Meas_status_reg_2 = 2416050620 0 32 b00000000000000000000000000000000 RO
RX_SRC_RX_DSP_Err_Measurements_MseRate_evnts_RO = h900201bc 0 30 h0 RO HEX
; Desc_RX_SRC_RX_DSP_Err_Measurements_MseRate_evnts_RO func_ts1_high_limit                                                    [11:0]                The highest temperature value allowed. higher temperature will result in an error indication sfunc_ts1_low_limit                                                     [23:12]              The lowest temperature value allowed. lower temperature will result in an error indication sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]              Parity calculation on bits[27:0] 



; REGISTER RX_SRC_RX_DSP_TIMING_FREQ_EST_STATUS_reg_0 Address h900202f4
_RX_SRC_RX_DSP_TIMING_FREQ_EST_STATUS_reg_0 = 2416050932 0 32 b00000000000000000000000000000000 RO
RX_SRC_RX_DSP_TIMING_FREQ_EST_STATUS_RO_lsbs = h900202f4 0 32 h0 RO HEX
; Desc_RX_SRC_RX_DSP_TIMING_FREQ_EST_STATUS_RO_lsbs CRC calculated on bits [31:8]



; REGISTER RX_SRC_RX_DSP_TIMING_FREQ_EST_STATUS_reg_1 Address h900202f8
_RX_SRC_RX_DSP_TIMING_FREQ_EST_STATUS_reg_1 = 2416050936 0 32 b00000000000000000000000000000000 RO
RX_SRC_RX_DSP_TIMING_FREQ_EST_STATUS_RO_msbs = h900202f8 0 8 h0 RO HEX
; Desc_RX_SRC_RX_DSP_TIMING_FREQ_EST_STATUS_RO_msbs func_allowed_diff                                                       [11:0]                 The allowed difference between TS0 and TS1 measured temperatures sReserved                                                                         [23:12]sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER RX_Coef_Read_Status_0 Address h90020310
_RX_Coef_Read_Status_0 = 2416050960 0 32 b00000000000000000000000000000000 RO
RX_coeff_to_cpu = h90020310 0 32 h0 RO HEX
; Desc_RX_coeff_to_cpu Read only register. Allows the SW to read the actual difference between TS0 and TS1 temperature measurements. The result is the absolute value  



; REGISTER RX_PCS_8b10b_RX_PCS_STATUS_REG Address h90020408
_RX_PCS_8b10b_RX_PCS_STATUS_REG = 2416051208 0 32 b00000000000000000000000000000000 RO
RX_PCS_8b10b_RX_PCS_k_ph = h90020408 7 2 h0 RO HEX
; Desc_RX_PCS_8b10b_RX_PCS_k_ph The measured temperature value from TS0
RX_PCS_8b10b_RX_PCS_k_pol = h90020408 9 1 h0 RO BIN
; Desc_RX_PCS_8b10b_RX_PCS_k_pol The measured temperature value from TS0
RX_PCS_8b10b_RX_PCS_inv_pol = h90020408 10 1 h0 RO BIN
; Desc_RX_PCS_8b10b_RX_PCS_inv_pol The measured temperature value from TS0
RX_PCS_8b10b_RX_PCS_sym10b_sync = h90020408 11 1 h0 RO BIN
; Desc_RX_PCS_8b10b_RX_PCS_sym10b_sync The measured temperature value from TS0
RX_PCS_8b10b_RX_PCS_descrambler_lock = h90020408 13 1 h0 RO BIN
; Desc_RX_PCS_8b10b_RX_PCS_descrambler_lock The measured temperature value from TS0



; REGISTER RX_PCS_8b10b_RX_PCS_status Address h90020410
_RX_PCS_8b10b_RX_PCS_status = 2416051216 0 32 b00000000000000000000000000000000 RO
RX_PCS_8b10b_RX_PCS_rx_state = h90020410 0 3 h0 RO HEX
; Desc_RX_PCS_8b10b_RX_PCS_rx_state To be used while in Bypass mode to allow the SW to determine when the TS0 temperature value is ready and can be read



; REGISTER RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg0 Address h90020420
_RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg0 = 2416051232 0 32 b00000000000000000000000000000000 RO
RX_PCS_8b10b_RX_PCS_k_received_cnt_latch = h90020420 0 16 h0 RO HEX
; Desc_RX_PCS_8b10b_RX_PCS_k_received_cnt_latch Ts0 measured temperature is out of the defined limits – either higher or lower
RX_PCS_8b10b_RX_PCS_req_10berr_cnt_latch = h90020420 16 16 h0 RO HEX
; Desc_RX_PCS_8b10b_RX_PCS_req_10berr_cnt_latch Ts0 measured temperature is out of the defined limits – either higher or lower



; REGISTER RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg1 Address h90020424
_RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg1 = 2416051236 0 32 b00000000000000000000000000000000 RO
RX_PCS_8b10b_RX_PCS_err_rd_cnt_latch = h90020424 0 16 h0 RO HEX
; Desc_RX_PCS_8b10b_RX_PCS_err_rd_cnt_latch error_limit                                                                      [4:0]                  error threshold - if numb er of accumalated error equal or exceed the threshold - error indication will be raisedsReserved                                                                         [23:5]sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
RX_PCS_8b10b_RX_PCS_sm_err_cnt_latch = h90020424 16 16 h0 RO HEX
; Desc_RX_PCS_8b10b_RX_PCS_sm_err_cnt_latch error_limit                                                                      [4:0]                  error threshold - if numb er of accumalated error equal or exceed the threshold - error indication will be raisedsReserved                                                                         [23:5]sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg2 Address h90020428
_RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg2 = 2416051240 0 32 b00000000000000000000000000000000 RO
RX_PCS_8b10b_RX_PCS_re_error_cnt_latch = h90020428 0 16 h0 RO HEX
; Desc_RX_PCS_8b10b_RX_PCS_re_error_cnt_latch Actual number of out_of_limit errors
RX_PCS_8b10b_RX_PCS_ri_error_cnt_latch = h90020428 16 16 h0 RO HEX
; Desc_RX_PCS_8b10b_RX_PCS_ri_error_cnt_latch Actual number of out_of_limit errors



; REGISTER RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg3 Address h9002042c
_RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg3 = 2416051244 0 32 b00000000000000000000000000000000 RO
RX_PCS_8b10b_RX_PCS_pc_error_cnt_latch = h9002042c 0 16 h0 RO HEX
; Desc_RX_PCS_8b10b_RX_PCS_pc_error_cnt_latch Ts0 comparison result against high limits              1’b0 – temperature is less or equal than high limits              1’b1 -  temperature is higher than high limit
RX_PCS_8b10b_RX_PCS_ps_error_cnt_latch = h9002042c 16 16 h0 RO HEX
; Desc_RX_PCS_8b10b_RX_PCS_ps_error_cnt_latch Ts0 comparison result against high limits              1’b0 – temperature is less or equal than high limits              1’b1 -  temperature is higher than high limit



; REGISTER RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg4 Address h90020430
_RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg4 = 2416051248 0 32 b00000000000000000000000000000000 RO
RX_PCS_8b10b_RX_PCS_IdleBitErr_Trainning_latch = h90020430 0 32 h0 RO HEX
; Desc_RX_PCS_8b10b_RX_PCS_IdleBitErr_Trainning_latch When active – the configuration register x, fail to meet the safety requirements



; REGISTER RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg5 Address h90020434
_RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg5 = 2416051252 0 32 b00000000000000000000000000000000 RO
RX_PCS_8b10b_RX_PCS_IdleBitErr_Normal_latch = h90020434 0 32 h0 RO HEX
; Desc_RX_PCS_8b10b_RX_PCS_IdleBitErr_Normal_latch short_self_test_comperator results per self_test steps    [0]      ts0_GT_high_limit step 1s    [1]      ts0_LT_low_limit step 1s    [2]      ts1_GT_high_limit step 1s    [3]     ts1_LT_low_limit step 1s    [4]     diff_GT_high_limit step 1



; REGISTER RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg6 Address h90020438
_RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg6 = 2416051256 0 32 b00000000000000000000000000000000 RO
RX_PCS_8b10b_RX_PCS_IdleBitErr_Idle_latch = h90020438 0 32 h0 RO HEX
; Desc_RX_PCS_8b10b_RX_PCS_IdleBitErr_Idle_latch short_self_test_comperator results per self_test steps    [0]      ts0_GT_high_limit step 5s    [1]      ts0_LT_low_limit step 5s    [2]      ts1_GT_high_limit step 5s    [3]     ts1_LT_low_limit step 5s    [4]     diff_GT_high_limit step 5



; REGISTER RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg7 Address h9002043c
_RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg7 = 2416051260 0 32 b00000000000000000000000000000000 RO
RX_PCS_8b10b_RX_PCS_IdleTokErr_Normal_latch = h9002043c 0 32 h0 RO HEX
; Desc_RX_PCS_8b10b_RX_PCS_IdleTokErr_Normal_latch defines the temperature_Sensor clocksts_clk_up_width        [9:0]            - defines the length off high level of ts_clksts_clk_down_width   [19:10]       - defines the length off low level of ts_clksreserve                        [23:20]sMagic_number          [27:24]              Default value – identical for all registerssParity                          [31:28]               Parity calculation on bits[27:0] 



; REGISTER RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg8 Address h90020440
_RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg8 = 2416051264 0 32 b00000000000000000000000000000000 RO
RX_PCS_8b10b_RX_PCS_IdleTokErr_Idle_latch = h90020440 0 32 h0 RO HEX
; Desc_RX_PCS_8b10b_RX_PCS_IdleTokErr_Idle_latch defines the wait period for analog power-ypsts_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 



; REGISTER RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg9 Address h90020444
_RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg9 = 2416051268 0 32 b00000000000000000000000000000000 RO
RX_PCS_8b10b_RX_PCS_IdleTokErr_Trainning_latch = h90020444 0 32 h0 RO HEX
; Desc_RX_PCS_8b10b_RX_PCS_IdleTokErr_Trainning_latch defines the detection_enable for each errorsts0_high_level_comparator_en       [0]  - defines if ts0  high_level comparator will report a detected errorsts0_low_level_comparator_en        [1]  - defines if ts0  low_level comparator will report a detected errorsts1_high_level_comparator_en       [2]  - defines if ts1  high_level comparator will report a detected errorsts1_low_level_comparator_en        [3]  - defines if ts1  low_level comparator will report a detected errorsdiff_comparator_en                             [4]  - defines if difference comparator will report a detected errorsregister_parity_en                                [5]  - defines if a register parity error will be reportedsreserve                                        [11:6]sts0_high_level_count_en                [12]  - defines if ts0  high_level errors will be countedsts0_low_level_count_en                 [13]  - defines if ts0  low_level errors will be countedsts1_high_level_count_en                [14]  - defines if ts1  high_level errors will be countedsts1_low_level_count_en                 [15]  - defines if ts1  low_level errors will be countedsdiff_comparator_count_en            [16]  - defines if difference errors will be countedsMagic_number                                  [27:24]              Default value – identical for all registerssParity                                                     [31:28]               Parity calculation on bits[27:0] 



; REGISTER RX_PCS_8b10b_RX_PCS_SCM_VALUE_FIFO_USED_reg Address h90020448
_RX_PCS_8b10b_RX_PCS_SCM_VALUE_FIFO_USED_reg = 2416051272 0 32 b00000000000000000000000000000000 RO
RX_PCS_8b10b_RX_PCS_SCM_VALUE_FIFO_USED = h90020448 0 5 h0 RO HEX
; Desc_RX_PCS_8b10b_RX_PCS_SCM_VALUE_FIFO_USED ts0_data_error_gen                                                      [11:0]                  each bit set in this field will invert the corresponding bit in the ts0_data to cause intentional error  sReserved                                                                         [22:12]sts0_rdy_error_gen                                                        [23]                     setting this bit will set the ts0_rdy to 1'b0 - for error and timeout testssMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER RX_PCS_8b10b_RX_PCS_SCM_FIFO_READ_CMD Address h9002044c
_RX_PCS_8b10b_RX_PCS_SCM_FIFO_READ_CMD = 2416051276 0 32 b00000000000000000000000000000000 SC
RX_PCS_8b10b_RX_PCS_scm_value_fifo_out = h9002044c 0 8 h0 SC HEX
; Desc_RX_PCS_8b10b_RX_PCS_scm_value_fifo_out ts1_data_error_gen                                                      [11:0]                  each bit set in this field will invert the corresponding bit in the ts1_data to cause intentional error  sReserved                                                                         [22:12]sts1_rdy_error_gen                                                        [23]                     setting this bit will set the ts1_rdy to 1'b0 - for error and timeout testssMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg10 Address h90020450
_RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg10 = 2416051280 0 32 b00000000000000000000000000000000 RO
RX_PCS_8b10b_RX_PCS_err_10b_cnt_latch = h90020450 0 16 h0 RO HEX
; Desc_RX_PCS_8b10b_RX_PCS_err_10b_cnt_latch tsu_wait_oper                                                                [23:0]                defines # of clocks before funtional safety enters functional mode  sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                              [31:28]               Parity calculation on bits[27:0] 
RX_PCS_8b10b_RX_PCS_crc8_err_cnt_latch = h90020450 16 16 h0 RO HEX
; Desc_RX_PCS_8b10b_RX_PCS_crc8_err_cnt_latch tsu_wait_oper                                                                [23:0]                defines # of clocks before funtional safety enters functional mode  sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                              [31:28]               Parity calculation on bits[27:0] 



; REGISTER RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg11 Address h90020454
_RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg11 = 2416051284 0 32 b00000000000000000000000000000000 RO
RX_PCS_8b10b_RX_PCS_scm_error_cnt_latch = h90020454 0 16 h0 RO HEX
; Desc_RX_PCS_8b10b_RX_PCS_scm_error_cnt_latch tbd                                                                                     [23:0]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
RX_PCS_8b10b_RX_PCS_scm_10berr_cnt_latch = h90020454 16 16 h0 RO HEX
; Desc_RX_PCS_8b10b_RX_PCS_scm_10berr_cnt_latch tbd                                                                                     [23:0]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg12 Address h90020458
_RX_PCS_8b10b_RX_PCS_EVENT_CNT_reg12 = 2416051288 0 32 b00000000000000000000000000000000 RO
RX_PCS_8b10b_RX_PCS_DHA_cnt_latch = h90020458 0 16 h0 RO HEX
; Desc_RX_PCS_8b10b_RX_PCS_DHA_cnt_latch 



; REGISTER RX_SRC_RX_DSP_TEST_BUS_reg_0 Address h90020554
_RX_SRC_RX_DSP_TEST_BUS_reg_0 = 2416051540 0 32 b00000000000000000000000000000000 RO
RX_SRC_RX_DSP_TEST_BUS_0 = h90020554 0 32 h0 RO HEX
; Desc_RX_SRC_RX_DSP_TEST_BUS_0 the created pulse is used to load the configuration(cload)



; REGISTER RX_SRC_RX_DSP_TEST_BUS_reg_1 Address h90020558
_RX_SRC_RX_DSP_TEST_BUS_reg_1 = 2416051544 0 32 b00000000000000000000000000000000 RO
RX_SRC_RX_DSP_TEST_BUS_1 = h90020558 0 32 h0 RO HEX
; Desc_RX_SRC_RX_DSP_TEST_BUS_1 



; REGISTER RX_SRC_RX_DSP_TEST_BUS_reg_2 Address h9002055c
_RX_SRC_RX_DSP_TEST_BUS_reg_2 = 2416051548 0 32 b00000000000000000000000000000000 RO
RX_SRC_RX_DSP_TEST_BUS_2 = h9002055c 0 32 h0 RO HEX
; Desc_RX_SRC_RX_DSP_TEST_BUS_2 



; REGISTER RX_HCRC_TOTAL_COUNTER Address h90020560
_RX_HCRC_TOTAL_COUNTER = 2416051552 0 32 b00000000000000000000000000000000 RO
RX_hcrcTotalCounter = h90020560 0 32 h0 RO HEX
; Desc_RX_hcrcTotalCounter 



; REGISTER RX_HCRC_ERROR_COUNTER Address h90020564
_RX_HCRC_ERROR_COUNTER = 2416051556 0 32 b00000000000000000000000000000000 RO
RX_hcrcErrorCounter = h90020564 0 32 h0 RO HEX
; Desc_RX_hcrcErrorCounter 



; REGISTER TX_PCS_8b10b_TX_PCS_DATA_FIFO_RETRANSMISSION_FIFO Address h90028108
_TX_PCS_8b10b_TX_PCS_DATA_FIFO_RETRANSMISSION_FIFO = 2416083208 0 32 b00000000000000000000000000000000 RO
TX_PCS_8b10b_TX_PCS_DATA_FIFO_USED = h90028108 0 4 h0 RO HEX
; Desc_TX_PCS_8b10b_TX_PCS_DATA_FIFO_USED 



; REGISTER TX_PCS_8b10b_TX_PCS_status_reg Address h90028114
_TX_PCS_8b10b_TX_PCS_status_reg = 2416083220 0 32 b00000000000000000000000000000000 RO
TX_PCS_8b10b_TX_PCS_state_RO = h90028114 0 2 h0 RO HEX
; Desc_TX_PCS_8b10b_TX_PCS_state_RO 
TX_PCS_8b10b_TX_PCS_k_sent = h90028114 2 1 h0 RO BIN
; Desc_TX_PCS_8b10b_TX_PCS_k_sent 



; REGISTER TX_PCS_8b10b_TX_PCS_DEBUG_COUNTERS Address h90028128
_TX_PCS_8b10b_TX_PCS_DEBUG_COUNTERS = 2416083240 0 32 b00000000000000000000000000000000 RO
TX_PCS_8b10b_TX_PCS_k_reflected_counter_debug_RO = h90028128 0 8 h0 RO HEX
; Desc_TX_PCS_8b10b_TX_PCS_k_reflected_counter_debug_RO 
TX_PCS_8b10b_TX_PCS_k_sent_counter_debug_RO = h90028128 8 8 h0 RO HEX
; Desc_TX_PCS_8b10b_TX_PCS_k_sent_counter_debug_RO 
TX_PCS_8b10b_TX_PCS_inIdle_rcvd_counter_debug_RO = h90028128 16 8 h0 RO HEX
; Desc_TX_PCS_8b10b_TX_PCS_inIdle_rcvd_counter_debug_RO 



; REGISTER TX_PCS_8b10b_TX_PCS_OTHER_SCM_SENT_CLEAR Address h9002812c
_TX_PCS_8b10b_TX_PCS_OTHER_SCM_SENT_CLEAR = 2416083244 0 32 b00000000000000000000000000000000 SC
TX_PCS_8b10b_TX_PCS_OTHER_SCM_SENT = h9002812c 0 1 h0 SC BIN
; Desc_TX_PCS_8b10b_TX_PCS_OTHER_SCM_SENT 



; REGISTER TX_PAMX_PCS_4 Address h90028214
_TX_PAMX_PCS_4 = 2416083476 0 32 b00000000000000000000000000000000 RO
TX_PAMX_rtdCounter = h90028214 0 17 h0 RO HEX
; Desc_TX_PAMX_rtdCounter 
TX_PAMX_TxMode = h90028214 17 2 h0 RO HEX
; Desc_TX_PAMX_TxMode 
TX_PAMX_ptiStm = h90028214 19 2 h0 RO HEX
; Desc_TX_PAMX_ptiStm 



; REGISTER TX_SRC_TX_DSP_TEST_BUS_reg_0 Address h90028224
_TX_SRC_TX_DSP_TEST_BUS_reg_0 = 2416083492 0 32 b00000000000000000000000000000000 RO
TX_SRC_TX_DSP_TEST_BUS_0 = h90028224 0 32 h0 RO HEX
; Desc_TX_SRC_TX_DSP_TEST_BUS_0 



; REGISTER TX_SRC_TX_DSP_TEST_BUS_reg_1 Address h90028228
_TX_SRC_TX_DSP_TEST_BUS_reg_1 = 2416083496 0 32 b00000000000000000000000000000000 RO
TX_SRC_TX_DSP_TEST_BUS_1 = h90028228 0 32 h0 RO HEX
; Desc_TX_SRC_TX_DSP_TEST_BUS_1 



; REGISTER Meron_Source_dsp_blocks_reset_n_reg Address h90020008
_Meron_Source_dsp_blocks_reset_n_reg = 2416050184 0 13 b00000000000000000000000000000000 RW
Meron_Source_dsp_blocks_reset_n = h90020008 0 13 h0 RW HEX
; Desc_Meron_Source_dsp_blocks_reset_n read which interrupts set in interrupt controller bits [63:32]  for VPE1
DSP_TX_SYS_RESET_N = h90020008 0 1 h0 RW BIN
DSP_RX_SYS_RESET_N = h90020008 1 1 h0 RW BIN
PCS_8b10b_TRN_RESET_N = h90020008 2 1 h0 RW BIN
DSP_TRN_RESET_N = h90020008 3 1 h0 RW BIN
PCS_8b10b_RCV_RESET_N = h90020008 4 1 h0 RW BIN
DSP_RCV_RESET_N = h90020008 5 1 h0 RW BIN
PCS_PAMX_TRN_RESET_N = h90020008 6 1 h0 RW BIN
CHAN_TX_TRN_RESET_N = h90020008 7 1 h0 RW BIN
TM_TRN_RESET_N = h90020008 8 1 h0 RW BIN
APKT_TO_BYTES_TRN_RESET_N = h90020008 9 1 h0 RW BIN
TESTBUS_RCV_RESET_n = h90020008 10 1 h0 RW BIN
TESTBUS_TRN_RESET_n = h90020008 11 1 h0 RW BIN
NON_GATED_RESET_n = h90020008 12 1 h0 RW BIN



; REGISTER dsp_int_mask_reg Address h90020010
_dsp_int_mask_reg = 2416050192 0 12 b00000000000000000000111111111111 RW
dsp_int_mask = h90020010 0 12 hfff RW HEX
; Desc_dsp_int_mask interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 51 to 55



; REGISTER DSP_SPARE_0 Address h90020020
_DSP_SPARE_0 = 2416050208 0 32 b00000000000000000000000000000000 RW
DSP_SPARE_REG_0 = h90020020 0 32 h0 RW HEX
; Desc_DSP_SPARE_REG_0 interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 61 to 63



; REGISTER DSP_SPARE_1 Address h90020024
_DSP_SPARE_1 = 2416050212 0 32 b00000000000000000000000000000000 RW
DSP_SPARE_REG_1 = h90020024 0 32 h0 RW HEX
; Desc_DSP_SPARE_REG_1 interrupt controller 0: defines shadow set of registers for interrupts 33 to 40.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER DSP_SPARE_2 Address h90020028
_DSP_SPARE_2 = 2416050216 0 32 b00000000000000000000000000000000 RW
DSP_SPARE_REG_2 = h90020028 0 32 h0 RW HEX
; Desc_DSP_SPARE_REG_2 interrupt controller 1: defines shadow set of registers for interrupts 9 to 16.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER DSP_SPARE_3 Address h9002002c
_DSP_SPARE_3 = 2416050220 0 32 b00000000000000000000000000000000 RW
DSP_SPARE_REG_3 = h9002002c 0 32 h0 RW HEX
; Desc_DSP_SPARE_REG_3 interrupt controller 1: defines shadow set of registers for interrupts 49 to 56.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER DSP_SPARE_4 Address h90020030
_DSP_SPARE_4 = 2416050224 0 32 b00000000000000000000000000000000 RW
DSP_SPARE_REG_4 = h90020030 0 32 h0 RW HEX
; Desc_DSP_SPARE_REG_4 Set GPIO 32 Direction 1 = input



; REGISTER DSP_SPARE_5 Address h90020034
_DSP_SPARE_5 = 2416050228 0 32 b00000000000000000000000000000000 RW
DSP_SPARE_REG_5 = h90020034 0 32 h0 RW HEX
; Desc_DSP_SPARE_REG_5 GPIO Interrupts enable, 1=enable



; REGISTER DSP_SPARE_6 Address h90020038
_DSP_SPARE_6 = 2416050232 0 32 b00000000000000000000000000000000 RW
DSP_SPARE_REG_6 = h90020038 0 32 h0 RW HEX
; Desc_DSP_SPARE_REG_6 These are the straps' values. sIt's different for each project. Please refer to the the chip's spec.



; REGISTER DSP_SPARE_7 Address h9002003c
_DSP_SPARE_7 = 2416050236 0 32 b00000000000000000000000000000000 RW
DSP_SPARE_REG_7 = h9002003c 0 32 h0 RW HEX
; Desc_DSP_SPARE_REG_7 Pull Direction - Default 1 - Pull Up



; REGISTER RX_SRC_RX_DSP_DCcncl Address h90020100
_RX_SRC_RX_DSP_DCcncl = 2416050432 0 26 b00000010010000000000000000000000 RW
RX_SRC_RX_DSP_DC_OfstLoad_En = h90020100 0 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_DC_OfstLoad_En 
RX_SRC_RX_DSP_DCcncl_frz = h90020100 1 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_DCcncl_frz 
RX_SRC_RX_DSP_DCcncl_offset = h90020100 11 11 h0 RW HEX
; Desc_RX_SRC_RX_DSP_DCcncl_offset 
RX_SRC_RX_DSP_DCcncl_prm = h90020100 22 4 h9 RW HEX
; Desc_RX_SRC_RX_DSP_DCcncl_prm 



; REGISTER RX_SRC_RX_DSP_DFE_reg0 Address h90020104
_RX_SRC_RX_DSP_DFE_reg0 = 2416050436 0 27 b00000000000000000000000000000011 RW
RX_SRC_RX_DSP_DFE_ADP_EN = h90020104 0 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_ADP_EN 
RX_SRC_RX_DSP_DFE_ADP_TBL_MODE = h90020104 1 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_ADP_TBL_MODE 
RX_SRC_RX_DSP_DFE_FLUSH = h90020104 2 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_FLUSH 
RX_SRC_RX_DSP_DFE_FRZ = h90020104 3 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_FRZ 
RX_SRC_RX_DSP_DFE_COEF2LOAD = h90020104 4 15 h0 RW HEX
; Desc_RX_SRC_RX_DSP_DFE_COEF2LOAD 
RX_SRC_RX_DSP_DRIFT_INIT_VAL_msbs = h90020104 19 8 h0 RW HEX
; Desc_RX_SRC_RX_DSP_DRIFT_INIT_VAL_msbs 



; REGISTER RX_SRC_RX_DSP_DFE_reg1 Address h90020108
_RX_SRC_RX_DSP_DFE_reg1 = 2416050440 0 28 b00001011000000000101001100110010 RW
RX_SRC_RX_DSP_DFE_LKG_SHIFT_BETA = h90020108 0 5 h12 RW HEX
; Desc_RX_SRC_RX_DSP_DFE_LKG_SHIFT_BETA 
RX_SRC_RX_DSP_DFE_LKG_SHIFT_BETA2 = h90020108 5 5 h19 RW HEX
; Desc_RX_SRC_RX_DSP_DFE_LKG_SHIFT_BETA2 
RX_SRC_RX_DSP_DFE_LKG_TH = h90020108 10 8 h14 RW HEX
; Desc_RX_SRC_RX_DSP_DFE_LKG_TH 
RX_SRC_RX_DSP_DFE_LKG_EN = h90020108 18 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_LKG_EN 
RX_SRC_RX_DSP_DFE_LOAD_EN = h90020108 19 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_LOAD_EN 
RX_SRC_RX_DSP_DFE_LOAD_IDX = h90020108 20 4 h0 RW HEX
; Desc_RX_SRC_RX_DSP_DFE_LOAD_IDX 
RX_SRC_RX_DSP_DFE_MASKED_ERR = h90020108 24 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_MASKED_ERR 
RX_SRC_RX_DSP_DFE_MUE_SLC = h90020108 25 3 h5 RW HEX
; Desc_RX_SRC_RX_DSP_DFE_MUE_SLC 



; REGISTER RX_SRC_RX_DSP_DRIFT_INIT_VAL_reg Address h90020110
_RX_SRC_RX_DSP_DRIFT_INIT_VAL_reg = 2416050448 0 32 b00000000000000000000000000000000 RW
RX_SRC_RX_DSP_DRIFT_INIT_VAL_lsbs = h90020110 0 32 h0 RW HEX
; Desc_RX_SRC_RX_DSP_DRIFT_INIT_VAL_lsbs 



; REGISTER RX_SRC_RX_DSP_FFE_reg0 Address h90020114
_RX_SRC_RX_DSP_FFE_reg0 = 2416050452 0 30 b00100000000000010000000000010100 RW
RX_SRC_RX_DSP_FFE_ADAPT_DELAY = h90020114 0 4 h4 RW HEX
; Desc_RX_SRC_RX_DSP_FFE_ADAPT_DELAY 
RX_SRC_RX_DSP_FFE_ADP_EN = h90020114 4 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_FFE_ADP_EN 
RX_SRC_RX_DSP_FFE_ADP_TBL_MODE = h90020114 16 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_FFE_ADP_TBL_MODE 
RX_SRC_RX_DSP_FFE_CNSTR_EN = h90020114 17 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_FFE_CNSTR_EN 
RX_SRC_RX_DSP_FFE_FRZ = h90020114 18 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_FFE_FRZ 
RX_SRC_RX_DSP_FFE_LKG_EN = h90020114 19 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_FFE_LKG_EN 
RX_SRC_RX_DSP_FFE_LOAD_EN = h90020114 20 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_FFE_LOAD_EN 
RX_SRC_RX_DSP_FFE_LOAD_IDX = h90020114 21 8 h0 RW HEX
; Desc_RX_SRC_RX_DSP_FFE_LOAD_IDX 
RX_SRC_RX_DSP_FFE_MAIN_TAP = h90020114 29 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_FFE_MAIN_TAP 



; REGISTER RX_SRC_RX_DSP_FFE_reg1 Address h9002011c
_RX_SRC_RX_DSP_FFE_reg1 = 2416050460 0 24 b00000000011000000001010010001101 RW
RX_SRC_RX_DSP_FFE_MASKED_ERR = h9002011c 0 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_FFE_MASKED_ERR 
RX_SRC_RX_DSP_FFE_MUE_SLC = h9002011c 1 3 h6 RW HEX
; Desc_RX_SRC_RX_DSP_FFE_MUE_SLC 
RX_SRC_RX_DSP_FFE_PH_RATIO = h9002011c 4 16 h148 RW HEX
; Desc_RX_SRC_RX_DSP_FFE_PH_RATIO 
RX_SRC_RX_DSP_FFE_POST_CNSTR_EN = h9002011c 20 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_FFE_POST_CNSTR_EN 
RX_SRC_RX_DSP_FFE_Prd_LkgMue_Shft = h9002011c 21 3 h3 RW HEX
; Desc_RX_SRC_RX_DSP_FFE_Prd_LkgMue_Shft 



; REGISTER RX_SRC_RX_DSP_FFE_reg2 Address h90020120
_RX_SRC_RX_DSP_FFE_reg2 = 2416050464 0 18 b00000000000000000000000000000000 RW
RX_SRC_RX_DSP_FFE_COEF2LOAD = h90020120 0 18 h0 RW HEX
; Desc_RX_SRC_RX_DSP_FFE_COEF2LOAD 



; REGISTER RX_SRC_RX_DSP_FFE_reg3 Address h90020124
_RX_SRC_RX_DSP_FFE_reg3 = 2416050468 0 20 b00000000000000000000000000000000 RW
RX_SRC_RX_DSP_FFE_LkgMue_Shft = h90020124 0 4 h0 RW HEX
; Desc_RX_SRC_RX_DSP_FFE_LkgMue_Shft 
RX_SRC_RX_DSP_FFE_POST_PH_RATIO = h90020124 4 16 h0 RW HEX
; Desc_RX_SRC_RX_DSP_FFE_POST_PH_RATIO 



; REGISTER RX_SRC_RX_DSP_IIR_reg0 Address h90020128
_RX_SRC_RX_DSP_IIR_reg0 = 2416050472 0 26 b00000000000000000001011010010000 RW
RX_SRC_RX_DSP_IIR_1_SEL = h90020128 0 2 h0 RW HEX
; Desc_RX_SRC_RX_DSP_IIR_1_SEL 
RX_SRC_RX_DSP_IIR_2_SEL = h90020128 2 2 h0 RW HEX
; Desc_RX_SRC_RX_DSP_IIR_2_SEL 
RX_SRC_RX_DSP_IIR_COEFF_1_1 = h90020128 4 11 h169 RW HEX
; Desc_RX_SRC_RX_DSP_IIR_COEFF_1_1 
RX_SRC_RX_DSP_IIR_COEFF_1_2 = h90020128 15 11 h0 RW HEX
; Desc_RX_SRC_RX_DSP_IIR_COEFF_1_2 



; REGISTER RX_SRC_RX_DSP_IIR_reg1 Address h9002012c
_RX_SRC_RX_DSP_IIR_reg1 = 2416050476 0 23 b00000000000000000000000000000000 RW
RX_SRC_RX_DSP_IIR_COEFF_2_1 = h9002012c 0 11 h0 RW HEX
; Desc_RX_SRC_RX_DSP_IIR_COEFF_2_1 
RX_SRC_RX_DSP_IIR_COEFF_2_2 = h9002012c 11 11 h0 RW HEX
; Desc_RX_SRC_RX_DSP_IIR_COEFF_2_2 
RX_SRC_RX_DSP_IIR_EN = h9002012c 22 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_IIR_EN 



; REGISTER RX_SRC_RX_DSP_MaxErr_reg0 Address h90020130
_RX_SRC_RX_DSP_MaxErr_reg0 = 2416050480 0 30 b00000000000000000000000000001010 RW
RX_SRC_RX_DSP_MaxErr_Evnt_Cnt = h90020130 0 30 ha RW HEX
; Desc_RX_SRC_RX_DSP_MaxErr_Evnt_Cnt 



; REGISTER RX_SRC_RX_DSP_MaxErr_reg1 Address h90020134
_RX_SRC_RX_DSP_MaxErr_reg1 = 2416050484 0 30 b00000000000000110000110101000000 RW
RX_SRC_RX_DSP_MaxErr_Tmout = h90020134 0 30 h30d40 RW HEX
; Desc_RX_SRC_RX_DSP_MaxErr_Tmout 



; REGISTER RX_SRC_RX_DSP_MaxErr_reg2 Address h90020138
_RX_SRC_RX_DSP_MaxErr_reg2 = 2416050488 0 17 b00000000000000000000000000000100 RW
RX_SRC_RX_DSP_MaxErr_Evnt_Val = h90020138 0 16 h4 RW HEX
; Desc_RX_SRC_RX_DSP_MaxErr_Evnt_Val 
RX_SRC_RX_DSP_MaxErr_SnglRcrnt_Mode = h90020138 16 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_MaxErr_SnglRcrnt_Mode 



; REGISTER RX_SRC_RX_DSP_MaxSin_reg0 Address h9002013c
_RX_SRC_RX_DSP_MaxSin_reg0 = 2416050492 0 30 b00000000000000000000000000001010 RW
RX_SRC_RX_DSP_MaxSin_Evnt_Cnt = h9002013c 0 30 ha RW HEX
; Desc_RX_SRC_RX_DSP_MaxSin_Evnt_Cnt 



; REGISTER RX_SRC_RX_DSP_MaxSin_reg1 Address h90020140
_RX_SRC_RX_DSP_MaxSin_reg1 = 2416050496 0 13 b00000000000000000000000000000000 RW
RX_SRC_RX_DSP_MaxSin_Evnt_Val = h90020140 0 12 h0 RW HEX
; Desc_RX_SRC_RX_DSP_MaxSin_Evnt_Val 
RX_SRC_RX_DSP_MaxSin_SnglRcrnt_Mode = h90020140 12 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_MaxSin_SnglRcrnt_Mode 



; REGISTER RX_SRC_RX_DSP_MaxSin_reg2 Address h90020144
_RX_SRC_RX_DSP_MaxSin_reg2 = 2416050500 0 30 b00000000000000000000000000000000 RW
RX_SRC_RX_DSP_MaxSin_Tmout = h90020144 0 30 h0 RW HEX
; Desc_RX_SRC_RX_DSP_MaxSin_Tmout PLL lock output from RX PLL



; REGISTER RX_SRC_RX_DSP_MseErr_reg0 Address h90020148
_RX_SRC_RX_DSP_MseErr_reg0 = 2416050504 0 22 b00000000000000000000000000000101 RW
RX_SRC_RX_DSP_MseAlphaShift = h90020148 0 4 h5 RW HEX
; Desc_RX_SRC_RX_DSP_MseAlphaShift 
RX_SRC_RX_DSP_MseErr_SnglRcrnt_Mode = h90020148 4 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_MseErr_SnglRcrnt_Mode 
RX_SRC_RX_DSP_MseErr_LowLimit = h90020148 5 17 h0 RW HEX
; Desc_RX_SRC_RX_DSP_MseErr_LowLimit 



; REGISTER RX_SRC_RX_DSP_MseErr_reg1 Address h9002014c
_RX_SRC_RX_DSP_MseErr_reg1 = 2416050508 0 30 b00000000000000000000000000000000 RW
RX_SRC_RX_DSP_MseErr_Evnt_Cnt = h9002014c 0 30 h0 RW HEX
; Desc_RX_SRC_RX_DSP_MseErr_Evnt_Cnt write "0xAB_CD_EF_44" to clear the WatchDog



; REGISTER RX_SRC_RX_DSP_MseErr_reg2 Address h90020150
_RX_SRC_RX_DSP_MseErr_reg2 = 2416050512 0 17 b00000000000000000000000000000000 RW
RX_SRC_RX_DSP_MseErr_HghLimit = h90020150 0 17 h0 RW HEX
; Desc_RX_SRC_RX_DSP_MseErr_HghLimit Watchdog time out will be 2^WD_LIMIT



; REGISTER RX_SRC_RX_DSP_MseErr_reg3 Address h90020154
_RX_SRC_RX_DSP_MseErr_reg3 = 2416050516 0 30 b00000000000000000000000000000000 RW
RX_SRC_RX_DSP_MseErr_Tmout = h90020154 0 30 h0 RW HEX
; Desc_RX_SRC_RX_DSP_MseErr_Tmout Write Data for indirect pka prog ram init



; REGISTER RX_SRC_RX_DSP_MseSin_reg0 Address h90020158
_RX_SRC_RX_DSP_MseSin_reg0 = 2416050520 0 30 b00000000000000000000000000000000 RW
RX_SRC_RX_DSP_MseSin_Evnt_Cnt = h90020158 0 30 h0 RW HEX
; Desc_RX_SRC_RX_DSP_MseSin_Evnt_Cnt 



; REGISTER RX_SRC_RX_DSP_MseSin_reg1 Address h9002015c
_RX_SRC_RX_DSP_MseSin_reg1 = 2416050524 0 18 b00000000000000000000000000000000 RW
RX_SRC_RX_DSP_MseSin_HghLimit = h9002015c 0 17 h0 RW HEX
; Desc_RX_SRC_RX_DSP_MseSin_HghLimit number of sys clock cycles for DFT test
RX_SRC_RX_DSP_MseSin_SnglRcrnt_Mode = h9002015c 17 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_MseSin_SnglRcrnt_Mode number of sys clock cycles for DFT test



; REGISTER RX_SRC_RX_DSP_MseSin_reg2 Address h90020160
_RX_SRC_RX_DSP_MseSin_reg2 = 2416050528 0 17 b00000000000000000000000000000000 RW
RX_SRC_RX_DSP_MseSin_LowLimit = h90020160 0 17 h0 RW HEX
; Desc_RX_SRC_RX_DSP_MseSin_LowLimit store DHDI results of previous test. Write will copy that result of current test



; REGISTER RX_SRC_RX_DSP_MseSin_reg3 Address h90020164
_RX_SRC_RX_DSP_MseSin_reg3 = 2416050532 0 30 b00000000000000000000000000000000 RW
RX_SRC_RX_DSP_MseSin_Tmout = h90020164 0 30 h0 RW HEX
; Desc_RX_SRC_RX_DSP_MseSin_Tmout Priority given to Rx ports over Tx ports when DMA selects the packet to be transferred.sValue of 0 means equal wheight.sValue of 1 means that for every 2 Rx selected packets 1 Tx packet is  selected.sValue of 2 means that for every 3 Rx selected packets 1 Tx packet is  selected.sEtc.



; REGISTER RX_SRC_RX_DSP_NBIC_reg0 Address h90020168
_RX_SRC_RX_DSP_NBIC_reg0 = 2416050536 0 29 b00000001000000010101001011101000 RW
RX_SRC_RX_DSP_NBIC_ADAPT_FLT_SHIFT = h90020168 0 3 h0 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_ADAPT_FLT_SHIFT  'one hot' field that indicates which status bit of port should be cleared 
RX_SRC_RX_DSP_NBIC_ADP_EN = h90020168 3 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_ADP_EN  'one hot' field that indicates which status bit of port should be cleared 
RX_SRC_RX_DSP_NBIC_AdptNrml_En = h90020168 4 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_AdptNrml_En  'one hot' field that indicates which status bit of port should be cleared 
RX_SRC_RX_DSP_NBIC_AdptNrml_MAX = h90020168 5 4 h7 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_AdptNrml_MAX  'one hot' field that indicates which status bit of port should be cleared 
RX_SRC_RX_DSP_NBIC_AdptNrml_MIN = h90020168 9 4 h9 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_AdptNrml_MIN  'one hot' field that indicates which status bit of port should be cleared 
RX_SRC_RX_DSP_NBIC_AdptNrml_Prm = h90020168 13 3 h2 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_AdptNrml_Prm  'one hot' field that indicates which status bit of port should be cleared 
RX_SRC_RX_DSP_NBIC_BIG_ERR_RESET_EN = h90020168 16 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_BIG_ERR_RESET_EN  'one hot' field that indicates which status bit of port should be cleared 
RX_SRC_RX_DSP_NBIC_ERR_TH_RESET = h90020168 17 11 h80 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_ERR_TH_RESET  'one hot' field that indicates which status bit of port should be cleared 
RX_SRC_RX_DSP_NBIC_LKG_SRST = h90020168 28 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_LKG_SRST  'one hot' field that indicates which status bit of port should be cleared 



; REGISTER RX_SRC_RX_DSP_NBIC_reg1 Address h9002016c
_RX_SRC_RX_DSP_NBIC_reg1 = 2416050540 0 32 b00000000101000000000000000000000 RW
RX_SRC_RX_DSP_NBIC_COEF2LOAD = h9002016c 0 21 h0 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_COEF2LOAD  'one hot' hot field that indicates the port of which rx_ove counter be cleared.
RX_SRC_RX_DSP_NBIC_ERR_TIMER_RESET = h9002016c 21 8 h5 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_ERR_TIMER_RESET  'one hot' hot field that indicates the port of which rx_ove counter be cleared.
RX_SRC_RX_DSP_NBIC_ErrAdp_Limiter = h9002016c 29 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_ErrAdp_Limiter  'one hot' hot field that indicates the port of which rx_ove counter be cleared.
RX_SRC_RX_DSP_NBIC_FRZ = h9002016c 30 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_FRZ  'one hot' hot field that indicates the port of which rx_ove counter be cleared.
RX_SRC_RX_DSP_NBIC_AUTO_GATE = h9002016c 31 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_AUTO_GATE  'one hot' hot field that indicates the port of which rx_ove counter be cleared.



; REGISTER RX_SRC_RX_DSP_NBIC_reg2 Address h90020170
_RX_SRC_RX_DSP_NBIC_reg2 = 2416050544 0 32 b10000000000000000010011100010000 RW
RX_SRC_RX_DSP_NBIC_ERR_TIME_BTWN_RESET = h90020170 0 16 h2710 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_ERR_TIME_BTWN_RESET The value in this register determines the time interval elapsed between two adjacent polling of the same HLIC Tx BDring after end of transmission due to emptiness of the Tx BDRing .  sThis situation is detected by the DMA when there is no BD with its R bit set to 1. 
RX_SRC_RX_DSP_NBIC_FILTER_ERR_SHIFT = h90020170 16 3 h0 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_FILTER_ERR_SHIFT The value in this register determines the time interval elapsed between two adjacent polling of the same HLIC Tx BDring after end of transmission due to emptiness of the Tx BDRing .  sThis situation is detected by the DMA when there is no BD with its R bit set to 1. 
RX_SRC_RX_DSP_NBIC_LKG_EN = h90020170 19 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_LKG_EN The value in this register determines the time interval elapsed between two adjacent polling of the same HLIC Tx BDring after end of transmission due to emptiness of the Tx BDRing .  sThis situation is detected by the DMA when there is no BD with its R bit set to 1. 
RX_SRC_RX_DSP_NBIC_LOAD_EN = h90020170 20 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_LOAD_EN The value in this register determines the time interval elapsed between two adjacent polling of the same HLIC Tx BDring after end of transmission due to emptiness of the Tx BDRing .  sThis situation is detected by the DMA when there is no BD with its R bit set to 1. 
RX_SRC_RX_DSP_NBIC_LOAD_IDX = h90020170 21 5 h0 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_LOAD_IDX The value in this register determines the time interval elapsed between two adjacent polling of the same HLIC Tx BDring after end of transmission due to emptiness of the Tx BDRing .  sThis situation is detected by the DMA when there is no BD with its R bit set to 1. 
RX_SRC_RX_DSP_NBIC_MASKED_ERR = h90020170 29 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_MASKED_ERR The value in this register determines the time interval elapsed between two adjacent polling of the same HLIC Tx BDring after end of transmission due to emptiness of the Tx BDRing .  sThis situation is detected by the DMA when there is no BD with its R bit set to 1. 
RX_SRC_RX_DSP_NBIC_NADAPT_DELAY = h90020170 30 2 h2 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_NADAPT_DELAY The value in this register determines the time interval elapsed between two adjacent polling of the same HLIC Tx BDring after end of transmission due to emptiness of the Tx BDRing .  sThis situation is detected by the DMA when there is no BD with its R bit set to 1. 



; REGISTER RX_SRC_RX_DSP_NBIC_reg3 Address h90020174
_RX_SRC_RX_DSP_NBIC_reg3 = 2416050548 0 11 b00000000000000000000000110111100 RW
RX_SRC_RX_DSP_NBIC_Prd_LkgMue_Shft = h90020174 0 3 h4 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_Prd_LkgMue_Shft The value in this register determines the time interval elapsed between two adjacent polling of the same EMAC Tx BDring after end of transmission due to emptiness of the Tx BDRing .  sThis situation is detected by the DMA when there is no BD with its R bit set to 1. 
RX_SRC_RX_DSP_NBIC_LkgMue_Shft = h90020174 3 4 h7 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_LkgMue_Shft The value in this register determines the time interval elapsed between two adjacent polling of the same EMAC Tx BDring after end of transmission due to emptiness of the Tx BDRing .  sThis situation is detected by the DMA when there is no BD with its R bit set to 1. 
RX_SRC_RX_DSP_NBIC_MUE_SLC = h90020174 7 4 h3 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_MUE_SLC The value in this register determines the time interval elapsed between two adjacent polling of the same EMAC Tx BDring after end of transmission due to emptiness of the Tx BDRing .  sThis situation is detected by the DMA when there is no BD with its R bit set to 1. 



; REGISTER RX_SRC_RX_DSP_NBIC_LeakWght_Val_reg0 Address h90020178
_RX_SRC_RX_DSP_NBIC_LeakWght_Val_reg0 = 2416050552 0 28 b00001000000011000001000000010000 RW
RX_SRC_RX_DSP_NBIC_LeakWght_Val0 = h90020178 0 7 h10 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_LeakWght_Val0 Port enable for Tx direction (scratchpad to port)
RX_SRC_RX_DSP_NBIC_LeakWght_Val1 = h90020178 7 7 h20 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_LeakWght_Val1 Port enable for Tx direction (scratchpad to port)
RX_SRC_RX_DSP_NBIC_LeakWght_Val2 = h90020178 14 7 h30 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_LeakWght_Val2 Port enable for Tx direction (scratchpad to port)
RX_SRC_RX_DSP_NBIC_LeakWght_Val3 = h90020178 21 7 h40 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_LeakWght_Val3 Port enable for Tx direction (scratchpad to port)



; REGISTER RX_SRC_RX_DSP_NBIC_LeakWght_Val_reg1 Address h9002017c
_RX_SRC_RX_DSP_NBIC_LeakWght_Val_reg1 = 2416050556 0 28 b00000000000111000011000001010000 RW
RX_SRC_RX_DSP_NBIC_LeakWght_Val4 = h9002017c 0 7 h50 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_LeakWght_Val4 status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info
RX_SRC_RX_DSP_NBIC_LeakWght_Val5 = h9002017c 7 7 h60 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_LeakWght_Val5 status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info
RX_SRC_RX_DSP_NBIC_LeakWght_Val6 = h9002017c 14 7 h70 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_LeakWght_Val6 status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info
RX_SRC_RX_DSP_NBIC_LeakWght_Val7 = h9002017c 21 7 h0 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_LeakWght_Val7 status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info



; REGISTER RX_SRC_RX_DSP_NBIC_LeakWght_Val_reg2 Address h90020180
_RX_SRC_RX_DSP_NBIC_LeakWght_Val_reg2 = 2416050560 0 28 b00001000000011000001000000010000 RW
RX_SRC_RX_DSP_NBIC_LeakWght_Val8 = h90020180 0 7 h10 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_LeakWght_Val8 Pointer to the base address of port's Rx BD ring
RX_SRC_RX_DSP_NBIC_LeakWght_Val9 = h90020180 7 7 h20 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_LeakWght_Val9 Pointer to the base address of port's Rx BD ring
RX_SRC_RX_DSP_NBIC_LeakWght_Val10 = h90020180 14 7 h30 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_LeakWght_Val10 Pointer to the base address of port's Rx BD ring
RX_SRC_RX_DSP_NBIC_LeakWght_Val11 = h90020180 21 7 h40 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_LeakWght_Val11 Pointer to the base address of port's Rx BD ring



; REGISTER RX_SRC_RX_DSP_NBIC_LeakWght_Val_reg3 Address h90020184
_RX_SRC_RX_DSP_NBIC_LeakWght_Val_reg3 = 2416050564 0 28 b00000000000111000011000001010000 RW
RX_SRC_RX_DSP_NBIC_LeakWght_Val12 = h90020184 0 7 h50 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_LeakWght_Val12 Pointer to the base address of port's  Tx BD ring
RX_SRC_RX_DSP_NBIC_LeakWght_Val13 = h90020184 7 7 h60 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_LeakWght_Val13 Pointer to the base address of port's  Tx BD ring
RX_SRC_RX_DSP_NBIC_LeakWght_Val14 = h90020184 14 7 h70 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_LeakWght_Val14 Pointer to the base address of port's  Tx BD ring
RX_SRC_RX_DSP_NBIC_LeakWght_Val15 = h90020184 21 7 h0 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_LeakWght_Val15 Pointer to the base address of port's  Tx BD ring



; REGISTER RX_SRC_RX_DSP_Timing_reg1 Address h90020190
_RX_SRC_RX_DSP_Timing_reg1 = 2416050576 0 4 b00000000000000000000000000001111 RW
RX_SRC_RX_DSP_TM_SNS_TYPE = h90020190 0 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_TM_SNS_TYPE defines the MIPS internal DMA arbiter priority for the D-RAM OCP
RX_SRC_RX_DSP_DSP_TIMING_2SPS_USE_CORRECTION = h90020190 1 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DSP_TIMING_2SPS_USE_CORRECTION defines the MIPS internal DMA arbiter priority for the D-RAM OCP
RX_SRC_RX_DSP_DSP_TIMING_2SPS_DLY_BY_HALF = h90020190 2 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DSP_TIMING_2SPS_DLY_BY_HALF defines the MIPS internal DMA arbiter priority for the D-RAM OCP
RX_SRC_RX_DSP_DSP_TIMING_2SPS_USE_DC_CNCL_O = h90020190 3 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DSP_TIMING_2SPS_USE_DC_CNCL_O defines the MIPS internal DMA arbiter priority for the D-RAM OCP



; REGISTER RX_SRC_RX_DSP_Sar_reg0 Address h90020194
_RX_SRC_RX_DSP_Sar_reg0 = 2416050580 0 24 b00000000000000000000000101000001 RW
RX_SRC_RX_DSP_SAR_INPUT_TYPE = h90020194 0 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_SAR_INPUT_TYPE Efuse write ready indication
RX_SRC_RX_DSP_SAR_OfstLoad_En = h90020194 1 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_SAR_OfstLoad_En Efuse write ready indication
RX_SRC_RX_DSP_SarCncl_OUT_EN = h90020194 2 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_SarCncl_OUT_EN Efuse write ready indication
RX_SRC_RX_DSP_SarCncl_prm = h90020194 3 4 h8 RW HEX
; Desc_RX_SRC_RX_DSP_SarCncl_prm Efuse write ready indication
RX_SRC_RX_DSP_SarEst_Flush = h90020194 7 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_SarEst_Flush Efuse write ready indication
RX_SRC_RX_DSP_Sar_ErrCorr_En = h90020194 8 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_Sar_ErrCorr_En Efuse write ready indication
RX_SRC_RX_DSP_Sar_Val2Load = h90020194 9 15 h0 RW HEX
; Desc_RX_SRC_RX_DSP_Sar_Val2Load Efuse write ready indication



; REGISTER RX_SRC_RX_DSP_general_config_reg Address h9002019c
_RX_SRC_RX_DSP_general_config_reg = 2416050588 0 6 b00000000000000000000000000000110 RW
RX_SRC_RX_DSP_USE_2SPS_TIMING = h9002019c 0 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_USE_2SPS_TIMING store last o_MISO when FLAG was negated
RX_SRC_RX_DSP_LOAD_DRIFT = h9002019c 1 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_LOAD_DRIFT store last o_MISO when FLAG was negated
RX_SRC_RX_DSP_USE_OLD_TIMING = h9002019c 2 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_USE_OLD_TIMING store last o_MISO when FLAG was negated
RX_SRC_RX_DSP_Use_ErrSlc4adp = h9002019c 3 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_Use_ErrSlc4adp store last o_MISO when FLAG was negated
RX_SRC_RX_DSP_PHY_TB_ERR_MASK_EN = h9002019c 4 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_PHY_TB_ERR_MASK_EN store last o_MISO when FLAG was negated
RX_SRC_RX_DSP_DSP_RX_PHASE_SLC = h9002019c 5 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_DSP_RX_PHASE_SLC store last o_MISO when FLAG was negated



; REGISTER RX_SRC_RX_DSP_FFE_LeakWght_Val_0 Address h900201f4
_RX_SRC_RX_DSP_FFE_LeakWght_Val_0 = 2416050676 0 28 b00000000000000000000000010000001 RW
RX_SRC_RX_DSP_FFE_LeakWght_Val[6:0] = h900201f4 0 7 h1 RW HEX
; Desc_RX_SRC_RX_DSP_FFE_LeakWght_Val[6:0] read timer 13 value, write set the value and start the timer 13
RX_SRC_RX_DSP_FFE_LeakWght_Val[13:7] = h900201f4 7 7 h1 RW HEX
; Desc_RX_SRC_RX_DSP_FFE_LeakWght_Val[13:7] read timer 13 value, write set the value and start the timer 13



; REGISTER RX_SRC_RX_DSP_FFE_ADP_TBL_reg_0 Address h90020208
_RX_SRC_RX_DSP_FFE_ADP_TBL_reg_0 = 2416050696 0 8 b00000000000000000000000010101010 RW
RX_SRC_RX_DSP_FFE_ADP_TBL_0 = h90020208 0 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_FFE_ADP_TBL_0 read timer 14 value, write set the value and start the timer 14
RX_SRC_RX_DSP_FFE_ADP_TBL_1 = h90020208 1 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_FFE_ADP_TBL_1 read timer 14 value, write set the value and start the timer 14
RX_SRC_RX_DSP_FFE_ADP_TBL_2 = h90020208 2 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_FFE_ADP_TBL_2 read timer 14 value, write set the value and start the timer 14
RX_SRC_RX_DSP_FFE_ADP_TBL_3 = h90020208 3 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_FFE_ADP_TBL_3 read timer 14 value, write set the value and start the timer 14
RX_SRC_RX_DSP_FFE_ADP_TBL_4 = h90020208 4 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_FFE_ADP_TBL_4 read timer 14 value, write set the value and start the timer 14
RX_SRC_RX_DSP_FFE_ADP_TBL_5 = h90020208 5 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_FFE_ADP_TBL_5 read timer 14 value, write set the value and start the timer 14
RX_SRC_RX_DSP_FFE_ADP_TBL_6 = h90020208 6 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_FFE_ADP_TBL_6 read timer 14 value, write set the value and start the timer 14
RX_SRC_RX_DSP_FFE_ADP_TBL_7 = h90020208 7 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_FFE_ADP_TBL_7 read timer 14 value, write set the value and start the timer 14



; REGISTER RX_SRC_RX_DSP_FFE_MASK_FRZ_0 Address h9002022c
_RX_SRC_RX_DSP_FFE_MASK_FRZ_0 = 2416050732 0 32 b00000000000000000000000000000011 RW
RX_SRC_RX_DSP_FFE_MASK_FRZ[0:0] = h9002022c 0 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_FFE_MASK_FRZ[0:0] each bit masks the corresponding pas_timer_int. sHas no affect on timers 7-0 (bits 7-0) - as these are directly connected and manged by the CPU's interrupt controllers
RX_SRC_RX_DSP_FFE_MASK_FRZ[1:1] = h9002022c 1 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_FFE_MASK_FRZ[1:1] each bit masks the corresponding pas_timer_int. sHas no affect on timers 7-0 (bits 7-0) - as these are directly connected and manged by the CPU's interrupt controllers



; REGISTER RX_SRC_RX_DSP_FFE_MASK_0 Address h90020238
_RX_SRC_RX_DSP_FFE_MASK_0 = 2416050744 0 32 b00000000000000000000000000000011 RW
RX_SRC_RX_DSP_FFE_MASK[0:0] = h90020238 0 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_FFE_MASK[0:0] for SW use
RX_SRC_RX_DSP_FFE_MASK[1:1] = h90020238 1 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_FFE_MASK[1:1] for SW use



; REGISTER RX_SRC_RX_DSP_DFE_ADP_TBL_reg Address h90020244
_RX_SRC_RX_DSP_DFE_ADP_TBL_reg = 2416050756 0 8 b00000000000000000000000010101010 RW
RX_SRC_RX_DSP_DFE_ADP_TBL_0 = h90020244 0 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_ADP_TBL_0 for SW use
RX_SRC_RX_DSP_DFE_ADP_TBL_1 = h90020244 1 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_ADP_TBL_1 for SW use
RX_SRC_RX_DSP_DFE_ADP_TBL_2 = h90020244 2 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_ADP_TBL_2 for SW use
RX_SRC_RX_DSP_DFE_ADP_TBL_3 = h90020244 3 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_ADP_TBL_3 for SW use
RX_SRC_RX_DSP_DFE_ADP_TBL_4 = h90020244 4 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_ADP_TBL_4 for SW use
RX_SRC_RX_DSP_DFE_ADP_TBL_5 = h90020244 5 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_ADP_TBL_5 for SW use
RX_SRC_RX_DSP_DFE_ADP_TBL_6 = h90020244 6 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_ADP_TBL_6 for SW use
RX_SRC_RX_DSP_DFE_ADP_TBL_7 = h90020244 7 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_ADP_TBL_7 for SW use



; REGISTER RX_SRC_RX_DSP_NBIC_MASK_0 Address h90020268
_RX_SRC_RX_DSP_NBIC_MASK_0 = 2416050792 0 32 b00000000000000001111111111111111 RW
RX_SRC_RX_DSP_NBIC_MASK[0:0] = h90020268 0 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_MASK[0:0] for SW use
RX_SRC_RX_DSP_NBIC_MASK[1:1] = h90020268 1 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_MASK[1:1] for SW use
RX_SRC_RX_DSP_NBIC_MASK[2:2] = h90020268 2 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_MASK[2:2] for SW use
RX_SRC_RX_DSP_NBIC_MASK[3:3] = h90020268 3 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_MASK[3:3] for SW use
RX_SRC_RX_DSP_NBIC_MASK[4:4] = h90020268 4 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_MASK[4:4] for SW use
RX_SRC_RX_DSP_NBIC_MASK[5:5] = h90020268 5 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_MASK[5:5] for SW use
RX_SRC_RX_DSP_NBIC_MASK[6:6] = h90020268 6 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_MASK[6:6] for SW use
RX_SRC_RX_DSP_NBIC_MASK[7:7] = h90020268 7 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_MASK[7:7] for SW use
RX_SRC_RX_DSP_NBIC_MASK[8:8] = h90020268 8 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_MASK[8:8] for SW use
RX_SRC_RX_DSP_NBIC_MASK[9:9] = h90020268 9 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_MASK[9:9] for SW use
RX_SRC_RX_DSP_NBIC_MASK[10:10] = h90020268 10 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_MASK[10:10] for SW use
RX_SRC_RX_DSP_NBIC_MASK[11:11] = h90020268 11 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_MASK[11:11] for SW use
RX_SRC_RX_DSP_NBIC_MASK[12:12] = h90020268 12 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_MASK[12:12] for SW use
RX_SRC_RX_DSP_NBIC_MASK[13:13] = h90020268 13 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_MASK[13:13] for SW use
RX_SRC_RX_DSP_NBIC_MASK[14:14] = h90020268 14 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_MASK[14:14] for SW use
RX_SRC_RX_DSP_NBIC_MASK[15:15] = h90020268 15 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_MASK[15:15] for SW use



; REGISTER RX_SRC_RX_DSP_DFE_MASK_0 Address h900202ac
_RX_SRC_RX_DSP_DFE_MASK_0 = 2416050860 0 32 b00000000000000001111111111111111 RW
RX_SRC_RX_DSP_DFE_MASK[0:0] = h900202ac 0 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_MASK[0:0] for SW use
RX_SRC_RX_DSP_DFE_MASK[1:1] = h900202ac 1 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_MASK[1:1] for SW use
RX_SRC_RX_DSP_DFE_MASK[2:2] = h900202ac 2 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_MASK[2:2] for SW use
RX_SRC_RX_DSP_DFE_MASK[3:3] = h900202ac 3 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_MASK[3:3] for SW use
RX_SRC_RX_DSP_DFE_MASK[4:4] = h900202ac 4 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_MASK[4:4] for SW use
RX_SRC_RX_DSP_DFE_MASK[5:5] = h900202ac 5 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_MASK[5:5] for SW use
RX_SRC_RX_DSP_DFE_MASK[6:6] = h900202ac 6 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_MASK[6:6] for SW use
RX_SRC_RX_DSP_DFE_MASK[7:7] = h900202ac 7 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_MASK[7:7] for SW use
RX_SRC_RX_DSP_DFE_MASK[8:8] = h900202ac 8 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_MASK[8:8] for SW use
RX_SRC_RX_DSP_DFE_MASK[9:9] = h900202ac 9 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_MASK[9:9] for SW use
RX_SRC_RX_DSP_DFE_MASK[10:10] = h900202ac 10 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_MASK[10:10] for SW use
RX_SRC_RX_DSP_DFE_MASK[11:11] = h900202ac 11 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_MASK[11:11] for SW use
RX_SRC_RX_DSP_DFE_MASK[12:12] = h900202ac 12 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_MASK[12:12] for SW use
RX_SRC_RX_DSP_DFE_MASK[13:13] = h900202ac 13 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_MASK[13:13] for SW use
RX_SRC_RX_DSP_DFE_MASK[14:14] = h900202ac 14 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_MASK[14:14] for SW use
RX_SRC_RX_DSP_DFE_MASK[15:15] = h900202ac 15 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_MASK[15:15] for SW use



; REGISTER RX_SRC_RX_DSP_Slicer_reg Address h900202fc
_RX_SRC_RX_DSP_Slicer_reg = 2416050940 0 24 b00000000000100000000011111010000 RW
RX_SRC_RX_DSP_SLICER_ERR_TOO_BIG_PERIOD_PAM2 = h900202fc 0 16 h7d0 RW HEX
; Desc_RX_SRC_RX_DSP_SLICER_ERR_TOO_BIG_PERIOD_PAM2 for SW use
RX_SRC_RX_DSP_SLICER_ERR_TOO_BIG_THR_PAM2 = h900202fc 16 8 h10 RW HEX
; Desc_RX_SRC_RX_DSP_SLICER_ERR_TOO_BIG_THR_PAM2 for SW use



; REGISTER RX_SRC_RX_DSP_Timing_reg0 Address h90020300
_RX_SRC_RX_DSP_Timing_reg0 = 2416050944 0 30 b00110100001110101001001011001110 RW
RX_SRC_RX_DSP_TIMING_ALPHA = h90020300 0 8 hce RW HEX
; Desc_RX_SRC_RX_DSP_TIMING_ALPHA for SW use
RX_SRC_RX_DSP_TIMING_ALPHA_SHIFT = h90020300 8 5 h12 RW HEX
; Desc_RX_SRC_RX_DSP_TIMING_ALPHA_SHIFT for SW use
RX_SRC_RX_DSP_TIMING_BETA = h90020300 13 8 hd4 RW HEX
; Desc_RX_SRC_RX_DSP_TIMING_BETA for SW use
RX_SRC_RX_DSP_TIMING_BETA_SHIFT = h90020300 21 6 h21 RW HEX
; Desc_RX_SRC_RX_DSP_TIMING_BETA_SHIFT for SW use
RX_SRC_RX_DSP_TIMING_DRIFT_FRZ = h90020300 27 1 h0 RW BIN
; Desc_RX_SRC_RX_DSP_TIMING_DRIFT_FRZ for SW use
RX_SRC_RX_DSP_TIMING_FRZ = h90020300 28 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_TIMING_FRZ for SW use
RX_SRC_RX_DSP_TIMING_MASKED_ERR = h90020300 29 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_TIMING_MASKED_ERR for SW use



; REGISTER RX_SRC_RX_DSP_NOTCH_FILTER_reg0 Address h90020304
_RX_SRC_RX_DSP_NOTCH_FILTER_reg0 = 2416050948 0 31 b00000000000000000000000110101001 RW
RX_SRC_RX_DSP_NOTCH_FILTER_ENABLE = h90020304 0 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_NOTCH_FILTER_ENABLE for SW use
RX_SRC_RX_DSP_NOTCH_FILTER_TAPS_lsbs = h90020304 1 30 hd4 RW HEX
; Desc_RX_SRC_RX_DSP_NOTCH_FILTER_TAPS_lsbs for SW use



; REGISTER RX_SRC_RX_DSP_NOTCH_FILTER_reg1 Address h90020308
_RX_SRC_RX_DSP_NOTCH_FILTER_reg1 = 2416050952 0 24 b00000000000000000000000000000000 RW
RX_SRC_RX_DSP_NOTCH_FILTER_TAPS_msbs = h90020308 0 24 h0 RW HEX
; Desc_RX_SRC_RX_DSP_NOTCH_FILTER_TAPS_msbs for SW use



; REGISTER RX_SRC_RX_DSP_TEST_BUS_reg Address h9002030c
_RX_SRC_RX_DSP_TEST_BUS_reg = 2416050956 0 5 b00000000000000000000000000000000 RW
RX_SRC_RX_DSP_TEST_BUS_dsp_test_chain_select = h9002030c 0 5 h0 RW HEX
; Desc_RX_SRC_RX_DSP_TEST_BUS_dsp_test_chain_select for SW use



; REGISTER RX_ADP_GATE_REG_0 Address h90020314
_RX_ADP_GATE_REG_0 = 2416050964 0 18 b00000000000000000000000000000000 RW
RX_SRC_RX_DSP_NBIC_ADP_GATE = h90020314 0 6 h0 RW HEX
; Desc_RX_SRC_RX_DSP_NBIC_ADP_GATE 
RX_SRC_RX_DSP_FFE_ADP_GATE = h90020314 6 6 h0 RW HEX
; Desc_RX_SRC_RX_DSP_FFE_ADP_GATE 
RX_SRC_DFE_ADP_GATE = h90020314 12 6 h0 RW HEX
; Desc_RX_SRC_DFE_ADP_GATE 



; REGISTER RX_ADP_GATE_REG_1 Address h90020318
_RX_ADP_GATE_REG_1 = 2416050968 0 19 b00000000000000000000000000000000 RW
RX_DFE_ADP_OFFSET_VAL = h90020318 0 6 h0 RW HEX
; Desc_RX_DFE_ADP_OFFSET_VAL 
RX_FFE_ADP_OFFSET_VAL = h90020318 6 6 h0 RW HEX
; Desc_RX_FFE_ADP_OFFSET_VAL 
RX_NBIC_ADP_OFFSET_VAL = h90020318 12 6 h0 RW HEX
; Desc_RX_NBIC_ADP_OFFSET_VAL 
RX_ADP_OFFSET_LOAD_EN = h90020318 18 1 h0 RW BIN
; Desc_RX_ADP_OFFSET_LOAD_EN 



; REGISTER RX_SRC_RX_DSP_BLOCKS_RESET Address h9002031c
_RX_SRC_RX_DSP_BLOCKS_RESET = 2416050972 0 27 b00000111111111111111111111111111 RW
RX_SRC_RX_DSP_NOTCH_FILTER_RST = h9002031c 0 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_NOTCH_FILTER_RST 
RX_SRC_RX_DSP_DCcncl_rst = h9002031c 1 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DCcncl_rst 
RX_SRC_RX_DSP_DFE_RESET = h9002031c 2 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_DFE_RESET 
RX_SRC_RX_DSP_FFE_RESET = h9002031c 3 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_FFE_RESET 
RX_SRC_RX_DSP_IIR_1_1_RESET = h9002031c 4 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_IIR_1_1_RESET 
RX_SRC_RX_DSP_IIR_1_2_RESET = h9002031c 5 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_IIR_1_2_RESET 
RX_SRC_RX_DSP_IIR_2_1_RESET = h9002031c 6 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_IIR_2_1_RESET 
RX_SRC_RX_DSP_IIR_2_2_RESET = h9002031c 7 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_IIR_2_2_RESET 
RX_SRC_RX_DSP_IIR_RESET = h9002031c 8 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_IIR_RESET 
RX_SRC_RX_DSP_MaxErr_Rate_Rst = h9002031c 9 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_MaxErr_Rate_Rst 
RX_SRC_RX_DSP_MaxErr_Rst = h9002031c 10 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_MaxErr_Rst 
RX_SRC_RX_DSP_MaxSin_Rate_Rst = h9002031c 11 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_MaxSin_Rate_Rst 
RX_SRC_RX_DSP_MaxSin_Rst = h9002031c 12 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_MaxSin_Rst 
RX_SRC_RX_DSP_MseErr_Rate_Rst = h9002031c 13 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_MseErr_Rate_Rst 
RX_SRC_RX_DSP_MseErr_Rst = h9002031c 14 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_MseErr_Rst 
RX_SRC_RX_DSP_MseSin_Rate_Rst = h9002031c 15 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_MseSin_Rate_Rst 
RX_SRC_RX_DSP_MseSin_Rst = h9002031c 16 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_MseSin_Rst 
RX_SRC_RX_DSP_NBIC_RESET = h9002031c 17 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_NBIC_RESET 
RX_SRC_RX_DSP_TIMING_RESET = h9002031c 18 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_TIMING_RESET 
RX_SRC_RX_DSP_TIMING_2SPS_RESET = h9002031c 19 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_TIMING_2SPS_RESET 
RX_SRC_RX_DSP_SAR_CNCL_RST = h9002031c 20 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_SAR_CNCL_RST 
RX_SRC_RX_DSP_SLICER_SRESET = h9002031c 21 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_SLICER_SRESET 
RX_SRC_RX_DSP_ERR_MEAS_RESET = h9002031c 22 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_ERR_MEAS_RESET 
RX_SRC_RX_DSP_NBI_RESET = h9002031c 23 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_NBI_RESET 
RX_SRC_RX_DSP_SIGMA_DELTA_RESET = h9002031c 24 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_SIGMA_DELTA_RESET 
RX_SRC_RX_DSP_SLICER_ERR_TOO_BIG_RESET = h9002031c 25 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_SLICER_ERR_TOO_BIG_RESET 
RX_SRC_RX_DSP_NBSIN_MEASUREMENTS_RESET = h9002031c 26 1 h1 RW BIN
; Desc_RX_SRC_RX_DSP_NBSIN_MEASUREMENTS_RESET 



; REGISTER RX_Coef_Read_Ctrl_0 Address h90020320
_RX_Coef_Read_Ctrl_0 = 2416050976 0 16 b00000000000000000000000000000000 RW
RX_cpu_coeff_sel = h90020320 0 16 h0 RW HEX
; Desc_RX_cpu_coeff_sel which DRAM to use: 0-Instruction DRAM, 1-Data DRAM



; REGISTER RX_SRC_TIMING_MAX_DRIFT_32_LSB_reg Address h90020324
_RX_SRC_TIMING_MAX_DRIFT_32_LSB_reg = 2416050980 0 32 b11111111111111111111111111111111 RW
RX_SRC_TIMING_MAX_DRIFT_32_LSB = h90020324 0 32 hffffffff RW HEX
; Desc_RX_SRC_TIMING_MAX_DRIFT_32_LSB 



; REGISTER RX_SRC_TIMING_MAX_DRIFT_8_MSB_reg Address h90020328
_RX_SRC_TIMING_MAX_DRIFT_8_MSB_reg = 2416050984 0 8 b00000000000000000000000011111111 RW
RX_SRC_TIMING_MAX_DRIFT_8_MSB = h90020328 0 8 hff RW HEX
; Desc_RX_SRC_TIMING_MAX_DRIFT_8_MSB 



; REGISTER RX_PCS_8b10b_RX_PCS_SYSTEM_CONFIG_REG Address h90020400
_RX_PCS_8b10b_RX_PCS_SYSTEM_CONFIG_REG = 2416051200 0 24 b00000000000000000000111011010000 RW
RX_PCS_8b10b_RX_PCS_CLK_EN = h90020400 0 1 h0 RW BIN
; Desc_RX_PCS_8b10b_RX_PCS_CLK_EN 
RX_PCS_8b10b_RX_PCS_SCM_IGNORE10BERR = h90020400 1 1 h0 RW BIN
; Desc_RX_PCS_8b10b_RX_PCS_SCM_IGNORE10BERR 
RX_PCS_8b10b_RX_PCS_SCM_IGNORERDERR = h90020400 2 1 h0 RW BIN
; Desc_RX_PCS_8b10b_RX_PCS_SCM_IGNORERDERR 
RX_PCS_8b10b_RX_PCS_IS_US = h90020400 4 1 h1 RW BIN
; Desc_RX_PCS_8b10b_RX_PCS_IS_US 
RX_PCS_8b10b_RX_PCS_DESC_LOCK_BYTES = h90020400 5 5 h16 RW HEX
; Desc_RX_PCS_8b10b_RX_PCS_DESC_LOCK_BYTES 
RX_PCS_8b10b_RX_PCS_K_CONSISTENT = h90020400 10 4 h3 RW HEX
; Desc_RX_PCS_8b10b_RX_PCS_K_CONSISTENT 
RX_PCS_8b10b_RX_PCS_REQ_IGNORE10BERR = h90020400 14 5 h0 RW HEX
; Desc_RX_PCS_8b10b_RX_PCS_REQ_IGNORE10BERR 
RX_PCS_8b10b_RX_PCS_REQ_IGNORERDERR = h90020400 19 5 h0 RW HEX
; Desc_RX_PCS_8b10b_RX_PCS_REQ_IGNORERDERR 



; REGISTER RX_PCS_8b10b_RX_PCS_Enable_config_reg Address h9002040c
_RX_PCS_8b10b_RX_PCS_Enable_config_reg = 2416051212 0 16 b00000000000000000010000000101101 RW
RX_PCS_8b10b_RX_PCS_RCV_CLK_REG_GATE = h9002040c 0 2 h1 RW HEX
; Desc_RX_PCS_8b10b_RX_PCS_RCV_CLK_REG_GATE 
RX_PCS_8b10b_RX_PCS_EN_REG_LENGTH = h9002040c 2 3 h3 RW HEX
; Desc_RX_PCS_8b10b_RX_PCS_EN_REG_LENGTH 
RX_PCS_8b10b_RX_PCS_EN_REG = h9002040c 5 8 h1 RW HEX
; Desc_RX_PCS_8b10b_RX_PCS_EN_REG 
RX_PCS_8b10b_RX_PCS_LOAD_EN_REG = h9002040c 13 1 h1 RW BIN
; Desc_RX_PCS_8b10b_RX_PCS_LOAD_EN_REG 
RX_PCS_8b10b_PCSRX_SYMB_TO_TOK_SRESET = h9002040c 14 1 h0 RW BIN
; Desc_RX_PCS_8b10b_PCSRX_SYMB_TO_TOK_SRESET 



; REGISTER RX_PCS_8b10b_RX_PCS_SCM_AND_EVENT_CNT_CG Address h9002041c
_RX_PCS_8b10b_RX_PCS_SCM_AND_EVENT_CNT_CG = 2416051228 0 4 b00000000000000000000000000000000 RW
RX_PCS_8b10b_RX_PCS_SCM_FIFO_CLEAR = h9002041c 0 1 h0 RW BIN
; Desc_RX_PCS_8b10b_RX_PCS_SCM_FIFO_CLEAR 
RX_PCS_8b10b_RX_PCS_EVENT_CNT_UPDATE = h9002041c 1 1 h0 RW BIN
; Desc_RX_PCS_8b10b_RX_PCS_EVENT_CNT_UPDATE 
RX_PCS_8b10b_RX_PCS_EVENT_CNT_CLEAR = h9002041c 2 1 h0 RW BIN
; Desc_RX_PCS_8b10b_RX_PCS_EVENT_CNT_CLEAR 
RX_PCS_8b10b_RX_PCS_EVENT_CNT_WRAP_EN = h9002041c 3 1 h0 RW BIN
; Desc_RX_PCS_8b10b_RX_PCS_EVENT_CNT_WRAP_EN 



; REGISTER RX_RX_TBA_SENS_CONFIG_reg_0 Address h90020510
_RX_RX_TBA_SENS_CONFIG_reg_0 = 2416051472 0 29 b00000000000000000000000000000000 RW
RX_RX_TBA_SENS_THRESH_X_HEAD = h90020510 0 10 h0 RW HEX
; Desc_RX_RX_TBA_SENS_THRESH_X_HEAD each bit represents the corresponding instance  of IRAM that got an accsess while in sleep mode
RX_RX_TBA_SENS_NEG_X_HEAD = h90020510 10 1 h0 RW BIN
; Desc_RX_RX_TBA_SENS_NEG_X_HEAD each bit represents the corresponding instance  of IRAM that got an accsess while in sleep mode
RX_RX_TBA_SENS_THRESH_ERR = h90020510 11 11 h0 RW HEX
; Desc_RX_RX_TBA_SENS_THRESH_ERR each bit represents the corresponding instance  of IRAM that got an accsess while in sleep mode
RX_RX_TBA_SENS_NEG_ERR = h90020510 22 1 h0 RW BIN
; Desc_RX_RX_TBA_SENS_NEG_ERR each bit represents the corresponding instance  of IRAM that got an accsess while in sleep mode
RX_RX_TBA_SENS_THRESH_TOO_BIG_ERR = h90020510 23 1 h0 RW BIN
; Desc_RX_RX_TBA_SENS_THRESH_TOO_BIG_ERR each bit represents the corresponding instance  of IRAM that got an accsess while in sleep mode
RX_RX_TBA_SENS_NEG_TOO_BIG_ERR = h90020510 24 1 h0 RW BIN
; Desc_RX_RX_TBA_SENS_NEG_TOO_BIG_ERR each bit represents the corresponding instance  of IRAM that got an accsess while in sleep mode
RX_RX_TBA_SENS_THRESH_NBIC_RST = h90020510 25 1 h0 RW BIN
; Desc_RX_RX_TBA_SENS_THRESH_NBIC_RST each bit represents the corresponding instance  of IRAM that got an accsess while in sleep mode
RX_RX_TBA_SENS_NEG_NBIC_RST = h90020510 26 1 h0 RW BIN
; Desc_RX_RX_TBA_SENS_NEG_NBIC_RST each bit represents the corresponding instance  of IRAM that got an accsess while in sleep mode



; REGISTER RX_RX_TBA_SENS_CONSECUTIVE_X_HEAD_reg Address h90020514
_RX_RX_TBA_SENS_CONSECUTIVE_X_HEAD_reg = 2416051476 0 32 b00000000000000000000000000000000 RW
RX_RX_TBA_SENS_CONSECUTIVE_X_HEAD = h90020514 0 32 h0 RW HEX
; Desc_RX_RX_TBA_SENS_CONSECUTIVE_X_HEAD 0 = disable clock to SBPI bus



; REGISTER RX_RX_TBA_SENS_CONSECUTIVE_ERR_reg Address h90020518
_RX_RX_TBA_SENS_CONSECUTIVE_ERR_reg = 2416051480 0 32 b00000000000000000000000000000000 RW
RX_RX_TBA_SENS_CONSECUTIVE_ERR = h90020518 0 32 h0 RW HEX
; Desc_RX_RX_TBA_SENS_CONSECUTIVE_ERR store last o_MISO when FLAG was negated



; REGISTER RX_RX_TBA_SENS_CONSECUTIVE_TOO_BIG_ERR_reg Address h9002051c
_RX_RX_TBA_SENS_CONSECUTIVE_TOO_BIG_ERR_reg = 2416051484 0 32 b00000000000000000000000000000000 RW
RX_RX_TBA_SENS_CONSECUTIVE_TOO_BIG_ERR = h9002051c 0 32 h0 RW HEX
; Desc_RX_RX_TBA_SENS_CONSECUTIVE_TOO_BIG_ERR data read (registers) from OTP



; REGISTER RX_RX_TBA_SENS_CONSECUTIVE_NBIC_RST_reg Address h90020520
_RX_RX_TBA_SENS_CONSECUTIVE_NBIC_RST_reg = 2416051488 0 32 b00000000000000000000000000000000 RW
RX_RX_TBA_SENS_CONSECUTIVE_NBIC_RST = h90020520 0 32 h0 RW HEX
; Desc_RX_RX_TBA_SENS_CONSECUTIVE_NBIC_RST mips access to read from OTP



; REGISTER RX_RX_TBA_SENS_CONSECUTIVE_MSE_ERR_RO_W_MH_reg Address h90020524
_RX_RX_TBA_SENS_CONSECUTIVE_MSE_ERR_RO_W_MH_reg = 2416051492 0 32 b00000000000000000000000000000000 RW
RX_RX_TBA_SENS_CONSECUTIVE_MSE_ERR_RO_W_MH = h90020524 0 32 h0 RW HEX
; Desc_RX_RX_TBA_SENS_CONSECUTIVE_MSE_ERR_RO_W_MH store last o_MISO when FLAG was negated



; REGISTER RX_RX_TBA_TBA_CONFIG_reg Address h90020528
_RX_RX_TBA_TBA_CONFIG_reg = 2416051496 0 16 b00000000000000000000000000000000 RW
RX_RX_TBA_N_VALID_VALUE = h90020528 0 4 h0 RW HEX
; Desc_RX_RX_TBA_N_VALID_VALUE QRR output
RX_RX_TBA_TBA_VALID_PHASE = h90020528 4 4 h0 RW HEX
; Desc_RX_RX_TBA_TBA_VALID_PHASE QRR output
RX_RX_TBA_SRC_CHOOSE_16_BITS = h90020528 8 2 h0 RW HEX
; Desc_RX_RX_TBA_SRC_CHOOSE_16_BITS QRR output
RX_RX_TBA_TRIGGER_MASK_REG = h90020528 10 5 h0 RW HEX
; Desc_RX_RX_TBA_TRIGGER_MASK_REG QRR output
RX_RX_TBA_SOFTWARE_LOGGING = h90020528 15 1 h0 RW BIN
; Desc_RX_RX_TBA_SOFTWARE_LOGGING QRR output



; REGISTER RX_RX_TBA_SENS_CONFIG_reg_1 Address h9002052c
_RX_RX_TBA_SENS_CONFIG_reg_1 = 2416051500 0 18 b00000000000000000000000000000000 RW
RX_RX_TBA_SENS_THRESH_MSEERR_RO_W_MH = h9002052c 0 17 h0 RW HEX
; Desc_RX_RX_TBA_SENS_THRESH_MSEERR_RO_W_MH QSR output
RX_RX_TBA_SENS_NEG_MSE_ERR_RO_W_MH = h9002052c 17 1 h0 RW BIN
; Desc_RX_RX_TBA_SENS_NEG_MSE_ERR_RO_W_MH QSR output



; REGISTER RX_SRC_RX_DSP_NBI_NCO_reg_0 Address h90020568
_RX_SRC_RX_DSP_NBI_NCO_reg_0 = 2416051560 0 32 b00000000000000000000000000000000 RW
RX_SRC_M_DPHASE_F1 = h90020568 0 16 h0 RW HEX
; Desc_RX_SRC_M_DPHASE_F1 data read (registers) from OTP
RX_SRC_M_DPHASE_F2 = h90020568 16 16 h0 RW HEX
; Desc_RX_SRC_M_DPHASE_F2 data read (registers) from OTP



; REGISTER RX_SRC_RX_DSP_NBI_NCO_reg_1 Address h9002056c
_RX_SRC_RX_DSP_NBI_NCO_reg_1 = 2416051564 0 23 b00000000001000000000000000000000 RW
RX_SRC_NBI_F1_GAIN = h9002056c 0 4 h0 RW HEX
; Desc_RX_SRC_NBI_F1_GAIN 
RX_SRC_NBI_F1_GAIN_NL = h9002056c 4 4 h0 RW HEX
; Desc_RX_SRC_NBI_F1_GAIN_NL 
RX_SRC_NBI_F1_NL_EN = h9002056c 8 1 h0 RW BIN
; Desc_RX_SRC_NBI_F1_NL_EN 
RX_SRC_NBI_F2_EN = h9002056c 9 1 h0 RW BIN
; Desc_RX_SRC_NBI_F2_EN 
RX_SRC_NBI_F2_GAIN = h9002056c 10 4 h0 RW HEX
; Desc_RX_SRC_NBI_F2_GAIN 
RX_SRC_NBI_F2_GAIN_NL = h9002056c 14 4 h0 RW HEX
; Desc_RX_SRC_NBI_F2_GAIN_NL 
RX_SRC_NBI_F2_NL_EN = h9002056c 18 1 h0 RW BIN
; Desc_RX_SRC_NBI_F2_NL_EN 
RX_SRC_SIN_MEAS_SLCT = h9002056c 19 2 h0 RW HEX
; Desc_RX_SRC_SIN_MEAS_SLCT 
RX_SRC_INTERNAL_NBI_BYB = h9002056c 21 1 h1 RW BIN
; Desc_RX_SRC_INTERNAL_NBI_BYB 
RX_SRC_NBI_F1_EN = h9002056c 22 1 h0 RW BIN
; Desc_RX_SRC_NBI_F1_EN 



; REGISTER RX_SRC_RX_DSP_SIGMA_DELTA_reg_0 Address h90020570
_RX_SRC_RX_DSP_SIGMA_DELTA_reg_0 = 2416051568 0 17 b00000000000000000000000000000000 RW
RX_SRC_PLL_POLARITY = h90020570 0 1 h0 RW BIN
; Desc_RX_SRC_PLL_POLARITY sticky indication for rd_access_wrong_controls
RX_SRC_TIMING_SD_PAUSE_EN = h90020570 1 1 h0 RW BIN
; Desc_RX_SRC_TIMING_SD_PAUSE_EN sticky indication for rd_access_wrong_controls
RX_SRC_TIMING_SD_th = h90020570 2 10 h0 RW HEX
; Desc_RX_SRC_TIMING_SD_th sticky indication for rd_access_wrong_controls
RX_SRC_SIGMA_DELTA_DISABLE = h90020570 12 1 h0 RW BIN
; Desc_RX_SRC_SIGMA_DELTA_DISABLE sticky indication for rd_access_wrong_controls
RX_PI_EN = h90020570 13 4 h0 RW HEX
; Desc_RX_PI_EN sticky indication for rd_access_wrong_controls



; REGISTER RX_EFE_NBIC_RESET_REG0 Address h90020574
_RX_EFE_NBIC_RESET_REG0 = 2416051572 0 19 b00000000000000000000000000000000 RW
RX_NBIC_EFE_MSE_THRESHOLD = h90020574 0 17 h0 RW HEX
; Desc_RX_NBIC_EFE_MSE_THRESHOLD 
RX_NBIC_EN_AUTO_FRZ = h90020574 17 1 h0 RW BIN
; Desc_RX_NBIC_EN_AUTO_FRZ 
RX_NBIC_EN_AUTO_GATE = h90020574 18 1 h0 RW BIN
; Desc_RX_NBIC_EN_AUTO_GATE 



; REGISTER RX_EFE_NBIC_RESET_REG1 Address h90020578
_RX_EFE_NBIC_RESET_REG1 = 2416051576 0 32 b00000000000000000000000000000000 RW
RX_NBIC_AUTO_GATE_DEL = h90020578 0 16 h0 RW HEX
; Desc_RX_NBIC_AUTO_GATE_DEL mask indication of rd_access_wrong_controls
RX_NBIC_AUTO_FRZ_DEL = h90020578 16 16 h0 RW HEX
; Desc_RX_NBIC_AUTO_FRZ_DEL mask indication of rd_access_wrong_controls



; REGISTER RX_EFE_NBIC_RESET_REG2 Address h9002057c
_RX_EFE_NBIC_RESET_REG2 = 2416051580 0 16 b00000000000000000000000000000000 RW
RX_NBIC_KNOWN_RESET_LIMIT = h9002057c 0 16 h0 RW HEX
; Desc_RX_NBIC_KNOWN_RESET_LIMIT block enable



; REGISTER RX_DSP_SW_REG_0 Address h90020580
_RX_DSP_SW_REG_0 = 2416051584 0 32 b00000000000000000000000000000000 RW
RX_DSP_SW_REG0 = h90020580 0 32 h0 RW HEX
; Desc_RX_DSP_SW_REG0 This configuration represent a number of clock cycles that should be counted before an interrupt event will wake the cpu. (Setup time)



; REGISTER RX_DSP_SW_REG_1 Address h90020584
_RX_DSP_SW_REG_1 = 2416051588 0 32 b00000000000000000000000000000000 RW
RX_DSP_SW_REG1 = h90020584 0 32 h0 RW HEX
; Desc_RX_DSP_SW_REG1 This configuration represents a small number of clock cycles that will be counted before a sleep signal will propagate to RAM. The aim of this counting is letting the SI_Sleep be stable on 1'b1. 



; REGISTER TX_SRC_TX_TM_LFSR_LUT_VAL_reg0 Address h90028030
_TX_SRC_TX_TM_LFSR_LUT_VAL_reg0 = 2416082992 0 32 b01111000011110000111100001111000 RW
TX_SRC_TX_TM_LFSR_LUT_VAL0 = h90028030 0 8 h78 RW HEX
; Desc_TX_SRC_TX_TM_LFSR_LUT_VAL0 FW register
TX_SRC_TX_TM_LFSR_LUT_VAL1 = h90028030 8 8 h78 RW HEX
; Desc_TX_SRC_TX_TM_LFSR_LUT_VAL1 FW register
TX_SRC_TX_TM_LFSR_LUT_VAL2 = h90028030 16 8 h78 RW HEX
; Desc_TX_SRC_TX_TM_LFSR_LUT_VAL2 FW register
TX_SRC_TX_TM_LFSR_LUT_VAL3 = h90028030 24 8 h78 RW HEX
; Desc_TX_SRC_TX_TM_LFSR_LUT_VAL3 FW register



; REGISTER TX_SRC_TX_TM_LFSR_LUT_VAL_reg1 Address h90028034
_TX_SRC_TX_TM_LFSR_LUT_VAL_reg1 = 2416082996 0 32 b01111000011110000111100001111000 RW
TX_SRC_TX_TM_LFSR_LUT_VAL4 = h90028034 0 8 h78 RW HEX
; Desc_TX_SRC_TX_TM_LFSR_LUT_VAL4 FW register
TX_SRC_TX_TM_LFSR_LUT_VAL5 = h90028034 8 8 h78 RW HEX
; Desc_TX_SRC_TX_TM_LFSR_LUT_VAL5 FW register
TX_SRC_TX_TM_LFSR_LUT_VAL6 = h90028034 16 8 h78 RW HEX
; Desc_TX_SRC_TX_TM_LFSR_LUT_VAL6 FW register
TX_SRC_TX_TM_LFSR_LUT_VAL7 = h90028034 24 8 h78 RW HEX
; Desc_TX_SRC_TX_TM_LFSR_LUT_VAL7 FW register



; REGISTER TX_SRC_TX_TM_LFSR_LUT_VAL_reg2 Address h90028038
_TX_SRC_TX_TM_LFSR_LUT_VAL_reg2 = 2416083000 0 32 b10001000100010001000100010001000 RW
TX_SRC_TX_TM_LFSR_LUT_VAL8 = h90028038 0 8 h88 RW HEX
; Desc_TX_SRC_TX_TM_LFSR_LUT_VAL8 FW register
TX_SRC_TX_TM_LFSR_LUT_VAL9 = h90028038 8 8 h88 RW HEX
; Desc_TX_SRC_TX_TM_LFSR_LUT_VAL9 FW register
TX_SRC_TX_TM_LFSR_LUT_VAL10 = h90028038 16 8 h88 RW HEX
; Desc_TX_SRC_TX_TM_LFSR_LUT_VAL10 FW register
TX_SRC_TX_TM_LFSR_LUT_VAL11 = h90028038 24 8 h88 RW HEX
; Desc_TX_SRC_TX_TM_LFSR_LUT_VAL11 FW register



; REGISTER TX_SRC_TX_TM_LFSR_LUT_VAL_reg3 Address h9002803c
_TX_SRC_TX_TM_LFSR_LUT_VAL_reg3 = 2416083004 0 32 b10001000100010001000100010001000 RW
TX_SRC_TX_TM_LFSR_LUT_VAL12 = h9002803c 0 8 h88 RW HEX
; Desc_TX_SRC_TX_TM_LFSR_LUT_VAL12 FW register
TX_SRC_TX_TM_LFSR_LUT_VAL13 = h9002803c 8 8 h88 RW HEX
; Desc_TX_SRC_TX_TM_LFSR_LUT_VAL13 FW register
TX_SRC_TX_TM_LFSR_LUT_VAL14 = h9002803c 16 8 h88 RW HEX
; Desc_TX_SRC_TX_TM_LFSR_LUT_VAL14 FW register
TX_SRC_TX_TM_LFSR_LUT_VAL15 = h9002803c 24 8 h88 RW HEX
; Desc_TX_SRC_TX_TM_LFSR_LUT_VAL15 FW register



; REGISTER TX_SRC_TX_TM_LFSR_PMD_reg Address h90028040
_TX_SRC_TX_TM_LFSR_PMD_reg = 2416083008 0 24 b00000000010000100000000000000000 RW
TX_SRC_TX_TM_LFSR_PMD_LANE = h90028040 0 2 h0 RW HEX
; Desc_TX_SRC_TX_TM_LFSR_PMD_LANE FW register
TX_SRC_TX_TM_LFSR_PMD_LEN = h90028040 2 20 h8000 RW HEX
; Desc_TX_SRC_TX_TM_LFSR_PMD_LEN FW register
TX_SRC_TX_TM_LFSR_RESET = h90028040 22 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_LFSR_RESET FW register
TX_SRC_TX_TM_LFSR_NRZ_MODE = h90028040 23 1 h0 RW BIN
; Desc_TX_SRC_TX_TM_LFSR_NRZ_MODE FW register



; REGISTER TX_SRC_TX_TM_SIG_GEN_reg Address h90028044
_TX_SRC_TX_TM_SIG_GEN_reg = 2416083012 0 16 b00000000000000000000000000111111 RW
TX_SRC_TX_TM_SIG_GEN_POL_CNTR_EN = h90028044 0 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_SIG_GEN_POL_CNTR_EN FW register
TX_SRC_TX_TM_SIG_GEN_RST = h90028044 1 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_SIG_GEN_RST FW register
TX_SRC_TX_TM_SIG_GEN_AMP = h90028044 2 8 hf RW HEX
; Desc_TX_SRC_TX_TM_SIG_GEN_AMP FW register
TX_SRC_TX_TM_SIG_GEN_POL_CNTR = h90028044 10 6 h0 RW HEX
; Desc_TX_SRC_TX_TM_SIG_GEN_POL_CNTR FW register



; REGISTER TX_SRC_TX_TM_LFSR_INIT_VALUE_0 Address h90028048
_TX_SRC_TX_TM_LFSR_INIT_VALUE_0 = 2416083016 0 32 b00000000000011111111111111111111 RW
TX_SRC_TX_TM_LFSR_INIT_VALUE[0:0] = h90028048 0 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_LFSR_INIT_VALUE[0:0] FW register
TX_SRC_TX_TM_LFSR_INIT_VALUE[1:1] = h90028048 1 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_LFSR_INIT_VALUE[1:1] FW register
TX_SRC_TX_TM_LFSR_INIT_VALUE[2:2] = h90028048 2 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_LFSR_INIT_VALUE[2:2] FW register
TX_SRC_TX_TM_LFSR_INIT_VALUE[3:3] = h90028048 3 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_LFSR_INIT_VALUE[3:3] FW register
TX_SRC_TX_TM_LFSR_INIT_VALUE[4:4] = h90028048 4 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_LFSR_INIT_VALUE[4:4] FW register
TX_SRC_TX_TM_LFSR_INIT_VALUE[5:5] = h90028048 5 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_LFSR_INIT_VALUE[5:5] FW register
TX_SRC_TX_TM_LFSR_INIT_VALUE[6:6] = h90028048 6 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_LFSR_INIT_VALUE[6:6] FW register
TX_SRC_TX_TM_LFSR_INIT_VALUE[7:7] = h90028048 7 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_LFSR_INIT_VALUE[7:7] FW register
TX_SRC_TX_TM_LFSR_INIT_VALUE[8:8] = h90028048 8 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_LFSR_INIT_VALUE[8:8] FW register
TX_SRC_TX_TM_LFSR_INIT_VALUE[9:9] = h90028048 9 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_LFSR_INIT_VALUE[9:9] FW register
TX_SRC_TX_TM_LFSR_INIT_VALUE[10:10] = h90028048 10 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_LFSR_INIT_VALUE[10:10] FW register
TX_SRC_TX_TM_LFSR_INIT_VALUE[11:11] = h90028048 11 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_LFSR_INIT_VALUE[11:11] FW register
TX_SRC_TX_TM_LFSR_INIT_VALUE[12:12] = h90028048 12 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_LFSR_INIT_VALUE[12:12] FW register
TX_SRC_TX_TM_LFSR_INIT_VALUE[13:13] = h90028048 13 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_LFSR_INIT_VALUE[13:13] FW register
TX_SRC_TX_TM_LFSR_INIT_VALUE[14:14] = h90028048 14 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_LFSR_INIT_VALUE[14:14] FW register
TX_SRC_TX_TM_LFSR_INIT_VALUE[15:15] = h90028048 15 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_LFSR_INIT_VALUE[15:15] FW register
TX_SRC_TX_TM_LFSR_INIT_VALUE[16:16] = h90028048 16 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_LFSR_INIT_VALUE[16:16] FW register
TX_SRC_TX_TM_LFSR_INIT_VALUE[17:17] = h90028048 17 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_LFSR_INIT_VALUE[17:17] FW register
TX_SRC_TX_TM_LFSR_INIT_VALUE[18:18] = h90028048 18 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_LFSR_INIT_VALUE[18:18] FW register
TX_SRC_TX_TM_LFSR_INIT_VALUE[19:19] = h90028048 19 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_LFSR_INIT_VALUE[19:19] FW register



; REGISTER TX_SRC_TX_TM_SIG_GEN_16P_VEC_0 Address h9002809c
_TX_SRC_TX_TM_SIG_GEN_16P_VEC_0 = 2416083100 0 32 b00000000000000001111111111111111 RW
TX_SRC_TX_TM_SIG_GEN_16P_VEC[0:0] = h9002809c 0 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_SIG_GEN_16P_VEC[0:0] 
TX_SRC_TX_TM_SIG_GEN_16P_VEC[1:1] = h9002809c 1 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_SIG_GEN_16P_VEC[1:1] 
TX_SRC_TX_TM_SIG_GEN_16P_VEC[2:2] = h9002809c 2 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_SIG_GEN_16P_VEC[2:2] 
TX_SRC_TX_TM_SIG_GEN_16P_VEC[3:3] = h9002809c 3 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_SIG_GEN_16P_VEC[3:3] 
TX_SRC_TX_TM_SIG_GEN_16P_VEC[4:4] = h9002809c 4 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_SIG_GEN_16P_VEC[4:4] 
TX_SRC_TX_TM_SIG_GEN_16P_VEC[5:5] = h9002809c 5 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_SIG_GEN_16P_VEC[5:5] 
TX_SRC_TX_TM_SIG_GEN_16P_VEC[6:6] = h9002809c 6 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_SIG_GEN_16P_VEC[6:6] 
TX_SRC_TX_TM_SIG_GEN_16P_VEC[7:7] = h9002809c 7 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_SIG_GEN_16P_VEC[7:7] 
TX_SRC_TX_TM_SIG_GEN_16P_VEC[8:8] = h9002809c 8 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_SIG_GEN_16P_VEC[8:8] 
TX_SRC_TX_TM_SIG_GEN_16P_VEC[9:9] = h9002809c 9 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_SIG_GEN_16P_VEC[9:9] 
TX_SRC_TX_TM_SIG_GEN_16P_VEC[10:10] = h9002809c 10 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_SIG_GEN_16P_VEC[10:10] 
TX_SRC_TX_TM_SIG_GEN_16P_VEC[11:11] = h9002809c 11 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_SIG_GEN_16P_VEC[11:11] 
TX_SRC_TX_TM_SIG_GEN_16P_VEC[12:12] = h9002809c 12 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_SIG_GEN_16P_VEC[12:12] 
TX_SRC_TX_TM_SIG_GEN_16P_VEC[13:13] = h9002809c 13 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_SIG_GEN_16P_VEC[13:13] 
TX_SRC_TX_TM_SIG_GEN_16P_VEC[14:14] = h9002809c 14 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_SIG_GEN_16P_VEC[14:14] 
TX_SRC_TX_TM_SIG_GEN_16P_VEC[15:15] = h9002809c 15 1 h1 RW BIN
; Desc_TX_SRC_TX_TM_SIG_GEN_16P_VEC[15:15] 



; REGISTER TX_SRC_TX_TM_LFSR_NRZ_reg Address h900280a0
_TX_SRC_TX_TM_LFSR_NRZ_reg = 2416083104 0 16 b00000000000000000000000000000000 RW
TX_SRC_TX_TM_LFSR_NRZ_LUT_VAL0 = h900280a0 0 8 h0 RW HEX
; Desc_TX_SRC_TX_TM_LFSR_NRZ_LUT_VAL0 
TX_SRC_TX_TM_LFSR_NRZ_LUT_VAL1 = h900280a0 8 8 h0 RW HEX
; Desc_TX_SRC_TX_TM_LFSR_NRZ_LUT_VAL1 



; REGISTER TX_PCS_8b10b_TX_PCS_config_CT4GHausPCSTx_reg Address h90028100
_TX_PCS_8b10b_TX_PCS_config_CT4GHausPCSTx_reg = 2416083200 0 1 b00000000000000000000000000000000 RW
TX_PCS_8b10b_TX_PCS_DATA_FIFO_CLEAR = h90028100 0 1 h0 RW BIN
; Desc_TX_PCS_8b10b_TX_PCS_DATA_FIFO_CLEAR 



; REGISTER TX_PCS_8b10b_TX_PCS_Enable_config_reg Address h90028104
_TX_PCS_8b10b_TX_PCS_Enable_config_reg = 2416083204 0 27 b00000010000000000000000111100100 RW
TX_PCS_8b10b_TX_PCS_EN_REG_LENGTH = h90028104 0 5 h4 RW HEX
; Desc_TX_PCS_8b10b_TX_PCS_EN_REG_LENGTH 
TX_PCS_8b10b_TX_PCS_EN_REG = h90028104 5 20 hf RW HEX
; Desc_TX_PCS_8b10b_TX_PCS_EN_REG 
TX_PCS_8b10b_TX_PCS_load_en_reg = h90028104 25 1 h1 RW BIN
; Desc_TX_PCS_8b10b_TX_PCS_load_en_reg 
TX_PCS_8b10b_TX_PCS_K_REFLECT_EN = h90028104 26 1 h0 RW BIN
; Desc_TX_PCS_8b10b_TX_PCS_K_REFLECT_EN 



; REGISTER TX_PCS_8b10b_TX_PCS_CONFIG_REG Address h9002810c
_TX_PCS_8b10b_TX_PCS_CONFIG_REG = 2416083212 0 26 b00000011001000110010001000000000 RW
TX_PCS_8b10b_TX_PCS_k_en = h9002810c 0 1 h0 RW BIN
; Desc_TX_PCS_8b10b_TX_PCS_k_en 
TX_PCS_8b10b_TX_PCS_KGAP = h9002810c 1 9 h100 RW HEX
; Desc_TX_PCS_8b10b_TX_PCS_KGAP 
TX_PCS_8b10b_TX_PCS_OTHERSCMGAP = h9002810c 10 8 hc8 RW HEX
; Desc_TX_PCS_8b10b_TX_PCS_OTHERSCMGAP 
TX_PCS_8b10b_TX_PCS_NSYMS_IN_HALF_USEC = h9002810c 18 8 hc8 RW HEX
; Desc_TX_PCS_8b10b_TX_PCS_NSYMS_IN_HALF_USEC 



; REGISTER TX_PCS_8b10b_TX_PCS_SYSTEM_CONFIG_REG Address h90028110
_TX_PCS_8b10b_TX_PCS_SYSTEM_CONFIG_REG = 2416083216 0 4 b00000000000000000000000000000000 RW
TX_PCS_8b10b_TX_PCS_CLK_EN = h90028110 0 1 h0 RW BIN
; Desc_TX_PCS_8b10b_TX_PCS_CLK_EN 
TX_PCS_8b10b_TX_PCS_chanTx_MODE_SEL = h90028110 1 3 h0 RW HEX
; Desc_TX_PCS_8b10b_TX_PCS_chanTx_MODE_SEL 



; REGISTER TX_PCS_8b10b_TX_PCS_1BIT_CONVERT Address h90028118
_TX_PCS_8b10b_TX_PCS_1BIT_CONVERT = 2416083224 0 19 b00000000000000001000000101111111 RW
TX_PCS_8b10b_TX_PCS_1B_TO_SYMB_ONE = h90028118 0 8 h7f RW HEX
; Desc_TX_PCS_8b10b_TX_PCS_1B_TO_SYMB_ONE 
TX_PCS_8b10b_TX_PCS_1B_TO_SYMB_ZERO = h90028118 8 8 h81 RW HEX
; Desc_TX_PCS_8b10b_TX_PCS_1B_TO_SYMB_ZERO 
TX_PCS_8b10b_TX_PCS_TX_sreset = h90028118 18 1 h0 RW BIN
; Desc_TX_PCS_8b10b_TX_PCS_TX_sreset 



; REGISTER TX_PCS_8b10b_TX_PCS_GLUE_LOGIC_reg Address h9002811c
_TX_PCS_8b10b_TX_PCS_GLUE_LOGIC_reg = 2416083228 0 7 b00000000000000000000000000000000 RW
TX_PCS_8b10b_TX_PCS_IN_IDLE_REFLECT_EN = h9002811c 0 1 h0 RW BIN
; Desc_TX_PCS_8b10b_TX_PCS_IN_IDLE_REFLECT_EN 
TX_PCS_8b10b_TX_PCS_OTHER_SCM_SW_CG = h9002811c 1 1 h0 RW BIN
; Desc_TX_PCS_8b10b_TX_PCS_OTHER_SCM_SW_CG 
TX_PCS_8b10b_TX_PCS_TX_STATE_SW_CG = h9002811c 2 1 h0 RW BIN
; Desc_TX_PCS_8b10b_TX_PCS_TX_STATE_SW_CG 
TX_PCS_8b10b_TX_PCS_OTHER_SCM_VAL_REG = h9002811c 3 4 h0 RW HEX
; Desc_TX_PCS_8b10b_TX_PCS_OTHER_SCM_VAL_REG 



; REGISTER TX_PCS_8b10b_TX_PCS_TX_STATE_SW_reg Address h90028120
_TX_PCS_8b10b_TX_PCS_TX_STATE_SW_reg = 2416083232 0 2 b00000000000000000000000000000000 RW
TX_PCS_8b10b_TX_PCS_TX_STATE_VAL_REG = h90028120 0 2 h0 RW HEX
; Desc_TX_PCS_8b10b_TX_PCS_TX_STATE_VAL_REG 



; REGISTER TX_PCS_8b10b_TX_PCS_DEBUG_COUNTER_CONFIG Address h90028124
_TX_PCS_8b10b_TX_PCS_DEBUG_COUNTER_CONFIG = 2416083236 0 8 b00000000000000000000000000100000 RW
TX_PCS_8b10b_TX_PCS_K_REFLECTED_CNT_DEBUG_EN = h90028124 0 1 h0 RW BIN
; Desc_TX_PCS_8b10b_TX_PCS_K_REFLECTED_CNT_DEBUG_EN 
TX_PCS_8b10b_TX_PCS_K_SENT_CNT_DEBUG_EN = h90028124 1 1 h0 RW BIN
; Desc_TX_PCS_8b10b_TX_PCS_K_SENT_CNT_DEBUG_EN 
TX_PCS_8b10b_TX_PCS_INIDLE_RCVD_CNT_DEBUG_EN = h90028124 2 1 h0 RW BIN
; Desc_TX_PCS_8b10b_TX_PCS_INIDLE_RCVD_CNT_DEBUG_EN 
TX_PCS_8b10b_TX_PCS_EXTENDED_PULSE_COUNTER_VAL = h90028124 3 5 h4 RW HEX
; Desc_TX_PCS_8b10b_TX_PCS_EXTENDED_PULSE_COUNTER_VAL 



; REGISTER TX_PCS_8b10b_TX_PCS_SCR_INIT_reg Address h90028130
_TX_PCS_8b10b_TX_PCS_SCR_INIT_reg = 2416083248 0 32 b00000000000000000000000000000000 RW
TX_PCS_8b10b_TX_PCS_SCR_INIT_LOAD = h90028130 0 1 h0 RW BIN
; Desc_TX_PCS_8b10b_TX_PCS_SCR_INIT_LOAD 
TX_PCS_8b10b_TX_PCS_SCR_INIT_VAL_lsbs = h90028130 1 31 h0 RW HEX
; Desc_TX_PCS_8b10b_TX_PCS_SCR_INIT_VAL_lsbs 



; REGISTER TX_PCS_8b10b_TX_PCS_SCR_INIT_reg1 Address h90028134
_TX_PCS_8b10b_TX_PCS_SCR_INIT_reg1 = 2416083252 0 27 b00000000000000000000000000000000 RW
TX_PCS_8b10b_TX_PCS_SCR_INIT_VAL_msbs = h90028134 0 27 h0 RW HEX
; Desc_TX_PCS_8b10b_TX_PCS_SCR_INIT_VAL_msbs 



; REGISTER TX_SRC_TX_DSP_TEST_BUS_reg Address h90028200
_TX_SRC_TX_DSP_TEST_BUS_reg = 2416083456 0 5 b00000000000000000000000000000000 RW
TX_SRC_TX_DSP_TEST_BUS_dsp_test_chain_select = h90028200 0 5 h0 RW HEX
; Desc_TX_SRC_TX_DSP_TEST_BUS_dsp_test_chain_select 



; REGISTER TX_PAMX_PCS_0 Address h90028204
_TX_PAMX_PCS_0 = 2416083460 0 22 b00000000000000000000000000000000 RW
TX_PAMX_PCS_MDOE = h90028204 0 1 h0 RW BIN
; Desc_TX_PAMX_PCS_MDOE 
TX_PAMX_PCS_TX_PTI_SCMAXDIV2_INT_ENABLE = h90028204 1 1 h0 RW BIN
; Desc_TX_PAMX_PCS_TX_PTI_SCMAXDIV2_INT_ENABLE 
TX_PAMX_PCS_TX_MEASURE_RTD = h90028204 2 1 h0 RW BIN
; Desc_TX_PAMX_PCS_TX_MEASURE_RTD 
TX_PAMX_PCS_TX_RETRAIN_ENABLE = h90028204 3 1 h0 RW BIN
; Desc_TX_PAMX_PCS_TX_RETRAIN_ENABLE 
TX_PAMX_PCS_TX_K_RTD_BASE_DELAY = h90028204 4 17 h0 RW HEX
; Desc_TX_PAMX_PCS_TX_K_RTD_BASE_DELAY 
TX_PAMX_PCS_TX_CHANGE_TX_MODE = h90028204 21 1 h0 RW BIN
; Desc_TX_PAMX_PCS_TX_CHANGE_TX_MODE 



; REGISTER TX_PAMX_PCS_1 Address h90028208
_TX_PAMX_PCS_1 = 2416083464 0 32 b00000000000001100000000001010000 RW
TX_PAMX_PCS_TX_RETRAIN_ISS_NUM = h90028208 0 16 h50 RW HEX
; Desc_TX_PAMX_PCS_TX_RETRAIN_ISS_NUM 
TX_PAMX_PCS_TX_RETRAIN_IDLE_NUM = h90028208 16 16 h6 RW HEX
; Desc_TX_PAMX_PCS_TX_RETRAIN_IDLE_NUM 



; REGISTER TX_PAMX_PCS_2 Address h9002820c
_TX_PAMX_PCS_2 = 2416083468 0 32 b00000000000000000000000000000000 RW
TX_PAMX_PCS_TX_SCRAMBLER_LSB_VAL = h9002820c 0 32 h0 RW HEX
; Desc_TX_PAMX_PCS_TX_SCRAMBLER_LSB_VAL 



; REGISTER TX_PAMX_PCS_3 Address h90028210
_TX_PAMX_PCS_3 = 2416083472 0 27 b00000000000000000000000000000000 RW
TX_PAMX_PCS_TX_SCRAMBLER_MSB_VAL = h90028210 0 26 h0 RW HEX
; Desc_TX_PAMX_PCS_TX_SCRAMBLER_MSB_VAL 
TX_PAMX_PCS_TX_LOAD_SCRAMBLER = h90028210 26 1 h0 RW BIN
; Desc_TX_PAMX_PCS_TX_LOAD_SCRAMBLER 



; REGISTER TX_PAMX_PCS_5 Address h90028218
_TX_PAMX_PCS_5 = 2416083480 0 17 b00000000000000000000000000000000 RW
TX_PAMX_PTI_IN_SCMAXDIV2_TIMER_THRESHOLD = h90028218 0 16 h0 RW HEX
; Desc_TX_PAMX_PTI_IN_SCMAXDIV2_TIMER_THRESHOLD 
TX_PAMX_TRIGGER_PTI = h90028218 16 1 h0 RW BIN
; Desc_TX_PAMX_TRIGGER_PTI 



; REGISTER TX_SRC_TX_TM__CONFIG Address h9002822c
_TX_SRC_TX_TM__CONFIG = 2416083500 0 5 b00000000000000000000000000000000 RW
TX_SRC_TX_TM_DS_CLK_REG_GATE = h9002822c 0 4 h0 RW HEX
; Desc_TX_SRC_TX_TM_DS_CLK_REG_GATE 
TX_SRC_TX_TM_AFE_DFT_SEL = h9002822c 4 1 h0 RW BIN
; Desc_TX_SRC_TX_TM_AFE_DFT_SEL 



; REGISTER TX_pamxTriggerPti Address h9002821c
_TX_pamxTriggerPti = 2416083484 0 32 b00000000000000000000000000000000 SC
TX_pamxTriggerPti = h9002821c 0 32 h0 SC HEX



; REGISTER AFE_MeronSrc_AFE_IF_blocks_reset_done_reg Address h90030000
_AFE_MeronSrc_AFE_IF_blocks_reset_done_reg = 2416115712 0 32 b00000000000000000000000000000000 RO
AFE_MeronSrc_AFE_IF_blocks_reset_done = h90030000 0 32 h0 RO HEX
; Desc_AFE_MeronSrc_AFE_IF_blocks_reset_done 
AFE_afe_if_chan_sys_reset_done = h90030000 0 1 h0 RO BIN
AFE_afe_if_cmn_sys_reset_done = h90030000 1 1 h0 RO BIN
AFE_pifgen_chan_rxadc_ana_reset_done = h90030000 2 1 h0 RO BIN
AFE_pifgen_chan_rxadc_dig_reset_done = h90030000 3 1 h0 RO BIN
AFE_afe_if_ram_txdac_reset_done = h90030000 4 1 h0 RO BIN



; REGISTER AFE_afe_if_repcalib_src_HwRepCalStatus Address h9003001c
_AFE_afe_if_repcalib_src_HwRepCalStatus = 2416115740 0 32 b00000000000000000000000000000000 SC
AFE_afe_if_repcalib_src_HwRepCal_Res = h9003001c 0 6 h0 SC HEX
; Desc_AFE_afe_if_repcalib_src_HwRepCal_Res 
AFE_afe_if_repcalib_src_HwRepCalDone = h9003001c 6 1 h0 SC BIN
; Desc_AFE_afe_if_repcalib_src_HwRepCalDone 



; REGISTER AFE_afe_if_repcalib_src_repcalib_src_HwRepCalDone_clear Address h90030020
_AFE_afe_if_repcalib_src_repcalib_src_HwRepCalDone_clear = 2416115744 0 32 b00000000000000000000000000000000 SC
AFE_afe_if_repcalib_src_repcalib_src_HwRepCalDone_RO = h90030020 0 1 h0 SC BIN
; Desc_AFE_afe_if_repcalib_src_repcalib_src_HwRepCalDone_RO 



; REGISTER AFE_afe_if_afe_SRC_PI_STATUS_REG Address h90030050
_AFE_afe_if_afe_SRC_PI_STATUS_REG = 2416115792 0 32 b00000000000000000000000000000000 RO
AFE_afe_if_afe_src_pi_calcap = h90030050 0 7 h0 RO HEX
; Desc_AFE_afe_if_afe_src_pi_calcap 
AFE_afe_if_afe_src_pi_caldone = h90030050 7 1 h0 RO BIN
; Desc_AFE_afe_if_afe_src_pi_caldone 
AFE_afe_if_afe_src_pi_calres = h90030050 8 8 h0 RO HEX
; Desc_AFE_afe_if_afe_src_pi_calres 
AFE_afe_if_afe_src_pi_phase0 = h90030050 16 1 h0 RO BIN
; Desc_AFE_afe_if_afe_src_pi_phase0 



; REGISTER AFE_afe_if_afe_SRC_WUP_STATUS_REG Address h90030074
_AFE_afe_if_afe_SRC_WUP_STATUS_REG = 2416115828 0 32 b00000000000000000000000000000000 RO
AFE_afe_if_afe_src_wup_wakemon_n = h90030074 0 1 h0 RO BIN
; Desc_AFE_afe_if_afe_src_wup_wakemon_n 



; REGISTER AFE_afe_if_afe_pi_caldone_clear Address h90030078
_AFE_afe_if_afe_pi_caldone_clear = 2416115832 0 32 b00000000000000000000000000000000 SC
AFE_afe_if_afe_pi_caldone_RO = h90030078 0 1 h0 SC BIN
; Desc_AFE_afe_if_afe_pi_caldone_RO 



; REGISTER AFE_afe_if_CMN_PLL_STATUS_REG Address h9003013c
_AFE_afe_if_CMN_PLL_STATUS_REG = 2416116028 0 32 b00000000000000000000000000000000 RO
AFE_afe_if_afe_cmn_pll_lockdet = h9003013c 0 1 h0 RO BIN
; Desc_AFE_afe_if_afe_cmn_pll_lockdet 
AFE_afe_if_afe_cmn_pll_ready = h9003013c 1 1 h0 RO BIN
; Desc_AFE_afe_if_afe_cmn_pll_ready 
AFE_afe_if_afe_cmn_pll_vcocal_code = h9003013c 2 8 h0 RO HEX
; Desc_AFE_afe_if_afe_cmn_pll_vcocal_code 
AFE_afe_if_afe_cmn_pll_vcocal_done = h9003013c 10 1 h0 RO BIN
; Desc_AFE_afe_if_afe_cmn_pll_vcocal_done 



; REGISTER AFE_afe_if_CMN_RCCAL_STATUS_REG Address h90030144
_AFE_afe_if_CMN_RCCAL_STATUS_REG = 2416116036 0 32 b00000000000000000000000000000000 RO
AFE_afe_if_afe_cmn_rccal_done = h90030144 0 1 h0 RO BIN
; Desc_AFE_afe_if_afe_cmn_rccal_done 
AFE_afe_if_afe_cmn_rccal_trim = h90030144 1 4 h0 RO HEX
; Desc_AFE_afe_if_afe_cmn_rccal_trim 
AFE_afe_if_afe_cmn_rccal_tsttimer = h90030144 5 9 h0 RO HEX
; Desc_AFE_afe_if_afe_cmn_rccal_tsttimer 



; REGISTER AFE_afe_if_CMN_RTERMCAL_STATUS_REG Address h9003014c
_AFE_afe_if_CMN_RTERMCAL_STATUS_REG = 2416116044 0 32 b00000000000000000000000000000000 RO
AFE_afe_if_afe_cmn_rtermcal_done = h9003014c 0 1 h0 RO BIN
; Desc_AFE_afe_if_afe_cmn_rtermcal_done 
AFE_afe_if_afe_cmn_rtermcal_trim = h9003014c 1 5 h0 RO HEX
; Desc_AFE_afe_if_afe_cmn_rtermcal_trim 
AFE_afe_if_afe_cmn_rtermcal_tstcomp = h9003014c 6 1 h0 RO BIN
; Desc_AFE_afe_if_afe_cmn_rtermcal_tstcomp 



; REGISTER AFE_afe_if_CMN_XOSC_STATUS_REG Address h90030154
_AFE_afe_if_CMN_XOSC_STATUS_REG = 2416116052 0 32 b00000000000000000000000000000000 RO
AFE_afe_if_afe_cmn_xosc_stable = h90030154 0 1 h0 RO BIN
; Desc_AFE_afe_if_afe_cmn_xosc_stable 



; REGISTER AFE_afe_if_afe_cmn_pll_vcocal_done_clear Address h90030158
_AFE_afe_if_afe_cmn_pll_vcocal_done_clear = 2416116056 0 32 b00000000000000000000000000000000 SC
AFE_afe_if_afe_cmn_pll_vcocal_done_RO = h90030158 0 1 h0 SC BIN
; Desc_AFE_afe_if_afe_cmn_pll_vcocal_done_RO 



; REGISTER AFE_afe_if_afe_cmn_rccall_done_clear Address h9003015c
_AFE_afe_if_afe_cmn_rccall_done_clear = 2416116060 0 32 b00000000000000000000000000000000 SC
AFE_afe_if_afe_cmn_rccal_done_RO = h9003015c 0 1 h0 SC BIN
; Desc_AFE_afe_if_afe_cmn_rccal_done_RO 



; REGISTER AFE_afe_if_afe_cmn_rtermcal_done_clear Address h90030160
_AFE_afe_if_afe_cmn_rtermcal_done_clear = 2416116064 0 32 b00000000000000000000000000000000 SC
AFE_afe_if_afe_cmn_rtermcal_done_RO = h90030160 0 1 h0 SC BIN
; Desc_AFE_afe_if_afe_cmn_rtermcal_done_RO 



; REGISTER AFE_AGC_STATUS_REG Address h900301a4
_AFE_AGC_STATUS_REG = 2416116132 0 32 b00000000000000000000000000000000 RO
AFE_AGC_CC_VAL = h900301a4 0 6 h0 RO HEX
; Desc_AFE_AGC_CC_VAL 
AFE_AGC_CF_VAL = h900301a4 6 4 h0 RO HEX
; Desc_AFE_AGC_CF_VAL 
AFE_AGC_CALC_DONE = h900301a4 10 1 h0 RO BIN
; Desc_AFE_AGC_CALC_DONE 



; REGISTER AFE_AGC_CALC_DONE_clear Address h900301ac
_AFE_AGC_CALC_DONE_clear = 2416116140 0 32 b00000000000000000000000000000000 SC
AFE_AGC_CALC_DONE_RO = h900301ac 0 1 h0 SC BIN
; Desc_AFE_AGC_CALC_DONE_RO 



; REGISTER AFE_MeronSrc_AFE_IF_blocks_reset_n_reg Address h90030004
_AFE_MeronSrc_AFE_IF_blocks_reset_n_reg = 2416115716 0 32 b00000000000000000000000000000000 RW
AFE_MeronSrc_AFE_IF_blocks_reset_n = h90030004 0 32 h0 RW HEX
; Desc_AFE_MeronSrc_AFE_IF_blocks_reset_n read which interrupts set in interrupt controller bits [31:0]  for VPE0
AFE_afe_if_chan_sys_reset_n = h90030004 0 1 h0 RW BIN
AFE_afe_if_cmn_sys_reset_n = h90030004 1 1 h0 RW BIN
AFE_pifgen_chan_rxadc_ana_reset_n = h90030004 2 1 h0 RW BIN
AFE_pifgen_chan_rxadc_dig_reset_n = h90030004 3 1 h0 RW BIN
AFE_afe_if_ram_txdac_reset_n = h90030004 4 1 h0 RW BIN



; REGISTER AFE_afe_if_repcalib_src_HwRepCalControl Address h90030018
_AFE_afe_if_repcalib_src_HwRepCalControl = 2416115736 0 29 b00000000000111111111111111111110 RW
AFE_afe_if_repcalib_src_HwRepCtrlEn = h90030018 0 1 h0 RW BIN
; Desc_AFE_afe_if_repcalib_src_HwRepCtrlEn interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 21 to 25
AFE_afe_if_repcalib_src_HwRepDelval = h90030018 1 20 hfffff RW HEX
; Desc_AFE_afe_if_repcalib_src_HwRepDelval interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 21 to 25
AFE_afe_if_repcalib_src_RtermCal_Trim_out_sel = h90030018 21 1 h0 RW BIN
; Desc_AFE_afe_if_repcalib_src_RtermCal_Trim_out_sel interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 21 to 25
AFE_afe_if_repcalib_src_RtermCal_Trim_HwCal_en = h90030018 22 1 h0 RW BIN
; Desc_AFE_afe_if_repcalib_src_RtermCal_Trim_HwCal_en interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 21 to 25
AFE_afe_if_repcalib_src_RtermCal_Trim_hwcal_offset = h90030018 23 6 h0 RW HEX
; Desc_AFE_afe_if_repcalib_src_RtermCal_Trim_hwcal_offset interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 21 to 25



; REGISTER AFE_afe_if_rccal_afe_src_HwRCCalControl Address h90030024
_AFE_afe_if_rccal_afe_src_HwRCCalControl = 2416115748 0 31 b00000000000000000000000000000000 RW
AFE_afe_if_rccal_afe_src_hyb_hptrim_hwcal_en = h90030024 0 1 h0 RW BIN
; Desc_AFE_afe_if_rccal_afe_src_hyb_hptrim_hwcal_en interrupt controller 0: defines shadow set of registers for interrupts 41 to 48.snumber of interrupt is according to the mapping in IntPrioSet registers
AFE_afe_if_rccal_afe_src_hyb_hptrim_hwcal_offset = h90030024 1 5 h0 RW HEX
; Desc_AFE_afe_if_rccal_afe_src_hyb_hptrim_hwcal_offset interrupt controller 0: defines shadow set of registers for interrupts 41 to 48.snumber of interrupt is according to the mapping in IntPrioSet registers
AFE_afe_if_rccal_afe_src_hyb_lptrim_hwcal_en = h90030024 6 1 h0 RW BIN
; Desc_AFE_afe_if_rccal_afe_src_hyb_lptrim_hwcal_en interrupt controller 0: defines shadow set of registers for interrupts 41 to 48.snumber of interrupt is according to the mapping in IntPrioSet registers
AFE_afe_if_rccal_afe_src_hyb_lptrim_hwcal_offset = h90030024 7 6 h0 RW HEX
; Desc_AFE_afe_if_rccal_afe_src_hyb_lptrim_hwcal_offset interrupt controller 0: defines shadow set of registers for interrupts 41 to 48.snumber of interrupt is according to the mapping in IntPrioSet registers
AFE_afe_if_rccal_afe_src_tx_filttrim_hwcal_en = h90030024 13 1 h0 RW BIN
; Desc_AFE_afe_if_rccal_afe_src_tx_filttrim_hwcal_en interrupt controller 0: defines shadow set of registers for interrupts 41 to 48.snumber of interrupt is according to the mapping in IntPrioSet registers
AFE_afe_if_rccal_afe_src_tx_filttrim_hwcal_offset = h90030024 14 6 h0 RW HEX
; Desc_AFE_afe_if_rccal_afe_src_tx_filttrim_hwcal_offset interrupt controller 0: defines shadow set of registers for interrupts 41 to 48.snumber of interrupt is according to the mapping in IntPrioSet registers
AFE_afe_if_rccal_afe_src_wup_tstctrim_hwcal_en = h90030024 20 1 h0 RW BIN
; Desc_AFE_afe_if_rccal_afe_src_wup_tstctrim_hwcal_en interrupt controller 0: defines shadow set of registers for interrupts 41 to 48.snumber of interrupt is according to the mapping in IntPrioSet registers
AFE_afe_if_rccal_afe_src_wup_tstctrim_hwcal_offset = h90030024 21 5 h0 RW HEX
; Desc_AFE_afe_if_rccal_afe_src_wup_tstctrim_hwcal_offset interrupt controller 0: defines shadow set of registers for interrupts 41 to 48.snumber of interrupt is according to the mapping in IntPrioSet registers
AFE_afe_if_rccal_afe_src_hdsbi_rtrim_hwcal_en = h90030024 26 1 h0 RW BIN
; Desc_AFE_afe_if_rccal_afe_src_hdsbi_rtrim_hwcal_en interrupt controller 0: defines shadow set of registers for interrupts 41 to 48.snumber of interrupt is according to the mapping in IntPrioSet registers
AFE_afe_if_rccal_afe_src_hdsbi_rtrim_hwcal_offset = h90030024 27 4 h0 RW HEX
; Desc_AFE_afe_if_rccal_afe_src_hdsbi_rtrim_hwcal_offset interrupt controller 0: defines shadow set of registers for interrupts 41 to 48.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER AFE_afe_if_rtermcal_afe_src_HwRterCalControl Address h90030028
_AFE_afe_if_rtermcal_afe_src_HwRterCalControl = 2416115752 0 7 b00000000000000000000000000000000 RW
AFE_afe_if_rtermcal_afe_src_tx_maintrim_hwcal_en = h90030028 0 1 h0 RW BIN
; Desc_AFE_afe_if_rtermcal_afe_src_tx_maintrim_hwcal_en interrupt controller 1: defines shadow set of registers for interrupts 17 to 24.snumber of interrupt is according to the mapping in IntPrioSet registers
AFE_afe_if_rtermcal_afe_src_tx_maintrim_hwcal_offset = h90030028 1 6 h0 RW HEX
; Desc_AFE_afe_if_rtermcal_afe_src_tx_maintrim_hwcal_offset interrupt controller 1: defines shadow set of registers for interrupts 17 to 24.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER AFE_afe_if_pifgen_afe_src_ana_pifgen_reg Address h9003002c
_AFE_afe_if_pifgen_afe_src_ana_pifgen_reg = 2416115756 0 27 b00000000000000000000000000000000 RW
AFE_afe_if_pifgen_afe_src_ana_sel = h9003002c 0 1 h0 RW BIN
; Desc_AFE_afe_if_pifgen_afe_src_ana_sel interrupt controller 1: defines shadow set of registers for interrupts 57 to 63.snumber of interrupt is according to the mapping in IntPrioSet registers
AFE_afe_if_pifgen_afe_src_ana_en = h9003002c 1 1 h0 RW BIN
; Desc_AFE_afe_if_pifgen_afe_src_ana_en interrupt controller 1: defines shadow set of registers for interrupts 57 to 63.snumber of interrupt is according to the mapping in IntPrioSet registers
AFE_afe_if_pifgen_afe_src_ana_burst = h9003002c 2 1 h0 RW BIN
; Desc_AFE_afe_if_pifgen_afe_src_ana_burst interrupt controller 1: defines shadow set of registers for interrupts 57 to 63.snumber of interrupt is according to the mapping in IntPrioSet registers
AFE_afe_if_pifgen_afe_src_ana_inc = h9003002c 3 1 h0 RW BIN
; Desc_AFE_afe_if_pifgen_afe_src_ana_inc interrupt controller 1: defines shadow set of registers for interrupts 57 to 63.snumber of interrupt is according to the mapping in IntPrioSet registers
AFE_afe_if_pifgen_afe_src_ana_cnt = h9003002c 4 16 h0 RW HEX
; Desc_AFE_afe_if_pifgen_afe_src_ana_cnt interrupt controller 1: defines shadow set of registers for interrupts 57 to 63.snumber of interrupt is according to the mapping in IntPrioSet registers
AFE_afe_if_pifgen_afe_src_ana_div = h9003002c 20 5 h0 RW HEX
; Desc_AFE_afe_if_pifgen_afe_src_ana_div interrupt controller 1: defines shadow set of registers for interrupts 57 to 63.snumber of interrupt is according to the mapping in IntPrioSet registers
AFE_afe_if_pifgen_afe_src_ana_lvds_cell_en = h9003002c 25 2 h0 RW HEX
; Desc_AFE_afe_if_pifgen_afe_src_ana_lvds_cell_en interrupt controller 1: defines shadow set of registers for interrupts 57 to 63.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER AFE_afe_if_pifgen_afe_src_dig_pifgen_reg Address h90030034
_AFE_afe_if_pifgen_afe_src_dig_pifgen_reg = 2416115764 0 27 b00000000000000000000000000000000 RW
AFE_afe_if_pifgen_afe_src_dig_sel = h90030034 0 1 h0 RW BIN
; Desc_AFE_afe_if_pifgen_afe_src_dig_sel GPIO Interrupts enable, 1=enable
AFE_afe_if_pifgen_afe_src_dig_en = h90030034 1 1 h0 RW BIN
; Desc_AFE_afe_if_pifgen_afe_src_dig_en GPIO Interrupts enable, 1=enable
AFE_afe_if_pifgen_afe_src_dig_burst = h90030034 2 1 h0 RW BIN
; Desc_AFE_afe_if_pifgen_afe_src_dig_burst GPIO Interrupts enable, 1=enable
AFE_afe_if_pifgen_afe_src_dig_inc = h90030034 3 1 h0 RW BIN
; Desc_AFE_afe_if_pifgen_afe_src_dig_inc GPIO Interrupts enable, 1=enable
AFE_afe_if_pifgen_afe_src_dig_cnt = h90030034 4 16 h0 RW HEX
; Desc_AFE_afe_if_pifgen_afe_src_dig_cnt GPIO Interrupts enable, 1=enable
AFE_afe_if_pifgen_afe_src_dig_div = h90030034 20 5 h0 RW HEX
; Desc_AFE_afe_if_pifgen_afe_src_dig_div GPIO Interrupts enable, 1=enable
AFE_afe_if_pifgen_afe_src_dig_lvds_cell_en = h90030034 25 2 h0 RW HEX
; Desc_AFE_afe_if_pifgen_afe_src_dig_lvds_cell_en GPIO Interrupts enable, 1=enable



; REGISTER AFE_afe_if_afe_SRC_REG Address h9003003c
_AFE_afe_if_afe_SRC_REG = 2416115772 0 2 b00000000000000000000000000000000 RW
AFE_afe_if_afe_src_rst_n = h9003003c 0 1 h0 RW BIN
; Desc_AFE_afe_if_afe_src_rst_n Pull Direction - Default 1 - Pull Up
AFE_afe_if_afe_src_bias_en = h9003003c 1 1 h0 RW BIN
; Desc_AFE_afe_if_afe_src_bias_en Pull Direction - Default 1 - Pull Up



; REGISTER AFE_afe_if_afe_SRC_HDSBI_REG Address h90030040
_AFE_afe_if_afe_SRC_HDSBI_REG = 2416115776 0 9 b00000000000000000000000100010000 RW
AFE_afe_if_afe_src_hdsbi_bypass = h90030040 0 1 h0 RW BIN
; Desc_AFE_afe_if_afe_src_hdsbi_bypass Drive Strength - Default 00 - weakest drive
AFE_afe_if_afe_src_hdsbi_en = h90030040 1 1 h0 RW BIN
; Desc_AFE_afe_if_afe_src_hdsbi_en Drive Strength - Default 00 - weakest drive
AFE_afe_if_afe_src_hdsbi_hybsel = h90030040 2 1 h0 RW BIN
; Desc_AFE_afe_if_afe_src_hdsbi_hybsel Drive Strength - Default 00 - weakest drive
AFE_afe_if_afe_src_hdsbi_rtrim = h90030040 3 3 h2 RW HEX
; Desc_AFE_afe_if_afe_src_hdsbi_rtrim Drive Strength - Default 00 - weakest drive
AFE_afe_if_afe_src_hdsbi_thresh = h90030040 6 3 h4 RW HEX
; Desc_AFE_afe_if_afe_src_hdsbi_thresh Drive Strength - Default 00 - weakest drive



; REGISTER AFE_afe_if_afe_SRC_HYB_REG Address h90030044
_AFE_afe_if_afe_SRC_HYB_REG = 2416115780 0 28 b00000101110011101011010100000000 RW
AFE_afe_if_afe_src_hyb_bypen = h90030044 0 1 h0 RW BIN
; Desc_AFE_afe_if_afe_src_hyb_bypen Drive Strength - Default 00 - weakest drive
AFE_afe_if_afe_src_hyb_en = h90030044 1 1 h0 RW BIN
; Desc_AFE_afe_if_afe_src_hyb_en Drive Strength - Default 00 - weakest drive
AFE_afe_if_afe_src_hyb_fine_reg = h90030044 2 4 h0 RW HEX
; Desc_AFE_afe_if_afe_src_hyb_fine_reg Drive Strength - Default 00 - weakest drive
AFE_afe_if_afe_src_hyb_gain_reg = h90030044 6 6 h14 RW HEX
; Desc_AFE_afe_if_afe_src_hyb_gain_reg Drive Strength - Default 00 - weakest drive
AFE_afe_if_afe_src_hyb_hpmode = h90030044 12 1 h1 RW BIN
; Desc_AFE_afe_if_afe_src_hyb_hpmode Drive Strength - Default 00 - weakest drive
AFE_afe_if_afe_src_hyb_hptrim = h90030044 13 4 h5 RW HEX
; Desc_AFE_afe_if_afe_src_hyb_hptrim Drive Strength - Default 00 - weakest drive
AFE_afe_if_afe_src_hyb_itrim = h90030044 17 4 h7 RW HEX
; Desc_AFE_afe_if_afe_src_hyb_itrim Drive Strength - Default 00 - weakest drive
AFE_afe_if_afe_src_hyb_lpmode = h90030044 21 2 h2 RW HEX
; Desc_AFE_afe_if_afe_src_hyb_lpmode Drive Strength - Default 00 - weakest drive
AFE_afe_if_afe_src_hyb_lptrim = h90030044 23 5 hb RW HEX
; Desc_AFE_afe_if_afe_src_hyb_lptrim Drive Strength - Default 00 - weakest drive



; REGISTER AFE_afe_if_afe_SRC_PI_0_REG Address h90030048
_AFE_afe_if_afe_SRC_PI_0_REG = 2416115784 0 32 b00011001000000000010011100000100 RW
AFE_afe_if_afe_src_pi_biastrim = h90030048 0 3 h4 RW HEX
; Desc_AFE_afe_if_afe_src_pi_biastrim GPIO interrupt can be invoked on different edgess0:rise edge, 1: fall edge
AFE_afe_if_afe_src_pi_calcapoff = h90030048 3 5 h0 RW HEX
; Desc_AFE_afe_if_afe_src_pi_calcapoff GPIO interrupt can be invoked on different edgess0:rise edge, 1: fall edge
AFE_afe_if_afe_src_pi_calcapovr = h90030048 8 7 h27 RW HEX
; Desc_AFE_afe_if_afe_src_pi_calcapovr GPIO interrupt can be invoked on different edgess0:rise edge, 1: fall edge
AFE_afe_if_afe_src_pi_calenforce = h90030048 15 1 h0 RW BIN
; Desc_AFE_afe_if_afe_src_pi_calenforce GPIO interrupt can be invoked on different edgess0:rise edge, 1: fall edge
AFE_afe_if_afe_src_pi_calovren = h90030048 16 1 h0 RW BIN
; Desc_AFE_afe_if_afe_src_pi_calovren GPIO interrupt can be invoked on different edgess0:rise edge, 1: fall edge
AFE_afe_if_afe_src_pi_calresoff = h90030048 17 5 h0 RW HEX
; Desc_AFE_afe_if_afe_src_pi_calresoff GPIO interrupt can be invoked on different edgess0:rise edge, 1: fall edge
AFE_afe_if_afe_src_pi_calresovr = h90030048 22 8 h64 RW HEX
; Desc_AFE_afe_if_afe_src_pi_calresovr GPIO interrupt can be invoked on different edgess0:rise edge, 1: fall edge
AFE_afe_if_afe_src_pi_calstart = h90030048 30 1 h0 RW BIN
; Desc_AFE_afe_if_afe_src_pi_calstart GPIO interrupt can be invoked on different edgess0:rise edge, 1: fall edge
AFE_afe_if_afe_src_pi_clkbufovr = h90030048 31 1 h0 RW BIN
; Desc_AFE_afe_if_afe_src_pi_clkbufovr GPIO interrupt can be invoked on different edgess0:rise edge, 1: fall edge



; REGISTER AFE_afe_if_afe_SRC_PI_1_REG Address h9003004c
_AFE_afe_if_afe_SRC_PI_1_REG = 2416115788 0 16 b00000000000000000001001101110100 RW
AFE_afe_if_afe_src_pi_en = h9003004c 0 1 h0 RW BIN
; Desc_AFE_afe_if_afe_src_pi_en rif uart protocol errors counter
AFE_afe_if_afe_src_pi_fastload = h9003004c 1 1 h0 RW BIN
; Desc_AFE_afe_if_afe_src_pi_fastload rif uart protocol errors counter
AFE_afe_if_afe_src_pi_idivtrim = h9003004c 2 3 h5 RW HEX
; Desc_AFE_afe_if_afe_src_pi_idivtrim rif uart protocol errors counter
AFE_afe_if_afe_src_pi_iptattrim = h9003004c 5 3 h3 RW HEX
; Desc_AFE_afe_if_afe_src_pi_iptattrim rif uart protocol errors counter
AFE_afe_if_afe_src_pi_ratesel = h9003004c 8 2 h3 RW HEX
; Desc_AFE_afe_if_afe_src_pi_ratesel rif uart protocol errors counter
AFE_afe_if_afe_src_pi_resbias = h9003004c 10 3 h4 RW HEX
; Desc_AFE_afe_if_afe_src_pi_resbias rif uart protocol errors counter
AFE_afe_if_afe_src_pi_stepsize = h9003004c 13 2 h0 RW HEX
; Desc_AFE_afe_if_afe_src_pi_stepsize rif uart protocol errors counter
AFE_afe_if_afe_src_pi_testmode = h9003004c 15 1 h0 RW BIN
; Desc_AFE_afe_if_afe_src_pi_testmode rif uart protocol errors counter



; REGISTER AFE_afe_if_afe_SRC_PIDIV_REG Address h90030054
_AFE_afe_if_afe_SRC_PIDIV_REG = 2416115796 0 15 b00000000000000000001000100010110 RW
AFE_afe_if_afe_src_pidiv_adcclksel = h90030054 0 1 h0 RW BIN
; Desc_AFE_afe_if_afe_src_pidiv_adcclksel rif uart TX FIFO used indication
AFE_afe_if_afe_src_pidiv_adcdivsel = h90030054 1 4 hb RW HEX
; Desc_AFE_afe_if_afe_src_pidiv_adcdivsel rif uart TX FIFO used indication
AFE_afe_if_afe_src_pidiv_adcpisel = h90030054 5 1 h0 RW BIN
; Desc_AFE_afe_if_afe_src_pidiv_adcpisel rif uart TX FIFO used indication
AFE_afe_if_afe_src_pidiv_adcpistep = h90030054 6 1 h0 RW BIN
; Desc_AFE_afe_if_afe_src_pidiv_adcpistep rif uart TX FIFO used indication
AFE_afe_if_afe_src_pidiv_dacclksel = h90030054 7 1 h0 RW BIN
; Desc_AFE_afe_if_afe_src_pidiv_dacclksel rif uart TX FIFO used indication
AFE_afe_if_afe_src_pidiv_dacdivsel = h90030054 8 4 h1 RW HEX
; Desc_AFE_afe_if_afe_src_pidiv_dacdivsel rif uart TX FIFO used indication
AFE_afe_if_afe_src_pidiv_predivsel = h90030054 12 3 h1 RW HEX
; Desc_AFE_afe_if_afe_src_pidiv_predivsel rif uart TX FIFO used indication



; REGISTER AFE_afe_if_afe_SRC_RXADC_0_REG Address h90030058
_AFE_afe_if_afe_SRC_RXADC_0_REG = 2416115800 0 31 b00100000000100010001001110000000 RW
AFE_afe_if_afe_src_rxadc_bgen = h90030058 0 4 h0 RW HEX
; Desc_AFE_afe_if_afe_src_rxadc_bgen rif uart TX FIFO used indication
AFE_afe_if_afe_src_rxadc_biastrim = h90030058 4 4 h8 RW HEX
; Desc_AFE_afe_if_afe_src_rxadc_biastrim rif uart TX FIFO used indication
AFE_afe_if_afe_src_rxadc_bitmode = h90030058 8 2 h3 RW HEX
; Desc_AFE_afe_if_afe_src_rxadc_bitmode rif uart TX FIFO used indication
AFE_afe_if_afe_src_rxadc_cmnrate = h90030058 10 3 h4 RW HEX
; Desc_AFE_afe_if_afe_src_rxadc_cmnrate rif uart TX FIFO used indication
AFE_afe_if_afe_src_rxadc_dactrim = h90030058 13 3 h0 RW HEX
; Desc_AFE_afe_if_afe_src_rxadc_dactrim rif uart TX FIFO used indication
AFE_afe_if_afe_src_rxadc_duty = h90030058 16 1 h1 RW BIN
; Desc_AFE_afe_if_afe_src_rxadc_duty rif uart TX FIFO used indication
AFE_afe_if_afe_src_rxadc_dutycycle = h90030058 17 4 h8 RW HEX
; Desc_AFE_afe_if_afe_src_rxadc_dutycycle rif uart TX FIFO used indication
AFE_afe_if_afe_src_rxadc_mode = h90030058 21 2 h0 RW HEX
; Desc_AFE_afe_if_afe_src_rxadc_mode rif uart TX FIFO used indication
AFE_afe_if_afe_src_rxadc_offset = h90030058 23 7 h40 RW HEX
; Desc_AFE_afe_if_afe_src_rxadc_offset rif uart TX FIFO used indication
AFE_afe_if_afe_src_rxadc_polarity = h90030058 30 1 h0 RW BIN
; Desc_AFE_afe_if_afe_src_rxadc_polarity rif uart TX FIFO used indication



; REGISTER AFE_afe_if_afe_SRC_RXADC_1_REG Address h9003005c
_AFE_afe_if_afe_SRC_RXADC_1_REG = 2416115804 0 5 b00000000000000000000000000010110 RW
AFE_afe_if_afe_src_rxadc_reftrim = h9003005c 0 3 h6 RW HEX
; Desc_AFE_afe_if_afe_src_rxadc_reftrim LOW period of the SCL clock 
AFE_afe_if_afe_src_rxadc_samplerate = h9003005c 3 2 h2 RW HEX
; Desc_AFE_afe_if_afe_src_rxadc_samplerate LOW period of the SCL clock 



; REGISTER AFE_afe_if_afe_SRC_TX_REG Address h90030060
_AFE_afe_if_afe_SRC_TX_REG = 2416115808 0 18 b00000000000000000000011111100010 RW
AFE_afe_if_afe_src_tx_en = h90030060 0 1 h0 RW BIN
; Desc_AFE_afe_if_afe_src_tx_en DDC master monitor FIFO {FIFO Control,  FIFO Data}ssFIFO Control (1 bit) , FIFO Data (8 bits):s0 - Data DDC DATAs1 - Control DDC CONTROL:s 0 – ACKs 1 – NACKs Reserveds
AFE_afe_if_afe_src_tx_maintrim = h90030060 1 5 h11 RW HEX
; Desc_AFE_afe_if_afe_src_tx_maintrim DDC master monitor FIFO {FIFO Control,  FIFO Data}ssFIFO Control (1 bit) , FIFO Data (8 bits):s0 - Data DDC DATAs1 - Control DDC CONTROL:s 0 – ACKs 1 – NACKs Reserveds
AFE_afe_if_afe_src_tx_rplctrim = h90030060 6 6 h1f RW HEX
; Desc_AFE_afe_if_afe_src_tx_rplctrim DDC master monitor FIFO {FIFO Control,  FIFO Data}ssFIFO Control (1 bit) , FIFO Data (8 bits):s0 - Data DDC DATAs1 - Control DDC CONTROL:s 0 – ACKs 1 – NACKs Reserveds
AFE_afe_if_afe_src_txoff_en = h90030060 12 1 h0 RW BIN
; Desc_AFE_afe_if_afe_src_txoff_en DDC master monitor FIFO {FIFO Control,  FIFO Data}ssFIFO Control (1 bit) , FIFO Data (8 bits):s0 - Data DDC DATAs1 - Control DDC CONTROL:s 0 – ACKs 1 – NACKs Reserveds
AFE_afe_if_afe_src_txoff_offsettrim = h90030060 13 5 h0 RW HEX
; Desc_AFE_afe_if_afe_src_txoff_offsettrim DDC master monitor FIFO {FIFO Control,  FIFO Data}ssFIFO Control (1 bit) , FIFO Data (8 bits):s0 - Data DDC DATAs1 - Control DDC CONTROL:s 0 – ACKs 1 – NACKs Reserveds



; REGISTER AFE_afe_if_afe_SRC_TXDAC_REG Address h90030064
_AFE_afe_if_afe_SRC_TXDAC_REG = 2416115812 0 12 b00000000000000000000001100100000 RW
AFE_afe_if_afe_src_txdac_bistmode = h90030064 0 2 h0 RW HEX
; Desc_AFE_afe_if_afe_src_txdac_bistmode 
AFE_afe_if_afe_src_txdac_datamuxsel = h90030064 2 2 h0 RW HEX
; Desc_AFE_afe_if_afe_src_txdac_datamuxsel 
AFE_afe_if_afe_src_txdac_gain = h90030064 4 6 h32 RW HEX
; Desc_AFE_afe_if_afe_src_txdac_gain 
AFE_afe_if_afe_src_txdac_mode = h90030064 10 2 h0 RW HEX
; Desc_AFE_afe_if_afe_src_txdac_mode 



; REGISTER AFE_afe_if_afe_SRC_TXDAC_FGEN_0_REG Address h90030068
_AFE_afe_if_afe_SRC_TXDAC_FGEN_0_REG = 2416115816 0 16 b00000000000000000000000000000000 RW
AFE_afe_if_afe_src_txdac_dca = h90030068 0 8 h0 RW HEX
; Desc_AFE_afe_if_afe_src_txdac_dca 
AFE_afe_if_afe_src_txdac_dcb = h90030068 8 8 h0 RW HEX
; Desc_AFE_afe_if_afe_src_txdac_dcb 



; REGISTER AFE_afe_if_afe_SRC_TXDAC_FGEN_1_REG Address h9003006c
_AFE_afe_if_afe_SRC_TXDAC_FGEN_1_REG = 2416115820 0 24 b00000000000000000000000000000000 RW
AFE_afe_if_afe_src_txdac_freqa = h9003006c 0 12 h0 RW HEX
; Desc_AFE_afe_if_afe_src_txdac_freqa Data to be written to the transmit FIFO
AFE_afe_if_afe_src_txdac_freqb = h9003006c 12 12 h0 RW HEX
; Desc_AFE_afe_if_afe_src_txdac_freqb Data to be written to the transmit FIFO



; REGISTER AFE_afe_if_afe_SRC_WUP_REG Address h90030070
_AFE_afe_if_afe_SRC_WUP_REG = 2416115824 0 10 b00000000000000000000000000001011 RW
AFE_afe_if_afe_src_wup_pd = h90030070 0 1 h1 RW BIN
; Desc_AFE_afe_if_afe_src_wup_pd I2C slave WD stop address  
AFE_afe_if_afe_src_wup_tstctrim = h90030070 1 4 h5 RW HEX
; Desc_AFE_afe_if_afe_src_wup_tstctrim I2C slave WD stop address  
AFE_afe_if_afe_src_wup_tsten = h90030070 5 1 h0 RW BIN
; Desc_AFE_afe_if_afe_src_wup_tsten I2C slave WD stop address  
AFE_afe_if_afe_src_wup_tstreftrim = h90030070 6 3 h0 RW HEX
; Desc_AFE_afe_if_afe_src_wup_tstreftrim I2C slave WD stop address  
AFE_afe_if_afe_src_wup_waketrg = h90030070 9 1 h0 RW BIN
; Desc_AFE_afe_if_afe_src_wup_waketrg I2C slave WD stop address  



; REGISTER AFE_afe_if_afe_if_dac_ram_MEM_POWER_reg Address h9003008c
_AFE_afe_if_afe_if_dac_ram_MEM_POWER_reg = 2416115852 0 3 b00000000000000000000000000000000 RW
AFE_afe_if_afe_if_dac_ram_ls = h9003008c 0 1 h0 RW BIN
; Desc_AFE_afe_if_afe_if_dac_ram_ls 
AFE_afe_if_afe_if_dac_ram_ds = h9003008c 1 1 h0 RW BIN
; Desc_AFE_afe_if_afe_if_dac_ram_ds 
AFE_afe_if_afe_if_dac_ram_sd = h9003008c 2 1 h0 RW BIN
; Desc_AFE_afe_if_afe_if_dac_ram_sd 



; REGISTER AFE_afe_if_afe_if_dac_ram_MEM_CONFIG_reg Address h90030090
_AFE_afe_if_afe_if_dac_ram_MEM_CONFIG_reg = 2416115856 0 26 b00000010000000000000000000000000 RW
AFE_afe_if_afe_if_dac_ram_cfg_auto_mode = h90030090 0 1 h0 RW BIN
; Desc_AFE_afe_if_afe_if_dac_ram_cfg_auto_mode 
AFE_afe_if_afe_if_dac_ram_int_ram_rd_cyclic_en = h90030090 1 1 h0 RW BIN
; Desc_AFE_afe_if_afe_if_dac_ram_int_ram_rd_cyclic_en 
AFE_afe_if_afe_if_dac_ram_int_ram_rd_first_addr = h90030090 3 11 h0 RW HEX
; Desc_AFE_afe_if_afe_if_dac_ram_int_ram_rd_first_addr 
AFE_afe_if_afe_if_dac_ram_int_ram_rd_last_addr = h90030090 14 11 h0 RW HEX
; Desc_AFE_afe_if_afe_if_dac_ram_int_ram_rd_last_addr 
AFE_afe_if_afe_if_dac_ram_WR_RAM_SEL = h90030090 25 1 h1 RW BIN
; Desc_AFE_afe_if_afe_if_dac_ram_WR_RAM_SEL 



; REGISTER AFE_afe_if_afe_if_dac_ram_addr_wr_pulse_reg Address h90030094
_AFE_afe_if_afe_if_dac_ram_addr_wr_pulse_reg = 2416115860 0 16 b00000000000000000000000000000000 RW
AFE_afe_if_afe_if_dac_ram_addr_wr_reg = h90030094 0 16 h0 RW HEX
; Desc_AFE_afe_if_afe_if_dac_ram_addr_wr_reg 



; REGISTER AFE_afe_if_afe_if_dac_ram_DATA_RAM_SEL_reg Address h900300a0
_AFE_afe_if_afe_if_dac_ram_DATA_RAM_SEL_reg = 2416115872 0 1 b00000000000000000000000000000000 RW
AFE_afe_if_afe_if_dac_ram_DATA_SEL = h900300a0 0 1 h0 RW BIN
; Desc_AFE_afe_if_afe_if_dac_ram_DATA_SEL 



; REGISTER AFE_afe_if_afe_if_dac_ram_int_ram_rd_single_trigger Address h900300a4
_AFE_afe_if_afe_if_dac_ram_int_ram_rd_single_trigger = 2416115876 0 1 b00000000000000000000000000000000 RW
AFE_afe_if_afe_if_dac_ram_int_ram_rd_single_trigger_nc = h900300a4 0 1 h0 RW BIN
; Desc_AFE_afe_if_afe_if_dac_ram_int_ram_rd_single_trigger_nc 



; REGISTER AFE_afe_if_afe_if_dac_ram_data_wr_req_reg Address h900300a8
_AFE_afe_if_afe_if_dac_ram_data_wr_req_reg = 2416115880 0 32 b00000000000000000000000000000000 RW
AFE_afe_if_afe_if_dac_ram_data_wr = h900300a8 0 32 h0 RW HEX
; Desc_AFE_afe_if_afe_if_dac_ram_data_wr 



; REGISTER AFE_afe_if_afe_if_dac_ram_MEM_RATE_CONFIG_reg Address h900300ac
_AFE_afe_if_afe_if_dac_ram_MEM_RATE_CONFIG_reg = 2416115884 0 3 b00000000000000000000000000000000 RW
AFE_afe_if_afe_if_dac_ram_RAM_CLK_OUT_RATE = h900300ac 0 3 h0 RW HEX
; Desc_AFE_afe_if_afe_if_dac_ram_RAM_CLK_OUT_RATE 



; REGISTER AFE_afe_if_CMN_REG Address h9003011c
_AFE_afe_if_CMN_REG = 2416115996 0 12 b00000000000000000000000000000000 RW
AFE_afe_if_afe_cmn_atbblk = h9003011c 0 2 h0 RW HEX
; Desc_AFE_afe_if_afe_cmn_atbblk 
AFE_afe_if_afe_cmn_atbchan = h9003011c 2 4 h0 RW HEX
; Desc_AFE_afe_if_afe_cmn_atbchan 
AFE_afe_if_afe_cmn_atbsel = h9003011c 6 5 h0 RW HEX
; Desc_AFE_afe_if_afe_cmn_atbsel 
AFE_afe_if_afe_cmn_rst_n = h9003011c 11 1 h0 RW BIN
; Desc_AFE_afe_if_afe_cmn_rst_n 



; REGISTER AFE_afe_if_CMN_PLL_0_REG Address h90030120
_AFE_afe_if_CMN_PLL_0_REG = 2416116000 0 27 b00000000100000000000000000010000 RW
AFE_afe_if_afe_cmn_pll_cfiltsel = h90030120 0 4 h0 RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_cfiltsel 
AFE_afe_if_afe_cmn_pll_clk12divsel = h90030120 4 10 h1 RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_clk12divsel 
AFE_afe_if_afe_cmn_pll_clk1cmosen = h90030120 14 1 h0 RW BIN
; Desc_AFE_afe_if_afe_cmn_pll_clk1cmosen 
AFE_afe_if_afe_cmn_pll_clk2cmosen = h90030120 15 1 h0 RW BIN
; Desc_AFE_afe_if_afe_cmn_pll_clk2cmosen 
AFE_afe_if_afe_cmn_pll_clk3cmlen = h90030120 16 1 h0 RW BIN
; Desc_AFE_afe_if_afe_cmn_pll_clk3cmlen 
AFE_afe_if_afe_cmn_pll_clk3divsel = h90030120 17 10 h40 RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_clk3divsel 



; REGISTER AFE_afe_if_CMN_PLL_1_REG Address h90030124
_AFE_afe_if_CMN_PLL_1_REG = 2416116004 0 25 b00000000000111100000000000000000 RW
AFE_afe_if_afe_cmn_pll_clk4cmlen = h90030124 0 1 h0 RW BIN
; Desc_AFE_afe_if_afe_cmn_pll_clk4cmlen 
AFE_afe_if_afe_cmn_pll_clk4divsel = h90030124 1 10 h0 RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_clk4divsel 
AFE_afe_if_afe_cmn_pll_clkdivsel = h90030124 11 4 h0 RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_clkdivsel 
AFE_afe_if_afe_cmn_pll_clksel = h90030124 15 2 h0 RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_clksel 
AFE_afe_if_afe_cmn_pll_cpintcap = h90030124 17 8 hf RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_cpintcap 



; REGISTER AFE_afe_if_CMN_PLL_2_REG Address h90030128
_AFE_afe_if_CMN_PLL_2_REG = 2416116008 0 32 b01110000000011000000001100000111 RW
AFE_afe_if_afe_cmn_pll_cpintcur = h90030128 0 8 h7 RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_cpintcur 
AFE_afe_if_afe_cmn_pll_cppropcap = h90030128 8 8 h3 RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_cppropcap 
AFE_afe_if_afe_cmn_pll_cppropcur = h90030128 16 8 hc RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_cppropcur 
AFE_afe_if_afe_cmn_pll_cppropgain = h90030128 24 4 h0 RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_cppropgain 
AFE_afe_if_afe_cmn_pll_cppropthen = h90030128 28 1 h1 RW BIN
; Desc_AFE_afe_if_afe_cmn_pll_cppropthen 
AFE_afe_if_afe_cmn_pll_cpvreftune = h90030128 29 2 h3 RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_cpvreftune 
AFE_afe_if_afe_cmn_pll_div24sel = h90030128 31 1 h0 RW BIN
; Desc_AFE_afe_if_afe_cmn_pll_div24sel 



; REGISTER AFE_afe_if_CMN_PLL_3_REG Address h9003012c
_AFE_afe_if_CMN_PLL_3_REG = 2416116012 0 16 b00000000000000000000000000000000 RW
AFE_afe_if_afe_cmn_pll_fbdivfrac = h9003012c 0 16 h0 RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_fbdivfrac 



; REGISTER AFE_afe_if_CMN_PLL_4_REG Address h90030130
_AFE_afe_if_CMN_PLL_4_REG = 2416116016 0 18 b00000000000000101000000011010101 RW
AFE_afe_if_afe_cmn_pll_fbdivhigh = h90030130 0 9 hd5 RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_fbdivhigh 
AFE_afe_if_afe_cmn_pll_fbdivint = h90030130 9 9 h140 RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_fbdivint 



; REGISTER AFE_afe_if_CMN_PLL_5_REG Address h90030134
_AFE_afe_if_CMN_PLL_5_REG = 2416116020 0 32 b10100001111000000000000001110101 RW
AFE_afe_if_afe_cmn_pll_intmode = h90030134 0 1 h1 RW BIN
; Desc_AFE_afe_if_afe_cmn_pll_intmode 
AFE_afe_if_afe_cmn_pll_lockdeten = h90030134 1 1 h0 RW BIN
; Desc_AFE_afe_if_afe_cmn_pll_lockdeten 
AFE_afe_if_afe_cmn_pll_mode = h90030134 2 2 h1 RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_mode 
AFE_afe_if_afe_cmn_pll_pfddlyadj = h90030134 4 2 h3 RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_pfddlyadj 
AFE_afe_if_afe_cmn_pll_prechgtime = h90030134 6 2 h1 RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_prechgtime 
AFE_afe_if_afe_cmn_pll_refclkbyp = h90030134 8 1 h0 RW BIN
; Desc_AFE_afe_if_afe_cmn_pll_refclkbyp 
AFE_afe_if_afe_cmn_pll_refclkcmlen = h90030134 9 1 h0 RW BIN
; Desc_AFE_afe_if_afe_cmn_pll_refclkcmlen 
AFE_afe_if_afe_cmn_pll_refclken = h90030134 10 1 h0 RW BIN
; Desc_AFE_afe_if_afe_cmn_pll_refclken 
AFE_afe_if_afe_cmn_pll_rfiltsel = h90030134 11 4 h0 RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_rfiltsel 
AFE_afe_if_afe_cmn_pll_ringcmosen = h90030134 15 4 h0 RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_ringcmosen 
AFE_afe_if_afe_cmn_pll_rst_n = h90030134 19 1 h0 RW BIN
; Desc_AFE_afe_if_afe_cmn_pll_rst_n 
AFE_afe_if_afe_cmn_pll_rtermcal = h90030134 20 1 h0 RW BIN
; Desc_AFE_afe_if_afe_cmn_pll_rtermcal 
AFE_afe_if_afe_cmn_pll_vcobias = h90030134 21 8 hf RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_vcobias 
AFE_afe_if_afe_cmn_pll_vcocal_fbcnt = h90030134 29 3 h5 RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_vcocal_fbcnt 



; REGISTER AFE_afe_if_CMN_PLL_7_REG Address h90030138
_AFE_afe_if_CMN_PLL_7_REG = 2416116024 0 26 b00000001000101000011100110000010 RW
AFE_afe_if_afe_cmn_pll_vcocal_initwait = h90030138 0 3 h2 RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_vcocal_initwait 
AFE_afe_if_afe_cmn_pll_vcocal_iterwait = h90030138 3 3 h0 RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_vcocal_iterwait 
AFE_afe_if_afe_cmn_pll_vcocal_ovrd = h90030138 6 8 he6 RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_vcocal_ovrd 
AFE_afe_if_afe_cmn_pll_vcocal_ovrden = h90030138 14 1 h0 RW BIN
; Desc_AFE_afe_if_afe_cmn_pll_vcocal_ovrden 
AFE_afe_if_afe_cmn_pll_vcocal_run = h90030138 15 1 h0 RW BIN
; Desc_AFE_afe_if_afe_cmn_pll_vcocal_run 
AFE_afe_if_afe_cmn_pll_vcocal_scale = h90030138 16 3 h4 RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_vcocal_scale 
AFE_afe_if_afe_cmn_pll_vcocal_step = h90030138 19 3 h2 RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_vcocal_step 
AFE_afe_if_afe_cmn_pll_vcosel = h90030138 22 1 h0 RW BIN
; Desc_AFE_afe_if_afe_cmn_pll_vcosel 
AFE_afe_if_afe_cmn_pll_vregrefsel = h90030138 23 1 h0 RW BIN
; Desc_AFE_afe_if_afe_cmn_pll_vregrefsel 
AFE_afe_if_afe_cmn_pll_vregtrim = h90030138 24 2 h1 RW HEX
; Desc_AFE_afe_if_afe_cmn_pll_vregtrim 



; REGISTER AFE_afe_if_CMN_RCCAL_REG Address h90030140
_AFE_afe_if_CMN_RCCAL_REG = 2416116032 0 6 b00000000000000000000000000000000 RW
AFE_afe_if_afe_cmn_rccal_start = h90030140 0 1 h0 RW BIN
; Desc_AFE_afe_if_afe_cmn_rccal_start LVDS common mode output level
AFE_afe_if_afe_cmn_rccal_tsten = h90030140 1 1 h0 RW BIN
; Desc_AFE_afe_if_afe_cmn_rccal_tsten LVDS common mode output level
AFE_afe_if_afe_cmn_rccal_tsttrim = h90030140 2 4 h0 RW HEX
; Desc_AFE_afe_if_afe_cmn_rccal_tsttrim LVDS common mode output level



; REGISTER AFE_afe_if_CMN_RTERMCAL_REG Address h90030148
_AFE_afe_if_CMN_RTERMCAL_REG = 2416116040 0 7 b00000000000000000000000000000000 RW
AFE_afe_if_afe_cmn_rtermcal_start = h90030148 0 1 h0 RW BIN
; Desc_AFE_afe_if_afe_cmn_rtermcal_start 
AFE_afe_if_afe_cmn_rtermcal_tsten = h90030148 1 1 h0 RW BIN
; Desc_AFE_afe_if_afe_cmn_rtermcal_tsten 
AFE_afe_if_afe_cmn_rtermcal_tsttrim = h90030148 2 5 h0 RW HEX
; Desc_AFE_afe_if_afe_cmn_rtermcal_tsttrim 



; REGISTER AFE_afe_if_CMN_XOSC_REG Address h90030150
_AFE_afe_if_CMN_XOSC_REG = 2416116048 0 3 b00000000000000000000000000000101 RW
AFE_afe_if_afe_cmn_xosc_clk1en = h90030150 0 1 h1 RW BIN
; Desc_AFE_afe_if_afe_cmn_xosc_clk1en Swap AHB Slave Bytes
AFE_afe_if_afe_cmn_xosc_clk2en = h90030150 1 1 h0 RW BIN
; Desc_AFE_afe_if_afe_cmn_xosc_clk2en Swap AHB Slave Bytes
AFE_afe_if_afe_cmn_xosc_en = h90030150 2 1 h1 RW BIN
; Desc_AFE_afe_if_afe_cmn_xosc_en Swap AHB Slave Bytes



; REGISTER AFE_AGC_CFG_REG0 Address h9003019c
_AFE_AGC_CFG_REG0 = 2416116124 0 20 b00000000000000000000000000000000 RW
AFE_AGC_EN = h9003019c 0 1 h0 RW BIN
; Desc_AFE_AGC_EN QSR output
AFE_AGC_MODE_SEL = h9003019c 1 1 h0 RW BIN
; Desc_AFE_AGC_MODE_SEL QSR output
AFE_AGC_DESIRED_TARGET = h9003019c 2 17 h0 RW HEX
; Desc_AFE_AGC_DESIRED_TARGET QSR output
AFE_AGC_OR_REGS_SEL = h9003019c 19 1 h0 RW BIN
; Desc_AFE_AGC_OR_REGS_SEL QSR output



; REGISTER AFE_AGC_CFG_REG1 Address h900301a0
_AFE_AGC_CFG_REG1 = 2416116128 0 32 b00000000000000000000000000000000 RW
AFE_AGC_ST_COUNT_VAL = h900301a0 0 16 h0 RW HEX
; Desc_AFE_AGC_ST_COUNT_VAL QSR output
AFE_AGC_MAX_HOLD_CNT = h900301a0 16 16 h0 RW HEX
; Desc_AFE_AGC_MAX_HOLD_CNT QSR output



; REGISTER AFE_TEST_BUS_REG Address h900301a8
_AFE_TEST_BUS_REG = 2416116136 0 6 b00000000000000000000000000000000 RW
AFE_DAC_TEST_BUS_EN = h900301a8 0 1 h0 RW BIN
; Desc_AFE_DAC_TEST_BUS_EN 
AFE_DAC_TEST_BUS_CHAIN_SEL = h900301a8 1 3 h0 RW HEX
; Desc_AFE_DAC_TEST_BUS_CHAIN_SEL 
AFE_ADC_TEST_BUS_EN = h900301a8 4 1 h0 RW BIN
; Desc_AFE_ADC_TEST_BUS_EN 
AFE_SYS_TEST_BUS_EN = h900301a8 5 1 h0 RW BIN
; Desc_AFE_SYS_TEST_BUS_EN 



; REGISTER link_blocks_reset_done_1_reg Address h90040004
_link_blocks_reset_done_1_reg = 2416181252 0 32 b00000000000000000000000000000000 RO
link_blocks_reset_done = h90040004 0 32 h0 RO HEX
; Desc_link_blocks_reset_done 
i2c_mstr_regs_sys_reset_n_done = h90040004 3 1 h0 RO BIN
i2c_mstr_sys_reset_n_done = h90040004 4 1 h0 RO BIN
Apkt_sched_sys_reset_n_done = h90040004 5 1 h0 RO BIN
Apkt_disp_sys_reset_n_done = h90040004 6 1 h0 RO BIN
testbus_sys_reset_n_done = h90040004 7 1 h0 RO BIN
fscontrol_sys_reset_n_done = h90040004 9 1 h0 RO BIN
bist_sys_reset_n_done = h90040004 11 1 h0 RO BIN
fscontrol_regs_sys_reset_n_done = h90040004 12 1 h0 RO BIN
gpio_safety_dup_reset_n_done = h90040004 13 1 h0 RO BIN
gpio_one_ch_reset_n_done = h90040004 14 1 h0 RO BIN
rcv_rst_reserved_0_done = h90040004 15 1 h0 RO BIN
fscontrol_ref_reset_n_done = h90040004 20 1 h0 RO BIN



; REGISTER bist_int_stat_reg Address h90040228
_bist_int_stat_reg = 2416181800 0 32 b00000000000000000000000000000000 RO
bist_int_stat = h90040228 0 6 h0 RO HEX
; Desc_bist_int_stat 



; REGISTER bisttx_packet_counter Address h90040330
_bisttx_packet_counter = 2416182064 0 32 b00000000000000000000000000000000 RO
bisttx_packet_count = h90040330 0 32 h0 RO HEX
; Desc_bisttx_packet_count 



; REGISTER bisttx_validown_cnt_reg Address h90040334
_bisttx_validown_cnt_reg = 2416182068 0 32 b00000000000000000000000000000000 RO
bisttx_validown_cnt = h90040334 0 8 h0 RO HEX
; Desc_bisttx_validown_cnt 



; REGISTER bistrx_apkt_regs1 Address h90040420
_bistrx_apkt_regs1 = 2416182304 0 32 b00000000000000000000000000000000 RO
bistrx_pkt_stm = h90040420 0 3 h0 RO HEX
; Desc_bistrx_pkt_stm 
bistrx_state_lost = h90040420 3 1 h0 RO BIN
; Desc_bistrx_state_lost 
bistrx_prbs_lock = h90040420 4 1 h0 RO BIN
; Desc_bistrx_prbs_lock 



; REGISTER bistrx_ts_range_0_reg Address h90040450
_bistrx_ts_range_0_reg = 2416182352 0 32 b00000000000000000000000000000000 RO
bistrx_ts_range_0 = h90040450 0 32 h0 RO HEX
; Desc_bistrx_ts_range_0 



; REGISTER bistrx_ts_range_1_reg Address h90040454
_bistrx_ts_range_1_reg = 2416182356 0 32 b00000000000000000000000000000000 RO
bistrx_ts_range_1 = h90040454 0 32 h0 RO HEX
; Desc_bistrx_ts_range_1 



; REGISTER bistrx_ts_range_2_reg Address h90040458
_bistrx_ts_range_2_reg = 2416182360 0 32 b00000000000000000000000000000000 RO
bistrx_ts_range_2 = h90040458 0 32 h0 RO HEX
; Desc_bistrx_ts_range_2 



; REGISTER bistrx_ts_range_3_reg Address h9004045c
_bistrx_ts_range_3_reg = 2416182364 0 32 b00000000000000000000000000000000 RO
bistrx_ts_range_3 = h9004045c 0 32 h0 RO HEX
; Desc_bistrx_ts_range_3 



; REGISTER bistrx_ts_range_4_reg Address h90040460
_bistrx_ts_range_4_reg = 2416182368 0 32 b00000000000000000000000000000000 RO
bistrx_ts_range_4 = h90040460 0 32 h0 RO HEX
; Desc_bistrx_ts_range_4 



; REGISTER bistrx_ts_range_5_reg Address h90040464
_bistrx_ts_range_5_reg = 2416182372 0 32 b00000000000000000000000000000000 RO
bistrx_ts_range_5 = h90040464 0 32 h0 RO HEX
; Desc_bistrx_ts_range_5 



; REGISTER bistrx_ts_range_6_reg Address h90040468
_bistrx_ts_range_6_reg = 2416182376 0 32 b00000000000000000000000000000000 RO
bistrx_ts_range_6 = h90040468 0 32 h0 RO HEX
; Desc_bistrx_ts_range_6 



; REGISTER bistrx_ts_range_7_reg Address h9004046c
_bistrx_ts_range_7_reg = 2416182380 0 32 b00000000000000000000000000000000 RO
bistrx_ts_range_7 = h9004046c 0 32 h0 RO HEX
; Desc_bistrx_ts_range_7 



; REGISTER bistrx_ts_range_8_reg Address h90040470
_bistrx_ts_range_8_reg = 2416182384 0 32 b00000000000000000000000000000000 RO
bistrx_ts_range_8 = h90040470 0 32 h0 RO HEX
; Desc_bistrx_ts_range_8 



; REGISTER bistrx_ts_range_9_reg Address h90040474
_bistrx_ts_range_9_reg = 2416182388 0 32 b00000000000000000000000000000000 RO
bistrx_ts_range_9 = h90040474 0 32 h0 RO HEX
; Desc_bistrx_ts_range_9 number of cycle where pwm is high



; REGISTER bistrx_per_cnt_reg Address h90040478
_bistrx_per_cnt_reg = 2416182392 0 32 b00000000000000000000000000000000 RO
bistrx_per_cnt = h90040478 0 32 h0 RO HEX
; Desc_bistrx_per_cnt number of cycle where pwm is high



; REGISTER bistrx_per_cnt_msb_reg Address h9004047c
_bistrx_per_cnt_msb_reg = 2416182396 0 32 b00000000000000000000000000000000 RO
bistrx_per_cnt_msb = h9004047c 0 32 h0 RO HEX
; Desc_bistrx_per_cnt_msb pwm mode:s00 - free runnings01 - gateds10 - one shot



; REGISTER bistrx_sid_err_pkt_cnt_reg Address h90040480
_bistrx_sid_err_pkt_cnt_reg = 2416182400 0 32 b00000000000000000000000000000000 RO
bistrx_sid_err_pkt_cnt = h90040480 0 32 h0 RO HEX
; Desc_bistrx_sid_err_pkt_cnt the pwm stm - for debug



; REGISTER bistrx_missing_pkt_cnt_reg Address h90040484
_bistrx_missing_pkt_cnt_reg = 2416182404 0 32 b00000000000000000000000000000000 RO
bistrx_missing_pkt_cnt = h90040484 0 32 h0 RO HEX
; Desc_bistrx_missing_pkt_cnt number of cycle where pwm is high



; REGISTER bistrx_total_pkt_cnt_reg Address h90040488
_bistrx_total_pkt_cnt_reg = 2416182408 0 32 b00000000000000000000000000000000 RO
bistrx_total_pkt_cnt = h90040488 0 32 h0 RO HEX
; Desc_bistrx_total_pkt_cnt number of cycle where pwm is high



; REGISTER bistrx_bad_crc_pkt_cnt_reg Address h9004048c
_bistrx_bad_crc_pkt_cnt_reg = 2416182412 0 32 b00000000000000000000000000000000 RO
bistrx_bad_crc_pkt_cnt = h9004048c 0 32 h0 RO HEX
; Desc_bistrx_bad_crc_pkt_cnt pwm mode:s00 - free runnings01 - gateds10 - one shot



; REGISTER bistrx_ber_cnt_reg Address h90040490
_bistrx_ber_cnt_reg = 2416182416 0 32 b00000000000000000000000000000000 RO
bistrx_ber_cnt = h90040490 0 32 h0 RO HEX
; Desc_bistrx_ber_cnt the pwm stm - for debug



; REGISTER bistrx_ber_cnt_msb_reg Address h90040494
_bistrx_ber_cnt_msb_reg = 2416182420 0 32 b00000000000000000000000000000000 RO
bistrx_ber_cnt_msb = h90040494 0 32 h0 RO HEX
; Desc_bistrx_ber_cnt_msb number of cycle where pwm is high



; REGISTER bistrx_total_bits_cnt_reg Address h90040498
_bistrx_total_bits_cnt_reg = 2416182424 0 32 b00000000000000000000000000000000 RO
bistrx_total_bits_cnt = h90040498 0 32 h0 RO HEX
; Desc_bistrx_total_bits_cnt number of cycle where pwm is high



; REGISTER bistrx_total_bits_cnt_msb_reg Address h9004049c
_bistrx_total_bits_cnt_msb_reg = 2416182428 0 32 b00000000000000000000000000000000 RO
bistrx_total_bits_cnt_msb = h9004049c 0 32 h0 RO HEX
; Desc_bistrx_total_bits_cnt_msb pwm mode:s00 - free runnings01 - gateds10 - one shot



; REGISTER bistrx_remote_sleep_pkt_cnt_reg Address h900404b8
_bistrx_remote_sleep_pkt_cnt_reg = 2416182456 0 32 b00000000000000000000000000000000 RO
bistrx_remote_sleep_pkt_cnt = h900404b8 0 32 h0 RO HEX
; Desc_bistrx_remote_sleep_pkt_cnt the pwm stm - for debug



; REGISTER bistrx_pkt_cnt_first_val_reg Address h900404bc
_bistrx_pkt_cnt_first_val_reg = 2416182460 0 32 b00000000000000000000000000000000 RO
bistrx_pkt_cnt_first_val = h900404bc 0 32 h0 RO HEX
; Desc_bistrx_pkt_cnt_first_val number of cycle where pwm is high



; REGISTER gpio_dup_fusa_fail_reg Address h90040500
_gpio_dup_fusa_fail_reg = 2416182528 0 32 b00000000000000000000000000000000 RO
gpio_dup_fusa_fail_status = h90040500 0 32 h0 RO HEX
; Desc_gpio_dup_fusa_fail_status number of cycle where pwm is high
gpio_dup_compare_fail = h90040500 0 23 h0 RO HEX
gpio_dup_safety_reg_check_fail = h90040500 23 1 h0 RO BIN
gpio_dup_fusa_fail_reserved = h90040500 24 8 h0 RO HEX



; REGISTER gpio_dup_fusa_stm_reg Address h90040504
_gpio_dup_fusa_stm_reg = 2416182532 0 32 b00000000000000000000000000000000 RO
gpio_dup_fusa_stm = h90040504 0 3 h0 RO HEX
; Desc_gpio_dup_fusa_stm pwm mode:s00 - free runnings01 - gateds10 - one shot



; REGISTER gpio_dup_safety_reg_stat Address h90040508
_gpio_dup_safety_reg_stat = 2416182536 0 32 b00000000000000000000000000000000 SC
gpio_dup_safety_reg_status = h90040508 0 32 h0 SC HEX
; Desc_gpio_dup_safety_reg_status the pwm stm - for debug



; REGISTER mn_change_reg Address h9004072c
_mn_change_reg = 2416183084 0 32 b00000000000000000000000000000000 SC
mn_change = h9004072c 0 1 h0 SC BIN
; Desc_mn_change 
mn_change_latch = h9004072c 1 1 h0 SC BIN
; Desc_mn_change_latch 



; REGISTER mn_zero_reg Address h90040730
_mn_zero_reg = 2416183088 0 32 b00000000000000000000000000000000 SC
mn_zero = h90040730 0 1 h0 SC BIN
; Desc_mn_zero 
mn_zero_latch = h90040730 1 1 h0 SC BIN
; Desc_mn_zero_latch 



; REGISTER fifo_loop_acc_reg Address h90040734
_fifo_loop_acc_reg = 2416183092 0 32 b00000000000000000000000000000000 RO
fifo_loop_acc = h90040734 0 16 h0 RO HEX
; Desc_fifo_loop_acc 
fo_est_out = h90040734 16 11 h0 RO HEX
; Desc_fo_est_out 



; REGISTER tmds_in_clock_est_reg Address h90040738
_tmds_in_clock_est_reg = 2416183096 0 32 b00000000000000000000000000000000 RO
tmds_in_clock_est = h90040738 0 24 h0 RO HEX
; Desc_tmds_in_clock_est 



; REGISTER mis_clk_pkt_evt_reg Address h9004073c
_mis_clk_pkt_evt_reg = 2416183100 0 32 b00000000000000000000000000000000 SC
mis_clk_pkt_evt = h9004073c 0 1 h0 SC BIN
; Desc_mis_clk_pkt_evt 
mis_clk_pkt_cnt = h9004073c 8 24 h0 SC HEX
; Desc_mis_clk_pkt_cnt 



; REGISTER DoFsControl_Stat_reg Address h90040740
_DoFsControl_Stat_reg = 2416183104 0 32 b00000000000000000000000000000000 RO
mn_steady = h90040740 0 1 h0 RO BIN
; Desc_mn_steady 
fifo_wr_en = h90040740 1 1 h0 RO BIN
; Desc_fifo_wr_en 
VirtualFIFO_used = h90040740 2 11 h0 RO HEX
; Desc_VirtualFIFO_used 



; REGISTER PLL_Lock_reg Address h90040744
_PLL_Lock_reg = 2416183108 0 32 b00000000000000000000000000000000 RO
pll_LOCK = h90040744 0 1 h0 RO BIN
; Desc_pll_LOCK 
pll_DSKEWCALLOCK = h90040744 1 1 h0 RO BIN
; Desc_pll_DSKEWCALLOCK 



; REGISTER MN_ratio_reg Address h9004074c
_MN_ratio_reg = 2416183116 0 32 b00000000000000000000000000000000 RO
MN_ratio = h9004074c 0 25 h0 RO HEX
; Desc_MN_ratio 
hi_speed_mode = h9004074c 25 1 h0 RO BIN
; Desc_hi_speed_mode 



; REGISTER cfg_FsCnt_fsout_reg Address h9004076c
_cfg_FsCnt_fsout_reg = 2416183148 0 32 b00000000000000000000000000000001 RO
cfg_FsCnt_fsout = h9004076c 0 25 h1 RO HEX
; Desc_cfg_FsCnt_fsout 



; REGISTER fscontrol_status_reg Address h90040780
_fscontrol_status_reg = 2416183168 0 32 b00000000000000000000000000000000 RO
ApktParseError = h90040780 0 1 h0 RO BIN
; Desc_ApktParseError 
time_stamp_status = h90040780 1 27 h0 RO HEX
; Desc_time_stamp_status 



; REGISTER FsCont_int_stat_reg Address h90040788
_FsCont_int_stat_reg = 2416183176 0 32 b00000000000000000000000000000000 SC
FsCont_int_stat = h90040788 0 8 h0 SC HEX
; Desc_FsCont_int_stat 



; REGISTER sc_gen_cfg_status_reg Address h90040794
_sc_gen_cfg_status_reg = 2416183188 0 32 b00000000000000000000000000000000 RO
PostDiv1_status = h90040794 0 4 h0 RO HEX
; Desc_PostDiv1_status 
PostDiv2_status = h90040794 4 4 h0 RO HEX
; Desc_PostDiv2_status 
fbdiv_status = h90040794 8 12 h0 RO HEX
; Desc_fbdiv_status 



; REGISTER mn_data_status_reg Address h90040798
_mn_data_status_reg = 2416183192 0 32 b00000000000000000000000000000000 RO
last_mn_data = h90040798 0 16 h0 RO HEX
; Desc_last_mn_data 



; REGISTER safety_reg_check_reg Address h90040834
_safety_reg_check_reg = 2416183348 0 32 b00000000000000000000000000000000 SC
safety_reg_status = h90040834 0 5 h0 SC HEX
; Desc_safety_reg_status 
pll_lock_safety_reg_status = h90040834 5 1 h0 SC BIN
; Desc_pll_lock_safety_reg_status 



; REGISTER rclk_fusa_status_reg Address h90040838
_rclk_fusa_status_reg = 2416183352 0 32 b00000000000000000000000000000000 RO
fusa_fail_status = h90040838 0 5 h0 RO HEX
; Desc_fusa_fail_status 
fusa_mech_main_stm = h90040838 7 3 h0 RO HEX
; Desc_fusa_mech_main_stm 
pll_lock_safety_mech_main_stm = h90040838 10 3 h0 RO HEX
; Desc_pll_lock_safety_mech_main_stm 



; REGISTER rclk_target_cntr_val_reg Address h9004088c
_rclk_target_cntr_val_reg = 2416183436 0 32 b00000000000000000000000000000000 RO
rclk_target_cntr_val = h9004088c 0 32 h0 RO HEX
; Desc_rclk_target_cntr_val 



; REGISTER rclk_safety_reg_status_reg Address h90040890
_rclk_safety_reg_status_reg = 2416183440 0 32 b00000000000000000000000000000000 SC
rclk_safety_reg_status = h90040890 0 7 h0 SC HEX
; Desc_rclk_safety_reg_status 
rclk_min_target_lsb = h90040890 0 1 h0 SC BIN
rclk_min_target_msb = h90040890 1 1 h0 SC BIN
rclk_max_target_lsb = h90040890 2 1 h0 SC BIN
rclk_max_target_msb = h90040890 3 1 h0 SC BIN
rclk_twind_base_lsb = h90040890 4 1 h0 SC BIN
rclk_twind_base_msb = h90040890 5 1 h0 SC BIN
rclk_wait_oper_fail_ind = h90040890 6 1 h0 SC BIN



; REGISTER rclk_clk_mon_debug_reg Address h90040894
_rclk_clk_mon_debug_reg = 2416183444 0 32 b00000000000000000000000000000000 RO
rclk_clk_mon_debug = h90040894 0 6 h0 RO HEX
; Desc_rclk_clk_mon_debug 
rclk_sc_stm = h90040894 0 3 h0 RO HEX
rclk_main_stm = h90040894 3 3 h0 RO HEX



; REGISTER rclk_sc_status_reg Address h90040898
_rclk_sc_status_reg = 2416183448 0 32 b00000000000000000000000000000000 RO
rclk_sc_status = h90040898 0 4 h0 RO HEX
; Desc_rclk_sc_status 
rclk_safety_reg_fail = h90040898 4 1 h0 RO BIN
; Desc_rclk_safety_reg_fail 
rclk_bad_freq = h90040898 5 1 h0 RO BIN
; Desc_rclk_bad_freq 
rclk_max_comparator_fail = h90040898 0 1 h0 RO BIN
rclk_min_comparator_fail = h90040898 1 1 h0 RO BIN
rclk_target_cntr_zero = h90040898 2 1 h0 RO BIN
rclk_safety_reg_fail_sc_pms = h90040898 3 1 h0 RO BIN



; REGISTER done_jitter_monitor Address h9004090c
_done_jitter_monitor = 2416183564 0 32 b00000000000000000000000000000000 RO
done_step_phase = h9004090c 0 1 h0 RO BIN
; Desc_done_step_phase 
done_find_edge = h9004090c 1 1 h0 RO BIN
; Desc_done_find_edge 
done_sample_counter = h9004090c 2 1 h0 RO BIN
; Desc_done_sample_counter 
done_measure_dc = h9004090c 3 1 h0 RO BIN
; Desc_done_measure_dc 
jm_active = h9004090c 4 1 h0 RO BIN
; Desc_jm_active 



; REGISTER jitter_monitor_result1 Address h90040910
_jitter_monitor_result1 = 2416183568 0 32 b00000000000000000000000000000000 RO
phase_accum = h90040910 0 18 h0 RO HEX
; Desc_phase_accum Reset For Specific Block
count_out = h90040910 18 12 h0 RO HEX
; Desc_count_out Reset For Specific Block
position = h90040910 30 1 h0 RO BIN
; Desc_position Reset For Specific Block



; REGISTER jitter_monitor_result2 Address h90040914
_jitter_monitor_result2 = 2416183572 0 32 b00000000000000000000000000000000 RO
pos_period = h90040914 0 18 h0 RO HEX
; Desc_pos_period Reset For Specific Block



; REGISTER jitter_monitor_result3 Address h90040918
_jitter_monitor_result3 = 2416183576 0 32 b00000000000000000000000000000000 RO
neg_period = h90040918 0 18 h0 RO HEX
; Desc_neg_period Reset For Specific Block



; REGISTER msio_matrix_rx_status Address h90040a00
_msio_matrix_rx_status = 2416183808 0 32 b00000000000000000000000000000000 RO
msio_general = h90040a00 0 8 h0 RO HEX
; Desc_msio_general Reset For Specific Block
msio_duplicate = h90040a00 8 6 h0 RO HEX
; Desc_msio_duplicate Reset For Specific Block



; REGISTER pwm0_pwm_status Address h90040b0c
_pwm0_pwm_status = 2416184076 0 32 b00000000000000000000000000000000 RO
pwm0_stm = h90040b0c 0 2 h0 RO HEX
; Desc_pwm0_stm Reset For Specific Block



; REGISTER pwm1_pwm_status Address h90040b1c
_pwm1_pwm_status = 2416184092 0 32 b00000000000000000000000000000000 RO
pwm1_stm = h90040b1c 0 2 h0 RO HEX
; Desc_pwm1_stm Reset For Specific Block



; REGISTER msio_data_out_reg Address h90040b28
_msio_data_out_reg = 2416184104 0 32 b00000000000000000000000000000000 RO
msio_data_out_rd = h90040b28 0 32 h0 RO HEX
; Desc_msio_data_out_rd for SW use



; REGISTER msio_validown_cnt_reg Address h90040c14
_msio_validown_cnt_reg = 2416184340 0 32 b00000000000000000000000000000000 SC
validown_cnt = h90040c14 0 8 h0 SC HEX
; Desc_validown_cnt for SW use



; REGISTER status_reg Address h90040c84
_status_reg = 2416184452 0 32 b00000000000000000000000000000000 RO
mc_cnt_rx = h90040c84 4 8 h0 RO HEX
; Desc_mc_cnt_rx for SW use
pak_stm = h90040c84 12 3 h0 RO HEX
; Desc_pak_stm for SW use
unpak_stm = h90040c84 15 3 h0 RO HEX
; Desc_unpak_stm for SW use
fusa_stm = h90040c84 18 3 h0 RO HEX
; Desc_fusa_stm for SW use
mc_cnt_tx = h90040c84 21 8 h0 RO HEX
; Desc_mc_cnt_tx for SW use
pak_stm_is_idle = h90040c84 29 1 h0 RO BIN
; Desc_pak_stm_is_idle for SW use



; REGISTER fifo_used Address h90040c88
_fifo_used = 2416184456 0 32 b00000000000000000000000000000000 RO
rx_fifo_write_used = h90040c88 0 5 h0 RO HEX
; Desc_rx_fifo_write_used for SW use
tx_fifo_read_used = h90040c88 16 9 h0 RO HEX
; Desc_tx_fifo_read_used for SW use



; REGISTER safety_reg_stat Address h90040c8c
_safety_reg_stat = 2416184460 0 32 b00000000000000000000000000000000 SC
safety_reg_status = h90040c8c 0 4 h0 SC HEX
; Desc_safety_reg_status for SW use



; REGISTER fusa_fail_stat Address h90040c90
_fusa_fail_stat = 2416184464 0 32 b00000000000000000000000000000000 RO
fusa_fail_status = h90040c90 0 10 h0 RO HEX
; Desc_fusa_fail_status for SW use
rx_parity_check = h90040c90 0 1 h0 RO BIN
timer_parity = h90040c90 1 1 h0 RO BIN
ka_check = h90040c90 2 1 h0 RO BIN
mc_check = h90040c90 3 1 h0 RO BIN
tx_parity_check = h90040c90 4 1 h0 RO BIN
crc_check = h90040c90 5 4 h0 RO HEX
safety_reg_check = h90040c90 9 1 h0 RO BIN



; REGISTER ts_err_cnt_reg Address h90040c94
_ts_err_cnt_reg = 2416184468 0 32 b00000000000000000000000000000000 SC
ts_err_cnt = h90040c94 0 32 h0 SC HEX
; Desc_ts_err_cnt for SW use



; REGISTER drop_cnt_reg Address h90040c98
_drop_cnt_reg = 2416184472 0 32 b00000000000000000000000000000000 SC
drop_cnt = h90040c98 0 32 h0 SC HEX
; Desc_drop_cnt for SW use



; REGISTER int_stat_reg Address h90040ca4
_int_stat_reg = 2416184484 0 32 b00000000000000000000000000000000 RO
int_stat = h90040ca4 0 24 h0 RO HEX
; Desc_int_stat for SW use
tx_fifo_underflow = h90040ca4 0 1 h0 RO BIN
tx_fifo_overflow = h90040ca4 1 1 h0 RO BIN
rx_fifo_underflow = h90040ca4 2 1 h0 RO BIN
rx_fifo_overflow = h90040ca4 3 1 h0 RO BIN
validown_int = h90040ca4 4 1 h0 RO BIN
ApktParseError = h90040ca4 5 1 h0 RO BIN
msio_data_update = h90040ca4 6 1 h0 RO BIN
ts_err = h90040ca4 7 1 h0 RO BIN
msio_data_tx = h90040ca4 8 16 h0 RO HEX



; REGISTER msio_data_tx_reg Address h90040cac
_msio_data_tx_reg = 2416184492 0 32 b00000000000000000000000000000000 RO
msio_data_tx_rd = h90040cac 0 32 h0 RO HEX
; Desc_msio_data_tx_rd for SW use



; REGISTER gpio_one_ch_reset_n_done_reg Address h90040d08
_gpio_one_ch_reset_n_done_reg = 2416184584 0 32 b00000000000000000000000000000000 RO
gpio_one_ch_reset_n_done = h90040d08 0 3 h0 RO HEX
; Desc_gpio_one_ch_reset_n_done for SW use
matrix_rx_reset_n_done = h90040d08 0 1 h0 RO BIN
matrix_tx_reset_n_done = h90040d08 1 1 h0 RO BIN
msio_adpt_reset_n_done = h90040d08 2 1 h0 RO BIN



; REGISTER int_clr_reg Address h90040ca8
_int_clr_reg = 2416184488 0 32 b00000000000000000000000000000000 SC



; REGISTER link_blocks_reset_n_1_reg Address h90040000
_link_blocks_reset_n_1_reg = 2416181248 0 32 b00000000000000000000000000000000 RW
link_blocks_reset_n = h90040000 0 32 h0 RW HEX
; Desc_link_blocks_reset_n Clock Source for system clock select
i2c_mstr_regs_sys_reset_n = h90040000 3 1 h0 RW BIN
>>DESC i2c_mstr_regs_sys_reset_n = 2, b0, reset, b1, enable
i2c_mstr_sys_reset_n = h90040000 4 1 h0 RW BIN
>>DESC i2c_mstr_sys_reset_n = 2, b0, reset, b1, enable
Apkt_sched_sys_reset_n = h90040000 5 1 h0 RW BIN
>>DESC Apkt_sched_sys_reset_n = 2, b0, reset, b1, enable
Apkt_disp_sys_reset_n = h90040000 6 1 h0 RW BIN
>>DESC Apkt_disp_sys_reset_n = 2, b0, reset, b1, enable
testbus_sys_reset_n = h90040000 7 1 h0 RW BIN
>>DESC testbus_sys_reset_n = 2, b0, reset, b1, enable
fscontrol_sys_reset_n = h90040000 9 1 h0 RW BIN
>>DESC fscontrol_sys_reset_n = 2, b0, reset, b1, enable
bist_sys_reset_n = h90040000 11 1 h0 RW BIN
>>DESC bist_sys_reset_n = 2, b0, reset, b1, enable
fscontrol_regs_sys_reset_n = h90040000 12 1 h0 RW BIN
>>DESC fscontrol_regs_sys_reset_n = 2, b0, reset, b1, enable
gpio_safety_dup_reset_n = h90040000 13 1 h0 RW BIN
>>DESC gpio_safety_dup_reset_n = 2, b0, reset, b1, enable
gpio_one_ch_reset_n = h90040000 14 1 h0 RW BIN
>>DESC gpio_one_ch_reset_n = 2, b0, reset, b1, enable
rcv_rst_reserved_0 = h90040000 15 1 h0 RW BIN
>>DESC rcv_rst_reserved_0 = 2, b0, reset, b1, enable
fscontrol_ref_reset_n = h90040000 20 1 h0 RW BIN
>>DESC fscontrol_ref_reset_n = 2, b0, reset, b1, enable



; REGISTER Link_general_config_reg Address h90040008
_Link_general_config_reg = 2416181256 0 8 b00000000000000000000000000000000 RW
c_link_test_chain_select = h90040008 1 7 h0 RW HEX
; Desc_c_link_test_chain_select Status of Current Interrupt Request



; REGISTER ApktDisp_local_sid_array_0_reg Address h90040020
_ApktDisp_local_sid_array_0_reg = 2416181280 0 32 b00000000000000000000000000000000 RW
ApktDisp_local_sid_array_0 = h90040020 0 32 h0 RW HEX
; Desc_ApktDisp_local_sid_array_0 interrupt controller 0: defines shadow set of registers for interrupts 1 to 8.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER ApktDisp_local_sid_array_1_reg Address h90040024
_ApktDisp_local_sid_array_1_reg = 2416181284 0 32 b00000000000000000000000000000000 RW
ApktDisp_local_sid_array_1 = h90040024 0 32 h0 RW HEX
; Desc_ApktDisp_local_sid_array_1 interrupt controller 0: defines shadow set of registers for interrupts 49 to 56.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER ApktDisp_local_sid_array_2_reg Address h90040028
_ApktDisp_local_sid_array_2_reg = 2416181288 0 32 b00000000000000000000000000000000 RW
ApktDisp_local_sid_array_2 = h90040028 0 32 h0 RW HEX
; Desc_ApktDisp_local_sid_array_2 interrupt controller 1: defines shadow set of registers for interrupts 25 to 32.snumber of interrupt is according to the mapping in IntPrioSet registers



; REGISTER ApktDisp_local_sid_array_3_reg Address h9004002c
_ApktDisp_local_sid_array_3_reg = 2416181292 0 32 b00000000000000000000000000000000 RW
ApktDisp_local_sid_array_3 = h9004002c 0 32 h0 RW HEX
; Desc_ApktDisp_local_sid_array_3 Read/Write Current Data on the GPIO pins



; REGISTER ApktDisp_local_sid_array_4_reg Address h90040030
_ApktDisp_local_sid_array_4_reg = 2416181296 0 32 b00000000000000000000000000000000 RW
ApktDisp_local_sid_array_4 = h90040030 0 32 h0 RW HEX
; Desc_ApktDisp_local_sid_array_4 Set GPIO 32 Direction 1 = input



; REGISTER ApktDisp_local_sid_array_5_reg Address h90040034
_ApktDisp_local_sid_array_5_reg = 2416181300 0 32 b00000000000000000000000000000000 RW
ApktDisp_local_sid_array_5 = h90040034 0 32 h0 RW HEX
; Desc_ApktDisp_local_sid_array_5 GPIO Interrupts enable, 1=enable



; REGISTER ApktDisp_local_sid_array_6_reg Address h90040038
_ApktDisp_local_sid_array_6_reg = 2416181304 0 32 b00000000000000000000000000000000 RW
ApktDisp_local_sid_array_6 = h90040038 0 32 h0 RW HEX
; Desc_ApktDisp_local_sid_array_6 



; REGISTER ApktDisp_local_sid_array_7_reg Address h9004003c
_ApktDisp_local_sid_array_7_reg = 2416181308 0 32 b00000000000000000000000000000000 RW
ApktDisp_local_sid_array_7 = h9004003c 0 32 h0 RW HEX
; Desc_ApktDisp_local_sid_array_7 Pull Direction - Default 1 - Pull Up



; REGISTER ApktDisp_trash_sid_array_0_reg Address h90040040
_ApktDisp_trash_sid_array_0_reg = 2416181312 0 32 b00000000000000000000000000000000 RW
ApktDisp_trash_sid_array_0 = h90040040 0 32 h0 RW HEX
; Desc_ApktDisp_trash_sid_array_0 Drive Strength - Default 00 - weakest drive



; REGISTER ApktDisp_trash_sid_array_1_reg Address h90040044
_ApktDisp_trash_sid_array_1_reg = 2416181316 0 32 b00000000000000000000000000000000 RW
ApktDisp_trash_sid_array_1 = h90040044 0 32 h0 RW HEX
; Desc_ApktDisp_trash_sid_array_1 generate interrupt by SW. bit 0 corresponds to bit 5 (i2c slave int) in the VPE1 vector, and so on up. Accordingly bits 59:63 are not used.



; REGISTER ApktDisp_trash_sid_array_2_reg Address h90040048
_ApktDisp_trash_sid_array_2_reg = 2416181320 0 32 b00000000000000000000000000000000 RW
ApktDisp_trash_sid_array_2 = h90040048 0 32 h0 RW HEX
; Desc_ApktDisp_trash_sid_array_2 GPIO interrupt can be invoked on different edgess0:rise edge, 1: fall edge



; REGISTER ApktDisp_trash_sid_array_3_reg Address h9004004c
_ApktDisp_trash_sid_array_3_reg = 2416181324 0 32 b00000000000000000000000000000000 RW
ApktDisp_trash_sid_array_3 = h9004004c 0 32 h0 RW HEX
; Desc_ApktDisp_trash_sid_array_3 rif uart TX FIFO used indication



; REGISTER ApktDisp_trash_sid_array_4_reg Address h90040050
_ApktDisp_trash_sid_array_4_reg = 2416181328 0 32 b00000000000000000000000000000000 RW
ApktDisp_trash_sid_array_4 = h90040050 0 32 h0 RW HEX
; Desc_ApktDisp_trash_sid_array_4 rif uart TX FIFO used indication



; REGISTER ApktDisp_trash_sid_array_5_reg Address h90040054
_ApktDisp_trash_sid_array_5_reg = 2416181332 0 32 b00000000000000000000000000000000 RW
ApktDisp_trash_sid_array_5 = h90040054 0 32 h0 RW HEX
; Desc_ApktDisp_trash_sid_array_5 read data from receive rif uart FIFO



; REGISTER ApktDisp_trash_sid_array_6_reg Address h90040058
_ApktDisp_trash_sid_array_6_reg = 2416181336 0 32 b00000000000000000000000000000000 RW
ApktDisp_trash_sid_array_6 = h90040058 0 32 h0 RW HEX
; Desc_ApktDisp_trash_sid_array_6 read data from receive rif uart FIFO



; REGISTER ApktDisp_trash_sid_array_7_reg Address h9004005c
_ApktDisp_trash_sid_array_7_reg = 2416181340 0 32 b00000000000000000000000000000000 RW
ApktDisp_trash_sid_array_7 = h9004005c 0 32 h0 RW HEX
; Desc_ApktDisp_trash_sid_array_7 Set-up time for a repeated START condition



; REGISTER ApktDisp_spare_sid_array_0_reg Address h90040060
_ApktDisp_spare_sid_array_0_reg = 2416181344 0 32 b00000000000000000000000000000000 RW
ApktDisp_spare_sid_array_0 = h90040060 0 32 h0 RW HEX
; Desc_ApktDisp_spare_sid_array_0 num of entries in the I2C SFP master monitor FIFO



; REGISTER ApktDisp_spare_sid_array_1_reg Address h90040064
_ApktDisp_spare_sid_array_1_reg = 2416181348 0 32 b00000000000000000000000000000000 RW
ApktDisp_spare_sid_array_1 = h90040064 0 32 h0 RW HEX
; Desc_ApktDisp_spare_sid_array_1 



; REGISTER ApktDisp_spare_sid_array_2_reg Address h90040068
_ApktDisp_spare_sid_array_2_reg = 2416181352 0 32 b00000000000000000000000000000000 RW
ApktDisp_spare_sid_array_2 = h90040068 0 32 h0 RW HEX
; Desc_ApktDisp_spare_sid_array_2 Number of entries in the RX FIFO



; REGISTER ApktDisp_spare_sid_array_3_reg Address h9004006c
_ApktDisp_spare_sid_array_3_reg = 2416181356 0 32 b00000000000000000000000000000000 RW
ApktDisp_spare_sid_array_3 = h9004006c 0 32 h0 RW HEX
; Desc_ApktDisp_spare_sid_array_3 I2C slave WD counter 



; REGISTER ApktDisp_spare_sid_array_4_reg Address h90040070
_ApktDisp_spare_sid_array_4_reg = 2416181360 0 32 b00000000000000000000000000000000 RW
ApktDisp_spare_sid_array_4 = h90040070 0 32 h0 RW HEX
; Desc_ApktDisp_spare_sid_array_4 Sideband MAC Transmitter Disable ControlsFunction: When set high, this signal instructs the MAC transmitter to stopstransmitting frames after the completion of any current frame. The MAC transmittersrestarts transmission only if this signal is reset to low and Bit 3 (TE) of Register 0s(MAC Configuration Register) is set high.



; REGISTER ApktDisp_spare_sid_array_5_reg Address h90040074
_ApktDisp_spare_sid_array_5_reg = 2416181364 0 32 b00000000000000000000000000000000 RW
ApktDisp_spare_sid_array_5 = h90040074 0 32 h0 RW HEX
; Desc_ApktDisp_spare_sid_array_5 The time after which the RX interrupt is asserted when data is valid in the RX RAM and the other conditions haven't occurred yet 



; REGISTER ApktDisp_spare_sid_array_6_reg Address h90040078
_ApktDisp_spare_sid_array_6_reg = 2416181368 0 32 b00000000000000000000000000000000 RW
ApktDisp_spare_sid_array_6 = h90040078 0 32 h0 RW HEX
; Desc_ApktDisp_spare_sid_array_6 The transmit status word



; REGISTER ApktDisp_spare_sid_array_7_reg Address h9004007c
_ApktDisp_spare_sid_array_7_reg = 2416181372 0 32 b00000000000000000000000000000000 RW
ApktDisp_spare_sid_array_7 = h9004007c 0 32 h0 RW HEX
; Desc_ApktDisp_spare_sid_array_7 



; REGISTER ApktDisp_type_route_reg Address h90040080
_ApktDisp_type_route_reg = 2416181376 0 32 b00000000000000000000000000000000 RW
ApktDisp_type_route = h90040080 0 32 h0 RW HEX
; Desc_ApktDisp_type_route 



; REGISTER ApktDisp_spare_route_reg Address h90040084
_ApktDisp_spare_route_reg = 2416181380 0 32 b00000000000000000000000000000000 RW
ApktDisp_spare_route = h90040084 0 32 h0 RW HEX
; Desc_ApktDisp_spare_route 



; REGISTER ApktDisp_default_route_reg Address h90040088
_ApktDisp_default_route_reg = 2416181384 0 32 b00000000000000000000101100010000 RW
ApktDisp_default_route = h90040088 0 32 hb10 RW HEX
; Desc_ApktDisp_default_route 



; REGISTER ApktDisp_clk_route_reg Address h9004008c
_ApktDisp_clk_route_reg = 2416181388 0 32 b00000000000000000000000000000000 RW
ApktDisp_clk_route = h9004008c 0 32 h0 RW HEX
; Desc_ApktDisp_clk_route 



; REGISTER ApktDisp_clk_sp_route_reg Address h90040090
_ApktDisp_clk_sp_route_reg = 2416181392 0 32 b00000000000000000000000000000000 RW
ApktDisp_clk_sp_route = h90040090 0 32 h0 RW HEX
; Desc_ApktDisp_clk_sp_route 



; REGISTER type_route_filter_reg Address h90040094
_type_route_filter_reg = 2416181396 0 16 b00000000000000000000000000000000 RW
type_route_filter = h90040094 0 16 h0 RW HEX
; Desc_type_route_filter 



; REGISTER msio_sw_regs_register Address h90040104
_msio_sw_regs_register = 2416181508 0 3 b00000000000000000000000000000000 RW
msio_sw_regs = h90040104 0 3 h0 RW HEX
; Desc_msio_sw_regs 



; REGISTER hiZ_mode_register Address h90040108
_hiZ_mode_register = 2416181512 0 32 b00000000000000000011111100000000 RW
hiZ_mode = h90040108 0 6 h0 RW HEX
; Desc_hiZ_mode 
dir_input = h90040108 8 6 h3f RW HEX
; Desc_dir_input 



; REGISTER bist_int_clr_reg Address h90040220
_bist_int_clr_reg = 2416181792 0 6 b00000000000000000000000000000000 RW
bist_int_clr = h90040220 0 6 h0 RW HEX
; Desc_bist_int_clr read timer 15 value, write set the value and start the timer 15



; REGISTER bist_int_mask_reg Address h90040224
_bist_int_mask_reg = 2416181796 0 6 b00000000000000000000000000000000 RW
bist_int_mask = h90040224 0 6 h0 RW HEX
; Desc_bist_int_mask pas timers interupt latched status (1 in any bit indicates interrupt captured). SW is responsible to clear the bits using the corresponding pas_timer_int_clr_reg bit. sNote that timers 7-0 status is also updated here, although they are to be managed by the VPE0/VPE1 interupt status regs as they are directly connected to the main CPU vector interrupts.



; REGISTER bisttx_main_control Address h90040320
_bisttx_main_control = 2416182048 0 6 b00000000000000000000000000000000 RW
bisttx_packet_enable = h90040320 0 1 h0 RW BIN
; Desc_bisttx_packet_enable 
bisttx_prbs_pol_type = h90040320 1 2 h0 RW HEX
; Desc_bisttx_prbs_pol_type 
bisttx_prbs_clear = h90040320 3 1 h0 RW BIN
; Desc_bisttx_prbs_clear 
bisttx_prbs_en = h90040320 4 1 h0 RW BIN
; Desc_bisttx_prbs_en 
bisttx_host_select = h90040320 5 1 h0 RW BIN
; Desc_bisttx_host_select 



; REGISTER bisttx_apkt_regs Address h90040324
_bisttx_apkt_regs = 2416182052 0 23 b00000000000111111100000000000001 RW
bisttx_apkt_type = h90040324 0 4 h1 RW HEX
; Desc_bisttx_apkt_type 
bisttx_apkt_qos = h90040324 4 2 h0 RW HEX
; Desc_bisttx_apkt_qos 
bisttx_apkt_prio = h90040324 6 2 h0 RW HEX
; Desc_bisttx_apkt_prio 
bisttx_apkt_order = h90040324 8 2 h0 RW HEX
; Desc_bisttx_apkt_order 
bisttx_apkt_alei = h90040324 10 3 h0 RW HEX
; Desc_bisttx_apkt_alei 
bisttx_apkt_taddr = h90040324 13 8 hfe RW HEX
; Desc_bisttx_apkt_taddr 
bisttx_apkt_bad = h90040324 21 1 h0 RW BIN
; Desc_bisttx_apkt_bad 
bisttx_validown_clr = h90040324 22 1 h0 RW BIN
; Desc_bisttx_validown_clr 



; REGISTER bisttx_control_regs Address h90040328
_bisttx_control_regs = 2416182056 0 32 b00000000000000000000000000000000 RW
bisttx_packet_len_min = h90040328 0 9 h0 RW HEX
; Desc_bisttx_packet_len_min 
bisttx_packet_len_max = h90040328 9 9 h0 RW HEX
; Desc_bisttx_packet_len_max 
bisttx_err_insert = h90040328 18 1 h0 RW BIN
; Desc_bisttx_err_insert 
bisttx_single_mode = h90040328 19 1 h0 RW BIN
; Desc_bisttx_single_mode 
bisttx_single_go = h90040328 20 1 h0 RW BIN
; Desc_bisttx_single_go 
bisttx_basic_bist_burst_size = h90040328 21 4 h0 RW HEX
; Desc_bisttx_basic_bist_burst_size 
bisttx_fixed_size_en = h90040328 25 1 h0 RW BIN
; Desc_bisttx_fixed_size_en 
bisttx_fixed_latency_en = h90040328 26 1 h0 RW BIN
; Desc_bisttx_fixed_latency_en 
bisttx_extended_bist_en = h90040328 27 1 h0 RW BIN
; Desc_bisttx_extended_bist_en 
bisttx_vs_bist_en = h90040328 28 1 h0 RW BIN
; Desc_bisttx_vs_bist_en 
bisttx_bist_packet_cnt_en = h90040328 29 1 h0 RW BIN
; Desc_bisttx_bist_packet_cnt_en 
bisttx_bist_ts_en = h90040328 30 1 h0 RW BIN
; Desc_bisttx_bist_ts_en 
bisttx_remote_sleep_en = h90040328 31 1 h0 RW BIN
; Desc_bisttx_remote_sleep_en 



; REGISTER bisttx_packet_delay Address h9004032c
_bisttx_packet_delay = 2416182060 0 32 b00000000000000000000000000000000 RW
bisttx_packet_delay_min = h9004032c 0 16 h0 RW HEX
; Desc_bisttx_packet_delay_min 
bisttx_packet_delay_max = h9004032c 16 16 h0 RW HEX
; Desc_bisttx_packet_delay_max 



; REGISTER bisttx_remote_sleep_period_reg Address h9004033c
_bisttx_remote_sleep_period_reg = 2416182076 0 32 b00000000000000000000000000000000 RW
bisttx_remote_sleep_period = h9004033c 0 32 h0 RW HEX
; Desc_bisttx_remote_sleep_period 



; REGISTER bistrx_control_regs Address h90040424
_bistrx_control_regs = 2416182308 0 15 b00000000000000000000001111111000 RW
bistrx_resync_en = h90040424 0 1 h0 RW BIN
; Desc_bistrx_resync_en 
bistrx_state_lost_clear = h90040424 1 1 h0 RW BIN
; Desc_bistrx_state_lost_clear 
bistrx_packet_sid = h90040424 2 8 hfe RW HEX
; Desc_bistrx_packet_sid 
bistrx_prbs_pol_type = h90040424 10 2 h0 RW HEX
; Desc_bistrx_prbs_pol_type 
bistrx_host_select = h90040424 12 1 h0 RW BIN
; Desc_bistrx_host_select 
bistrx_drop_bad_pkt_en = h90040424 13 1 h0 RW BIN
; Desc_bistrx_drop_bad_pkt_en 
bistrx_packet_enable = h90040424 14 1 h0 RW BIN
; Desc_bistrx_packet_enable 



; REGISTER bistrx_ts_range_limit_0_reg Address h90040428
_bistrx_ts_range_limit_0_reg = 2416182312 0 24 b00000000000000000000000000000000 RW
bistrx_ts_range_limit_0 = h90040428 0 24 h0 RW HEX
; Desc_bistrx_ts_range_limit_0 



; REGISTER bistrx_ts_range_limit_1_reg Address h9004042c
_bistrx_ts_range_limit_1_reg = 2416182316 0 24 b00000000000000000000000000000000 RW
bistrx_ts_range_limit_1 = h9004042c 0 24 h0 RW HEX
; Desc_bistrx_ts_range_limit_1 



; REGISTER bistrx_ts_range_limit_2_reg Address h90040430
_bistrx_ts_range_limit_2_reg = 2416182320 0 24 b00000000000000000000000000000000 RW
bistrx_ts_range_limit_2 = h90040430 0 24 h0 RW HEX
; Desc_bistrx_ts_range_limit_2 



; REGISTER bistrx_ts_range_limit_3_reg Address h90040434
_bistrx_ts_range_limit_3_reg = 2416182324 0 24 b00000000000000000000000000000000 RW
bistrx_ts_range_limit_3 = h90040434 0 24 h0 RW HEX
; Desc_bistrx_ts_range_limit_3 



; REGISTER bistrx_ts_range_limit_4_reg Address h90040438
_bistrx_ts_range_limit_4_reg = 2416182328 0 24 b00000000000000000000000000000000 RW
bistrx_ts_range_limit_4 = h90040438 0 24 h0 RW HEX
; Desc_bistrx_ts_range_limit_4 



; REGISTER bistrx_ts_range_limit_5_reg Address h9004043c
_bistrx_ts_range_limit_5_reg = 2416182332 0 24 b00000000000000000000000000000000 RW
bistrx_ts_range_limit_5 = h9004043c 0 24 h0 RW HEX
; Desc_bistrx_ts_range_limit_5 



; REGISTER bistrx_ts_range_limit_6_reg Address h90040440
_bistrx_ts_range_limit_6_reg = 2416182336 0 24 b00000000000000000000000000000000 RW
bistrx_ts_range_limit_6 = h90040440 0 24 h0 RW HEX
; Desc_bistrx_ts_range_limit_6 



; REGISTER bistrx_ts_range_limit_7_reg Address h90040444
_bistrx_ts_range_limit_7_reg = 2416182340 0 24 b00000000000000000000000000000000 RW
bistrx_ts_range_limit_7 = h90040444 0 24 h0 RW HEX
; Desc_bistrx_ts_range_limit_7 



; REGISTER bistrx_ts_range_limit_8_reg Address h90040448
_bistrx_ts_range_limit_8_reg = 2416182344 0 24 b00000000000000000000000000000000 RW
bistrx_ts_range_limit_8 = h90040448 0 24 h0 RW HEX
; Desc_bistrx_ts_range_limit_8 



; REGISTER bistrx_ts_range_limit_9_reg Address h9004044c
_bistrx_ts_range_limit_9_reg = 2416182348 0 24 b00000000000000000000000000000000 RW
bistrx_ts_range_limit_9 = h9004044c 0 24 h0 RW HEX
; Desc_bistrx_ts_range_limit_9 



; REGISTER bistrx_bist_adapt_cnt_clear_reg Address h900404a0
_bistrx_bist_adapt_cnt_clear_reg = 2416182432 0 10 b00000000000000000000000000000000 RW
bistrx_bist_adapt_cnt_clear = h900404a0 0 9 h0 RW HEX
; Desc_bistrx_bist_adapt_cnt_clear hdcp pka interupt latched status (1 in any bit indicates interrupt captured). SW is responsible to clear the bits using the corresponding pka_int_clr_reg bit
bistrx_counters_latch = h900404a0 9 1 h0 RW BIN
; Desc_bistrx_counters_latch hdcp pka interupt latched status (1 in any bit indicates interrupt captured). SW is responsible to clear the bits using the corresponding pka_int_clr_reg bit



; REGISTER bistrx_remote_sleep_to_time_cfg_reg Address h900404a4
_bistrx_remote_sleep_to_time_cfg_reg = 2416182436 0 32 b00000000000000000000000000000000 RW
bistrx_remote_sleep_to_time_cfg = h900404a4 0 32 h0 RW HEX
; Desc_bistrx_remote_sleep_to_time_cfg 



; REGISTER bistrx_per_val_cfg_reg Address h900404a8
_bistrx_per_val_cfg_reg = 2416182440 0 32 b00000000000000000000000000100000 RW
bistrx_per_val_cfg = h900404a8 0 32 h20 RW HEX
; Desc_bistrx_per_val_cfg efuse word data- which bits inside the word to burn



; REGISTER bistrx_per_val_msb_cfg_reg Address h900404ac
_bistrx_per_val_msb_cfg_reg = 2416182444 0 32 b00000000000000000000000000000000 RW
bistrx_per_val_msb_cfg = h900404ac 0 32 h0 RW HEX
; Desc_bistrx_per_val_msb_cfg enbles VP 0



; REGISTER bistrx_ber_val_cfg_reg Address h900404b0
_bistrx_ber_val_cfg_reg = 2416182448 0 32 b00000000000000000000000001000000 RW
bistrx_ber_val_cfg = h900404b0 0 32 h40 RW HEX
; Desc_bistrx_ber_val_cfg Light Sleep 0- normal mode. 1 - LS



; REGISTER bistrx_ber_val_msb_cfg_reg Address h900404b4
_bistrx_ber_val_msb_cfg_reg = 2416182452 0 32 b00000000000000000000000000000000 RW
bistrx_ber_val_msb_cfg = h900404b4 0 32 h0 RW HEX
; Desc_bistrx_ber_val_msb_cfg 



; REGISTER bistrx_wrap_en_regs Address h900404c0
_bistrx_wrap_en_regs = 2416182464 0 7 b00000000000000000000000001111111 RW
bistrx_ber_wrap_en = h900404c0 0 1 h1 RW BIN
; Desc_bistrx_ber_wrap_en IRAM protection interrupt. Sticky  indication.represents that IRAM got an accsess while in sleep mode
bistrx_per_wrap_en = h900404c0 1 1 h1 RW BIN
; Desc_bistrx_per_wrap_en IRAM protection interrupt. Sticky  indication.represents that IRAM got an accsess while in sleep mode
bistrx_bad_crc_wrap_en = h900404c0 2 1 h1 RW BIN
; Desc_bistrx_bad_crc_wrap_en IRAM protection interrupt. Sticky  indication.represents that IRAM got an accsess while in sleep mode
bistrx_sid_err_wrap_en = h900404c0 3 1 h1 RW BIN
; Desc_bistrx_sid_err_wrap_en IRAM protection interrupt. Sticky  indication.represents that IRAM got an accsess while in sleep mode
bistrx_total_bist_wrap_en = h900404c0 4 1 h1 RW BIN
; Desc_bistrx_total_bist_wrap_en IRAM protection interrupt. Sticky  indication.represents that IRAM got an accsess while in sleep mode
bistrx_missing_pkt_wrap_en = h900404c0 5 1 h1 RW BIN
; Desc_bistrx_missing_pkt_wrap_en IRAM protection interrupt. Sticky  indication.represents that IRAM got an accsess while in sleep mode
bistrx_remote_sleep_wrap_en = h900404c0 6 1 h1 RW BIN
; Desc_bistrx_remote_sleep_wrap_en IRAM protection interrupt. Sticky  indication.represents that IRAM got an accsess while in sleep mode



; REGISTER gpio_dup_compare_en_cfg Address h90040510
_gpio_dup_compare_en_cfg = 2416182544 0 32 b01010101111111111111111111111111 RW
gpio_dup_compare_en_reg = h90040510 0 32 h55ffffff RW HEX
; Desc_gpio_dup_compare_en_reg each bit represents the corresponding instance  of DRAM that got an accsess while in sleep mode
gpio_dup_compare_en = h90040510 0 23 h7fffff RW HEX
gpio_dup_safety_reg_check_en = h90040510 23 1 h1 RW BIN
gpio_dup_compare_en_magic_num = h90040510 24 4 h5 RW HEX
gpio_dup_compare_en_parity = h90040510 28 4 h5 RW HEX



; REGISTER gpio_dup_safety_dup_wait_oper_reg Address h90040514
_gpio_dup_safety_dup_wait_oper_reg = 2416182548 0 32 b11110101000000000000000000001010 RW
gpio_dup_safety_dup_wait_oper = h90040514 0 32 hf500000a RW HEX
; Desc_gpio_dup_safety_dup_wait_oper data write to the OTP
gpio_dup_safety_dup_wait_oper_cfg = h90040514 0 24 ha RW HEX
gpio_dup_safety_dup_wait_oper_magic_num = h90040514 24 4 h5 RW HEX
gpio_dup_safety_dup_wait_oper_parity = h90040514 28 4 hf RW HEX



; REGISTER gpio_dup_sel0_sel_dup_reg Address h90040518
_gpio_dup_sel0_sel_dup_reg = 2416182552 0 32 b01010101000000000000000000000000 RW
gpio_dup_sel0_sel_dup = h90040518 0 32 h55000000 RW HEX
; Desc_gpio_dup_sel0_sel_dup QSR output
gpio_dup_sel0_sel_dup0 = h90040518 0 12 h0 RW HEX
gpio_dup_sel0_sel_dup1 = h90040518 12 12 h0 RW HEX
gpio_dup_sel0_wait_oper_magic_num = h90040518 24 4 h5 RW HEX
gpio_dup_sel0_wait_oper_parity = h90040518 28 4 h5 RW HEX



; REGISTER gpio_dup_sel1_sel_dup_reg Address h9004051c
_gpio_dup_sel1_sel_dup_reg = 2416182556 0 32 b01010101000000000000000000000000 RW
gpio_dup_sel1_sel_dup = h9004051c 0 32 h55000000 RW HEX
; Desc_gpio_dup_sel1_sel_dup QSR output
gpio_dup_sel1_sel_dup0 = h9004051c 0 12 h0 RW HEX
gpio_dup_sel1_sel_dup1 = h9004051c 12 12 h0 RW HEX
gpio_dup_sel1_wait_oper_magic_num = h9004051c 24 4 h5 RW HEX
gpio_dup_sel1_wait_oper_parity = h9004051c 28 4 h5 RW HEX



; REGISTER gpio_dup_sel2_sel_dup_reg Address h90040520
_gpio_dup_sel2_sel_dup_reg = 2416182560 0 32 b01010101000000000000000000000000 RW
gpio_dup_sel2_sel_dup = h90040520 0 32 h55000000 RW HEX
; Desc_gpio_dup_sel2_sel_dup 0 = disable clock to SBPI bus
gpio_dup_sel2_sel_dup0 = h90040520 0 12 h0 RW HEX
gpio_dup_sel2_sel_dup1 = h90040520 12 12 h0 RW HEX
gpio_dup_sel2_wait_oper_magic_num = h90040520 24 4 h5 RW HEX
gpio_dup_sel2_wait_oper_parity = h90040520 28 4 h5 RW HEX



; REGISTER gpio_dup_sel3_sel_dup_reg Address h90040524
_gpio_dup_sel3_sel_dup_reg = 2416182564 0 32 b01010101000000000000000000000000 RW
gpio_dup_sel3_sel_dup = h90040524 0 32 h55000000 RW HEX
; Desc_gpio_dup_sel3_sel_dup QSR output
gpio_dup_sel3_sel_dup0 = h90040524 0 12 h0 RW HEX
gpio_dup_sel3_sel_dup1 = h90040524 12 12 h0 RW HEX
gpio_dup_sel3_wait_oper_magic_num = h90040524 24 4 h5 RW HEX
gpio_dup_sel3_wait_oper_parity = h90040524 28 4 h5 RW HEX



; REGISTER gpio_dup_sel4_sel_dup_reg Address h90040528
_gpio_dup_sel4_sel_dup_reg = 2416182568 0 32 b01010101000000000000000000000000 RW
gpio_dup_sel4_sel_dup = h90040528 0 32 h55000000 RW HEX
; Desc_gpio_dup_sel4_sel_dup data read (registers) from OTP
gpio_dup_sel4_sel_dup0 = h90040528 0 12 h0 RW HEX
gpio_dup_sel4_sel_dup1 = h90040528 12 12 h0 RW HEX
gpio_dup_sel4_wait_oper_magic_num = h90040528 24 4 h5 RW HEX
gpio_dup_sel4_wait_oper_parity = h90040528 28 4 h5 RW HEX



; REGISTER gpio_dup_sel5_sel_dup_reg Address h9004052c
_gpio_dup_sel5_sel_dup_reg = 2416182572 0 32 b01010101000000000000000000000000 RW
gpio_dup_sel5_sel_dup = h9004052c 0 32 h55000000 RW HEX
; Desc_gpio_dup_sel5_sel_dup mips access to read from OTP
gpio_dup_sel5_sel_dup0 = h9004052c 0 12 h0 RW HEX
gpio_dup_sel5_sel_dup1 = h9004052c 12 12 h0 RW HEX
gpio_dup_sel5_wait_oper_magic_num = h9004052c 24 4 h5 RW HEX
gpio_dup_sel5_wait_oper_parity = h9004052c 28 4 h5 RW HEX



; REGISTER FsControlTadpt_Reg Address h90040700
_FsControlTadpt_Reg = 2416183040 0 26 b00000000000000000000000000000000 RW
pmdiv_from_cpu = h90040700 0 1 h0 RW BIN
; Desc_pmdiv_from_cpu 
>>DESC pmdiv_from_cpu = 2, b0, disable, b1, enable
ShiftMn = h90040700 1 1 h0 RW BIN
; Desc_ShiftMn 
synth_PostDiv1_r = h90040700 4 4 h0 RW HEX
; Desc_synth_PostDiv1_r 
synth_PostDiv2_r = h90040700 8 4 h0 RW HEX
; Desc_synth_PostDiv2_r 
synth_fbdiv_r = h90040700 12 12 h0 RW HEX
; Desc_synth_fbdiv_r 
FsControl_En = h90040700 24 1 h0 RW BIN
; Desc_FsControl_En 
Use_Virtual_FIFO = h90040700 25 1 h0 RW BIN
; Desc_Use_Virtual_FIFO 



; REGISTER FsControlTadpt_Reg1 Address h90040704
_FsControlTadpt_Reg1 = 2416183044 0 24 b00000000000000000000000000000000 RW
synth_frac_r = h90040704 0 24 h0 RW HEX
; Desc_synth_frac_r 



; REGISTER FsControlTadpt_clk_ratio Address h90040708
_FsControlTadpt_clk_ratio = 2416183048 0 16 b00000000000000000000000000000000 RW
clk_a_div_ratio = h90040708 0 8 h0 RW HEX
; Desc_clk_a_div_ratio 
clk_b_div_ratio = h90040708 8 8 h0 RW HEX
; Desc_clk_b_div_ratio 



; REGISTER ClcokParse Address h9004070c
_ClcokParse = 2416183052 0 25 b00000000100000000000000000000000 RW
Drift_from_cpu = h9004070c 0 1 h0 RW BIN
; Desc_Drift_from_cpu 
Cpu_Drift = h9004070c 1 16 h0 RW HEX
; Desc_Cpu_Drift 
MN_IgnoreCRC = h9004070c 17 1 h0 RW BIN
; Desc_MN_IgnoreCRC 
MN_Lsb_First = h9004070c 18 1 h0 RW BIN
; Desc_MN_Lsb_First 
Mval_from_cpu = h9004070c 19 1 h0 RW BIN
; Desc_Mval_from_cpu 
fifo_wr_en_from_cpu = h9004070c 20 1 h0 RW BIN
; Desc_fifo_wr_en_from_cpu 
fifo_wr_en_val = h9004070c 21 1 h0 RW BIN
; Desc_fifo_wr_en_val 
mdata_diff_thr = h9004070c 22 3 h2 RW HEX
; Desc_mdata_diff_thr 



; REGISTER ClcokParse1 Address h90040710
_ClcokParse1 = 2416183056 0 16 b00000000000000000000000000000000 RW
Cpu_Mval = h90040710 0 16 h0 RW HEX
; Desc_Cpu_Mval bit per register (iram_sm_cfg_reg_0..4) for register status + wr to register to clear status(for all)



; REGISTER DoFsControl_Ctrl_reg_1 Address h90040714
_DoFsControl_Ctrl_reg_1 = 2416183060 0 32 b10000110000100000000001000000000 RW
TMDS_FIFO_LOOP_REF = h90040714 0 11 h200 RW HEX
; Desc_TMDS_FIFO_LOOP_REF 
TMDS_FIFO_LOOP_A_SLCT = h90040714 20 4 h1 RW HEX
; Desc_TMDS_FIFO_LOOP_A_SLCT 
TMDS_FIFO_LOOP_B_SLCT = h90040714 25 5 h3 RW HEX
; Desc_TMDS_FIFO_LOOP_B_SLCT 
TMDS_FIFO_LOOP_EN = h90040714 31 1 h1 RW BIN
; Desc_TMDS_FIFO_LOOP_EN 



; REGISTER DoFsControl_Ctrl_reg_2 Address h90040718
_DoFsControl_Ctrl_reg_2 = 2416183064 0 31 b00100010001100100000100011011010 RW
TMDS_FO_CHANGE_THR = h90040718 0 3 h2 RW HEX
; Desc_TMDS_FO_CHANGE_THR how many cycles the sm waits before starting opernationl mode after reciving sm_en
TMDS_FO_DIFF_THR = h90040718 3 3 h3 RW HEX
; Desc_TMDS_FO_DIFF_THR how many cycles the sm waits before starting opernationl mode after reciving sm_en
TMDS_FO_LEAK_SLCT = h90040718 6 4 h3 RW HEX
; Desc_TMDS_FO_LEAK_SLCT how many cycles the sm waits before starting opernationl mode after reciving sm_en
TMDS_MN_CHANGE_THR = h90040718 10 3 h2 RW HEX
; Desc_TMDS_MN_CHANGE_THR how many cycles the sm waits before starting opernationl mode after reciving sm_en
TMDS_MN_DIFF_SLCT = h90040718 13 2 h0 RW HEX
; Desc_TMDS_MN_DIFF_SLCT how many cycles the sm waits before starting opernationl mode after reciving sm_en
TMDS_MN_INIT_DEV = h90040718 15 8 h64 RW HEX
; Desc_TMDS_MN_INIT_DEV how many cycles the sm waits before starting opernationl mode after reciving sm_en
TMDS_MN_LEAK_SLCT = h90040718 23 4 h4 RW HEX
; Desc_TMDS_MN_LEAK_SLCT how many cycles the sm waits before starting opernationl mode after reciving sm_en
TMDS_MN_STEADY_THR = h90040718 27 4 h4 RW HEX
; Desc_TMDS_MN_STEADY_THR how many cycles the sm waits before starting opernationl mode after reciving sm_en



; REGISTER DoFsControl_Ctrl_reg_0 Address h9004071c
_DoFsControl_Ctrl_reg_0 = 2416183068 0 30 b00000001000000000000000000000000 RW
TMDS_SSC_STEP = h9004071c 0 18 h0 RW HEX
; Desc_TMDS_SSC_STEP 
TMDS_SSC_MAX = h9004071c 18 6 h0 RW HEX
; Desc_TMDS_SSC_MAX 
TMDS_SSC_RST = h9004071c 24 1 h1 RW BIN
; Desc_TMDS_SSC_RST 
TMDS_MN_ACC_PERIOD_SLCT = h9004071c 25 3 h0 RW HEX
; Desc_TMDS_MN_ACC_PERIOD_SLCT 
TMDS_MN_FRZ = h9004071c 28 1 h0 RW BIN
; Desc_TMDS_MN_FRZ 
TMDS_MN_MODE = h9004071c 29 1 h0 RW BIN
; Desc_TMDS_MN_MODE 



; REGISTER DoFsControl_Ctrl_reg_3 Address h90040720
_DoFsControl_Ctrl_reg_3 = 2416183072 0 13 b00000000000000000000000000000000 RW
TMDS_SD_CYCLE = h90040720 0 12 h0 RW HEX
; Desc_TMDS_SD_CYCLE 



; REGISTER clk_sc_gen Address h90040724
_clk_sc_gen = 2416183076 0 12 b00000000000000000000000001000101 RW
refdiv = h90040724 0 6 h5 RW HEX
; Desc_refdiv 
refdiv_out = h90040724 6 6 h1 RW HEX
; Desc_refdiv_out 



; REGISTER MN_status_clr Address h90040728
_MN_status_clr = 2416183080 0 24 b00000000000000000000000000000000 RW
mn_change_clr = h90040728 0 1 h0 RW BIN
; Desc_mn_change_clr 
mn_zero_clr = h90040728 1 1 h0 RW BIN
; Desc_mn_zero_clr 
mis_clk_pkt_cnt_limit = h90040728 8 16 h0 RW HEX
; Desc_mis_clk_pkt_cnt_limit 



; REGISTER HiSpeed_Ctrl_reg_0 Address h90040748
_HiSpeed_Ctrl_reg_0 = 2416183112 0 30 b00000010000111110011001111110000 RW
HI_SPEED_HI_THR = h90040748 0 11 h3f0 RW HEX
; Desc_HI_SPEED_HI_THR bit per register (dram_sm_cfg_reg_0..4) for register status + wr to register to clear status(for all)
HI_SPEED_LOW_THR = h90040748 11 11 h3e6 RW HEX
; Desc_HI_SPEED_LOW_THR bit per register (dram_sm_cfg_reg_0..4) for register status + wr to register to clear status(for all)
HI_SPEED_NUM_OF_PACKETS = h90040748 22 5 h8 RW HEX
; Desc_HI_SPEED_NUM_OF_PACKETS bit per register (dram_sm_cfg_reg_0..4) for register status + wr to register to clear status(for all)



; REGISTER mn_zero_gen_cgen_ctrl1_reg Address h90040750
_mn_zero_gen_cgen_ctrl1_reg = 2416183120 0 32 b00000100000000001000000000000000 RW
mn_zero_limit = h90040750 0 16 h8000 RW HEX
; Desc_mn_zero_limit bit per register (dram_sm_cfg_reg_0..4) for register status + wr to register to clear status(for all)
cgen_window = h90040750 16 15 h400 RW HEX
; Desc_cgen_window bit per register (dram_sm_cfg_reg_0..4) for register status + wr to register to clear status(for all)
cgen_enable = h90040750 31 1 h0 RW BIN
; Desc_cgen_enable bit per register (dram_sm_cfg_reg_0..4) for register status + wr to register to clear status(for all)



; REGISTER Cgen_values_1_0_reg Address h90040754
_Cgen_values_1_0_reg = 2416183124 0 32 b00000010000000000000001000000000 RW
cgen_value_0 = h90040754 0 16 h200 RW HEX
; Desc_cgen_value_0 
cgen_value_1 = h90040754 16 16 h200 RW HEX
; Desc_cgen_value_1 



; REGISTER Cgen_values_3_2_reg Address h90040758
_Cgen_values_3_2_reg = 2416183128 0 32 b00000010000000000000001000000000 RW
cgen_value_2 = h90040758 0 16 h200 RW HEX
; Desc_cgen_value_2 
cgen_value_3 = h90040758 16 16 h200 RW HEX
; Desc_cgen_value_3 



; REGISTER Cgen_values_5_4_reg Address h9004075c
_Cgen_values_5_4_reg = 2416183132 0 32 b00000010000000000000001000000000 RW
cgen_value_4 = h9004075c 0 16 h200 RW HEX
; Desc_cgen_value_4 {28'b0,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}
cgen_value_5 = h9004075c 16 16 h200 RW HEX
; Desc_cgen_value_5 {28'b0,brod_mc_not_ok,uni_mc_not_ok,pcrc_not_ok,hcrc_not_ok}



; REGISTER Cgen_values_7_6_reg Address h90040760
_Cgen_values_7_6_reg = 2416183136 0 32 b00000010000000000000001000000000 RW
cgen_value_6 = h90040760 0 16 h200 RW HEX
; Desc_cgen_value_6 broadcast address header valid i2c addr
cgen_value_7 = h90040760 16 16 h200 RW HEX
; Desc_cgen_value_7 broadcast address header valid i2c addr



; REGISTER cfg_fsout_div_ratio_reg Address h90040764
_cfg_fsout_div_ratio_reg = 2416183140 0 2 b00000000000000000000000000000000 RW
cfg_fsout_div_ratio = h90040764 0 2 h0 RW HEX
; Desc_cfg_fsout_div_ratio  {uni_mc_not_ok,brod_mc_not_ok,acmd_wr_int,len_int,md_not_ok,pcrc_not_ok,hcrc_not_ok}



; REGISTER cfg_sc_gen_postdiv_reg Address h90040768
_cfg_sc_gen_postdiv_reg = 2416183144 0 16 b00000000000000000010000000100100 RW
cfg_PostDiv_mul = h90040768 0 7 h24 RW HEX
; Desc_cfg_PostDiv_mul  {uni_mc_not_ok,brod_mc_not_ok,acmd_wr_int,len_int,md_not_ok,pcrc_not_ok,hcrc_not_ok}
sc_gen_sw_config_ena = h90040768 7 1 h0 RW BIN
; Desc_sc_gen_sw_config_ena  {uni_mc_not_ok,brod_mc_not_ok,acmd_wr_int,len_int,md_not_ok,pcrc_not_ok,hcrc_not_ok}
sc_gen_fifo_max_wr_gap = h90040768 8 8 h20 RW HEX
; Desc_sc_gen_fifo_max_wr_gap  {uni_mc_not_ok,brod_mc_not_ok,acmd_wr_int,len_int,md_not_ok,pcrc_not_ok,hcrc_not_ok}



; REGISTER cfg_hyst_ratio_min_reg Address h90040770
_cfg_hyst_ratio_min_reg = 2416183152 0 25 b00000000000000001100000000000000 RW
cfg_hyst_ratio_min = h90040770 0 25 hc000 RW HEX
; Desc_cfg_hyst_ratio_min FSM value



; REGISTER cfg_hyst_ratio_max_reg Address h90040774
_cfg_hyst_ratio_max_reg = 2416183156 0 25 b00000001111111111111111111111111 RW
cfg_hyst_ratio_max = h90040774 0 25 h1ffffff RW HEX
; Desc_cfg_hyst_ratio_max set unicast MC value



; REGISTER cfg_clk_mn_mult_ratio Address h90040778
_cfg_clk_mn_mult_ratio = 2416183160 0 5 b00000000000000000000000000000000 RW
clk_mn_mult_ratio = h90040778 0 3 h0 RW HEX
; Desc_clk_mn_mult_ratio set broadcast MC value
AParser_DropBadPktEn = h90040778 4 1 h0 RW BIN
; Desc_AParser_DropBadPktEn set broadcast MC value



; REGISTER cfg_tx_delay Address h9004077c
_cfg_tx_delay = 2416183164 0 30 b00000000000000000000000000000000 RW
const_tx_delay = h9004077c 0 7 h0 RW HEX
; Desc_const_tx_delay {len_cnt_start,first_addr[15:0]}
tx_delay_clk_unit = h9004077c 7 7 h0 RW HEX
; Desc_tx_delay_clk_unit {len_cnt_start,first_addr[15:0]}
const_tx_delay_rclk_units = h9004077c 14 16 h0 RW HEX
; Desc_const_tx_delay_rclk_units {len_cnt_start,first_addr[15:0]}



; REGISTER rclk_cfg Address h90040784
_rclk_cfg = 2416183172 0 6 b00000000000000000000000000000010 RW
pll_lock_val = h90040784 0 1 h0 RW BIN
; Desc_pll_lock_val {len_cnt_start,first_addr[15:0]}
pll_dskew_calib_lock_val = h90040784 1 1 h1 RW BIN
; Desc_pll_dskew_calib_lock_val {len_cnt_start,first_addr[15:0]}
sc_gen_clk_sel = h90040784 2 1 h0 RW BIN
; Desc_sc_gen_clk_sel {len_cnt_start,first_addr[15:0]}
sc_gen_clk_gator = h90040784 3 1 h0 RW BIN
; Desc_sc_gen_clk_gator {len_cnt_start,first_addr[15:0]}
jm_clk_sel = h90040784 4 2 h0 RW HEX
; Desc_jm_clk_sel {len_cnt_start,first_addr[15:0]}



; REGISTER FsCont_int_mask_reg Address h9004078c
_FsCont_int_mask_reg = 2416183180 0 8 b00000000000000000000000011111111 RW
FsCont_int_mask = h9004078c 0 8 hff RW HEX
; Desc_FsCont_int_mask 



; REGISTER safety_cfg0_reg Address h90040820
_safety_cfg0_reg = 2416183328 0 32 b11110101000000000000000000001010 RW
safety_cfg0 = h90040820 0 32 hf500000a RW HEX
; Desc_safety_cfg0 set broadcast MC value
cfg_wait_oper = h90040820 0 24 ha RW HEX
magic_number = h90040820 24 4 h5 RW HEX
parity = h90040820 28 4 hf RW HEX



; REGISTER safety_cfg1_reg Address h90040824
_safety_cfg1_reg = 2416183332 0 32 b10010101000000000000000000111111 RW
safety_cfg1 = h90040824 0 32 h9500003f RW HEX
; Desc_safety_cfg1 ACMD address offset 16 MSB
fusa_crc_chk_en = h90040824 0 1 h1 RW BIN
fusa_ka_chk_en = h90040824 1 1 h1 RW BIN
fusa_fifo_used_range_chk_en = h90040824 2 1 h1 RW BIN
fusa_ts_range_chk_en = h90040824 3 1 h1 RW BIN
fusa_parity_en = h90040824 4 1 h1 RW BIN
safety_reg_chk_en = h90040824 5 1 h1 RW BIN
magic_number = h90040824 24 4 h5 RW HEX
parity = h90040824 28 4 h9 RW HEX



; REGISTER safety_cfg2_reg Address h90040828
_safety_cfg2_reg = 2416183336 0 32 b01010101000001001001001111100000 RW
safety_cfg2 = h90040828 0 32 h550493e0 RW HEX
; Desc_safety_cfg2 {len_cnt_start,first_addr[15:0]}
miss_pkt_cnt_cfg = h90040828 0 24 h493e0 RW HEX
magic_number = h90040828 24 4 h5 RW HEX
parity = h90040828 28 4 h5 RW HEX



; REGISTER safety_cfg3_reg Address h9004082c
_safety_cfg3_reg = 2416183340 0 32 b10010101000000001010011111111110 RW
safety_cfg3 = h9004082c 0 32 h9500a7fe RW HEX
; Desc_safety_cfg3 I2C slave setup time in ns
fusa_fifo_used_range_max = h9004082c 0 12 h7fe RW HEX
fusa_fifo_used_range_min = h9004082c 12 12 ha RW HEX
magic_number = h9004082c 24 4 h5 RW HEX
parity = h9004082c 28 4 h9 RW HEX



; REGISTER safety_cfg4_reg Address h90040830
_safety_cfg4_reg = 2416183344 0 32 b10100101000000000000111111111111 RW
safety_cfg4 = h90040830 0 32 ha5000fff RW HEX
; Desc_safety_cfg4 Data to be written to the transmit FIFO
fusa_ts_range_max = h90040830 0 12 hfff RW HEX
fusa_ts_range_min = h90040830 12 12 h0 RW HEX
magic_number = h90040830 24 4 h5 RW HEX
parity = h90040830 28 4 ha RW HEX



; REGISTER pll_lock_wait_safety_reg Address h9004083c
_pll_lock_wait_safety_reg = 2416183356 0 32 b11110101000000000000000000001010 RW
pll_lock_wait_safety_cfg = h9004083c 0 32 hf500000a RW HEX
; Desc_pll_lock_wait_safety_cfg I2C slave WD counter 
pll_lock_cfg_wait_oper = h9004083c 0 24 ha RW HEX
magic_number = h9004083c 24 4 h5 RW HEX
parity = h9004083c 28 4 hf RW HEX



; REGISTER rclk_min_target_lsb_reg Address h90040870
_rclk_min_target_lsb_reg = 2416183408 0 32 b00010101000000000010011100010000 RW
rclk_min_target_lsb = h90040870 0 32 h15002710 RW HEX
; Desc_rclk_min_target_lsb 
rclk_min_target_lsb_cfg = h90040870 0 24 h2710 RW HEX
rclk_min_target_lsb_magic_num = h90040870 24 4 h5 RW HEX
rclk_min_target_lsb_parity = h90040870 28 4 h1 RW HEX



; REGISTER rclk_min_target_msb_reg Address h90040874
_rclk_min_target_msb_reg = 2416183412 0 32 b01010101000000000000000000000000 RW
rclk_min_target_msb = h90040874 0 32 h55000000 RW HEX
; Desc_rclk_min_target_msb 0 - SPI controls write to RxMessageFifos1 - RIF controls write to RxMessageFifo
rclk_min_target_msb_cfg = h90040874 0 8 h0 RW HEX
rclk_min_target_msb_reserved = h90040874 8 16 h0 RW HEX
rclk_min_target_msb_magic_num = h90040874 24 4 h5 RW HEX
rclk_min_target_msb_parity = h90040874 28 4 h5 RW HEX



; REGISTER rclk_max_target_lsb_reg Address h90040878
_rclk_max_target_lsb_reg = 2416183416 0 32 b00000101000000000110000110101000 RW
rclk_max_target_lsb = h90040878 0 32 h50061a8 RW HEX
; Desc_rclk_max_target_lsb light sleep : bit 0 - rx mem, bit 1 - tx mem
rclk_max_target_lsb_cfg = h90040878 0 24 h61a8 RW HEX
rclk_max_target_lsb_magic_num = h90040878 24 4 h5 RW HEX
rclk_max_target_lsb_parity = h90040878 28 4 h0 RW HEX



; REGISTER rclk_max_target_msb_reg Address h9004087c
_rclk_max_target_msb_reg = 2416183420 0 32 b01010101000000000000000000000000 RW
rclk_max_target_msb = h9004087c 0 32 h55000000 RW HEX
; Desc_rclk_max_target_msb put rx_msg_fifo_soc to online
rclk_max_target_msb_cfg = h9004087c 0 8 h0 RW HEX
rclk_max_target_msb_reserved = h9004087c 8 16 h0 RW HEX
rclk_max_target_msb_magic_num = h9004087c 24 4 h5 RW HEX
rclk_max_target_msb_parity = h9004087c 28 4 h5 RW HEX



; REGISTER rclk_twind_base_lsb_reg Address h90040880
_rclk_twind_base_lsb_reg = 2416183424 0 32 b00100101000000000010010001010100 RW
rclk_twind_base_lsb = h90040880 0 32 h25002454 RW HEX
; Desc_rclk_twind_base_lsb 
rclk_twind_base_lsb_cfg = h90040880 0 24 h2454 RW HEX
rclk_twind_base_lsb_magic_num = h90040880 24 4 h5 RW HEX
rclk_twind_base_lsb_parity = h90040880 28 4 h2 RW HEX



; REGISTER rclk_twind_base_msb_reg Address h90040884
_rclk_twind_base_msb_reg = 2416183428 0 32 b01010101000000000000000000000000 RW
rclk_twind_base_msb = h90040884 0 32 h55000000 RW HEX
; Desc_rclk_twind_base_msb 
rclk_twind_base_msb_cfg = h90040884 0 8 h0 RW HEX
rclk_twind_base_msb_reserved = h90040884 8 16 h0 RW HEX
rclk_twind_base_msb_magic_num = h90040884 24 4 h5 RW HEX
rclk_twind_base_msb_parity = h90040884 28 4 h5 RW HEX



; REGISTER rclk_wait_oper_reg Address h90040888
_rclk_wait_oper_reg = 2416183432 0 32 b11110101000000000000000000001010 RW
rclk_wait_oper = h90040888 0 32 hf500000a RW HEX
; Desc_rclk_wait_oper 
rclk_wait_oper_cfg = h90040888 0 24 ha RW HEX
rclk_wait_oper_magic_num = h90040888 24 4 h5 RW HEX
rclk_wait_oper_parity = h90040888 28 4 hf RW HEX



; REGISTER phase_step_control Address h90040900
_phase_step_control = 2416183552 0 30 b00000000000000000000000000000000 RW
wait_time = h90040900 0 10 h0 RW HEX
; Desc_wait_time controls thevm activation while in bypass modesvm_pd                       [0]                     vm power down control bit while in bypass modesvm_rstn                    [1]                     vm reset control bit while in bypass mode svm_run                     [2]                     vm run control bit while in bypass modesvm_sde                     [3]                     vm serial enable_bitsvm_tm_tval              [4]                     vm tm_tval control bit while in bypass modesvm_tm_ld                 [5]                      vm tm_ld control bit while in bypass modesvm_sel_vin             [9:6]                   vm sel_vin control bits while in bypass modesvm_tm_a                 [13:10]              vm tm_a control bits while in bypass modesvm_trim                  [17:14]              vm trim control bitsssReserved                 [22:18]ssvm_clk_en              [23]                    Enables the clk_gator on clock driving the vm while in bypass modesMagic_number     [27:24]              Default value – identical for all registerssParity                      [31:28]              Parity calculation on bits[27:0] 
step_size = h90040900 10 13 h0 RW HEX
; Desc_step_size controls thevm activation while in bypass modesvm_pd                       [0]                     vm power down control bit while in bypass modesvm_rstn                    [1]                     vm reset control bit while in bypass mode svm_run                     [2]                     vm run control bit while in bypass modesvm_sde                     [3]                     vm serial enable_bitsvm_tm_tval              [4]                     vm tm_tval control bit while in bypass modesvm_tm_ld                 [5]                      vm tm_ld control bit while in bypass modesvm_sel_vin             [9:6]                   vm sel_vin control bits while in bypass modesvm_tm_a                 [13:10]              vm tm_a control bits while in bypass modesvm_trim                  [17:14]              vm trim control bitsssReserved                 [22:18]ssvm_clk_en              [23]                    Enables the clk_gator on clock driving the vm while in bypass modesMagic_number     [27:24]              Default value – identical for all registerssParity                      [31:28]              Parity calculation on bits[27:0] 
step_direction = h90040900 23 1 h0 RW BIN
; Desc_step_direction controls thevm activation while in bypass modesvm_pd                       [0]                     vm power down control bit while in bypass modesvm_rstn                    [1]                     vm reset control bit while in bypass mode svm_run                     [2]                     vm run control bit while in bypass modesvm_sde                     [3]                     vm serial enable_bitsvm_tm_tval              [4]                     vm tm_tval control bit while in bypass modesvm_tm_ld                 [5]                      vm tm_ld control bit while in bypass modesvm_sel_vin             [9:6]                   vm sel_vin control bits while in bypass modesvm_tm_a                 [13:10]              vm tm_a control bits while in bypass modesvm_trim                  [17:14]              vm trim control bitsssReserved                 [22:18]ssvm_clk_en              [23]                    Enables the clk_gator on clock driving the vm while in bypass modesMagic_number     [27:24]              Default value – identical for all registerssParity                      [31:28]              Parity calculation on bits[27:0] 
manual_mode = h90040900 24 1 h0 RW BIN
; Desc_manual_mode controls thevm activation while in bypass modesvm_pd                       [0]                     vm power down control bit while in bypass modesvm_rstn                    [1]                     vm reset control bit while in bypass mode svm_run                     [2]                     vm run control bit while in bypass modesvm_sde                     [3]                     vm serial enable_bitsvm_tm_tval              [4]                     vm tm_tval control bit while in bypass modesvm_tm_ld                 [5]                      vm tm_ld control bit while in bypass modesvm_sel_vin             [9:6]                   vm sel_vin control bits while in bypass modesvm_tm_a                 [13:10]              vm tm_a control bits while in bypass modesvm_trim                  [17:14]              vm trim control bitsssReserved                 [22:18]ssvm_clk_en              [23]                    Enables the clk_gator on clock driving the vm while in bypass modesMagic_number     [27:24]              Default value – identical for all registerssParity                      [31:28]              Parity calculation on bits[27:0] 
clock_ratio = h90040900 25 4 h0 RW HEX
; Desc_clock_ratio controls thevm activation while in bypass modesvm_pd                       [0]                     vm power down control bit while in bypass modesvm_rstn                    [1]                     vm reset control bit while in bypass mode svm_run                     [2]                     vm run control bit while in bypass modesvm_sde                     [3]                     vm serial enable_bitsvm_tm_tval              [4]                     vm tm_tval control bit while in bypass modesvm_tm_ld                 [5]                      vm tm_ld control bit while in bypass modesvm_sel_vin             [9:6]                   vm sel_vin control bits while in bypass modesvm_tm_a                 [13:10]              vm tm_a control bits while in bypass modesvm_trim                  [17:14]              vm trim control bitsssReserved                 [22:18]ssvm_clk_en              [23]                    Enables the clk_gator on clock driving the vm while in bypass modesMagic_number     [27:24]              Default value – identical for all registerssParity                      [31:28]              Parity calculation on bits[27:0] 
bypass_en = h90040900 29 1 h0 RW BIN
; Desc_bypass_en controls thevm activation while in bypass modesvm_pd                       [0]                     vm power down control bit while in bypass modesvm_rstn                    [1]                     vm reset control bit while in bypass mode svm_run                     [2]                     vm run control bit while in bypass modesvm_sde                     [3]                     vm serial enable_bitsvm_tm_tval              [4]                     vm tm_tval control bit while in bypass modesvm_tm_ld                 [5]                      vm tm_ld control bit while in bypass modesvm_sel_vin             [9:6]                   vm sel_vin control bits while in bypass modesvm_tm_a                 [13:10]              vm tm_a control bits while in bypass modesvm_trim                  [17:14]              vm trim control bitsssReserved                 [22:18]ssvm_clk_en              [23]                    Enables the clk_gator on clock driving the vm while in bypass modesMagic_number     [27:24]              Default value – identical for all registerssParity                      [31:28]              Parity calculation on bits[27:0] 



; REGISTER find_edge_control Address h90040904
_find_edge_control = 2416183556 0 28 b00000000000000000000000000000000 RW
init_step_size = h90040904 0 6 h0 RW HEX
; Desc_init_step_size short_self_test_high_limit1       [11:0]                  When short self-test is selected this value is used as high_limit1sshort_self_test_low_limit1        [23:12]                When short self-test is selected this value is used as low_limit1sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 
min_step_size = h90040904 6 10 h0 RW HEX
; Desc_min_step_size short_self_test_high_limit1       [11:0]                  When short self-test is selected this value is used as high_limit1sshort_self_test_low_limit1        [23:12]                When short self-test is selected this value is used as low_limit1sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 
edge_dir = h90040904 16 1 h0 RW BIN
; Desc_edge_dir short_self_test_high_limit1       [11:0]                  When short self-test is selected this value is used as high_limit1sshort_self_test_low_limit1        [23:12]                When short self-test is selected this value is used as low_limit1sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 
num_samples = h90040904 17 10 h0 RW HEX
; Desc_num_samples short_self_test_high_limit1       [11:0]                  When short self-test is selected this value is used as high_limit1sshort_self_test_low_limit1        [23:12]                When short self-test is selected this value is used as low_limit1sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 
bypass_clk = h90040904 27 1 h0 RW BIN
; Desc_bypass_clk short_self_test_high_limit1       [11:0]                  When short self-test is selected this value is used as high_limit1sshort_self_test_low_limit1        [23:12]                When short self-test is selected this value is used as low_limit1sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 



; REGISTER run_jitter_monitor Address h90040908
_run_jitter_monitor = 2416183560 0 7 b00000000000000000000000000000000 RW
run_step_phase = h90040908 0 1 h0 RW BIN
; Desc_run_step_phase short_self_test_forced_vm_value1             [11:0]               When short self-test is selected this value is used for comparison against above defined limitssshort_self_test_forced_vm_value2             [23:12]            When short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
run_find_edge = h90040908 1 1 h0 RW BIN
; Desc_run_find_edge short_self_test_forced_vm_value1             [11:0]               When short self-test is selected this value is used for comparison against above defined limitssshort_self_test_forced_vm_value2             [23:12]            When short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
run_sample_counter = h90040908 2 1 h0 RW BIN
; Desc_run_sample_counter short_self_test_forced_vm_value1             [11:0]               When short self-test is selected this value is used for comparison against above defined limitssshort_self_test_forced_vm_value2             [23:12]            When short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
run_measure_dc = h90040908 3 1 h0 RW BIN
; Desc_run_measure_dc short_self_test_forced_vm_value1             [11:0]               When short self-test is selected this value is used for comparison against above defined limitssshort_self_test_forced_vm_value2             [23:12]            When short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
jm_rstn = h90040908 4 1 h0 RW BIN
; Desc_jm_rstn short_self_test_forced_vm_value1             [11:0]               When short self-test is selected this value is used for comparison against above defined limitssshort_self_test_forced_vm_value2             [23:12]            When short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
disable_jm = h90040908 5 1 h0 RW BIN
; Desc_disable_jm short_self_test_forced_vm_value1             [11:0]               When short self-test is selected this value is used for comparison against above defined limitssshort_self_test_forced_vm_value2             [23:12]            When short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
async_disable = h90040908 6 1 h0 RW BIN
; Desc_async_disable short_self_test_forced_vm_value1             [11:0]               When short self-test is selected this value is used for comparison against above defined limitssshort_self_test_forced_vm_value2             [23:12]            When short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 



; REGISTER gen0_sel_gpio_reg Address h90040a10
_gen0_sel_gpio_reg = 2416183824 0 32 b00000000000000000000000000000000 RW
gen0_sel_gpio = h90040a10 0 5 h0 RW HEX
; Desc_gen0_sel_gpio Read only register. Allows the SW to read the actual difference between TS0 and TS1 temperature measurements. The result is the absolute value  



; REGISTER gen0_sel_sw_reg Address h90040a14
_gen0_sel_sw_reg = 2416183828 0 32 b00000000000000000000000000000000 RW
gen0_sel_sw = h90040a14 0 5 h0 RW HEX
; Desc_gen0_sel_sw The measured temperature value from TS0



; REGISTER gen0_sel_pwm_reg Address h90040a18
_gen0_sel_pwm_reg = 2416183832 0 32 b00000000000000000000000000000000 RW
gen0_sel_pwm = h90040a18 0 5 h0 RW HEX
; Desc_gen0_sel_pwm To be used while in Bypass mode to allow the SW to determine when the TS0 temperature value is ready and can be read



; REGISTER gen0_sel_source_reg Address h90040a1c
_gen0_sel_source_reg = 2416183836 0 32 b00000000000000000000000000000000 RW
gen0_sel_source = h90040a1c 0 2 h0 RW HEX
; Desc_gen0_sel_source Ts0 measured temperature is out of the defined limits – either higher or lower



; REGISTER gen1_sel_gpio_reg Address h90040a20
_gen1_sel_gpio_reg = 2416183840 0 32 b00000000000000000000000000000000 RW
gen1_sel_gpio = h90040a20 0 5 h0 RW HEX
; Desc_gen1_sel_gpio error_limit                                                                      [4:0]                  error threshold - if numb er of accumalated error equal or exceed the threshold - error indication will be raisedsReserved                                                                         [23:5]sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER gen1_sel_sw_reg Address h90040a24
_gen1_sel_sw_reg = 2416183844 0 32 b00000000000000000000000000000000 RW
gen1_sel_sw = h90040a24 0 5 h0 RW HEX
; Desc_gen1_sel_sw Actual number of out_of_limit errors



; REGISTER gen1_sel_pwm_reg Address h90040a28
_gen1_sel_pwm_reg = 2416183848 0 32 b00000000000000000000000000000000 RW
gen1_sel_pwm = h90040a28 0 5 h0 RW HEX
; Desc_gen1_sel_pwm Ts0 comparison result against high limits              1’b0 – temperature is less or equal than high limits              1’b1 -  temperature is higher than high limit



; REGISTER gen1_sel_source_reg Address h90040a2c
_gen1_sel_source_reg = 2416183852 0 32 b00000000000000000000000000000000 RW
gen1_sel_source = h90040a2c 0 2 h0 RW HEX
; Desc_gen1_sel_source When active – the configuration register x, fail to meet the safety requirements



; REGISTER gen2_sel_gpio_reg Address h90040a30
_gen2_sel_gpio_reg = 2416183856 0 32 b00000000000000000000000000000000 RW
gen2_sel_gpio = h90040a30 0 5 h0 RW HEX
; Desc_gen2_sel_gpio short_self_test_comperator results per self_test steps    [0]      ts0_GT_high_limit step 1s    [1]      ts0_LT_low_limit step 1s    [2]      ts1_GT_high_limit step 1s    [3]     ts1_LT_low_limit step 1s    [4]     diff_GT_high_limit step 1



; REGISTER gen2_sel_sw_reg Address h90040a34
_gen2_sel_sw_reg = 2416183860 0 32 b00000000000000000000000000000000 RW
gen2_sel_sw = h90040a34 0 5 h0 RW HEX
; Desc_gen2_sel_sw short_self_test_comperator results per self_test steps    [0]      ts0_GT_high_limit step 5s    [1]      ts0_LT_low_limit step 5s    [2]      ts1_GT_high_limit step 5s    [3]     ts1_LT_low_limit step 5s    [4]     diff_GT_high_limit step 5



; REGISTER gen2_sel_pwm_reg Address h90040a38
_gen2_sel_pwm_reg = 2416183864 0 32 b00000000000000000000000000000000 RW
gen2_sel_pwm = h90040a38 0 5 h0 RW HEX
; Desc_gen2_sel_pwm defines the temperature_Sensor clocksts_clk_up_width        [9:0]            - defines the length off high level of ts_clksts_clk_down_width   [19:10]       - defines the length off low level of ts_clksreserve                        [23:20]sMagic_number          [27:24]              Default value – identical for all registerssParity                          [31:28]               Parity calculation on bits[27:0] 



; REGISTER gen2_sel_source_reg Address h90040a3c
_gen2_sel_source_reg = 2416183868 0 32 b00000000000000000000000000000000 RW
gen2_sel_source = h90040a3c 0 2 h0 RW HEX
; Desc_gen2_sel_source defines the wait period for analog power-ypsts_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 



; REGISTER gen3_sel_gpio_reg Address h90040a40
_gen3_sel_gpio_reg = 2416183872 0 32 b00000000000000000000000000000000 RW
gen3_sel_gpio = h90040a40 0 5 h0 RW HEX
; Desc_gen3_sel_gpio ts0_data_error_gen                                                      [11:0]                  each bit set in this field will invert the corresponding bit in the ts0_data to cause intentional error  sReserved                                                                         [22:12]sts0_rdy_error_gen                                                        [23]                     setting this bit will set the ts0_rdy to 1'b0 - for error and timeout testssMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER gen3_sel_sw_reg Address h90040a44
_gen3_sel_sw_reg = 2416183876 0 32 b00000000000000000000000000000000 RW
gen3_sel_sw = h90040a44 0 5 h0 RW HEX
; Desc_gen3_sel_sw tsu_wait_oper                                                                [23:0]                defines # of clocks before funtional safety enters functional mode  sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                              [31:28]               Parity calculation on bits[27:0] 



; REGISTER gen3_sel_pwm_reg Address h90040a48
_gen3_sel_pwm_reg = 2416183880 0 32 b00000000000000000000000000000000 RW
gen3_sel_pwm = h90040a48 0 5 h0 RW HEX
; Desc_gen3_sel_pwm 



; REGISTER gen3_sel_source_reg Address h90040a4c
_gen3_sel_source_reg = 2416183884 0 32 b00000000000000000000000000000000 RW
gen3_sel_source = h90040a4c 0 2 h0 RW HEX
; Desc_gen3_sel_source the created pulse is used to load the configuration(cload)



; REGISTER gen4_sel_gpio_reg Address h90040a50
_gen4_sel_gpio_reg = 2416183888 0 32 b00000000000000000000000000000000 RW
gen4_sel_gpio = h90040a50 0 5 h0 RW HEX
; Desc_gen4_sel_gpio 



; REGISTER gen4_sel_sw_reg Address h90040a54
_gen4_sel_sw_reg = 2416183892 0 32 b00000000000000000000000000000000 RW
gen4_sel_sw = h90040a54 0 5 h0 RW HEX
; Desc_gen4_sel_sw 



; REGISTER gen4_sel_pwm_reg Address h90040a58
_gen4_sel_pwm_reg = 2416183896 0 32 b00000000000000000000000000000000 RW
gen4_sel_pwm = h90040a58 0 5 h0 RW HEX
; Desc_gen4_sel_pwm 



; REGISTER gen4_sel_source_reg Address h90040a5c
_gen4_sel_source_reg = 2416183900 0 32 b00000000000000000000000000000000 RW
gen4_sel_source = h90040a5c 0 2 h0 RW HEX
; Desc_gen4_sel_source 



; REGISTER gen5_sel_gpio_reg Address h90040a60
_gen5_sel_gpio_reg = 2416183904 0 32 b00000000000000000000000000000000 RW
gen5_sel_gpio = h90040a60 0 5 h0 RW HEX
; Desc_gen5_sel_gpio 



; REGISTER gen5_sel_sw_reg Address h90040a64
_gen5_sel_sw_reg = 2416183908 0 32 b00000000000000000000000000000000 RW
gen5_sel_sw = h90040a64 0 5 h0 RW HEX
; Desc_gen5_sel_sw 



; REGISTER gen5_sel_pwm_reg Address h90040a68
_gen5_sel_pwm_reg = 2416183912 0 32 b00000000000000000000000000000000 RW
gen5_sel_pwm = h90040a68 0 5 h0 RW HEX
; Desc_gen5_sel_pwm 



; REGISTER gen5_sel_source_reg Address h90040a6c
_gen5_sel_source_reg = 2416183916 0 32 b00000000000000000000000000000000 RW
gen5_sel_source = h90040a6c 0 2 h0 RW HEX
; Desc_gen5_sel_source 



; REGISTER gen6_sel_gpio_reg Address h90040a70
_gen6_sel_gpio_reg = 2416183920 0 32 b00000000000000000000000000000000 RW
gen6_sel_gpio = h90040a70 0 5 h0 RW HEX
; Desc_gen6_sel_gpio 



; REGISTER gen6_sel_sw_reg Address h90040a74
_gen6_sel_sw_reg = 2416183924 0 32 b00000000000000000000000000000000 RW
gen6_sel_sw = h90040a74 0 5 h0 RW HEX
; Desc_gen6_sel_sw 



; REGISTER gen6_sel_pwm_reg Address h90040a78
_gen6_sel_pwm_reg = 2416183928 0 32 b00000000000000000000000000000000 RW
gen6_sel_pwm = h90040a78 0 5 h0 RW HEX
; Desc_gen6_sel_pwm 



; REGISTER gen6_sel_source_reg Address h90040a7c
_gen6_sel_source_reg = 2416183932 0 32 b00000000000000000000000000000000 RW
gen6_sel_source = h90040a7c 0 2 h0 RW HEX
; Desc_gen6_sel_source 



; REGISTER gen7_sel_gpio_reg Address h90040a80
_gen7_sel_gpio_reg = 2416183936 0 32 b00000000000000000000000000000000 RW
gen7_sel_gpio = h90040a80 0 5 h0 RW HEX
; Desc_gen7_sel_gpio 



; REGISTER gen7_sel_sw_reg Address h90040a84
_gen7_sel_sw_reg = 2416183940 0 32 b00000000000000000000000000000000 RW
gen7_sel_sw = h90040a84 0 5 h0 RW HEX
; Desc_gen7_sel_sw 



; REGISTER gen7_sel_pwm_reg Address h90040a88
_gen7_sel_pwm_reg = 2416183944 0 32 b00000000000000000000000000000000 RW
gen7_sel_pwm = h90040a88 0 5 h0 RW HEX
; Desc_gen7_sel_pwm 



; REGISTER gen7_sel_source_reg Address h90040a8c
_gen7_sel_source_reg = 2416183948 0 32 b00000000000000000000000000000000 RW
gen7_sel_source = h90040a8c 0 2 h0 RW HEX
; Desc_gen7_sel_source 



; REGISTER dup0_sel_dup_reg Address h90040a90
_dup0_sel_dup_reg = 2416183952 0 32 b00000000000000000000000000000000 RW
dup0_sel_duplicate = h90040a90 0 5 h0 RW HEX
; Desc_dup0_sel_duplicate 



; REGISTER dup1_sel_dup_reg Address h90040a94
_dup1_sel_dup_reg = 2416183956 0 32 b00000000000000000000000000000000 RW
dup1_sel_duplicate = h90040a94 0 5 h0 RW HEX
; Desc_dup1_sel_duplicate 



; REGISTER dup2_sel_dup_reg Address h90040a98
_dup2_sel_dup_reg = 2416183960 0 32 b00000000000000000000000000000000 RW
dup2_sel_duplicate = h90040a98 0 5 h0 RW HEX
; Desc_dup2_sel_duplicate 



; REGISTER dup3_sel_dup_reg Address h90040a9c
_dup3_sel_dup_reg = 2416183964 0 32 b00000000000000000000000000000000 RW
dup3_sel_duplicate = h90040a9c 0 5 h0 RW HEX
; Desc_dup3_sel_duplicate 



; REGISTER dup4_sel_dup_reg Address h90040aa0
_dup4_sel_dup_reg = 2416183968 0 32 b00000000000000000000000000000000 RW
dup4_sel_duplicate = h90040aa0 0 5 h0 RW HEX
; Desc_dup4_sel_duplicate 



; REGISTER dup5_sel_dup_reg Address h90040aa4
_dup5_sel_dup_reg = 2416183972 0 32 b00000000000000000000000000000000 RW
dup5_sel_duplicate = h90040aa4 0 5 h0 RW HEX
; Desc_dup5_sel_duplicate 



; REGISTER pwm0_high_cycles_reg Address h90040b00
_pwm0_high_cycles_reg = 2416184064 0 32 b00000000000000000000000000001010 RW
pwm0_high_cycles = h90040b00 0 32 ha RW HEX
; Desc_pwm0_high_cycles 



; REGISTER pwm0_low_cycles_reg Address h90040b04
_pwm0_low_cycles_reg = 2416184068 0 32 b00000000000000000000000000001010 RW
pwm0_low_cycles = h90040b04 0 32 ha RW HEX
; Desc_pwm0_low_cycles 



; REGISTER pwm0_pwm_cfg Address h90040b08
_pwm0_pwm_cfg = 2416184072 0 32 b00000000000000000000000000000000 RW
pwm0_mode = h90040b08 0 2 h0 RW HEX
; Desc_pwm0_mode 
pwm0_enable = h90040b08 2 1 h0 RW BIN
; Desc_pwm0_enable 



; REGISTER pwm1_high_cycles_reg Address h90040b10
_pwm1_high_cycles_reg = 2416184080 0 32 b00000000000000000000000000001010 RW
pwm1_high_cycles = h90040b10 0 32 ha RW HEX
; Desc_pwm1_high_cycles 



; REGISTER pwm1_low_cycles_reg Address h90040b14
_pwm1_low_cycles_reg = 2416184084 0 32 b00000000000000000000000000001010 RW
pwm1_low_cycles = h90040b14 0 32 ha RW HEX
; Desc_pwm1_low_cycles 



; REGISTER pwm1_pwm_cfg Address h90040b18
_pwm1_pwm_cfg = 2416184088 0 32 b00000000000000000000000000000000 RW
pwm1_mode = h90040b18 0 2 h0 RW HEX
; Desc_pwm1_mode 
pwm1_enable = h90040b18 2 1 h0 RW BIN
; Desc_pwm1_enable 



; REGISTER pwm0_ctrl_sel_reg Address h90040b20
_pwm0_ctrl_sel_reg = 2416184096 0 32 b00000000000000000000000000000000 RW
pwm0_ctrl_sel_cfg = h90040b20 0 5 h0 RW HEX
; Desc_pwm0_ctrl_sel_cfg 



; REGISTER pwm1_ctrl_sel_reg Address h90040b24
_pwm1_ctrl_sel_reg = 2416184100 0 32 b00000000000000000000000000000000 RW
pwm1_ctrl_sel_cfg = h90040b24 0 5 h0 RW HEX
; Desc_pwm1_ctrl_sel_cfg 



; REGISTER out0_sel_out_reg Address h90040b2c
_out0_sel_out_reg = 2416184108 0 32 b00000000000000000000000000000000 RW
out0_sel_out = h90040b2c 0 5 h0 RW HEX
; Desc_out0_sel_out 



; REGISTER out1_sel_out_reg Address h90040b30
_out1_sel_out_reg = 2416184112 0 32 b00000000000000000000000000000000 RW
out1_sel_out = h90040b30 0 5 h0 RW HEX
; Desc_out1_sel_out 



; REGISTER out2_sel_out_reg Address h90040b34
_out2_sel_out_reg = 2416184116 0 32 b00000000000000000000000000000000 RW
out2_sel_out = h90040b34 0 5 h0 RW HEX
; Desc_out2_sel_out 



; REGISTER out3_sel_out_reg Address h90040b38
_out3_sel_out_reg = 2416184120 0 32 b00000000000000000000000000000000 RW
out3_sel_out = h90040b38 0 5 h0 RW HEX
; Desc_out3_sel_out 



; REGISTER out4_sel_out_reg Address h90040b3c
_out4_sel_out_reg = 2416184124 0 32 b00000000000000000000000000000000 RW
out4_sel_out = h90040b3c 0 5 h0 RW HEX
; Desc_out4_sel_out 



; REGISTER out5_sel_out_reg Address h90040b40
_out5_sel_out_reg = 2416184128 0 32 b00000000000000000000000000000000 RW
out5_sel_out = h90040b40 0 5 h0 RW HEX
; Desc_out5_sel_out 



; REGISTER out6_sel_out_reg Address h90040b44
_out6_sel_out_reg = 2416184132 0 32 b00000000000000000000000000000000 RW
out6_sel_out = h90040b44 0 5 h0 RW HEX
; Desc_out6_sel_out 



; REGISTER out7_sel_out_reg Address h90040b48
_out7_sel_out_reg = 2416184136 0 32 b00000000000000000000000000000000 RW
out7_sel_out = h90040b48 0 5 h0 RW HEX
; Desc_out7_sel_out number of cycle where pwm is high



; REGISTER out8_sel_out_reg Address h90040b4c
_out8_sel_out_reg = 2416184140 0 32 b00000000000000000000000000000000 RW
out8_sel_out = h90040b4c 0 5 h0 RW HEX
; Desc_out8_sel_out number of cycle where pwm is high



; REGISTER out9_sel_out_reg Address h90040b50
_out9_sel_out_reg = 2416184144 0 32 b00000000000000000000000000000000 RW
out9_sel_out = h90040b50 0 5 h0 RW HEX
; Desc_out9_sel_out the pwm stm - for debug



; REGISTER out10_sel_out_reg Address h90040b54
_out10_sel_out_reg = 2416184148 0 32 b00000000000000000000000000000000 RW
out10_sel_out = h90040b54 0 5 h0 RW HEX
; Desc_out10_sel_out number of cycle where pwm is high



; REGISTER out11_sel_out_reg Address h90040b58
_out11_sel_out_reg = 2416184152 0 32 b00000000000000000000000000000000 RW
out11_sel_out = h90040b58 0 5 h0 RW HEX
; Desc_out11_sel_out number of cycle where pwm is high



; REGISTER msio_ctrl_reg1 Address h90040c00
_msio_ctrl_reg1 = 2416184320 0 32 b00000001000010000100000000000000 RW
master_div_ratio = h90040c00 0 10 h0 RW HEX
; Desc_master_div_ratio the pwm stm - for debug
msio_rx_enable = h90040c00 10 1 h0 RW BIN
; Desc_msio_rx_enable the pwm stm - for debug
msio_tx_enable = h90040c00 11 1 h0 RW BIN
; Desc_msio_tx_enable the pwm stm - for debug
ayalon1_mode = h90040c00 12 1 h0 RW BIN
; Desc_ayalon1_mode the pwm stm - for debug
clk_scale = h90040c00 14 4 h1 RW HEX
; Desc_clk_scale the pwm stm - for debug
ts_en = h90040c00 19 1 h1 RW BIN
; Desc_ts_en the pwm stm - for debug
testbus_sel = h90040c00 20 4 h0 RW HEX
; Desc_testbus_sel the pwm stm - for debug
ts_chk_bypass = h90040c00 24 1 h1 RW BIN
; Desc_ts_chk_bypass the pwm stm - for debug



; REGISTER hdbt_gen_cfg Address h90040c04
_hdbt_gen_cfg = 2416184324 0 32 b00000000011010000011010100000011 RW
hdbt_sid = h90040c04 0 8 h3 RW HEX
; Desc_hdbt_sid number of cycle where pwm is high
hdbt_future = h90040c04 8 1 h1 RW BIN
; Desc_hdbt_future number of cycle where pwm is high
hdbt_prot = h90040c04 9 1 h0 RW BIN
; Desc_hdbt_prot number of cycle where pwm is high
hdbt_ptype = h90040c04 10 4 hd RW HEX
; Desc_hdbt_ptype number of cycle where pwm is high
hdbt_ext = h90040c04 14 3 h0 RW HEX
; Desc_hdbt_ext number of cycle where pwm is high
hdbt_ext_data = h90040c04 17 2 h0 RW HEX
; Desc_hdbt_ext_data number of cycle where pwm is high
hdbt_prio = h90040c04 19 2 h1 RW HEX
; Desc_hdbt_prio number of cycle where pwm is high
hdbt_qual = h90040c04 21 2 h3 RW HEX
; Desc_hdbt_qual number of cycle where pwm is high
hdbt_pam = h90040c04 23 2 h0 RW HEX
; Desc_hdbt_pam number of cycle where pwm is high
hdbt_pkt_gen_sync = h90040c04 28 2 h0 RW HEX
; Desc_hdbt_pkt_gen_sync number of cycle where pwm is high
hdbt_pkt_gen_en = h90040c04 30 1 h0 RW BIN
; Desc_hdbt_pkt_gen_en number of cycle where pwm is high



; REGISTER hdbt_prs_cfg Address h90040c08
_hdbt_prs_cfg = 2416184328 0 32 b00000000000000000000000000000000 RW
hdbt_data_lsb_first = h90040c08 0 1 h0 RW BIN
; Desc_hdbt_data_lsb_first number of cycle where pwm is high
hdbt_ignore_crc = h90040c08 1 1 h0 RW BIN
; Desc_hdbt_ignore_crc number of cycle where pwm is high
hdbt_nibble_mode = h90040c08 2 1 h0 RW BIN
; Desc_hdbt_nibble_mode number of cycle where pwm is high
hdbt_pkt_prs_en = h90040c08 27 1 h0 RW BIN
; Desc_hdbt_pkt_prs_en number of cycle where pwm is high



; REGISTER aphy_gen_cfg Address h90040c0c
_aphy_gen_cfg = 2416184332 0 32 b00000000000000000000010000000000 RW
Apkt_type = h90040c0c 0 4 h0 RW HEX
; Desc_Apkt_type pwm mode:s00 - free runnings01 - gateds10 - one shot
Apkt_Bad = h90040c0c 4 1 h0 RW BIN
; Desc_Apkt_Bad pwm mode:s00 - free runnings01 - gateds10 - one shot
Apkt_QoS = h90040c0c 5 2 h0 RW HEX
; Desc_Apkt_QoS pwm mode:s00 - free runnings01 - gateds10 - one shot
Apkt_prio = h90040c0c 7 2 h0 RW HEX
; Desc_Apkt_prio pwm mode:s00 - free runnings01 - gateds10 - one shot
Apkt_order = h90040c0c 9 2 h2 RW HEX
; Desc_Apkt_order pwm mode:s00 - free runnings01 - gateds10 - one shot
Apkt_alei = h90040c0c 11 3 h0 RW HEX
; Desc_Apkt_alei pwm mode:s00 - free runnings01 - gateds10 - one shot
Apkt_Taddr = h90040c0c 14 8 h0 RW HEX
; Desc_Apkt_Taddr pwm mode:s00 - free runnings01 - gateds10 - one shot
ApktGen_enable = h90040c0c 22 1 h0 RW BIN
; Desc_ApktGen_enable pwm mode:s00 - free runnings01 - gateds10 - one shot



; REGISTER aphy_prs_cfg Address h90040c10
_aphy_prs_cfg = 2416184336 0 32 b00000000000000000000000000000010 RW
ApktParseEn = h90040c10 0 1 h0 RW BIN
; Desc_ApktParseEn the pwm stm - for debug
DropBadPktEn = h90040c10 1 1 h1 RW BIN
; Desc_DropBadPktEn the pwm stm - for debug



; REGISTER rx_cfg_1 Address h90040c18
_rx_cfg_1 = 2416184344 0 32 b00000000000000000001011000111111 RW
rx_last_state = h90040c18 0 3 h7 RW HEX
; Desc_rx_last_state 
rx_stm_end = h90040c18 3 5 h7 RW HEX
; Desc_rx_stm_end 
rx_fifo_threshold = h90040c18 8 5 h16 RW HEX
; Desc_rx_fifo_threshold 
disable_rx_clk_corr = h90040c18 14 1 h0 RW BIN
; Desc_disable_rx_clk_corr 



; REGISTER filter_reg Address h90040c1c
_filter_reg = 2416184348 0 32 b00000000000000000000000001000001 RW
filter_en = h90040c1c 0 1 h1 RW BIN
; Desc_filter_en 
filter_wait = h90040c1c 1 16 h20 RW HEX
; Desc_filter_wait 



; REGISTER ts_offset_reg Address h90040c20
_ts_offset_reg = 2416184352 0 32 b00000000000000000000000000010101 RW
ts_offset = h90040c20 0 16 h15 RW HEX
; Desc_ts_offset 



; REGISTER rx_sync_reg Address h90040c24
_rx_sync_reg = 2416184356 0 32 b00000000000000000000000000000000 RW
rx_sync_mode = h90040c24 0 32 h0 RW HEX
; Desc_rx_sync_mode 



; REGISTER rx_invert_reg Address h90040c28
_rx_invert_reg = 2416184360 0 32 b00000000000000000000000000000000 RW
rx_invert = h90040c28 0 32 h0 RW HEX
; Desc_rx_invert 



; REGISTER bypass_filter_reg Address h90040c2c
_bypass_filter_reg = 2416184364 0 32 b00000000000000000000000000000000 RW
bypass_filter_cfg = h90040c2c 0 32 h0 RW HEX
; Desc_bypass_filter_cfg 



; REGISTER rx_state00_reg Address h90040c30
_rx_state00_reg = 2416184368 0 32 b00000000000000000000000000000000 RW
rx_state00_data = h90040c30 0 32 h0 RW HEX
; Desc_rx_state00_data 



; REGISTER rx_state01_reg Address h90040c34
_rx_state01_reg = 2416184372 0 32 b00000000000000000000000000000000 RW
rx_state01_data = h90040c34 0 32 h0 RW HEX
; Desc_rx_state01_data 



; REGISTER rx_state02_reg Address h90040c38
_rx_state02_reg = 2416184376 0 32 b00000000000000000000000000000000 RW
rx_state02_data = h90040c38 0 32 h0 RW HEX
; Desc_rx_state02_data 



; REGISTER rx_state03_reg Address h90040c3c
_rx_state03_reg = 2416184380 0 32 b00000000000000000000000000000000 RW
rx_state03_data = h90040c3c 0 32 h0 RW HEX
; Desc_rx_state03_data 



; REGISTER rx_state04_reg Address h90040c40
_rx_state04_reg = 2416184384 0 32 b00000000000000000000000000000000 RW
rx_state04_data = h90040c40 0 32 h0 RW HEX
; Desc_rx_state04_data 



; REGISTER rx_state05_reg Address h90040c44
_rx_state05_reg = 2416184388 0 32 b00000000000000000000000000000000 RW
rx_state05_data = h90040c44 0 32 h0 RW HEX
; Desc_rx_state05_data 



; REGISTER rx_state06_reg Address h90040c48
_rx_state06_reg = 2416184392 0 32 b00000000000000000000000000000000 RW
rx_state06_data = h90040c48 0 32 h0 RW HEX
; Desc_rx_state06_data 



; REGISTER rx_state07_reg Address h90040c4c
_rx_state07_reg = 2416184396 0 32 b00000000000000000000000000000000 RW
rx_state07_data = h90040c4c 0 32 h0 RW HEX
; Desc_rx_state07_data 



; REGISTER msio_tx_cfg1 Address h90040c50
_msio_tx_cfg1 = 2416184400 0 32 b00111111000000000000000000000000 RW
cfg_tx_ram_ls = h90040c50 0 1 h0 RW BIN
; Desc_cfg_tx_ram_ls 
cfg_tx_ram_ds = h90040c50 1 1 h0 RW BIN
; Desc_cfg_tx_ram_ds 
cfg_tx_ram_sd = h90040c50 2 1 h0 RW BIN
; Desc_cfg_tx_ram_sd 
tx_sel_last_data = h90040c50 5 1 h0 RW BIN
; Desc_tx_sel_last_data 
tx_idle_const = h90040c50 6 1 h0 RW BIN
; Desc_tx_idle_const 
disable_tx_clk_corr = h90040c50 14 1 h0 RW BIN
; Desc_disable_tx_clk_corr 
tx_last_state = h90040c50 24 3 h7 RW HEX
; Desc_tx_last_state 
tx_stm_end = h90040c50 27 5 h7 RW HEX
; Desc_tx_stm_end 



; REGISTER msio_tx_fifo_thr_reg Address h90040c54
_msio_tx_fifo_thr_reg = 2416184404 0 32 b00000000000000000000000001010000 RW
tx_fifo_threshold = h90040c54 0 8 h50 RW HEX
; Desc_tx_fifo_threshold 



; REGISTER max_rx_fifo_reg Address h90040c58
_max_rx_fifo_reg = 2416184408 0 32 b00000000000000000000000000001000 RW
max_rx_fifo = h90040c58 0 5 h8 RW HEX
; Desc_max_rx_fifo 



; REGISTER tx_invert_reg Address h90040c5c
_tx_invert_reg = 2416184412 0 32 b00000000000000000000000000000000 RW
tx_invert = h90040c5c 0 32 h0 RW HEX
; Desc_tx_invert 



; REGISTER tx_state00_reg Address h90040c60
_tx_state00_reg = 2416184416 0 32 b00000000000000000000000000000000 RW
tx_state00_data = h90040c60 0 32 h0 RW HEX
; Desc_tx_state00_data 



; REGISTER tx_state01_reg Address h90040c64
_tx_state01_reg = 2416184420 0 32 b00000000000000000000000000000000 RW
tx_state01_data = h90040c64 0 32 h0 RW HEX
; Desc_tx_state01_data Reset For Specific Block



; REGISTER tx_state02_reg Address h90040c68
_tx_state02_reg = 2416184424 0 32 b00000000000000000000000000000000 RW
tx_state02_data = h90040c68 0 32 h0 RW HEX
; Desc_tx_state02_data Reset For Specific Block



; REGISTER tx_state03_reg Address h90040c6c
_tx_state03_reg = 2416184428 0 32 b00000000000000000000000000000000 RW
tx_state03_data = h90040c6c 0 32 h0 RW HEX
; Desc_tx_state03_data Reset For Specific Block



; REGISTER tx_state04_reg Address h90040c70
_tx_state04_reg = 2416184432 0 32 b00000000000000000000000000000000 RW
tx_state04_data = h90040c70 0 32 h0 RW HEX
; Desc_tx_state04_data Reset For Specific Block



; REGISTER tx_state05_reg Address h90040c74
_tx_state05_reg = 2416184436 0 32 b00000000000000000000000000000000 RW
tx_state05_data = h90040c74 0 32 h0 RW HEX
; Desc_tx_state05_data Reset For Specific Block



; REGISTER tx_state06_reg Address h90040c78
_tx_state06_reg = 2416184440 0 32 b00000000000000000000000000000000 RW
tx_state06_data = h90040c78 0 32 h0 RW HEX
; Desc_tx_state06_data Reset For Specific Block



; REGISTER tx_state07_reg Address h90040c7c
_tx_state07_reg = 2416184444 0 32 b00000000000000000000000000000000 RW
tx_state07_data = h90040c7c 0 32 h0 RW HEX
; Desc_tx_state07_data for SW use



; REGISTER msio_defaults_reg Address h90040c80
_msio_defaults_reg = 2416184448 0 32 b00000000000000000000000000000000 RW
msio_defaults = h90040c80 0 32 h0 RW HEX
; Desc_msio_defaults for SW use



; REGISTER ts_threshold_reg Address h90040c9c
_ts_threshold_reg = 2416184476 0 32 b00000000000000000000000000000000 RW
ts_threshold = h90040c9c 0 22 h0 RW HEX
; Desc_ts_threshold for SW use



; REGISTER int_mask_reg Address h90040ca0
_int_mask_reg = 2416184480 0 32 b00000000000000000000000000000000 RW
int_mask = h90040ca0 0 24 h0 RW HEX
; Desc_int_mask for SW use
tx_fifo_underflow = h90040ca0 0 1 h0 RW BIN
tx_fifo_overflow = h90040ca0 1 1 h0 RW BIN
rx_fifo_underflow = h90040ca0 2 1 h0 RW BIN
rx_fifo_overflow = h90040ca0 3 1 h0 RW BIN
validown_int = h90040ca0 4 1 h0 RW BIN
ApktParseError = h90040ca0 5 1 h0 RW BIN
msio_data_update = h90040ca0 6 1 h0 RW BIN
ts_err = h90040ca0 7 1 h0 RW BIN
msio_data_tx = h90040ca0 8 16 h0 RW HEX



; REGISTER msio_ka_timeout Address h90040cb0
_msio_ka_timeout = 2416184496 0 32 b01110101000000000000000000100000 RW
ka_timeout_reg = h90040cb0 0 32 h75000020 RW HEX
; Desc_ka_timeout_reg for SW use
ka_timeout_cfg = h90040cb0 0 24 h20 RW HEX
ka_timeout_magic_num = h90040cb0 24 4 h5 RW HEX
ka_timeout_parity = h90040cb0 28 4 h7 RW HEX



; REGISTER msio_ka_timeout_gen Address h90040cb4
_msio_ka_timeout_gen = 2416184500 0 32 b01110101000000000000000000100000 RW
ka_timeout_gen_reg = h90040cb4 0 32 h75000020 RW HEX
; Desc_ka_timeout_gen_reg for SW use
ka_timeout_gen_cfg = h90040cb4 0 24 h20 RW HEX
ka_timeout_gen_magic_num = h90040cb4 24 4 h5 RW HEX
ka_timeout_gen_parity = h90040cb4 28 4 h7 RW HEX



; REGISTER msio_safety_units_en Address h90040cb8
_msio_safety_units_en = 2416184504 0 32 b01100101000000000000001111111111 RW
safety_units_en_reg = h90040cb8 0 32 h650003ff RW HEX
; Desc_safety_units_en_reg for SW use
rx_parity_check_en = h90040cb8 0 1 h1 RW BIN
timer_parity_en = h90040cb8 1 1 h1 RW BIN
ka_check_en = h90040cb8 2 1 h1 RW BIN
mc_check_en = h90040cb8 3 1 h1 RW BIN
tx_parity_check_en = h90040cb8 4 1 h1 RW BIN
crc_check_en = h90040cb8 5 4 hf RW HEX
safety_reg_check_en = h90040cb8 9 1 h1 RW BIN
reserved = h90040cb8 10 12 h0 RW HEX
sf_en = h90040cb8 22 1 h0 RW BIN
ka_timeout_gen_en = h90040cb8 23 1 h0 RW BIN
safety_units_en_magic_num = h90040cb8 24 4 h5 RW HEX
safety_units_en_parity = h90040cb8 28 4 h6 RW HEX



; REGISTER msio_wait_oper Address h90040cbc
_msio_wait_oper = 2416184508 0 32 b11110101000000000000000000001010 RW
wait_oper_reg = h90040cbc 0 32 hf500000a RW HEX
; Desc_wait_oper_reg for SW use
wait_oper_cfg = h90040cbc 0 24 ha RW HEX
wait_oper_magic_num = h90040cbc 24 4 h5 RW HEX
wait_oper_parity = h90040cbc 28 4 hf RW HEX



; REGISTER cfg_reg Address h90040d00
_cfg_reg = 2416184576 0 32 b00000000000000000000000000000000 RW
host_sel = h90040d00 0 1 h0 RW BIN
; Desc_host_sel for SW use
i2c_reset = h90040d00 1 1 h0 RW BIN
; Desc_i2c_reset for SW use



; REGISTER gpio_one_ch_reset_n_reg Address h90040d04
_gpio_one_ch_reset_n_reg = 2416184580 0 32 b00000000000000000000000000000111 RW
gpio_one_ch_reset_n = h90040d04 0 3 h7 RW HEX
; Desc_gpio_one_ch_reset_n for SW use
matrix_rx_reset_n = h90040d04 0 1 h1 RW BIN
>>DESC matrix_rx_reset_n = 2, b0, reset, b1, enable
matrix_tx_reset_n = h90040d04 1 1 h1 RW BIN
>>DESC matrix_tx_reset_n = 2, b0, reset, b1, enable
msio_adpt_reset_n = h90040d04 2 1 h1 RW BIN
>>DESC msio_adpt_reset_n = 2, b0, reset, b1, enable



; REGISTER VirtualFIFO_used_status Address h90040790
_VirtualFIFO_used_status = 2416183184 0 32 b00000000000000000000000000000000 SC
VirtualFIFO_used_status = h90040790 0 32 h0 SC HEX



; REGISTER ddc_mst_fifo_used_reg Address h9007001c
_ddc_mst_fifo_used_reg = 2416377884 0 32 b00000000000000000000000000000000 SC
ddc_mst_fifo_used = h9007001c 0 5 h0 SC HEX
; Desc_ddc_mst_fifo_used for SW use



; REGISTER ddc_slv_data_out_write_used_reg Address h90070020
_ddc_slv_data_out_write_used_reg = 2416377888 0 32 b00000000000000000000000000000000 SC
ddc_slv_data_out_write_used = h90070020 0 5 h0 SC HEX
; Desc_ddc_slv_data_out_write_used for SW use



; REGISTER ddc_slv_data_in_read_used_reg Address h90070024
_ddc_slv_data_in_read_used_reg = 2416377892 0 32 b00000000000000000000000000000000 SC
ddc_slv_data_in_read_used = h90070024 0 5 h0 SC HEX
; Desc_ddc_slv_data_in_read_used for SW use



; REGISTER ddc_fifo_read_slv Address h900700d4
_ddc_fifo_read_slv = 2416378068 0 32 b00000000000000000000000000000000 SC
ddc_slv_mon_data = h900700d4 0 10 h0 SC HEX
; Desc_ddc_slv_mon_data for SW use



; REGISTER ddc_fifo_status Address h900700d8
_ddc_fifo_status = 2416378072 0 32 b00000000000000000000000000000000 SC
ddc_slv_mon_used = h900700d8 0 5 h0 SC HEX
; Desc_ddc_slv_mon_used for SW use
ddc_slv_mon_req = h900700d8 5 1 h0 SC BIN
; Desc_ddc_slv_mon_req for SW use
ddc_slv_gen_used = h900700d8 7 5 h0 SC HEX
; Desc_ddc_slv_gen_used for SW use
ddc_slv_gen_req = h900700d8 13 1 h0 SC BIN
; Desc_ddc_slv_gen_req for SW use
ddc_mst_mon_used = h900700d8 16 5 h0 SC HEX
; Desc_ddc_mst_mon_used for SW use
ddc_mst_mon_req = h900700d8 21 1 h0 SC BIN
; Desc_ddc_mst_mon_req for SW use
ddc_mst_gen_used = h900700d8 24 5 h0 SC HEX
; Desc_ddc_mst_gen_used for SW use
ddc_mst_gen_req = h900700d8 29 1 h0 SC BIN
; Desc_ddc_mst_gen_req for SW use
ddc_slv_stop_int = h900700d8 30 1 h0 SC BIN
; Desc_ddc_slv_stop_int for SW use
ddc_slv_used_int = h900700d8 31 1 h0 SC BIN
; Desc_ddc_slv_used_int for SW use



; REGISTER ddc_fifo_read_mst Address h900700e0
_ddc_fifo_read_mst = 2416378080 0 32 b00000000000000000000000000000000 SC
ddc_mst_mon_data = h900700e0 0 9 h0 SC HEX
; Desc_ddc_mst_mon_data for SW use



; REGISTER I2c_slv_stm_status Address h900700f0
_I2c_slv_stm_status = 2416378096 0 32 b00000000000000000000000000000000 RO
slv_stm = h900700f0 0 6 h0 RO HEX
; Desc_slv_stm for SW use
hdcp_stm = h900700f0 8 3 h0 RO HEX
; Desc_hdcp_stm for SW use
mst_stm = h900700f0 12 5 h0 RO HEX
; Desc_mst_stm for SW use
ddc_stm = h900700f0 20 6 h0 RO HEX
; Desc_ddc_stm for SW use
data_stm = h900700f0 26 3 h0 RO HEX
; Desc_data_stm for SW use
byte_stm = h900700f0 29 3 h0 RO HEX
; Desc_byte_stm for SW use



; REGISTER int_i2c_mst_status_reg Address h90070104
_int_i2c_mst_status_reg = 2416378116 0 32 b00000000000000000000000000000000 RO
int_i2c_mst_status = h90070104 0 9 h0 RO HEX
; Desc_int_i2c_mst_status For FPGA use (AFE TC status)



; REGISTER fusa_status_reg Address h9007010c
_fusa_status_reg = 2416378124 0 32 b00000000000000000000000000000000 SC
fusa_reg_status = h9007010c 0 16 h0 SC HEX
; Desc_fusa_reg_status For FPGA use (AFE TC status)
fusa_fail_status = h9007010c 16 16 h0 SC HEX
; Desc_fusa_fail_status For FPGA use (AFE TC status)



; REGISTER err_apkt_int_status_reg Address h90070110
_err_apkt_int_status_reg = 2416378128 0 32 b00000000000000000000000000000000 SC
err_apkt_int_status = h90070110 0 4 h0 SC HEX
; Desc_err_apkt_int_status For FPGA use (AFE TC configuration)



; REGISTER validown_cnt_reg Address h90070114
_validown_cnt_reg = 2416378132 0 32 b00000000000000000000000000000000 SC
validown_cnt = h90070114 0 8 h0 SC HEX
; Desc_validown_cnt For FPGA use (AFE TC configuration)



; REGISTER I2c_mst_stm_status Address h90070118
_I2c_mst_stm_status = 2416378136 0 32 b00000000000000000000000000000000 RO
smif_main_stm = h90070118 0 3 h0 RO HEX
; Desc_smif_main_stm sys_clk divider value - division rate from AFE 1G clock to drive the chip's sys_clk. In order to derive 333MHz from 1GHz, configuration of value 2 means division by 3
pars_fsm = h90070118 3 5 h0 RO HEX
; Desc_pars_fsm sys_clk divider value - division rate from AFE 1G clock to drive the chip's sys_clk. In order to derive 333MHz from 1GHz, configuration of value 2 means division by 3



; REGISTER i2c_slv_int_clr Address h90070108
_i2c_slv_int_clr = 2416378120 0 32 b00000000000000000000000000000000 SC



; REGISTER I2c_mstr_ddc_snk_reg_0 Address h90070000
_I2c_mstr_ddc_snk_reg_0 = 2416377856 0 32 b00111100000000000000000000000000 RW
ddc_global_pt_disable = h90070000 0 1 h0 RW BIN
; Desc_ddc_global_pt_disable generate interrupt by SW. bit 0 corresponds to bit 5 (i2c slave int) in the VPE0 vector, and so on up. Accordingly bits 59:63 are not used.
ddc_global_hw_ack = h90070000 1 2 h0 RW HEX
; Desc_ddc_global_hw_ack generate interrupt by SW. bit 0 corresponds to bit 5 (i2c slave int) in the VPE0 vector, and so on up. Accordingly bits 59:63 are not used.
ddc_wd_max_cnt = h90070000 3 20 h0 RW HEX
; Desc_ddc_wd_max_cnt generate interrupt by SW. bit 0 corresponds to bit 5 (i2c slave int) in the VPE0 vector, and so on up. Accordingly bits 59:63 are not used.
ddc_wd_en = h90070000 23 1 h0 RW BIN
; Desc_ddc_wd_en generate interrupt by SW. bit 0 corresponds to bit 5 (i2c slave int) in the VPE0 vector, and so on up. Accordingly bits 59:63 are not used.
ddc_data_idle_en = h90070000 24 1 h0 RW BIN
; Desc_ddc_data_idle_en generate interrupt by SW. bit 0 corresponds to bit 5 (i2c slave int) in the VPE0 vector, and so on up. Accordingly bits 59:63 are not used.
ddc_data_pre_en = h90070000 25 1 h0 RW BIN
; Desc_ddc_data_pre_en generate interrupt by SW. bit 0 corresponds to bit 5 (i2c slave int) in the VPE0 vector, and so on up. Accordingly bits 59:63 are not used.
ddc_delay_sda = h90070000 26 6 hf RW HEX
; Desc_ddc_delay_sda generate interrupt by SW. bit 0 corresponds to bit 5 (i2c slave int) in the VPE0 vector, and so on up. Accordingly bits 59:63 are not used.



; REGISTER I2c_mstr_ddc_snk_reg_1 Address h90070004
_I2c_mstr_ddc_snk_reg_1 = 2416377860 0 32 b00011111001001000000001100011111 RW
ddc_unit = h90070004 0 8 h1f RW HEX
; Desc_ddc_unit read which interrupts set in interrupt controller bits [63:32]  for VPE0
ddc_thd_dat = h90070004 8 8 h3 RW HEX
; Desc_ddc_thd_dat read which interrupts set in interrupt controller bits [63:32]  for VPE0
ddc_tlow = h90070004 16 8 h24 RW HEX
; Desc_ddc_tlow read which interrupts set in interrupt controller bits [63:32]  for VPE0
ddc_tsu_sto = h90070004 24 8 h1f RW HEX
; Desc_ddc_tsu_sto read which interrupts set in interrupt controller bits [63:32]  for VPE0



; REGISTER I2c_mstr_ddc_snk_reg_2 Address h90070008
_I2c_mstr_ddc_snk_reg_2 = 2416377864 0 32 b00000010001001000001111100100100 RW
ddc_tbuf = h90070008 0 8 h24 RW HEX
; Desc_ddc_tbuf interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 1 to 5
ddc_thd_sta = h90070008 8 8 h1f RW HEX
; Desc_ddc_thd_sta interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 1 to 5
ddc_tsu_sta = h90070008 16 8 h24 RW HEX
; Desc_ddc_tsu_sta interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 1 to 5
ddc_tsu_dat = h90070008 24 8 h2 RW HEX
; Desc_ddc_tsu_dat interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 1 to 5



; REGISTER I2c_mstr_ddc_snk_reg_3 Address h9007000c
_I2c_mstr_ddc_snk_reg_3 = 2416377868 0 27 b00000001111000000100111000011111 RW
ddc_thigh = h9007000c 0 8 h1f RW HEX
; Desc_ddc_thigh interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 26 to 30
ddc_tscl = h9007000c 8 8 h4e RW HEX
; Desc_ddc_tscl interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 26 to 30
ddc_delay_scl = h9007000c 21 6 hf RW HEX
; Desc_ddc_delay_scl interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 26 to 30



; REGISTER I2c_mstr_pkt_gen_reg Address h90070010
_I2c_mstr_pkt_gen_reg = 2416377872 0 2 b00000000000000000000000000000000 RW
Pkt_Gen_En = h90070010 0 1 h0 RW BIN
; Desc_Pkt_Gen_En interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 56 to 60



; REGISTER I2c_mstr_pkt_parse_reg Address h90070014
_I2c_mstr_pkt_parse_reg = 2416377876 0 2 b00000000000000000000000000000000 RW
pkt_parse_en = h90070014 0 1 h0 RW BIN
; Desc_pkt_parse_en interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 6 to 10
pkt_parse_ignore_crc = h90070014 1 1 h0 RW BIN
; Desc_pkt_parse_ignore_crc interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 6 to 10



; REGISTER I2c_mstr_config_reg_0 Address h90070018
_I2c_mstr_config_reg_0 = 2416377880 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[29:0] = h90070018 0 30 h0 RW HEX
; Desc_I2c_mstr_config[29:0] interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 26 to 30
I2c_mstr_config_0 = h90070018 0 5 h0 RW HEX
I2c_mstr_config_1 = h90070018 5 5 h0 RW HEX
I2c_mstr_config_2 = h90070018 10 5 h0 RW HEX
I2c_mstr_config_3 = h90070018 15 5 h0 RW HEX
I2c_mstr_config_4 = h90070018 20 5 h0 RW HEX
I2c_mstr_config_5 = h90070018 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_1 Address h9007002c
_I2c_mstr_config_reg_1 = 2416377900 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[59:30] = h9007002c 0 30 h0 RW HEX
; Desc_I2c_mstr_config[59:30] Read/Write Current Data on the GPIO pins
I2c_mstr_config_6 = h9007002c 0 5 h0 RW HEX
I2c_mstr_config_7 = h9007002c 5 5 h0 RW HEX
I2c_mstr_config_8 = h9007002c 10 5 h0 RW HEX
I2c_mstr_config_9 = h9007002c 15 5 h0 RW HEX
I2c_mstr_config_10 = h9007002c 20 5 h0 RW HEX
I2c_mstr_config_11 = h9007002c 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_2 Address h90070030
_I2c_mstr_config_reg_2 = 2416377904 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[89:60] = h90070030 0 30 h0 RW HEX
; Desc_I2c_mstr_config[89:60] GPIO Interrupts status and clear upon write
I2c_mstr_config_12 = h90070030 0 5 h0 RW HEX
I2c_mstr_config_13 = h90070030 5 5 h0 RW HEX
I2c_mstr_config_14 = h90070030 10 5 h0 RW HEX
I2c_mstr_config_15 = h90070030 15 5 h0 RW HEX
I2c_mstr_config_16 = h90070030 20 5 h0 RW HEX
I2c_mstr_config_17 = h90070030 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_3 Address h90070034
_I2c_mstr_config_reg_3 = 2416377908 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[119:90] = h90070034 0 30 h0 RW HEX
; Desc_I2c_mstr_config[119:90] 0 = works as GPIO. 1 = PAD's other option (in case that there's any)
I2c_mstr_config_18 = h90070034 0 5 h0 RW HEX
I2c_mstr_config_19 = h90070034 5 5 h0 RW HEX
I2c_mstr_config_20 = h90070034 10 5 h0 RW HEX
I2c_mstr_config_21 = h90070034 15 5 h0 RW HEX
I2c_mstr_config_22 = h90070034 20 5 h0 RW HEX
I2c_mstr_config_23 = h90070034 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_4 Address h90070038
_I2c_mstr_config_reg_4 = 2416377912 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[149:120] = h90070038 0 30 h0 RW HEX
; Desc_I2c_mstr_config[149:120] 
I2c_mstr_config_24 = h90070038 0 5 h0 RW HEX
I2c_mstr_config_25 = h90070038 5 5 h0 RW HEX
I2c_mstr_config_26 = h90070038 10 5 h0 RW HEX
I2c_mstr_config_27 = h90070038 15 5 h0 RW HEX
I2c_mstr_config_28 = h90070038 20 5 h0 RW HEX
I2c_mstr_config_29 = h90070038 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_5 Address h9007003c
_I2c_mstr_config_reg_5 = 2416377916 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[179:150] = h9007003c 0 30 h0 RW HEX
; Desc_I2c_mstr_config[179:150] Drive Strength - Default 00 - weakest drive
I2c_mstr_config_30 = h9007003c 0 5 h0 RW HEX
I2c_mstr_config_31 = h9007003c 5 5 h0 RW HEX
I2c_mstr_config_32 = h9007003c 10 5 h0 RW HEX
I2c_mstr_config_33 = h9007003c 15 5 h0 RW HEX
I2c_mstr_config_34 = h9007003c 20 5 h0 RW HEX
I2c_mstr_config_35 = h9007003c 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_6 Address h90070040
_I2c_mstr_config_reg_6 = 2416377920 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[209:180] = h90070040 0 30 h0 RW HEX
; Desc_I2c_mstr_config[209:180] Drive Strength - Default 00 - weakest drive
I2c_mstr_config_36 = h90070040 0 5 h0 RW HEX
I2c_mstr_config_37 = h90070040 5 5 h0 RW HEX
I2c_mstr_config_38 = h90070040 10 5 h0 RW HEX
I2c_mstr_config_39 = h90070040 15 5 h0 RW HEX
I2c_mstr_config_40 = h90070040 20 5 h0 RW HEX
I2c_mstr_config_41 = h90070040 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_7 Address h90070044
_I2c_mstr_config_reg_7 = 2416377924 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[239:210] = h90070044 0 30 h0 RW HEX
; Desc_I2c_mstr_config[239:210] generate interrupt by SW. bit 0 corresponds to bit 5 (i2c slave int) in the VPE1 vector, and so on up. Accordingly bits 59:63 are not used.
I2c_mstr_config_42 = h90070044 0 5 h0 RW HEX
I2c_mstr_config_43 = h90070044 5 5 h0 RW HEX
I2c_mstr_config_44 = h90070044 10 5 h0 RW HEX
I2c_mstr_config_45 = h90070044 15 5 h0 RW HEX
I2c_mstr_config_46 = h90070044 20 5 h0 RW HEX
I2c_mstr_config_47 = h90070044 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_8 Address h90070048
_I2c_mstr_config_reg_8 = 2416377928 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[269:240] = h90070048 0 30 h0 RW HEX
; Desc_I2c_mstr_config[269:240] GPIO interrupt can be invoked on different edgess0:rise/fall edge-depends on previous reg configuration, s1: both rise and fall edge
I2c_mstr_config_48 = h90070048 0 5 h0 RW HEX
I2c_mstr_config_49 = h90070048 5 5 h0 RW HEX
I2c_mstr_config_50 = h90070048 10 5 h0 RW HEX
I2c_mstr_config_51 = h90070048 15 5 h0 RW HEX
I2c_mstr_config_52 = h90070048 20 5 h0 RW HEX
I2c_mstr_config_53 = h90070048 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_9 Address h9007004c
_I2c_mstr_config_reg_9 = 2416377932 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[299:270] = h9007004c 0 30 h0 RW HEX
; Desc_I2c_mstr_config[299:270] read data from receive rif uart FIFO
I2c_mstr_config_54 = h9007004c 0 5 h0 RW HEX
I2c_mstr_config_55 = h9007004c 5 5 h0 RW HEX
I2c_mstr_config_56 = h9007004c 10 5 h0 RW HEX
I2c_mstr_config_57 = h9007004c 15 5 h0 RW HEX
I2c_mstr_config_58 = h9007004c 20 5 h0 RW HEX
I2c_mstr_config_59 = h9007004c 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_10 Address h90070050
_I2c_mstr_config_reg_10 = 2416377936 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[329:300] = h90070050 0 30 h0 RW HEX
; Desc_I2c_mstr_config[329:300] read data from receive rif uart FIFO
I2c_mstr_config_60 = h90070050 0 5 h0 RW HEX
I2c_mstr_config_61 = h90070050 5 5 h0 RW HEX
I2c_mstr_config_62 = h90070050 10 5 h0 RW HEX
I2c_mstr_config_63 = h90070050 15 5 h0 RW HEX
I2c_mstr_config_64 = h90070050 20 5 h0 RW HEX
I2c_mstr_config_65 = h90070050 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_11 Address h90070054
_I2c_mstr_config_reg_11 = 2416377940 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[359:330] = h90070054 0 30 h0 RW HEX
; Desc_I2c_mstr_config[359:330] div ratio of the rif UART divide by N+1 from the system clock
I2c_mstr_config_66 = h90070054 0 5 h0 RW HEX
I2c_mstr_config_67 = h90070054 5 5 h0 RW HEX
I2c_mstr_config_68 = h90070054 10 5 h0 RW HEX
I2c_mstr_config_69 = h90070054 15 5 h0 RW HEX
I2c_mstr_config_70 = h90070054 20 5 h0 RW HEX
I2c_mstr_config_71 = h90070054 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_12 Address h90070058
_I2c_mstr_config_reg_12 = 2416377944 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[389:360] = h90070058 0 30 h0 RW HEX
; Desc_I2c_mstr_config[389:360] div ratio of the rif UART divide by N+1 from the system clock
I2c_mstr_config_72 = h90070058 0 5 h0 RW HEX
I2c_mstr_config_73 = h90070058 5 5 h0 RW HEX
I2c_mstr_config_74 = h90070058 10 5 h0 RW HEX
I2c_mstr_config_75 = h90070058 15 5 h0 RW HEX
I2c_mstr_config_76 = h90070058 20 5 h0 RW HEX
I2c_mstr_config_77 = h90070058 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_13 Address h9007005c
_I2c_mstr_config_reg_13 = 2416377948 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[419:390] = h9007005c 0 30 h0 RW HEX
; Desc_I2c_mstr_config[419:390] not in use
I2c_mstr_config_78 = h9007005c 0 5 h0 RW HEX
I2c_mstr_config_79 = h9007005c 5 5 h0 RW HEX
I2c_mstr_config_80 = h9007005c 10 5 h0 RW HEX
I2c_mstr_config_81 = h9007005c 15 5 h0 RW HEX
I2c_mstr_config_82 = h9007005c 20 5 h0 RW HEX
I2c_mstr_config_83 = h9007005c 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_14 Address h90070060
_I2c_mstr_config_reg_14 = 2416377952 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[449:420] = h90070060 0 30 h0 RW HEX
; Desc_I2c_mstr_config[449:420] delay for the I2C sda hysteresis
I2c_mstr_config_84 = h90070060 0 5 h0 RW HEX
I2c_mstr_config_85 = h90070060 5 5 h0 RW HEX
I2c_mstr_config_86 = h90070060 10 5 h0 RW HEX
I2c_mstr_config_87 = h90070060 15 5 h0 RW HEX
I2c_mstr_config_88 = h90070060 20 5 h0 RW HEX
I2c_mstr_config_89 = h90070060 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_15 Address h90070064
_I2c_mstr_config_reg_15 = 2416377956 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[479:450] = h90070064 0 30 h0 RW HEX
; Desc_I2c_mstr_config[479:450] 
I2c_mstr_config_90 = h90070064 0 5 h0 RW HEX
I2c_mstr_config_91 = h90070064 5 5 h0 RW HEX
I2c_mstr_config_92 = h90070064 10 5 h0 RW HEX
I2c_mstr_config_93 = h90070064 15 5 h0 RW HEX
I2c_mstr_config_94 = h90070064 20 5 h0 RW HEX
I2c_mstr_config_95 = h90070064 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_16 Address h90070068
_I2c_mstr_config_reg_16 = 2416377960 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[509:480] = h90070068 0 30 h0 RW HEX
; Desc_I2c_mstr_config[509:480] I2C slave setup time in ns
I2c_mstr_config_96 = h90070068 0 5 h0 RW HEX
I2c_mstr_config_97 = h90070068 5 5 h0 RW HEX
I2c_mstr_config_98 = h90070068 10 5 h0 RW HEX
I2c_mstr_config_99 = h90070068 15 5 h0 RW HEX
I2c_mstr_config_100 = h90070068 20 5 h0 RW HEX
I2c_mstr_config_101 = h90070068 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_17 Address h9007006c
_I2c_mstr_config_reg_17 = 2416377964 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[539:510] = h9007006c 0 30 h0 RW HEX
; Desc_I2c_mstr_config[539:510] interrupt mask i2c_sl_rx_req,i2c_sl_tx_req,i2c_sl_addr_req,i2c_slv_int_wd
I2c_mstr_config_102 = h9007006c 0 5 h0 RW HEX
I2c_mstr_config_103 = h9007006c 5 5 h0 RW HEX
I2c_mstr_config_104 = h9007006c 10 5 h0 RW HEX
I2c_mstr_config_105 = h9007006c 15 5 h0 RW HEX
I2c_mstr_config_106 = h9007006c 20 5 h0 RW HEX
I2c_mstr_config_107 = h9007006c 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_18 Address h90070070
_I2c_mstr_config_reg_18 = 2416377968 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[569:540] = h90070070 0 30 h0 RW HEX
; Desc_I2c_mstr_config[569:540] Enablle RX Error For Software
I2c_mstr_config_108 = h90070070 0 5 h0 RW HEX
I2c_mstr_config_109 = h90070070 5 5 h0 RW HEX
I2c_mstr_config_110 = h90070070 10 5 h0 RW HEX
I2c_mstr_config_111 = h90070070 15 5 h0 RW HEX
I2c_mstr_config_112 = h90070070 20 5 h0 RW HEX
I2c_mstr_config_113 = h90070070 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_19 Address h90070074
_I2c_mstr_config_reg_19 = 2416377972 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[599:570] = h90070074 0 30 h0 RW HEX
; Desc_I2c_mstr_config[599:570] The number of entries in the TX RAM
I2c_mstr_config_114 = h90070074 0 5 h0 RW HEX
I2c_mstr_config_115 = h90070074 5 5 h0 RW HEX
I2c_mstr_config_116 = h90070074 10 5 h0 RW HEX
I2c_mstr_config_117 = h90070074 15 5 h0 RW HEX
I2c_mstr_config_118 = h90070074 20 5 h0 RW HEX
I2c_mstr_config_119 = h90070074 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_20 Address h90070078
_I2c_mstr_config_reg_20 = 2416377976 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[629:600] = h90070078 0 30 h0 RW HEX
; Desc_I2c_mstr_config[629:600] The transmit status word
I2c_mstr_config_120 = h90070078 0 5 h0 RW HEX
I2c_mstr_config_121 = h90070078 5 5 h0 RW HEX
I2c_mstr_config_122 = h90070078 10 5 h0 RW HEX
I2c_mstr_config_123 = h90070078 15 5 h0 RW HEX
I2c_mstr_config_124 = h90070078 20 5 h0 RW HEX
I2c_mstr_config_125 = h90070078 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_21 Address h9007007c
_I2c_mstr_config_reg_21 = 2416377980 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[659:630] = h9007007c 0 30 h0 RW HEX
; Desc_I2c_mstr_config[659:630] 
I2c_mstr_config_126 = h9007007c 0 5 h0 RW HEX
I2c_mstr_config_127 = h9007007c 5 5 h0 RW HEX
I2c_mstr_config_128 = h9007007c 10 5 h0 RW HEX
I2c_mstr_config_129 = h9007007c 15 5 h0 RW HEX
I2c_mstr_config_130 = h9007007c 20 5 h0 RW HEX
I2c_mstr_config_131 = h9007007c 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_22 Address h90070080
_I2c_mstr_config_reg_22 = 2416377984 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[689:660] = h90070080 0 30 h0 RW HEX
; Desc_I2c_mstr_config[689:660] 
I2c_mstr_config_132 = h90070080 0 5 h0 RW HEX
I2c_mstr_config_133 = h90070080 5 5 h0 RW HEX
I2c_mstr_config_134 = h90070080 10 5 h0 RW HEX
I2c_mstr_config_135 = h90070080 15 5 h0 RW HEX
I2c_mstr_config_136 = h90070080 20 5 h0 RW HEX
I2c_mstr_config_137 = h90070080 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_23 Address h90070084
_I2c_mstr_config_reg_23 = 2416377988 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[719:690] = h90070084 0 30 h0 RW HEX
; Desc_I2c_mstr_config[719:690] 
I2c_mstr_config_138 = h90070084 0 5 h0 RW HEX
I2c_mstr_config_139 = h90070084 5 5 h0 RW HEX
I2c_mstr_config_140 = h90070084 10 5 h0 RW HEX
I2c_mstr_config_141 = h90070084 15 5 h0 RW HEX
I2c_mstr_config_142 = h90070084 20 5 h0 RW HEX
I2c_mstr_config_143 = h90070084 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_24 Address h90070088
_I2c_mstr_config_reg_24 = 2416377992 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[749:720] = h90070088 0 30 h0 RW HEX
; Desc_I2c_mstr_config[749:720] 
I2c_mstr_config_144 = h90070088 0 5 h0 RW HEX
I2c_mstr_config_145 = h90070088 5 5 h0 RW HEX
I2c_mstr_config_146 = h90070088 10 5 h0 RW HEX
I2c_mstr_config_147 = h90070088 15 5 h0 RW HEX
I2c_mstr_config_148 = h90070088 20 5 h0 RW HEX
I2c_mstr_config_149 = h90070088 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_25 Address h9007008c
_I2c_mstr_config_reg_25 = 2416377996 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[779:750] = h9007008c 0 30 h0 RW HEX
; Desc_I2c_mstr_config[779:750] 
I2c_mstr_config_150 = h9007008c 0 5 h0 RW HEX
I2c_mstr_config_151 = h9007008c 5 5 h0 RW HEX
I2c_mstr_config_152 = h9007008c 10 5 h0 RW HEX
I2c_mstr_config_153 = h9007008c 15 5 h0 RW HEX
I2c_mstr_config_154 = h9007008c 20 5 h0 RW HEX
I2c_mstr_config_155 = h9007008c 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_26 Address h90070090
_I2c_mstr_config_reg_26 = 2416378000 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[809:780] = h90070090 0 30 h0 RW HEX
; Desc_I2c_mstr_config[809:780] 
I2c_mstr_config_156 = h90070090 0 5 h0 RW HEX
I2c_mstr_config_157 = h90070090 5 5 h0 RW HEX
I2c_mstr_config_158 = h90070090 10 5 h0 RW HEX
I2c_mstr_config_159 = h90070090 15 5 h0 RW HEX
I2c_mstr_config_160 = h90070090 20 5 h0 RW HEX
I2c_mstr_config_161 = h90070090 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_27 Address h90070094
_I2c_mstr_config_reg_27 = 2416378004 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[839:810] = h90070094 0 30 h0 RW HEX
; Desc_I2c_mstr_config[839:810] 
I2c_mstr_config_162 = h90070094 0 5 h0 RW HEX
I2c_mstr_config_163 = h90070094 5 5 h0 RW HEX
I2c_mstr_config_164 = h90070094 10 5 h0 RW HEX
I2c_mstr_config_165 = h90070094 15 5 h0 RW HEX
I2c_mstr_config_166 = h90070094 20 5 h0 RW HEX
I2c_mstr_config_167 = h90070094 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_28 Address h90070098
_I2c_mstr_config_reg_28 = 2416378008 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[869:840] = h90070098 0 30 h0 RW HEX
; Desc_I2c_mstr_config[869:840] 
I2c_mstr_config_168 = h90070098 0 5 h0 RW HEX
I2c_mstr_config_169 = h90070098 5 5 h0 RW HEX
I2c_mstr_config_170 = h90070098 10 5 h0 RW HEX
I2c_mstr_config_171 = h90070098 15 5 h0 RW HEX
I2c_mstr_config_172 = h90070098 20 5 h0 RW HEX
I2c_mstr_config_173 = h90070098 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_29 Address h9007009c
_I2c_mstr_config_reg_29 = 2416378012 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[899:870] = h9007009c 0 30 h0 RW HEX
; Desc_I2c_mstr_config[899:870] 
I2c_mstr_config_174 = h9007009c 0 5 h0 RW HEX
I2c_mstr_config_175 = h9007009c 5 5 h0 RW HEX
I2c_mstr_config_176 = h9007009c 10 5 h0 RW HEX
I2c_mstr_config_177 = h9007009c 15 5 h0 RW HEX
I2c_mstr_config_178 = h9007009c 20 5 h0 RW HEX
I2c_mstr_config_179 = h9007009c 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_30 Address h900700a0
_I2c_mstr_config_reg_30 = 2416378016 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[929:900] = h900700a0 0 30 h0 RW HEX
; Desc_I2c_mstr_config[929:900] 
I2c_mstr_config_180 = h900700a0 0 5 h0 RW HEX
I2c_mstr_config_181 = h900700a0 5 5 h0 RW HEX
I2c_mstr_config_182 = h900700a0 10 5 h0 RW HEX
I2c_mstr_config_183 = h900700a0 15 5 h0 RW HEX
I2c_mstr_config_184 = h900700a0 20 5 h0 RW HEX
I2c_mstr_config_185 = h900700a0 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_31 Address h900700a4
_I2c_mstr_config_reg_31 = 2416378020 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[959:930] = h900700a4 0 30 h0 RW HEX
; Desc_I2c_mstr_config[959:930] 
I2c_mstr_config_186 = h900700a4 0 5 h0 RW HEX
I2c_mstr_config_187 = h900700a4 5 5 h0 RW HEX
I2c_mstr_config_188 = h900700a4 10 5 h0 RW HEX
I2c_mstr_config_189 = h900700a4 15 5 h0 RW HEX
I2c_mstr_config_190 = h900700a4 20 5 h0 RW HEX
I2c_mstr_config_191 = h900700a4 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_32 Address h900700a8
_I2c_mstr_config_reg_32 = 2416378024 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[989:960] = h900700a8 0 30 h0 RW HEX
; Desc_I2c_mstr_config[989:960] 
I2c_mstr_config_192 = h900700a8 0 5 h0 RW HEX
I2c_mstr_config_193 = h900700a8 5 5 h0 RW HEX
I2c_mstr_config_194 = h900700a8 10 5 h0 RW HEX
I2c_mstr_config_195 = h900700a8 15 5 h0 RW HEX
I2c_mstr_config_196 = h900700a8 20 5 h0 RW HEX
I2c_mstr_config_197 = h900700a8 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_33 Address h900700ac
_I2c_mstr_config_reg_33 = 2416378028 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[1019:990] = h900700ac 0 30 h0 RW HEX
; Desc_I2c_mstr_config[1019:990] 
I2c_mstr_config_198 = h900700ac 0 5 h0 RW HEX
I2c_mstr_config_199 = h900700ac 5 5 h0 RW HEX
I2c_mstr_config_200 = h900700ac 10 5 h0 RW HEX
I2c_mstr_config_201 = h900700ac 15 5 h0 RW HEX
I2c_mstr_config_202 = h900700ac 20 5 h0 RW HEX
I2c_mstr_config_203 = h900700ac 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_34 Address h900700b0
_I2c_mstr_config_reg_34 = 2416378032 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[1049:1020] = h900700b0 0 30 h0 RW HEX
; Desc_I2c_mstr_config[1049:1020] 
I2c_mstr_config_204 = h900700b0 0 5 h0 RW HEX
I2c_mstr_config_205 = h900700b0 5 5 h0 RW HEX
I2c_mstr_config_206 = h900700b0 10 5 h0 RW HEX
I2c_mstr_config_207 = h900700b0 15 5 h0 RW HEX
I2c_mstr_config_208 = h900700b0 20 5 h0 RW HEX
I2c_mstr_config_209 = h900700b0 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_35 Address h900700b4
_I2c_mstr_config_reg_35 = 2416378036 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[1079:1050] = h900700b4 0 30 h0 RW HEX
; Desc_I2c_mstr_config[1079:1050] 
I2c_mstr_config_210 = h900700b4 0 5 h0 RW HEX
I2c_mstr_config_211 = h900700b4 5 5 h0 RW HEX
I2c_mstr_config_212 = h900700b4 10 5 h0 RW HEX
I2c_mstr_config_213 = h900700b4 15 5 h0 RW HEX
I2c_mstr_config_214 = h900700b4 20 5 h0 RW HEX
I2c_mstr_config_215 = h900700b4 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_36 Address h900700b8
_I2c_mstr_config_reg_36 = 2416378040 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[1109:1080] = h900700b8 0 30 h0 RW HEX
; Desc_I2c_mstr_config[1109:1080] 
I2c_mstr_config_216 = h900700b8 0 5 h0 RW HEX
I2c_mstr_config_217 = h900700b8 5 5 h0 RW HEX
I2c_mstr_config_218 = h900700b8 10 5 h0 RW HEX
I2c_mstr_config_219 = h900700b8 15 5 h0 RW HEX
I2c_mstr_config_220 = h900700b8 20 5 h0 RW HEX
I2c_mstr_config_221 = h900700b8 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_37 Address h900700bc
_I2c_mstr_config_reg_37 = 2416378044 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[1139:1110] = h900700bc 0 30 h0 RW HEX
; Desc_I2c_mstr_config[1139:1110] 
I2c_mstr_config_222 = h900700bc 0 5 h0 RW HEX
I2c_mstr_config_223 = h900700bc 5 5 h0 RW HEX
I2c_mstr_config_224 = h900700bc 10 5 h0 RW HEX
I2c_mstr_config_225 = h900700bc 15 5 h0 RW HEX
I2c_mstr_config_226 = h900700bc 20 5 h0 RW HEX
I2c_mstr_config_227 = h900700bc 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_38 Address h900700c0
_I2c_mstr_config_reg_38 = 2416378048 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[1169:1140] = h900700c0 0 30 h0 RW HEX
; Desc_I2c_mstr_config[1169:1140] 
I2c_mstr_config_228 = h900700c0 0 5 h0 RW HEX
I2c_mstr_config_229 = h900700c0 5 5 h0 RW HEX
I2c_mstr_config_230 = h900700c0 10 5 h0 RW HEX
I2c_mstr_config_231 = h900700c0 15 5 h0 RW HEX
I2c_mstr_config_232 = h900700c0 20 5 h0 RW HEX
I2c_mstr_config_233 = h900700c0 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_39 Address h900700c4
_I2c_mstr_config_reg_39 = 2416378052 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[1199:1170] = h900700c4 0 30 h0 RW HEX
; Desc_I2c_mstr_config[1199:1170] 
I2c_mstr_config_234 = h900700c4 0 5 h0 RW HEX
I2c_mstr_config_235 = h900700c4 5 5 h0 RW HEX
I2c_mstr_config_236 = h900700c4 10 5 h0 RW HEX
I2c_mstr_config_237 = h900700c4 15 5 h0 RW HEX
I2c_mstr_config_238 = h900700c4 20 5 h0 RW HEX
I2c_mstr_config_239 = h900700c4 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_40 Address h900700c8
_I2c_mstr_config_reg_40 = 2416378056 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[1229:1200] = h900700c8 0 30 h0 RW HEX
; Desc_I2c_mstr_config[1229:1200] 
I2c_mstr_config_240 = h900700c8 0 5 h0 RW HEX
I2c_mstr_config_241 = h900700c8 5 5 h0 RW HEX
I2c_mstr_config_242 = h900700c8 10 5 h0 RW HEX
I2c_mstr_config_243 = h900700c8 15 5 h0 RW HEX
I2c_mstr_config_244 = h900700c8 20 5 h0 RW HEX
I2c_mstr_config_245 = h900700c8 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_41 Address h900700cc
_I2c_mstr_config_reg_41 = 2416378060 0 30 b00000000000000000000000000000000 RW
I2c_mstr_config[1259:1230] = h900700cc 0 30 h0 RW HEX
; Desc_I2c_mstr_config[1259:1230] 
I2c_mstr_config_246 = h900700cc 0 5 h0 RW HEX
I2c_mstr_config_247 = h900700cc 5 5 h0 RW HEX
I2c_mstr_config_248 = h900700cc 10 5 h0 RW HEX
I2c_mstr_config_249 = h900700cc 15 5 h0 RW HEX
I2c_mstr_config_250 = h900700cc 20 5 h0 RW HEX
I2c_mstr_config_251 = h900700cc 25 5 h0 RW HEX



; REGISTER I2c_mstr_config_reg_42 Address h900700d0
_I2c_mstr_config_reg_42 = 2416378064 0 20 b00000000000000000000000000000000 RW
I2c_mstr_config[1279:1260] = h900700d0 0 20 h0 RW HEX
; Desc_I2c_mstr_config[1279:1260] 
I2c_mstr_config_252 = h900700d0 0 5 h0 RW HEX
I2c_mstr_config_253 = h900700d0 5 5 h0 RW HEX
I2c_mstr_config_254 = h900700d0 10 5 h0 RW HEX
I2c_mstr_config_255 = h900700d0 15 5 h0 RW HEX



; REGISTER ddc_fifo_gen_slv Address h900700dc
_ddc_fifo_gen_slv = 2416378076 0 9 b00000000000000000000000000000000 RW
ddc_slv_gen_data = h900700dc 0 9 h0 RW HEX
; Desc_ddc_slv_gen_data 



; REGISTER ddc_fifo_gen_mst Address h900700e4
_ddc_fifo_gen_mst = 2416378084 0 9 b00000000000000000000000000000000 RW
ddc_mst_gen_data = h900700e4 0 9 h0 RW HEX
; Desc_ddc_mst_gen_data 



; REGISTER DDC_Link_Config Address h900700e8
_DDC_Link_Config = 2416378088 0 20 b00000000000011111101011110100011 RW
MAIN_DDC_PTYPE = h900700e8 0 4 h3 RW HEX
; Desc_MAIN_DDC_PTYPE 
MAIN_DDC_PAM = h900700e8 4 2 h2 RW HEX
; Desc_MAIN_DDC_PAM 
MAIN_DDC_PROT = h900700e8 6 1 h0 RW BIN
; Desc_MAIN_DDC_PROT 
MAIN_DDC_FUT = h900700e8 7 1 h1 RW BIN
; Desc_MAIN_DDC_FUT 
MAIN_DDC_SID = h900700e8 8 8 hd7 RW HEX
; Desc_MAIN_DDC_SID 
MAIN_DDC_QUAL = h900700e8 16 2 h3 RW HEX
; Desc_MAIN_DDC_QUAL 
MAIN_DDC_PRIO = h900700e8 18 2 h3 RW HEX
; Desc_MAIN_DDC_PRIO 



; REGISTER ddc_slv_used_thr_register Address h900700ec
_ddc_slv_used_thr_register = 2416378092 0 5 b00000000000000000000000000000001 RW
ddc_slv_used_thr = h900700ec 0 5 h1 RW HEX
; Desc_ddc_slv_used_thr 



; REGISTER i2c_pkt_gen_reg Address h900700f4
_i2c_pkt_gen_reg = 2416378100 0 32 b00000000000000000000000111000101 RW
Apkt_type = h900700f4 0 4 h5 RW HEX
; Desc_Apkt_type 
Apkt_Bad = h900700f4 4 1 h0 RW BIN
; Desc_Apkt_Bad 
Apkt_QoS = h900700f4 5 2 h2 RW HEX
; Desc_Apkt_QoS 
Apkt_prio = h900700f4 7 2 h3 RW HEX
; Desc_Apkt_prio 
Apkt_alei = h900700f4 9 3 h0 RW HEX
; Desc_Apkt_alei 
Apkt_Taddr = h900700f4 12 8 h0 RW HEX
; Desc_Apkt_Taddr 
ApktGenEnable = h900700f4 20 1 h0 RW BIN
; Desc_ApktGenEnable 



; REGISTER I2c_pcrc_en_reg Address h900700f8
_I2c_pcrc_en_reg = 2416378104 0 2 b00000000000000000000000000000000 RW
I2c_pcrc_en = h900700f8 0 1 h0 RW BIN
; Desc_I2c_pcrc_en 



; REGISTER i2c_pkt_pars_reg Address h900700fc
_i2c_pkt_pars_reg = 2416378108 0 3 b00000000000000000000000000000011 RW
ApktParseEn = h900700fc 0 1 h1 RW BIN
; Desc_ApktParseEn 
DropBadPktEn = h900700fc 1 1 h1 RW BIN
; Desc_DropBadPktEn 



; REGISTER int_i2c_mst_mask_reg Address h90070100
_int_i2c_mst_mask_reg = 2416378112 0 9 b00000000000000000000000001111110 RW
int_i2c_mst_mask = h90070100 0 9 h7e RW HEX
; Desc_int_i2c_mst_mask 



; REGISTER wait_oper_reg Address h90070150
_wait_oper_reg = 2416378192 0 32 b01100101000000000000000000000011 RW
wait_oper = h90070150 0 32 h65000003 RW HEX
; Desc_wait_oper Address for indirect pka prog ram init
wait_oper_pms = h90070150 0 24 h3 RW HEX
magic_number = h90070150 24 4 h5 RW HEX
parity = h90070150 28 4 h6 RW HEX



; REGISTER fusa_en_reg Address h90070154
_fusa_en_reg = 2416378196 0 32 b01100101000000000000000000000011 RW
fusa_en = h90070154 0 32 h65000003 RW HEX
; Desc_fusa_en Read Data for indirect pka prog ram init
fusa_en_pms = h90070154 0 24 h3 RW HEX
magic_number = h90070154 24 4 h5 RW HEX
parity = h90070154 28 4 h6 RW HEX



; REGISTER indication_reg Address ha8000010
_indication_reg = 2818572304 0 32 b00000000000000000000000000000000 RO
wait_indication = ha8000010 0 1 h0 RO BIN
; Desc_wait_indication lvdstx_ints
idle_indication = ha8000010 1 1 h0 RO BIN
; Desc_idle_indication lvdstx_ints
reserved_indication = ha8000010 2 4 h0 RO HEX
; Desc_reserved_indication lvdstx_ints
fast_mode_fifo_full = ha8000010 6 1 h0 RO BIN
; Desc_fast_mode_fifo_full lvdstx_ints



; REGISTER qspi_int_stat_reg Address ha8000014
_qspi_int_stat_reg = 2818572308 0 32 b00000000000000000000000000000000 RO
wrong_cons_write_stat = ha8000014 0 1 h0 RO BIN
; Desc_wrong_cons_write_stat activates the ROM bist (rom_bist_test_mode must be set)
wait_indication_stat = ha8000014 1 1 h0 RO BIN
; Desc_wait_indication_stat activates the ROM bist (rom_bist_test_mode must be set)
idle_indication_stat = ha8000014 2 1 h0 RO BIN
; Desc_idle_indication_stat activates the ROM bist (rom_bist_test_mode must be set)
fifo_full_indication_stat = ha8000014 3 1 h0 RO BIN
; Desc_fifo_full_indication_stat activates the ROM bist (rom_bist_test_mode must be set)
boundary_cross_indication_stat = ha8000014 4 1 h0 RO BIN
; Desc_boundary_cross_indication_stat activates the ROM bist (rom_bist_test_mode must be set)
fast_mode_stop_indication_stat = ha8000014 5 1 h0 RO BIN
; Desc_fast_mode_stop_indication_stat activates the ROM bist (rom_bist_test_mode must be set)
fast_mode_fifo_full_stat = ha8000014 6 1 h0 RO BIN
; Desc_fast_mode_fifo_full_stat activates the ROM bist (rom_bist_test_mode must be set)
fast_mode_wr_stat = ha8000014 7 1 h0 RO BIN
; Desc_fast_mode_wr_stat activates the ROM bist (rom_bist_test_mode must be set)



; REGISTER qspi_int_clr_reg Address ha8000018
_qspi_int_clr_reg = 2818572312 0 32 b00000000000000000000000000000000 SC
qspi_int_clr = ha8000018 0 8 h0 SC HEX
; Desc_qspi_int_clr result of MISR polynomial



; REGISTER frame_reg0 Address ha8000000
_frame_reg0 = 2818572288 0 25 b00000000000000001000010000000110 RW
quad_instruction = ha8000000 0 1 h0 RW BIN
; Desc_quad_instruction generate interrupt by SW. bit 0 corresponds to bit 5 (i2c slave int) in the VPE0 vector, and so on up. Accordingly bits 59:63 are not used.
instruction_value = ha8000000 1 8 h3 RW HEX
; Desc_instruction_value generate interrupt by SW. bit 0 corresponds to bit 5 (i2c slave int) in the VPE0 vector, and so on up. Accordingly bits 59:63 are not used.
quad_transaction = ha8000000 9 1 h0 RW BIN
; Desc_quad_transaction generate interrupt by SW. bit 0 corresponds to bit 5 (i2c slave int) in the VPE0 vector, and so on up. Accordingly bits 59:63 are not used.
address_needed = ha8000000 10 1 h1 RW BIN
; Desc_address_needed generate interrupt by SW. bit 0 corresponds to bit 5 (i2c slave int) in the VPE0 vector, and so on up. Accordingly bits 59:63 are not used.
address_4_bytes = ha8000000 11 1 h0 RW BIN
; Desc_address_4_bytes generate interrupt by SW. bit 0 corresponds to bit 5 (i2c slave int) in the VPE0 vector, and so on up. Accordingly bits 59:63 are not used.
quad_address = ha8000000 12 1 h0 RW BIN
; Desc_quad_address generate interrupt by SW. bit 0 corresponds to bit 5 (i2c slave int) in the VPE0 vector, and so on up. Accordingly bits 59:63 are not used.
number_of_data_bytes = ha8000000 13 3 h4 RW HEX
; Desc_number_of_data_bytes generate interrupt by SW. bit 0 corresponds to bit 5 (i2c slave int) in the VPE0 vector, and so on up. Accordingly bits 59:63 are not used.
mode_bits_needed = ha8000000 16 1 h0 RW BIN
; Desc_mode_bits_needed generate interrupt by SW. bit 0 corresponds to bit 5 (i2c slave int) in the VPE0 vector, and so on up. Accordingly bits 59:63 are not used.
mode_bits_value = ha8000000 17 8 h0 RW HEX
; Desc_mode_bits_value generate interrupt by SW. bit 0 corresponds to bit 5 (i2c slave int) in the VPE0 vector, and so on up. Accordingly bits 59:63 are not used.



; REGISTER frame_reg1 Address ha8000004
_frame_reg1 = 2818572292 0 17 b00000000000000000100000000000001 RW
num_of_cycles_cs_high = ha8000004 0 8 h1 RW HEX
; Desc_num_of_cycles_cs_high clear interrupts in interrupt controller bits [31:0]  for VPE1 - write 1 to clear a specific interrupt source (generates internal clear pulse)
num_of_dummy_cycles = ha8000004 8 5 h0 RW HEX
; Desc_num_of_dummy_cycles clear interrupts in interrupt controller bits [31:0]  for VPE1 - write 1 to clear a specific interrupt source (generates internal clear pulse)
little_endian = ha8000004 13 1 h0 RW BIN
; Desc_little_endian clear interrupts in interrupt controller bits [31:0]  for VPE1 - write 1 to clear a specific interrupt source (generates internal clear pulse)
inst_needed = ha8000004 14 1 h1 RW BIN
; Desc_inst_needed clear interrupts in interrupt controller bits [31:0]  for VPE1 - write 1 to clear a specific interrupt source (generates internal clear pulse)
offset = ha8000004 15 2 h0 RW HEX
; Desc_offset clear interrupts in interrupt controller bits [31:0]  for VPE1 - write 1 to clear a specific interrupt source (generates internal clear pulse)



; REGISTER qspi_clk_control_reg Address ha8000008
_qspi_clk_control_reg = 2818572296 0 2 b00000000000000000000000000000000 RW
qspi_reserved = ha8000008 0 2 h0 RW HEX
; Desc_qspi_reserved interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 6 to 10



; REGISTER qspi_control_reg Address ha800000c
_qspi_control_reg = 2818572300 0 20 b00000000000001000010000000000000 RW
close_transaction = ha800000c 0 1 h0 RW BIN
; Desc_close_transaction interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 31 to 35
sw_override_cs = ha800000c 1 1 h0 RW BIN
; Desc_sw_override_cs interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 31 to 35
sw_override_io0 = ha800000c 2 1 h0 RW BIN
; Desc_sw_override_io0 interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 31 to 35
sw_override_io1 = ha800000c 3 1 h0 RW BIN
; Desc_sw_override_io1 interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 31 to 35
sw_override_io2 = ha800000c 4 1 h0 RW BIN
; Desc_sw_override_io2 interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 31 to 35
sw_override_io3 = ha800000c 5 1 h0 RW BIN
; Desc_sw_override_io3 interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 31 to 35
cs_override = ha800000c 6 1 h0 RW BIN
; Desc_cs_override interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 31 to 35
io0_override = ha800000c 7 1 h0 RW BIN
; Desc_io0_override interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 31 to 35
io1_override = ha800000c 8 1 h0 RW BIN
; Desc_io1_override interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 31 to 35
io2_override = ha800000c 9 1 h0 RW BIN
; Desc_io2_override interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 31 to 35
io3_override = ha800000c 10 1 h0 RW BIN
; Desc_io3_override interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 31 to 35
reset_seq = ha800000c 11 1 h0 RW BIN
; Desc_reset_seq interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 31 to 35
write_boundary = ha800000c 12 4 h2 RW HEX
; Desc_write_boundary interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 31 to 35
sw_override_clk = ha800000c 16 1 h0 RW BIN
; Desc_sw_override_clk interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 31 to 35
clk_override = ha800000c 17 1 h0 RW BIN
; Desc_clk_override interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 31 to 35
addr_4_byte_from_strap = ha800000c 18 1 h1 RW BIN
; Desc_addr_4_byte_from_strap interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 31 to 35
fast_mode_en = ha800000c 19 1 h0 RW BIN
; Desc_fast_mode_en interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 31 to 35



; REGISTER qspi_int_mask_reg Address ha800001c
_qspi_int_mask_reg = 2818572316 0 8 b00000000000000000000000011111111 RW
wrong_cons_write_mask = ha800001c 0 1 h1 RW BIN
; Desc_wrong_cons_write_mask interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 41 to 45
wait_indication_mask = ha800001c 1 1 h1 RW BIN
; Desc_wait_indication_mask interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 41 to 45
idle_indication_mask = ha800001c 2 1 h1 RW BIN
; Desc_idle_indication_mask interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 41 to 45
fifo_full_indication_mask = ha800001c 3 1 h1 RW BIN
; Desc_fifo_full_indication_mask interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 41 to 45
boundary_cross_indication_mask = ha800001c 4 1 h1 RW BIN
; Desc_boundary_cross_indication_mask interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 41 to 45
fast_mode_stop_indication_mask = ha800001c 5 1 h1 RW BIN
; Desc_fast_mode_stop_indication_mask interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 41 to 45
fast_mode_fifo_full_mask = ha800001c 6 1 h1 RW BIN
; Desc_fast_mode_fifo_full_mask interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 41 to 45
fast_mode_wr_mask = ha800001c 7 1 h1 RW BIN
; Desc_fast_mode_wr_mask interrupt controller 1 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 41 to 45



; REGISTER csi_tadp_tx_0_meron_src_csi_reset_done_reg Address hc0000004
_csi_tadp_tx_0_meron_src_csi_reset_done_reg = 3221225476 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_stat_sysclk_reset_done = hc0000004 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_stat_sysclk_reset_done memory bist is done
csi_tadp_tx_0_stat_host_fpclk_reset_done = hc0000004 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_stat_host_fpclk_reset_done memory bist is done
csi_tadp_tx_0_stat_phypclk_reset_done = hc0000004 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_stat_phypclk_reset_done memory bist is done
csi_tadp_tx_0_stat_cfgclk_reset_done = hc0000004 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_stat_cfgclk_reset_done memory bist is done
csi_tadp_tx_0_stat_regclk_reset_done = hc0000004 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_stat_regclk_reset_done memory bist is done
csi_tadp_tx_0_stat_smifclk_reset_done = hc0000004 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_stat_smifclk_reset_done memory bist is done
csi_tadp_tx_0_stat_cnt_reset_done = hc0000004 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_stat_cnt_reset_done memory bist is done



; REGISTER csi_tadp_tx_0_cdphy_rx_cont_data_reg Address hc0000010
_csi_tadp_tx_0_cdphy_rx_cont_data_reg = 3221225488 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_cdphy_rx_cont_data = hc0000010 0 11 h0 RO HEX
; Desc_csi_tadp_tx_0_cdphy_rx_cont_data {chip_version_char, chip_version_num, rom_version}



; REGISTER csi_tadp_tx_0_apktgen_validown_cnt_reg Address hc0000124
_csi_tadp_tx_0_apktgen_validown_cnt_reg = 3221225764 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_apktgen_validown_cnt = hc0000124 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_apktgen_validown_cnt Pads MUX select



; REGISTER csi_tadp_tx_0_rif2apb_parity_csictrl_status_reg Address hc0000138
_csi_tadp_tx_0_rif2apb_parity_csictrl_status_reg = 3221225784 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_rif2apb_parity_csictrl_status = hc0000138 0 9 h0 RO HEX
; Desc_csi_tadp_tx_0_rif2apb_parity_csictrl_status Pads pull enable



; REGISTER csi_tadp_tx_0_int_src_csi_adp_clr_reg Address hc0000144
_csi_tadp_tx_0_int_src_csi_adp_clr_reg = 3221225796 0 32 b00000000000000000000000000000000 SC
csi_tadp_tx_0_int_src_csi_adp_clr = hc0000144 0 20 h0 SC HEX
; Desc_csi_tadp_tx_0_int_src_csi_adp_clr Pads pull select



; REGISTER csi_tadp_tx_0_int_src_csi_adp_stat_reg Address hc0000148
_csi_tadp_tx_0_int_src_csi_adp_stat_reg = 3221225800 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_int_src_csi_adp_stat = hc0000148 0 20 h0 RO HEX
; Desc_csi_tadp_tx_0_int_src_csi_adp_stat Pads slew controls



; REGISTER csi_tadp_tx_0_stat_fusa_fail_reg Address hc00001c8
_csi_tadp_tx_0_stat_fusa_fail_reg = 3221225928 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_stat_fusa_idiparity_fail = hc00001c8 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_stat_fusa_idiparity_fail Pads stong pull UP controls
csi_tadp_tx_0_stat_fusa_idiayncfifo_fail = hc00001c8 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_stat_fusa_idiayncfifo_fail Pads stong pull UP controls
csi_tadp_tx_0_stat_diag_fusa_fail = hc00001c8 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_stat_diag_fusa_fail Pads stong pull UP controls
csi_tadp_tx_0_stat_phy_parity_fail = hc00001c8 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_stat_phy_parity_fail Pads stong pull UP controls
csi_tadp_tx_0_stat_crcerr_fail = hc00001c8 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_stat_crcerr_fail Pads stong pull UP controls
csi_tadp_tx_0_stat_shrtpld_fail = hc00001c8 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_stat_shrtpld_fail Pads stong pull UP controls
csi_tadp_tx_0_stat_safereg_fail = hc00001c8 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_stat_safereg_fail Pads stong pull UP controls



; REGISTER csi_tadp_tx_0_stat_gnr_safety_reg_status_reg Address hc00001cc
_csi_tadp_tx_0_stat_gnr_safety_reg_status_reg = 3221225932 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_stat_gnr_safety_reg_status = hc00001cc 0 22 h0 RO HEX
; Desc_csi_tadp_tx_0_stat_gnr_safety_reg_status Pads schmidt control level



; REGISTER csi_tadp_tx_0_cfg_safety_reg_status_clr_reg Address hc00001d0
_csi_tadp_tx_0_cfg_safety_reg_status_clr_reg = 3221225936 0 32 b00000000000000000000000000000000 SC
csi_tadp_tx_0_cfg_safety_reg_status_clr = hc00001d0 0 1 h0 SC BIN
; Desc_csi_tadp_tx_0_cfg_safety_reg_status_clr Pads drive strength



; REGISTER csi_tadp_tx_0_stat_fusa_main_stm_reg Address hc00001d4
_csi_tadp_tx_0_stat_fusa_main_stm_reg = 3221225940 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_stat_fusa_main_stm = hc00001d4 0 3 h0 RO HEX
; Desc_csi_tadp_tx_0_stat_fusa_main_stm Pads drive strength



; REGISTER csi_tadp_tx_0_stat_phy_rdy_reg Address hc00001d8
_csi_tadp_tx_0_stat_phy_rdy_reg = 3221225944 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_phy_rdy = hc00001d8 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_rdy 



; REGISTER csi_tadp_tx_0_stat_cdphy_0 Address hc00001e0
_csi_tadp_tx_0_stat_cdphy_0 = 3221225952 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_cdphy_rx_direction_0 = hc00001e0 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_direction_0 
csi_tadp_tx_0_cdphy_rx_direction_1 = hc00001e0 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_direction_1 
csi_tadp_tx_0_cdphy_rx_direction_2 = hc00001e0 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_direction_2 
csi_tadp_tx_0_cdphy_rx_direction_3 = hc00001e0 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_direction_3 
csi_tadp_tx_0_cdphy_rx_errcontentionlp0_0 = hc00001e0 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_errcontentionlp0_0 
csi_tadp_tx_0_cdphy_rx_errcontentionlp0_1 = hc00001e0 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_errcontentionlp0_1 
csi_tadp_tx_0_cdphy_rx_errcontentionlp0_2 = hc00001e0 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_errcontentionlp0_2 
csi_tadp_tx_0_cdphy_rx_errcontentionlp0_3 = hc00001e0 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_errcontentionlp0_3 
csi_tadp_tx_0_cdphy_rx_errcontrol_0 = hc00001e0 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_errcontrol_0 
csi_tadp_tx_0_cdphy_rx_errcontrol_1 = hc00001e0 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_errcontrol_1 
csi_tadp_tx_0_cdphy_rx_errcontrol_2 = hc00001e0 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_errcontrol_2 
csi_tadp_tx_0_cdphy_rx_errcontrol_3 = hc00001e0 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_errcontrol_3 
csi_tadp_tx_0_cdphy_rx_errsyncesc_0 = hc00001e0 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_errsyncesc_0 
csi_tadp_tx_0_cdphy_rx_errsyncesc_1 = hc00001e0 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_errsyncesc_1 
csi_tadp_tx_0_cdphy_rx_errsyncesc_2 = hc00001e0 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_errsyncesc_2 
csi_tadp_tx_0_cdphy_rx_errsyncesc_3 = hc00001e0 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_errsyncesc_3 
csi_tadp_tx_0_cdphy_rx_ulpsactivenot_0 = hc00001e0 16 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_ulpsactivenot_0 
csi_tadp_tx_0_cdphy_rx_ulpsactivenot_1 = hc00001e0 17 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_ulpsactivenot_1 
csi_tadp_tx_0_cdphy_rx_ulpsactivenot_2 = hc00001e0 18 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_ulpsactivenot_2 
csi_tadp_tx_0_cdphy_rx_ulpsactivenot_3 = hc00001e0 19 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_ulpsactivenot_3 
csi_tadp_tx_0_cdphy_rx_ulpsactivenot_dck = hc00001e0 20 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_ulpsactivenot_dck 
csi_tadp_tx_0_cdphy_rx_errcontentionlp1_0 = hc00001e0 21 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_errcontentionlp1_0 
csi_tadp_tx_0_cdphy_rx_errcontentionlp1_1 = hc00001e0 22 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_errcontentionlp1_1 
csi_tadp_tx_0_cdphy_rx_errcontentionlp1_2 = hc00001e0 23 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_errcontentionlp1_2 
csi_tadp_tx_0_cdphy_rx_errcontentionlp1_3 = hc00001e0 24 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_errcontentionlp1_3 



; REGISTER csi_tadp_tx_0_long_vc0_cnt_reg Address hc0000400
_csi_tadp_tx_0_long_vc0_cnt_reg = 3221226496 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_long_vc0_cnt = hc0000400 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_long_vc0_cnt 



; REGISTER csi_tadp_tx_0_long_vc1_cnt_reg Address hc0000404
_csi_tadp_tx_0_long_vc1_cnt_reg = 3221226500 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_long_vc1_cnt = hc0000404 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_long_vc1_cnt 



; REGISTER csi_tadp_tx_0_long_vc2_cnt_reg Address hc0000408
_csi_tadp_tx_0_long_vc2_cnt_reg = 3221226504 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_long_vc2_cnt = hc0000408 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_long_vc2_cnt 



; REGISTER csi_tadp_tx_0_long_vc3_cnt_reg Address hc000040c
_csi_tadp_tx_0_long_vc3_cnt_reg = 3221226508 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_long_vc3_cnt = hc000040c 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_long_vc3_cnt 



; REGISTER csi_tadp_tx_0_long_vc4_cnt_reg Address hc0000410
_csi_tadp_tx_0_long_vc4_cnt_reg = 3221226512 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_long_vc4_cnt = hc0000410 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_long_vc4_cnt 



; REGISTER csi_tadp_tx_0_long_vc5_cnt_reg Address hc0000414
_csi_tadp_tx_0_long_vc5_cnt_reg = 3221226516 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_long_vc5_cnt = hc0000414 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_long_vc5_cnt refer to Bsor test concept doc



; REGISTER csi_tadp_tx_0_long_vc6_cnt_reg Address hc0000418
_csi_tadp_tx_0_long_vc6_cnt_reg = 3221226520 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_long_vc6_cnt = hc0000418 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_long_vc6_cnt 



; REGISTER csi_tadp_tx_0_long_vc7_cnt_reg Address hc000041c
_csi_tadp_tx_0_long_vc7_cnt_reg = 3221226524 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_long_vc7_cnt = hc000041c 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_long_vc7_cnt All AFE PLL lock indicators are on



; REGISTER csi_tadp_tx_0_long_vc8_cnt_reg Address hc0000420
_csi_tadp_tx_0_long_vc8_cnt_reg = 3221226528 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_long_vc8_cnt = hc0000420 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_long_vc8_cnt 1 - h2_intterrupt , 0 -!h2_interrupt



; REGISTER csi_tadp_tx_0_long_vc9_cnt_reg Address hc0000424
_csi_tadp_tx_0_long_vc9_cnt_reg = 3221226532 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_long_vc9_cnt = hc0000424 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_long_vc9_cnt sys_clk divider value - division rate from 1G AFE sys_clk to drive to the tadp_top



; REGISTER csi_tadp_tx_0_long_vc10_cnt_reg Address hc0000428
_csi_tadp_tx_0_long_vc10_cnt_reg = 3221226536 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_long_vc10_cnt = hc0000428 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_long_vc10_cnt 



; REGISTER csi_tadp_tx_0_long_vc11_cnt_reg Address hc000042c
_csi_tadp_tx_0_long_vc11_cnt_reg = 3221226540 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_long_vc11_cnt = hc000042c 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_long_vc11_cnt 



; REGISTER csi_tadp_tx_0_long_vc12_cnt_reg Address hc0000430
_csi_tadp_tx_0_long_vc12_cnt_reg = 3221226544 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_long_vc12_cnt = hc0000430 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_long_vc12_cnt 



; REGISTER csi_tadp_tx_0_long_vc13_cnt_reg Address hc0000434
_csi_tadp_tx_0_long_vc13_cnt_reg = 3221226548 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_long_vc13_cnt = hc0000434 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_long_vc13_cnt 



; REGISTER csi_tadp_tx_0_long_vc14_cnt_reg Address hc0000438
_csi_tadp_tx_0_long_vc14_cnt_reg = 3221226552 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_long_vc14_cnt = hc0000438 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_long_vc14_cnt 



; REGISTER csi_tadp_tx_0_long_vc15_cnt_reg Address hc000043c
_csi_tadp_tx_0_long_vc15_cnt_reg = 3221226556 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_long_vc15_cnt = hc000043c 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_long_vc15_cnt 



; REGISTER csi_tadp_tx_0_short_vc0_cnt_reg Address hc0000440
_csi_tadp_tx_0_short_vc0_cnt_reg = 3221226560 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_short_vc0_cnt = hc0000440 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_short_vc0_cnt 



; REGISTER csi_tadp_tx_0_short_vc1_cnt_reg Address hc0000444
_csi_tadp_tx_0_short_vc1_cnt_reg = 3221226564 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_short_vc1_cnt = hc0000444 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_short_vc1_cnt 



; REGISTER csi_tadp_tx_0_short_vc2_cnt_reg Address hc0000448
_csi_tadp_tx_0_short_vc2_cnt_reg = 3221226568 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_short_vc2_cnt = hc0000448 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_short_vc2_cnt Sample source select



; REGISTER csi_tadp_tx_0_short_vc3_cnt_reg Address hc000044c
_csi_tadp_tx_0_short_vc3_cnt_reg = 3221226572 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_short_vc3_cnt = hc000044c 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_short_vc3_cnt samples to count from trig till window end



; REGISTER csi_tadp_tx_0_short_vc4_cnt_reg Address hc0000450
_csi_tadp_tx_0_short_vc4_cnt_reg = 3221226576 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_short_vc4_cnt = hc0000450 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_short_vc4_cnt Internal trig expected value bits 31:0



; REGISTER csi_tadp_tx_0_short_vc5_cnt_reg Address hc0000454
_csi_tadp_tx_0_short_vc5_cnt_reg = 3221226580 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_short_vc5_cnt = hc0000454 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_short_vc5_cnt Internal trig expected value bits 63:32



; REGISTER csi_tadp_tx_0_short_vc6_cnt_reg Address hc0000458
_csi_tadp_tx_0_short_vc6_cnt_reg = 3221226584 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_short_vc6_cnt = hc0000458 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_short_vc6_cnt Internal trig expected value bits 95:64



; REGISTER csi_tadp_tx_0_short_vc7_cnt_reg Address hc0000460
_csi_tadp_tx_0_short_vc7_cnt_reg = 3221226592 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_short_vc7_cnt = hc0000460 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_short_vc7_cnt Internal trig expected value bits 31:0



; REGISTER csi_tadp_tx_0_short_vc8_cnt_reg Address hc0000464
_csi_tadp_tx_0_short_vc8_cnt_reg = 3221226596 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_short_vc8_cnt = hc0000464 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_short_vc8_cnt Internal trig expected value bits 63:32



; REGISTER csi_tadp_tx_0_short_vc9_cnt_reg Address hc0000468
_csi_tadp_tx_0_short_vc9_cnt_reg = 3221226600 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_short_vc9_cnt = hc0000468 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_short_vc9_cnt Internal trig expected value bits 95:64



; REGISTER csi_tadp_tx_0_short_vc10_cnt_reg Address hc0000470
_csi_tadp_tx_0_short_vc10_cnt_reg = 3221226608 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_short_vc10_cnt = hc0000470 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_short_vc10_cnt Internal trig expected value bits 31:0



; REGISTER csi_tadp_tx_0_short_vc11_cnt_reg Address hc0000474
_csi_tadp_tx_0_short_vc11_cnt_reg = 3221226612 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_short_vc11_cnt = hc0000474 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_short_vc11_cnt Internal trig expected value bits 63:32



; REGISTER csi_tadp_tx_0_short_vc12_cnt_reg Address hc0000478
_csi_tadp_tx_0_short_vc12_cnt_reg = 3221226616 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_short_vc12_cnt = hc0000478 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_short_vc12_cnt Internal trig expected value bits 95:64



; REGISTER csi_tadp_tx_0_short_vc13_cnt_reg Address hc0000480
_csi_tadp_tx_0_short_vc13_cnt_reg = 3221226624 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_short_vc13_cnt = hc0000480 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_short_vc13_cnt Internal trig expected value bits 31:0



; REGISTER csi_tadp_tx_0_short_vc14_cnt_reg Address hc0000484
_csi_tadp_tx_0_short_vc14_cnt_reg = 3221226628 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_short_vc14_cnt = hc0000484 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_short_vc14_cnt Internal trig expected value bits 63:32



; REGISTER csi_tadp_tx_0_short_vc15_cnt_reg Address hc0000488
_csi_tadp_tx_0_short_vc15_cnt_reg = 3221226632 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_short_vc15_cnt = hc0000488 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_short_vc15_cnt Internal trig expected value bits 95:64



; REGISTER csi_tadp_tx_0_ppi_pkt_cnt0_reg Address hc0000490
_csi_tadp_tx_0_ppi_pkt_cnt0_reg = 3221226640 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_ppi_pkt_cnt0 = hc0000490 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_ppi_pkt_cnt0 



; REGISTER csi_tadp_tx_0_ppi_pkt_cnt1_reg Address hc0000494
_csi_tadp_tx_0_ppi_pkt_cnt1_reg = 3221226644 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_ppi_pkt_cnt1 = hc0000494 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_ppi_pkt_cnt1 



; REGISTER csi_tadp_tx_0_ppi_pkt_cnt2_reg Address hc0000498
_csi_tadp_tx_0_ppi_pkt_cnt2_reg = 3221226648 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_ppi_pkt_cnt2 = hc0000498 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_ppi_pkt_cnt2 



; REGISTER csi_tadp_tx_0_ppi_pkt_cnt3_reg Address hc000049c
_csi_tadp_tx_0_ppi_pkt_cnt3_reg = 3221226652 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_ppi_pkt_cnt3 = hc000049c 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_ppi_pkt_cnt3 



; REGISTER csi_tadp_tx_0_asyncmem_err_cnt_stat_reg Address hc00004a0
_csi_tadp_tx_0_asyncmem_err_cnt_stat_reg = 3221226656 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_asyncmem_err_cnt_stat = hc00004a0 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_asyncmem_err_cnt_stat 



; REGISTER csi_tadp_tx_0_idipar_err_cnt_stat_reg Address hc00004a4
_csi_tadp_tx_0_idipar_err_cnt_stat_reg = 3221226660 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_idipar_err_cnt_stat = hc00004a4 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_idipar_err_cnt_stat 



; REGISTER csi_tadp_tx_0_crc16_err_cnt_stat_reg Address hc00004a8
_csi_tadp_tx_0_crc16_err_cnt_stat_reg = 3221226664 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_crc16_err_cnt_stat = hc00004a8 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_crc16_err_cnt_stat 



; REGISTER csi_tadp_tx_0_ovf_err_cnt_stat_reg Address hc00004ac
_csi_tadp_tx_0_ovf_err_cnt_stat_reg = 3221226668 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_ovf_err_cnt_stat = hc00004ac 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_ovf_err_cnt_stat 



; REGISTER csi_tadp_tx_0_apkt_tok_cnt_stat_reg Address hc00004b0
_csi_tadp_tx_0_apkt_tok_cnt_stat_reg = 3221226672 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_apkt_tok_cnt_stat = hc00004b0 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_apkt_tok_cnt_stat 



; REGISTER csi_tadp_tx_0_errcnt_clr_reg Address hc00004b4
_csi_tadp_tx_0_errcnt_clr_reg = 3221226676 0 32 b00000000000000000000000000000000 SC
csi_tadp_tx_0_errcnt_clr = hc00004b4 0 6 h0 SC HEX
; Desc_csi_tadp_tx_0_errcnt_clr 



; REGISTER csi_tadp_tx_0_low_post_value_reg Address hc00004c8
_csi_tadp_tx_0_low_post_value_reg = 3221226696 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_low_post_value = hc00004c8 0 10 h0 RO HEX
; Desc_csi_tadp_tx_0_low_post_value 



; REGISTER csi_tadp_tx_0_intergap_pkt_value_reg Address hc00004cc
_csi_tadp_tx_0_intergap_pkt_value_reg = 3221226700 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_intergap_pkt_value = hc00004cc 0 10 h0 RO HEX
; Desc_csi_tadp_tx_0_intergap_pkt_value 



; REGISTER csi_tadp_tx_0_apktgen_noready_cnt_reg Address hc00004d0
_csi_tadp_tx_0_apktgen_noready_cnt_reg = 3221226704 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_apktgen_noready_cnt = hc00004d0 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_apktgen_noready_cnt 



; REGISTER csi_tadp_tx_0_apktgen_valid_cnt_reg Address hc00004d4
_csi_tadp_tx_0_apktgen_valid_cnt_reg = 3221226708 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_apktgen_valid_cnt = hc00004d4 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_apktgen_valid_cnt 



; REGISTER csi_tadp_tx_0_max_pkt_size_cnt_reg Address hc00004d8
_csi_tadp_tx_0_max_pkt_size_cnt_reg = 3221226712 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_max_pkt_size_cnt = hc00004d8 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_max_pkt_size_cnt 



; REGISTER csi_tadp_tx_0_err_shortpld_cnt_stat_reg Address hc00004f8
_csi_tadp_tx_0_err_shortpld_cnt_stat_reg = 3221226744 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_err_shortpld_cnt_stat = hc00004f8 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_err_shortpld_cnt_stat 



; REGISTER csi_tadp_tx_0_conseq_shrt_cnt_stat_reg Address hc0000504
_csi_tadp_tx_0_conseq_shrt_cnt_stat_reg = 3221226756 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_conseq_shrt_cnt_stat = hc0000504 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_conseq_shrt_cnt_stat 



; REGISTER csi_tadp_tx_0_apktgen_noready_cntwrap_reg Address hc0000508
_csi_tadp_tx_0_apktgen_noready_cntwrap_reg = 3221226760 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_apktgen_noready_cntwrap = hc0000508 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_apktgen_noready_cntwrap 



; REGISTER csi_tadp_tx_0_apktgen_valid_cntwrap_reg Address hc000050c
_csi_tadp_tx_0_apktgen_valid_cntwrap_reg = 3221226764 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_apktgen_valid_cntwrap = hc000050c 0 32 h0 RO HEX
; Desc_csi_tadp_tx_0_apktgen_valid_cntwrap 



; REGISTER csi_tadp_tx_0_cdphy_rx_obsv_output0_reg Address hc0000514
_csi_tadp_tx_0_cdphy_rx_obsv_output0_reg = 3221226772 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_cdphy_rx_rxtriggeresc_0 = hc0000514 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_cdphy_rx_rxtriggeresc_0 
csi_tadp_tx_0_cdphy_rx_rxtriggeresc_1 = hc0000514 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_cdphy_rx_rxtriggeresc_1 
csi_tadp_tx_0_cdphy_rx_rxtriggeresc_2 = hc0000514 8 4 h0 RO HEX
; Desc_csi_tadp_tx_0_cdphy_rx_rxtriggeresc_2 
csi_tadp_tx_0_cdphy_rx_rxtriggeresc_3 = hc0000514 12 4 h0 RO HEX
; Desc_csi_tadp_tx_0_cdphy_rx_rxtriggeresc_3 
csi_tadp_tx_0_cdphy_rx_rxvalidesc_0 = hc0000514 16 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_rxvalidesc_0 
csi_tadp_tx_0_cdphy_rx_rxvalidesc_1 = hc0000514 17 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_rxvalidesc_1 
csi_tadp_tx_0_cdphy_rx_rxvalidesc_2 = hc0000514 18 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_rxvalidesc_2 
csi_tadp_tx_0_cdphy_rx_rxvalidesc_3 = hc0000514 19 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_rxvalidesc_3 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpcode0_1 = hc0000514 20 4 h0 RO HEX
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpcode0_1 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpcode0_0 = hc0000514 24 4 h0 RO HEX
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpcode0_0 



; REGISTER csi_tadp_tx_0_cdphy_rx_ctrl_output1_reg Address hc000051c
_csi_tadp_tx_0_cdphy_rx_ctrl_output1_reg = 3221226780 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpcode1_0 = hc000051c 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpcode1_0 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpcode0_2 = hc000051c 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpcode0_2 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpcode1_2 = hc000051c 8 4 h0 RO HEX
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpcode1_2 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpcode1_1 = hc000051c 12 4 h0 RO HEX
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpcode1_1 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpnibble0_1 = hc000051c 16 4 h0 RO HEX
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpnibble0_1 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpnibble0_0 = hc000051c 20 4 h0 RO HEX
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpnibble0_0 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpnibble0_2 = hc000051c 24 4 h0 RO HEX
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpnibble0_2 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpnibble1_0 = hc000051c 28 4 h0 RO HEX
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpnibble1_0 



; REGISTER csi_tadp_tx_0_cdphy_rx_ctrl_output2_reg Address hc0000524
_csi_tadp_tx_0_cdphy_rx_ctrl_output2_reg = 3221226788 0 32 b00000000000000000010000000000000 RO
csi_tadp_tx_0_cdphy_rx_rxsynctypehs1_0 = hc0000524 0 3 h0 RO HEX
; Desc_csi_tadp_tx_0_cdphy_rx_rxsynctypehs1_0 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxlpdtesc_0 = hc0000524 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxlpdtesc_0 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxlpdtesc_1 = hc0000524 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxlpdtesc_1 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxlpdtesc_2 = hc0000524 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxlpdtesc_2 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxlpdtesc_3 = hc0000524 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxlpdtesc_3 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxinvalidcodehs_0 = hc0000524 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxinvalidcodehs_0 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxinvalidcodehs_1 = hc0000524 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxinvalidcodehs_1 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxinvalidcodehs_2 = hc0000524 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxinvalidcodehs_2 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_txreadyesc_0 = hc0000524 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_txreadyesc_0 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_txreadyesc_1 = hc0000524 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_txreadyesc_1 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxclkactivehs_dck1 = hc0000524 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxclkactivehs_dck1 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxulpsclknot_dck1 = hc0000524 13 1 h1 RO BIN
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxulpsclknot_dck1 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpnibble1_1 = hc0000524 14 4 h0 RO HEX
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpnibble1_1 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpnibble1_2 = hc0000524 18 4 h0 RO HEX
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpnibble1_2 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_txreadyesc_2 = hc0000524 22 1 h0 RO BIN
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_txreadyesc_2 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_txreadyesc_3 = hc0000524 23 1 h0 RO BIN
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_txreadyesc_3 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxdataesc_0 = hc0000524 24 8 h0 RO HEX
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxdataesc_0 



; REGISTER csi_tadp_tx_0_cdphy_rx_ctrl_output3_reg Address hc0000528
_csi_tadp_tx_0_cdphy_rx_ctrl_output3_reg = 3221226792 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxdataesc_1 = hc0000528 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxdataesc_1 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxdataesc_2 = hc0000528 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxdataesc_2 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxdataesc_3 = hc0000528 16 8 h0 RO HEX
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxdataesc_3 
csi_tadp_tx_0_cdphy_rx_bist_done = hc0000528 24 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_bist_done 
csi_tadp_tx_0_cdphy_rx_bist_ok = hc0000528 25 1 h0 RO BIN
; Desc_csi_tadp_tx_0_cdphy_rx_bist_ok 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpvalidhs_0 = hc0000528 26 2 h0 RO HEX
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpvalidhs_0 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpvalidhs_1 = hc0000528 28 2 h0 RO HEX
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpvalidhs_1 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpvalidhs_2 = hc0000528 30 2 h0 RO HEX
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxalpvalidhs_2 



; REGISTER csi_tadp_tx_0_cdphy_rx_ctrl_output4_reg Address hc000052c
_csi_tadp_tx_0_cdphy_rx_ctrl_output4_reg = 3221226796 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_cdphy_rx_rxsynctypehs1_1 = hc000052c 0 3 h0 RO HEX
; Desc_csi_tadp_tx_0_cdphy_rx_rxsynctypehs1_1 
csi_tadp_tx_0_cdphy_rx_rxsynctypehs1_2 = hc000052c 3 3 h0 RO HEX
; Desc_csi_tadp_tx_0_cdphy_rx_rxsynctypehs1_2 
csi_tadp_tx_0_phy_ctrl_stop_state_dck = hc000052c 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_ctrl_stop_state_dck 
csi_tadp_tx_0_phy_ctrl_stop_state0 = hc000052c 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_ctrl_stop_state0 
csi_tadp_tx_0_phy_ctrl_stop_state1 = hc000052c 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_ctrl_stop_state1 
csi_tadp_tx_0_phy_ctrl_stop_state2 = hc000052c 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_ctrl_stop_state2 
csi_tadp_tx_0_phy_ctrl_stop_state3 = hc000052c 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_ctrl_stop_state3 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxskewcalhs_0 = hc000052c 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxskewcalhs_0 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxskewcalhs_1 = hc000052c 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxskewcalhs_1 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxskewcalhs_2 = hc000052c 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxskewcalhs_2 
csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxskewcalhs_3 = hc000052c 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_i_dwc_mipi_cdphy_rx_4l3t_ns_rxskewcalhs_3 



; REGISTER csi_tadp_tx_0_VERSION_reg Address hc0019000
_csi_tadp_tx_0_VERSION_reg = 3221327872 0 32 b00110001001101010011000100101010 RO
csi_tadp_tx_0_version = hc0019000 0 32 h3135312a RO HEX
; Desc_csi_tadp_tx_0_version 



; REGISTER csi_tadp_tx_0_INT_ST_MAIN_reg Address hc001900c
_csi_tadp_tx_0_INT_ST_MAIN_reg = 3221327884 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_status_int_phy_fatal = hc001900c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_status_int_phy_fatal 
csi_tadp_tx_0_status_int_pkt_fatal = hc001900c 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_status_int_pkt_fatal 
csi_tadp_tx_0_status_int_bndry_frame_fatal = hc001900c 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_status_int_bndry_frame_fatal 
csi_tadp_tx_0_status_int_seq_frame_fatal = hc001900c 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_status_int_seq_frame_fatal 
csi_tadp_tx_0_status_int_crc_frame_fatal = hc001900c 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_status_int_crc_frame_fatal 
csi_tadp_tx_0_status_int_pld_crc_fatal = hc001900c 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_status_int_pld_crc_fatal 
csi_tadp_tx_0_status_int_data_id = hc001900c 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_status_int_data_id 
csi_tadp_tx_0_status_int_ecc_corrected = hc001900c 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_status_int_ecc_corrected 
csi_tadp_tx_0_reserved_15_8 = hc001900c 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_15_8 
csi_tadp_tx_0_status_int_phy = hc001900c 16 1 h0 RO BIN
; Desc_csi_tadp_tx_0_status_int_phy 
csi_tadp_tx_0_status_int_line = hc001900c 17 1 h0 RO BIN
; Desc_csi_tadp_tx_0_status_int_line 
csi_tadp_tx_0_reserved_18 = hc001900c 18 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_18 
csi_tadp_tx_0_reserved_19 = hc001900c 19 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_19 
csi_tadp_tx_0_reserved_20 = hc001900c 20 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_20 
csi_tadp_tx_0_reserved_21 = hc001900c 21 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_21 
csi_tadp_tx_0_reserved_22 = hc001900c 22 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_22 
csi_tadp_tx_0_reserved_23 = hc001900c 23 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_23 
csi_tadp_tx_0_reserved_24 = hc001900c 24 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_24 
csi_tadp_tx_0_reserved_25 = hc001900c 25 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_25 
csi_tadp_tx_0_reserved_31_26 = hc001900c 26 6 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_31_26 



; REGISTER csi_tadp_tx_0_INT_ST_AP_MAIN_reg Address hc001902c
_csi_tadp_tx_0_INT_ST_AP_MAIN_reg = 3221327916 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_status_int_st_ap_generic = hc001902c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_status_int_st_ap_generic 
csi_tadp_tx_0_status_int_phy_fatal = hc001902c 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_status_int_phy_fatal 
csi_tadp_tx_0_status_int_pkt_fatal = hc001902c 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_status_int_pkt_fatal 
csi_tadp_tx_0_status_int_bndry_frame_fatal = hc001902c 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_status_int_bndry_frame_fatal 
csi_tadp_tx_0_status_int_seq_frame_fatal = hc001902c 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_status_int_seq_frame_fatal 
csi_tadp_tx_0_status_int_crc_frame_fatal = hc001902c 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_status_int_crc_frame_fatal 
csi_tadp_tx_0_status_int_phy = hc001902c 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_status_int_phy 
csi_tadp_tx_0_status_int_pld_crc_fatal = hc001902c 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_status_int_pld_crc_fatal 
csi_tadp_tx_0_status_int_data_id = hc001902c 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_status_int_data_id 
csi_tadp_tx_0_status_int_ecc_corrected = hc001902c 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_status_int_ecc_corrected 
csi_tadp_tx_0_status_int_line = hc001902c 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_status_int_line 
csi_tadp_tx_0_reserved_11 = hc001902c 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_11 
csi_tadp_tx_0_reserved_12 = hc001902c 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_12 
csi_tadp_tx_0_reserved_13 = hc001902c 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_13 
csi_tadp_tx_0_reserved_14 = hc001902c 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_14 
csi_tadp_tx_0_reserved_15 = hc001902c 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_15 
csi_tadp_tx_0_reserved_16 = hc001902c 16 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_16 
csi_tadp_tx_0_reserved_17 = hc001902c 17 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_17 
csi_tadp_tx_0_reserved_18 = hc001902c 18 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_18 
csi_tadp_tx_0_reserved_19 = hc001902c 19 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_19 
csi_tadp_tx_0_reserved_20 = hc001902c 20 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_20 
csi_tadp_tx_0_reserved_21 = hc001902c 21 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_21 
csi_tadp_tx_0_reserved_22 = hc001902c 22 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_22 
csi_tadp_tx_0_reserved_23 = hc001902c 23 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_23 
csi_tadp_tx_0_reserved_24 = hc001902c 24 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_24 
csi_tadp_tx_0_reserved_25 = hc001902c 25 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_25 
csi_tadp_tx_0_reserved_26 = hc001902c 26 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_26 
csi_tadp_tx_0_status_int_st_logger_err = hc001902c 27 1 h0 RO BIN
; Desc_csi_tadp_tx_0_status_int_st_logger_err 
csi_tadp_tx_0_reserved_31_28 = hc001902c 28 4 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_31_28 



; REGISTER csi_tadp_tx_0_PHY_RX_reg Address hc0019048
_csi_tadp_tx_0_PHY_RX_reg = 3221327944 0 32 b00000000000000010000000000000000 RO
csi_tadp_tx_0_phy_rxulpsesc_0 = hc0019048 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_rxulpsesc_0 
csi_tadp_tx_0_phy_rxulpsesc_1 = hc0019048 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_rxulpsesc_1 
csi_tadp_tx_0_phy_rxulpsesc_2 = hc0019048 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_rxulpsesc_2 
csi_tadp_tx_0_phy_rxulpsesc_3 = hc0019048 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_rxulpsesc_3 
csi_tadp_tx_0_reserved_4 = hc0019048 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_4 
csi_tadp_tx_0_reserved_5 = hc0019048 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_5 
csi_tadp_tx_0_reserved_6 = hc0019048 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_6 
csi_tadp_tx_0_reserved_7 = hc0019048 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_7 
csi_tadp_tx_0_reserved_15_8 = hc0019048 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_15_8 
csi_tadp_tx_0_phy_rxulpsclknot = hc0019048 16 1 h1 RO BIN
; Desc_csi_tadp_tx_0_phy_rxulpsclknot 
csi_tadp_tx_0_phy_rxclkactivehs = hc0019048 17 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_rxclkactivehs 
csi_tadp_tx_0_reserved_31_18 = hc0019048 18 14 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_31_18 



; REGISTER csi_tadp_tx_0_PHY_STOPSTATE_reg Address hc001904c
_csi_tadp_tx_0_PHY_STOPSTATE_reg = 3221327948 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_phy_stopstatedata_0 = hc001904c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_stopstatedata_0 
csi_tadp_tx_0_phy_stopstatedata_1 = hc001904c 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_stopstatedata_1 
csi_tadp_tx_0_phy_stopstatedata_2 = hc001904c 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_stopstatedata_2 
csi_tadp_tx_0_phy_stopstatedata_3 = hc001904c 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_stopstatedata_3 
csi_tadp_tx_0_reserved_4 = hc001904c 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_4 
csi_tadp_tx_0_reserved_5 = hc001904c 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_5 
csi_tadp_tx_0_reserved_6 = hc001904c 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_6 
csi_tadp_tx_0_reserved_7 = hc001904c 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_7 
csi_tadp_tx_0_reserved_15_8 = hc001904c 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_15_8 
csi_tadp_tx_0_phy_stopstateclk = hc001904c 16 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_stopstateclk 
csi_tadp_tx_0_reserved_31_17 = hc001904c 17 15 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_31_17 



; REGISTER csi_tadp_tx_0_PPI_PG_STATUS_reg Address hc0019070
_csi_tadp_tx_0_PPI_PG_STATUS_reg = 3221327984 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_ppi_pg_status = hc0019070 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_ppi_pg_status 
csi_tadp_tx_0_reserved_31_1 = hc0019070 1 31 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_31_1 



; REGISTER csi_tadp_tx_0_PHY_CAL_reg Address hc00190cc
_csi_tadp_tx_0_PHY_CAL_reg = 3221328076 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_rxskewcalhs = hc00190cc 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_rxskewcalhs 
csi_tadp_tx_0_reserved_31_1 = hc00190cc 1 31 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_31_1 



; REGISTER csi_tadp_tx_0_INT_ST_PHY_FATAL_reg Address hc00190e0
_csi_tadp_tx_0_INT_ST_PHY_FATAL_reg = 3221328096 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_phy_errsotsynchs_0 = hc00190e0 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_errsotsynchs_0 
csi_tadp_tx_0_phy_errsotsynchs_1 = hc00190e0 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_errsotsynchs_1 
csi_tadp_tx_0_phy_errsotsynchs_2 = hc00190e0 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_errsotsynchs_2 
csi_tadp_tx_0_phy_errsotsynchs_3 = hc00190e0 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_errsotsynchs_3 
csi_tadp_tx_0_reserved_4 = hc00190e0 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_4 
csi_tadp_tx_0_reserved_5 = hc00190e0 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_5 
csi_tadp_tx_0_reserved_6 = hc00190e0 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_6 
csi_tadp_tx_0_reserved_7 = hc00190e0 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_7 
csi_tadp_tx_0_err_deskew = hc00190e0 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_deskew 
csi_tadp_tx_0_reserved_15_9 = hc00190e0 9 7 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_15_9 
csi_tadp_tx_0_phy_rxinvalidcodehs_0 = hc00190e0 16 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_rxinvalidcodehs_0 
csi_tadp_tx_0_phy_rxinvalidcodehs_1 = hc00190e0 17 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_rxinvalidcodehs_1 
csi_tadp_tx_0_phy_rxinvalidcodehs_2 = hc00190e0 18 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_rxinvalidcodehs_2 
csi_tadp_tx_0_reserved_31_19 = hc00190e0 19 13 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_31_19 



; REGISTER csi_tadp_tx_0_INT_ST_PKT_FATAL_reg Address hc00190f0
_csi_tadp_tx_0_INT_ST_PKT_FATAL_reg = 3221328112 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_err_ecc_double = hc00190f0 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_double 
csi_tadp_tx_0_shorter_payload = hc00190f0 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_shorter_payload 
csi_tadp_tx_0_reserved_31_2 = hc00190f0 2 30 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_31_2 



; REGISTER csi_tadp_tx_0_INT_ST_PHY_reg Address hc0019110
_csi_tadp_tx_0_INT_ST_PHY_reg = 3221328144 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_phy_errsoths_0 = hc0019110 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_errsoths_0 
csi_tadp_tx_0_phy_errsoths_1 = hc0019110 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_errsoths_1 
csi_tadp_tx_0_phy_errsoths_2 = hc0019110 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_errsoths_2 
csi_tadp_tx_0_phy_errsoths_3 = hc0019110 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_errsoths_3 
csi_tadp_tx_0_reserved_4 = hc0019110 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_4 
csi_tadp_tx_0_reserved_5 = hc0019110 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_5 
csi_tadp_tx_0_reserved_6 = hc0019110 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_6 
csi_tadp_tx_0_reserved_7 = hc0019110 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_7 
csi_tadp_tx_0_reserved_15_8 = hc0019110 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_15_8 
csi_tadp_tx_0_phy_erresc_0 = hc0019110 16 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_erresc_0 
csi_tadp_tx_0_phy_erresc_1 = hc0019110 17 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_erresc_1 
csi_tadp_tx_0_phy_erresc_2 = hc0019110 18 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_erresc_2 
csi_tadp_tx_0_phy_erresc_3 = hc0019110 19 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_erresc_3 
csi_tadp_tx_0_reserved_20 = hc0019110 20 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_20 
csi_tadp_tx_0_reserved_21 = hc0019110 21 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_21 
csi_tadp_tx_0_reserved_22 = hc0019110 22 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_22 
csi_tadp_tx_0_reserved_23 = hc0019110 23 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_23 
csi_tadp_tx_0_reserved_31_24 = hc0019110 24 8 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_31_24 



; REGISTER csi_tadp_tx_0_INT_ST_LINE_reg Address hc0019130
_csi_tadp_tx_0_INT_ST_LINE_reg = 3221328176 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_err_l_bndry_match_di0 = hc0019130 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_bndry_match_di0 
csi_tadp_tx_0_err_l_bndry_match_di1 = hc0019130 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_bndry_match_di1 
csi_tadp_tx_0_err_l_bndry_match_di2 = hc0019130 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_bndry_match_di2 
csi_tadp_tx_0_err_l_bndry_match_di3 = hc0019130 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_bndry_match_di3 
csi_tadp_tx_0_err_l_bndry_match_di4 = hc0019130 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_bndry_match_di4 
csi_tadp_tx_0_err_l_bndry_match_di5 = hc0019130 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_bndry_match_di5 
csi_tadp_tx_0_err_l_bndry_match_di6 = hc0019130 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_bndry_match_di6 
csi_tadp_tx_0_err_l_bndry_match_di7 = hc0019130 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_bndry_match_di7 
csi_tadp_tx_0_reserved_15_8 = hc0019130 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_15_8 
csi_tadp_tx_0_err_l_seq_di0 = hc0019130 16 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_seq_di0 
csi_tadp_tx_0_err_l_seq_di1 = hc0019130 17 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_seq_di1 
csi_tadp_tx_0_err_l_seq_di2 = hc0019130 18 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_seq_di2 
csi_tadp_tx_0_err_l_seq_di3 = hc0019130 19 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_seq_di3 
csi_tadp_tx_0_err_l_seq_di4 = hc0019130 20 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_seq_di4 
csi_tadp_tx_0_err_l_seq_di5 = hc0019130 21 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_seq_di5 
csi_tadp_tx_0_err_l_seq_di6 = hc0019130 22 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_seq_di6 
csi_tadp_tx_0_err_l_seq_di7 = hc0019130 23 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_seq_di7 
csi_tadp_tx_0_reserved_31_24 = hc0019130 24 8 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_31_24 



; REGISTER csi_tadp_tx_0_INT_ST_AP_GENERIC_reg Address hc0019180
_csi_tadp_tx_0_INT_ST_AP_GENERIC_reg = 3221328256 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_apb_ap_err = hc0019180 0 2 h0 RO HEX
; Desc_csi_tadp_tx_0_apb_ap_err 
csi_tadp_tx_0_reg_bank_ap_err = hc0019180 2 2 h0 RO HEX
; Desc_csi_tadp_tx_0_reg_bank_ap_err 
csi_tadp_tx_0_de_skew_ap_err = hc0019180 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_de_skew_ap_err 
csi_tadp_tx_0_reserved_5 = hc0019180 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_5 
csi_tadp_tx_0_descrambler_ap_err = hc0019180 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_descrambler_ap_err 
csi_tadp_tx_0_phy_adapter_ap_err = hc0019180 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_adapter_ap_err 
csi_tadp_tx_0_packet_analyzer_ap_err = hc0019180 8 2 h0 RO HEX
; Desc_csi_tadp_tx_0_packet_analyzer_ap_err 
csi_tadp_tx_0_prep_outs_ap_err = hc0019180 10 2 h0 RO HEX
; Desc_csi_tadp_tx_0_prep_outs_ap_err 
csi_tadp_tx_0_err_msgr_ap_err = hc0019180 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_msgr_ap_err 
csi_tadp_tx_0_err_handler_ap_err = hc0019180 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_handler_ap_err 
csi_tadp_tx_0_synchronizer_fpclk_ap_err = hc0019180 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_synchronizer_fpclk_ap_err 
csi_tadp_tx_0_synchronizer_rxclkhs_ap_err = hc0019180 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_synchronizer_rxclkhs_ap_err 
csi_tadp_tx_0_reserved_16 = hc0019180 16 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_16 
csi_tadp_tx_0_reserved_17 = hc0019180 17 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_17 
csi_tadp_tx_0_reserved_18 = hc0019180 18 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_18 
csi_tadp_tx_0_reserved_19 = hc0019180 19 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_19 
csi_tadp_tx_0_reserved_20 = hc0019180 20 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_20 
csi_tadp_tx_0_reserved_21 = hc0019180 21 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_21 
csi_tadp_tx_0_reserved_22 = hc0019180 22 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_22 
csi_tadp_tx_0_reserved_23 = hc0019180 23 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_23 
csi_tadp_tx_0_cphy_ap_err = hc0019180 24 2 h0 RO HEX
; Desc_csi_tadp_tx_0_cphy_ap_err 
csi_tadp_tx_0_reserved_31_26 = hc0019180 26 6 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_31_26 



; REGISTER csi_tadp_tx_0_INT_ST_LOGGER_ERR_reg Address hc00191d0
_csi_tadp_tx_0_INT_ST_LOGGER_ERR_reg = 3221328336 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_adv_log_ap_underflow = hc00191d0 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_adv_log_ap_underflow 
csi_tadp_tx_0_adv_log_ap_overflow = hc00191d0 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_adv_log_ap_overflow 
csi_tadp_tx_0_reserved_31_2 = hc00191d0 2 30 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_31_2 



; REGISTER csi_tadp_tx_0_INT_ST_BNDRY_FRAME_FATAL_reg Address hc0019280
_csi_tadp_tx_0_INT_ST_BNDRY_FRAME_FATAL_reg = 3221328512 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_err_f_bndry_match_vc0 = hc0019280 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc0 
csi_tadp_tx_0_err_f_bndry_match_vc1 = hc0019280 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc1 
csi_tadp_tx_0_err_f_bndry_match_vc2 = hc0019280 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc2 
csi_tadp_tx_0_err_f_bndry_match_vc3 = hc0019280 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc3 
csi_tadp_tx_0_err_f_bndry_match_vc4 = hc0019280 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc4 
csi_tadp_tx_0_err_f_bndry_match_vc5 = hc0019280 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc5 
csi_tadp_tx_0_err_f_bndry_match_vc6 = hc0019280 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc6 
csi_tadp_tx_0_err_f_bndry_match_vc7 = hc0019280 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc7 
csi_tadp_tx_0_err_f_bndry_match_vc8 = hc0019280 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc8 
csi_tadp_tx_0_err_f_bndry_match_vc9 = hc0019280 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc9 
csi_tadp_tx_0_err_f_bndry_match_vc10 = hc0019280 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc10 
csi_tadp_tx_0_err_f_bndry_match_vc11 = hc0019280 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc11 
csi_tadp_tx_0_err_f_bndry_match_vc12 = hc0019280 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc12 
csi_tadp_tx_0_err_f_bndry_match_vc13 = hc0019280 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc13 
csi_tadp_tx_0_err_f_bndry_match_vc14 = hc0019280 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc14 
csi_tadp_tx_0_err_f_bndry_match_vc15 = hc0019280 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc15 
csi_tadp_tx_0_err_f_bndry_match_vc16 = hc0019280 16 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc16 
csi_tadp_tx_0_err_f_bndry_match_vc17 = hc0019280 17 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc17 
csi_tadp_tx_0_err_f_bndry_match_vc18 = hc0019280 18 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc18 
csi_tadp_tx_0_err_f_bndry_match_vc19 = hc0019280 19 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc19 
csi_tadp_tx_0_err_f_bndry_match_vc20 = hc0019280 20 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc20 
csi_tadp_tx_0_err_f_bndry_match_vc21 = hc0019280 21 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc21 
csi_tadp_tx_0_err_f_bndry_match_vc22 = hc0019280 22 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc22 
csi_tadp_tx_0_err_f_bndry_match_vc23 = hc0019280 23 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc23 
csi_tadp_tx_0_err_f_bndry_match_vc24 = hc0019280 24 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc24 
csi_tadp_tx_0_err_f_bndry_match_vc25 = hc0019280 25 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc25 
csi_tadp_tx_0_err_f_bndry_match_vc26 = hc0019280 26 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc26 
csi_tadp_tx_0_err_f_bndry_match_vc27 = hc0019280 27 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc27 
csi_tadp_tx_0_err_f_bndry_match_vc28 = hc0019280 28 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc28 
csi_tadp_tx_0_err_f_bndry_match_vc29 = hc0019280 29 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc29 
csi_tadp_tx_0_err_f_bndry_match_vc30 = hc0019280 30 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc30 
csi_tadp_tx_0_err_f_bndry_match_vc31 = hc0019280 31 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc31 



; REGISTER csi_tadp_tx_0_INT_ST_SEQ_FRAME_FATAL_reg Address hc0019290
_csi_tadp_tx_0_INT_ST_SEQ_FRAME_FATAL_reg = 3221328528 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_err_f_seq_vc0 = hc0019290 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc0 
csi_tadp_tx_0_err_f_seq_vc1 = hc0019290 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc1 
csi_tadp_tx_0_err_f_seq_vc2 = hc0019290 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc2 
csi_tadp_tx_0_err_f_seq_vc3 = hc0019290 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc3 
csi_tadp_tx_0_err_f_seq_vc4 = hc0019290 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc4 
csi_tadp_tx_0_err_f_seq_vc5 = hc0019290 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc5 
csi_tadp_tx_0_err_f_seq_vc6 = hc0019290 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc6 
csi_tadp_tx_0_err_f_seq_vc7 = hc0019290 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc7 
csi_tadp_tx_0_err_f_seq_vc8 = hc0019290 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc8 
csi_tadp_tx_0_err_f_seq_vc9 = hc0019290 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc9 
csi_tadp_tx_0_err_f_seq_vc10 = hc0019290 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc10 
csi_tadp_tx_0_err_f_seq_vc11 = hc0019290 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc11 
csi_tadp_tx_0_err_f_seq_vc12 = hc0019290 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc12 
csi_tadp_tx_0_err_f_seq_vc13 = hc0019290 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc13 
csi_tadp_tx_0_err_f_seq_vc14 = hc0019290 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc14 
csi_tadp_tx_0_err_f_seq_vc15 = hc0019290 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc15 
csi_tadp_tx_0_err_f_seq_vc16 = hc0019290 16 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc16 
csi_tadp_tx_0_err_f_seq_vc17 = hc0019290 17 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc17 
csi_tadp_tx_0_err_f_seq_vc18 = hc0019290 18 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc18 
csi_tadp_tx_0_err_f_seq_vc19 = hc0019290 19 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc19 
csi_tadp_tx_0_err_f_seq_vc20 = hc0019290 20 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc20 
csi_tadp_tx_0_err_f_seq_vc21 = hc0019290 21 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc21 
csi_tadp_tx_0_err_f_seq_vc22 = hc0019290 22 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc22 
csi_tadp_tx_0_err_f_seq_vc23 = hc0019290 23 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc23 
csi_tadp_tx_0_err_f_seq_vc24 = hc0019290 24 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc24 
csi_tadp_tx_0_err_f_seq_vc25 = hc0019290 25 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc25 
csi_tadp_tx_0_err_f_seq_vc26 = hc0019290 26 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc26 
csi_tadp_tx_0_err_f_seq_vc27 = hc0019290 27 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc27 
csi_tadp_tx_0_err_f_seq_vc28 = hc0019290 28 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc28 
csi_tadp_tx_0_err_f_seq_vc29 = hc0019290 29 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc29 
csi_tadp_tx_0_err_f_seq_vc30 = hc0019290 30 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc30 
csi_tadp_tx_0_err_f_seq_vc31 = hc0019290 31 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc31 



; REGISTER csi_tadp_tx_0_INT_ST_CRC_FRAME_FATAL_reg Address hc00192a0
_csi_tadp_tx_0_INT_ST_CRC_FRAME_FATAL_reg = 3221328544 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_err_frame_data_vc0 = hc00192a0 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc0 
csi_tadp_tx_0_err_frame_data_vc1 = hc00192a0 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc1 
csi_tadp_tx_0_err_frame_data_vc2 = hc00192a0 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc2 
csi_tadp_tx_0_err_frame_data_vc3 = hc00192a0 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc3 
csi_tadp_tx_0_err_frame_data_vc4 = hc00192a0 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc4 
csi_tadp_tx_0_err_frame_data_vc5 = hc00192a0 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc5 
csi_tadp_tx_0_err_frame_data_vc6 = hc00192a0 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc6 
csi_tadp_tx_0_err_frame_data_vc7 = hc00192a0 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc7 
csi_tadp_tx_0_err_frame_data_vc8 = hc00192a0 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc8 
csi_tadp_tx_0_err_frame_data_vc9 = hc00192a0 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc9 
csi_tadp_tx_0_err_frame_data_vc10 = hc00192a0 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc10 
csi_tadp_tx_0_err_frame_data_vc11 = hc00192a0 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc11 
csi_tadp_tx_0_err_frame_data_vc12 = hc00192a0 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc12 
csi_tadp_tx_0_err_frame_data_vc13 = hc00192a0 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc13 
csi_tadp_tx_0_err_frame_data_vc14 = hc00192a0 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc14 
csi_tadp_tx_0_err_frame_data_vc15 = hc00192a0 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc15 
csi_tadp_tx_0_err_frame_data_vc16 = hc00192a0 16 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc16 
csi_tadp_tx_0_err_frame_data_vc17 = hc00192a0 17 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc17 
csi_tadp_tx_0_err_frame_data_vc18 = hc00192a0 18 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc18 
csi_tadp_tx_0_err_frame_data_vc19 = hc00192a0 19 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc19 
csi_tadp_tx_0_err_frame_data_vc20 = hc00192a0 20 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc20 
csi_tadp_tx_0_err_frame_data_vc21 = hc00192a0 21 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc21 
csi_tadp_tx_0_err_frame_data_vc22 = hc00192a0 22 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc22 
csi_tadp_tx_0_err_frame_data_vc23 = hc00192a0 23 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc23 
csi_tadp_tx_0_err_frame_data_vc24 = hc00192a0 24 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc24 
csi_tadp_tx_0_err_frame_data_vc25 = hc00192a0 25 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc25 
csi_tadp_tx_0_err_frame_data_vc26 = hc00192a0 26 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc26 
csi_tadp_tx_0_err_frame_data_vc27 = hc00192a0 27 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc27 
csi_tadp_tx_0_err_frame_data_vc28 = hc00192a0 28 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc28 
csi_tadp_tx_0_err_frame_data_vc29 = hc00192a0 29 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc29 
csi_tadp_tx_0_err_frame_data_vc30 = hc00192a0 30 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc30 
csi_tadp_tx_0_err_frame_data_vc31 = hc00192a0 31 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc31 



; REGISTER csi_tadp_tx_0_INT_ST_PLD_CRC_FATAL_reg Address hc00192b0
_csi_tadp_tx_0_INT_ST_PLD_CRC_FATAL_reg = 3221328560 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_err_crc_vc0 = hc00192b0 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc0 
csi_tadp_tx_0_err_crc_vc1 = hc00192b0 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc1 
csi_tadp_tx_0_err_crc_vc2 = hc00192b0 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc2 
csi_tadp_tx_0_err_crc_vc3 = hc00192b0 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc3 
csi_tadp_tx_0_err_crc_vc4 = hc00192b0 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc4 
csi_tadp_tx_0_err_crc_vc5 = hc00192b0 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc5 
csi_tadp_tx_0_err_crc_vc6 = hc00192b0 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc6 
csi_tadp_tx_0_err_crc_vc7 = hc00192b0 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc7 
csi_tadp_tx_0_err_crc_vc8 = hc00192b0 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc8 
csi_tadp_tx_0_err_crc_vc9 = hc00192b0 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc9 
csi_tadp_tx_0_err_crc_vc10 = hc00192b0 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc10 
csi_tadp_tx_0_err_crc_vc11 = hc00192b0 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc11 
csi_tadp_tx_0_err_crc_vc12 = hc00192b0 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc12 
csi_tadp_tx_0_err_crc_vc13 = hc00192b0 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc13 
csi_tadp_tx_0_err_crc_vc14 = hc00192b0 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc14 
csi_tadp_tx_0_err_crc_vc15 = hc00192b0 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc15 
csi_tadp_tx_0_err_crc_vc16 = hc00192b0 16 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc16 
csi_tadp_tx_0_err_crc_vc17 = hc00192b0 17 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc17 
csi_tadp_tx_0_err_crc_vc18 = hc00192b0 18 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc18 
csi_tadp_tx_0_err_crc_vc19 = hc00192b0 19 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc19 
csi_tadp_tx_0_err_crc_vc20 = hc00192b0 20 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc20 
csi_tadp_tx_0_err_crc_vc21 = hc00192b0 21 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc21 
csi_tadp_tx_0_err_crc_vc22 = hc00192b0 22 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc22 
csi_tadp_tx_0_err_crc_vc23 = hc00192b0 23 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc23 
csi_tadp_tx_0_err_crc_vc24 = hc00192b0 24 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc24 
csi_tadp_tx_0_err_crc_vc25 = hc00192b0 25 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc25 
csi_tadp_tx_0_err_crc_vc26 = hc00192b0 26 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc26 
csi_tadp_tx_0_err_crc_vc27 = hc00192b0 27 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc27 
csi_tadp_tx_0_err_crc_vc28 = hc00192b0 28 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc28 
csi_tadp_tx_0_err_crc_vc29 = hc00192b0 29 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc29 
csi_tadp_tx_0_err_crc_vc30 = hc00192b0 30 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc30 
csi_tadp_tx_0_err_crc_vc31 = hc00192b0 31 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc31 



; REGISTER csi_tadp_tx_0_INT_ST_DATA_ID_reg Address hc00192c0
_csi_tadp_tx_0_INT_ST_DATA_ID_reg = 3221328576 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_err_id_vc0 = hc00192c0 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc0 
csi_tadp_tx_0_err_id_vc1 = hc00192c0 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc1 
csi_tadp_tx_0_err_id_vc2 = hc00192c0 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc2 
csi_tadp_tx_0_err_id_vc3 = hc00192c0 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc3 
csi_tadp_tx_0_err_id_vc4 = hc00192c0 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc4 
csi_tadp_tx_0_err_id_vc5 = hc00192c0 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc5 
csi_tadp_tx_0_err_id_vc6 = hc00192c0 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc6 
csi_tadp_tx_0_err_id_vc7 = hc00192c0 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc7 
csi_tadp_tx_0_err_id_vc8 = hc00192c0 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc8 
csi_tadp_tx_0_err_id_vc9 = hc00192c0 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc9 
csi_tadp_tx_0_err_id_vc10 = hc00192c0 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc10 
csi_tadp_tx_0_err_id_vc11 = hc00192c0 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc11 
csi_tadp_tx_0_err_id_vc12 = hc00192c0 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc12 
csi_tadp_tx_0_err_id_vc13 = hc00192c0 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc13 
csi_tadp_tx_0_err_id_vc14 = hc00192c0 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc14 
csi_tadp_tx_0_err_id_vc15 = hc00192c0 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc15 
csi_tadp_tx_0_err_id_vc16 = hc00192c0 16 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc16 
csi_tadp_tx_0_err_id_vc17 = hc00192c0 17 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc17 
csi_tadp_tx_0_err_id_vc18 = hc00192c0 18 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc18 
csi_tadp_tx_0_err_id_vc19 = hc00192c0 19 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc19 
csi_tadp_tx_0_err_id_vc20 = hc00192c0 20 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc20 
csi_tadp_tx_0_err_id_vc21 = hc00192c0 21 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc21 
csi_tadp_tx_0_err_id_vc22 = hc00192c0 22 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc22 
csi_tadp_tx_0_err_id_vc23 = hc00192c0 23 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc23 
csi_tadp_tx_0_err_id_vc24 = hc00192c0 24 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc24 
csi_tadp_tx_0_err_id_vc25 = hc00192c0 25 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc25 
csi_tadp_tx_0_err_id_vc26 = hc00192c0 26 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc26 
csi_tadp_tx_0_err_id_vc27 = hc00192c0 27 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc27 
csi_tadp_tx_0_err_id_vc28 = hc00192c0 28 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc28 
csi_tadp_tx_0_err_id_vc29 = hc00192c0 29 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc29 
csi_tadp_tx_0_err_id_vc30 = hc00192c0 30 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc30 
csi_tadp_tx_0_err_id_vc31 = hc00192c0 31 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc31 



; REGISTER csi_tadp_tx_0_INT_ST_ECC_CORRECTED_reg Address hc00192d0
_csi_tadp_tx_0_INT_ST_ECC_CORRECTED_reg = 3221328592 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_err_ecc_corrected_vc0 = hc00192d0 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc0 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected_vc1 = hc00192d0 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc1 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected_vc2 = hc00192d0 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc2 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected_vc3 = hc00192d0 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc3 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected_vc4 = hc00192d0 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc4 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected_vc5 = hc00192d0 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc5 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected_vc6 = hc00192d0 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc6 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected_vc7 = hc00192d0 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc7 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected_vc8 = hc00192d0 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc8 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected_vc9 = hc00192d0 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc9 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected_vc10 = hc00192d0 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc10 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected_vc11 = hc00192d0 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc11 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected_vc12 = hc00192d0 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc12 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected_vc13 = hc00192d0 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc13 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected_vc14 = hc00192d0 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc14 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected_vc15 = hc00192d0 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc15 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected16 = hc00192d0 16 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected16 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected17 = hc00192d0 17 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected17 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected18 = hc00192d0 18 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected18 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected19 = hc00192d0 19 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected19 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected20 = hc00192d0 20 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected20 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected21 = hc00192d0 21 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected21 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected22 = hc00192d0 22 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected22 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected23 = hc00192d0 23 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected23 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected24 = hc00192d0 24 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected24 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected25 = hc00192d0 25 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected25 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected26 = hc00192d0 26 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected26 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected27 = hc00192d0 27 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected27 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected28 = hc00192d0 28 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected28 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected29 = hc00192d0 29 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected29 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected30 = hc00192d0 30 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected30 num of consecutive trig events to cause a trigger. 1 - For a single trig event 
csi_tadp_tx_0_err_ecc_corrected31 = hc00192d0 31 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected31 num of consecutive trig events to cause a trigger. 1 - For a single trig event 



; REGISTER csi_tadp_tx_0_ADV_LOG_AP_NUMBER_reg Address hc0019324
_csi_tadp_tx_0_ADV_LOG_AP_NUMBER_reg = 3221328676 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_number_log = hc0019324 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_number_log 
csi_tadp_tx_0_reserved_31_4 = hc0019324 4 28 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_31_4 



; REGISTER csi_tadp_tx_0_ADV_LOG_AP_INFO_reg Address hc0019328
_csi_tadp_tx_0_ADV_LOG_AP_INFO_reg = 3221328680 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_phy_mode = hc0019328 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_mode Mem lite sleep 0-normal mode. 1-lite sleep
csi_tadp_tx_0_type_error = hc0019328 1 2 h0 RO HEX
; Desc_csi_tadp_tx_0_type_error Mem lite sleep 0-normal mode. 1-lite sleep
csi_tadp_tx_0_reserved_7_3 = hc0019328 3 5 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_7_3 Mem lite sleep 0-normal mode. 1-lite sleep
csi_tadp_tx_0_lane_index = hc0019328 8 6 h0 RO HEX
; Desc_csi_tadp_tx_0_lane_index Mem lite sleep 0-normal mode. 1-lite sleep
csi_tadp_tx_0_reserved_31_14 = hc0019328 14 18 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_31_14 Mem lite sleep 0-normal mode. 1-lite sleep



; REGISTER csi_tadp_tx_0_ADV_LOG_AP_FAULT_WC_reg Address hc0019330
_csi_tadp_tx_0_ADV_LOG_AP_FAULT_WC_reg = 3221328688 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_counted_trail = hc0019330 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_counted_trail top main modules reset control
csi_tadp_tx_0_counted_wc = hc0019330 8 17 h0 RO HEX
; Desc_csi_tadp_tx_0_counted_wc top main modules reset control
csi_tadp_tx_0_reserved_31_25 = hc0019330 25 7 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_31_25 top main modules reset control



; REGISTER csi_tadp_tx_0_ADV_LOG_AP_HDR_reg Address hc0019334
_csi_tadp_tx_0_ADV_LOG_AP_HDR_reg = 3221328692 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_datatype = hc0019334 0 6 h0 RO HEX
; Desc_csi_tadp_tx_0_datatype top main modules reset control
csi_tadp_tx_0_vc = hc0019334 6 2 h0 RO HEX
; Desc_csi_tadp_tx_0_vc top main modules reset control
csi_tadp_tx_0_wordcount = hc0019334 8 16 h0 RO HEX
; Desc_csi_tadp_tx_0_wordcount top main modules reset control
csi_tadp_tx_0_vcx = hc0019334 24 2 h0 RO HEX
; Desc_csi_tadp_tx_0_vcx top main modules reset control
csi_tadp_tx_0_xtra_vcx = hc0019334 26 1 h0 RO BIN
; Desc_csi_tadp_tx_0_xtra_vcx top main modules reset control
csi_tadp_tx_0_reserved_31_27 = hc0019334 27 5 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_31_27 top main modules reset control



; REGISTER csi_tadp_tx_0_INT_ST_FAP_PHY_FATAL_reg Address hc0019360
_csi_tadp_tx_0_INT_ST_FAP_PHY_FATAL_reg = 3221328736 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_phy_errsotsynchs_0 = hc0019360 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_errsotsynchs_0 warm reset enable - need to write magic sequence : 0x900dbabe, 0xbaadcafe
csi_tadp_tx_0_phy_errsotsynchs_1 = hc0019360 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_errsotsynchs_1 warm reset enable - need to write magic sequence : 0x900dbabe, 0xbaadcafe
csi_tadp_tx_0_phy_errsotsynchs_2 = hc0019360 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_errsotsynchs_2 warm reset enable - need to write magic sequence : 0x900dbabe, 0xbaadcafe
csi_tadp_tx_0_phy_errsotsynchs_3 = hc0019360 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_errsotsynchs_3 warm reset enable - need to write magic sequence : 0x900dbabe, 0xbaadcafe
csi_tadp_tx_0_reserved_4 = hc0019360 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_4 warm reset enable - need to write magic sequence : 0x900dbabe, 0xbaadcafe
csi_tadp_tx_0_reserved_5 = hc0019360 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_5 warm reset enable - need to write magic sequence : 0x900dbabe, 0xbaadcafe
csi_tadp_tx_0_reserved_6 = hc0019360 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_6 warm reset enable - need to write magic sequence : 0x900dbabe, 0xbaadcafe
csi_tadp_tx_0_reserved_7 = hc0019360 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_7 warm reset enable - need to write magic sequence : 0x900dbabe, 0xbaadcafe
csi_tadp_tx_0_err_deskew = hc0019360 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_deskew warm reset enable - need to write magic sequence : 0x900dbabe, 0xbaadcafe
csi_tadp_tx_0_reserved_15_9 = hc0019360 9 7 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_15_9 warm reset enable - need to write magic sequence : 0x900dbabe, 0xbaadcafe
csi_tadp_tx_0_phy_rxinvalidcodehs_0 = hc0019360 16 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_rxinvalidcodehs_0 warm reset enable - need to write magic sequence : 0x900dbabe, 0xbaadcafe
csi_tadp_tx_0_phy_rxinvalidcodehs_1 = hc0019360 17 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_rxinvalidcodehs_1 warm reset enable - need to write magic sequence : 0x900dbabe, 0xbaadcafe
csi_tadp_tx_0_phy_rxinvalidcodehs_2 = hc0019360 18 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_rxinvalidcodehs_2 warm reset enable - need to write magic sequence : 0x900dbabe, 0xbaadcafe
csi_tadp_tx_0_reserved_31_19 = hc0019360 19 13 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_31_19 warm reset enable - need to write magic sequence : 0x900dbabe, 0xbaadcafe



; REGISTER csi_tadp_tx_0_INT_ST_FAP_PKT_FATAL_reg Address hc0019370
_csi_tadp_tx_0_INT_ST_FAP_PKT_FATAL_reg = 3221328752 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_err_ecc_double = hc0019370 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_double General status FPGA use
csi_tadp_tx_0_shorter_payload = hc0019370 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_shorter_payload General status FPGA use
csi_tadp_tx_0_reserved_31_2 = hc0019370 2 30 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_31_2 General status FPGA use



; REGISTER csi_tadp_tx_0_INT_ST_FAP_PHY_reg Address hc0019390
_csi_tadp_tx_0_INT_ST_FAP_PHY_reg = 3221328784 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_phy_errsoths_0 = hc0019390 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_errsoths_0 General status FPGA use
csi_tadp_tx_0_phy_errsoths_1 = hc0019390 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_errsoths_1 General status FPGA use
csi_tadp_tx_0_phy_errsoths_2 = hc0019390 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_errsoths_2 General status FPGA use
csi_tadp_tx_0_phy_errsoths_3 = hc0019390 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_errsoths_3 General status FPGA use
csi_tadp_tx_0_reserved_4 = hc0019390 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_4 General status FPGA use
csi_tadp_tx_0_reserved_5 = hc0019390 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_5 General status FPGA use
csi_tadp_tx_0_reserved_6 = hc0019390 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_6 General status FPGA use
csi_tadp_tx_0_reserved_7 = hc0019390 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_7 General status FPGA use
csi_tadp_tx_0_reserved_15_8 = hc0019390 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_15_8 General status FPGA use
csi_tadp_tx_0_phy_erresc_0 = hc0019390 16 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_erresc_0 General status FPGA use
csi_tadp_tx_0_phy_erresc_1 = hc0019390 17 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_erresc_1 General status FPGA use
csi_tadp_tx_0_phy_erresc_2 = hc0019390 18 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_erresc_2 General status FPGA use
csi_tadp_tx_0_phy_erresc_3 = hc0019390 19 1 h0 RO BIN
; Desc_csi_tadp_tx_0_phy_erresc_3 General status FPGA use
csi_tadp_tx_0_reserved_20 = hc0019390 20 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_20 General status FPGA use
csi_tadp_tx_0_reserved_21 = hc0019390 21 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_21 General status FPGA use
csi_tadp_tx_0_reserved_22 = hc0019390 22 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_22 General status FPGA use
csi_tadp_tx_0_reserved_23 = hc0019390 23 1 h0 RO BIN
; Desc_csi_tadp_tx_0_reserved_23 General status FPGA use
csi_tadp_tx_0_reserved_31_24 = hc0019390 24 8 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_31_24 General status FPGA use



; REGISTER csi_tadp_tx_0_INT_ST_FAP_LINE_reg Address hc00193b0
_csi_tadp_tx_0_INT_ST_FAP_LINE_reg = 3221328816 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_err_l_bndry_match_di0 = hc00193b0 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_bndry_match_di0 General status FPGA use
csi_tadp_tx_0_err_l_bndry_match_di1 = hc00193b0 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_bndry_match_di1 General status FPGA use
csi_tadp_tx_0_err_l_bndry_match_di2 = hc00193b0 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_bndry_match_di2 General status FPGA use
csi_tadp_tx_0_err_l_bndry_match_di3 = hc00193b0 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_bndry_match_di3 General status FPGA use
csi_tadp_tx_0_err_l_bndry_match_di4 = hc00193b0 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_bndry_match_di4 General status FPGA use
csi_tadp_tx_0_err_l_bndry_match_di5 = hc00193b0 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_bndry_match_di5 General status FPGA use
csi_tadp_tx_0_err_l_bndry_match_di6 = hc00193b0 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_bndry_match_di6 General status FPGA use
csi_tadp_tx_0_err_l_bndry_match_di7 = hc00193b0 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_bndry_match_di7 General status FPGA use
csi_tadp_tx_0_reserved_15_8 = hc00193b0 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_15_8 General status FPGA use
csi_tadp_tx_0_err_l_seq_di0 = hc00193b0 16 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_seq_di0 General status FPGA use
csi_tadp_tx_0_err_l_seq_di1 = hc00193b0 17 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_seq_di1 General status FPGA use
csi_tadp_tx_0_err_l_seq_di2 = hc00193b0 18 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_seq_di2 General status FPGA use
csi_tadp_tx_0_err_l_seq_di3 = hc00193b0 19 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_seq_di3 General status FPGA use
csi_tadp_tx_0_err_l_seq_di4 = hc00193b0 20 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_seq_di4 General status FPGA use
csi_tadp_tx_0_err_l_seq_di5 = hc00193b0 21 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_seq_di5 General status FPGA use
csi_tadp_tx_0_err_l_seq_di6 = hc00193b0 22 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_seq_di6 General status FPGA use
csi_tadp_tx_0_err_l_seq_di7 = hc00193b0 23 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_l_seq_di7 General status FPGA use
csi_tadp_tx_0_reserved_31_24 = hc00193b0 24 8 h0 RO HEX
; Desc_csi_tadp_tx_0_reserved_31_24 General status FPGA use



; REGISTER csi_tadp_tx_0_INT_ST_FAP_BNDRY_FRAME_FATAL_reg Address hc0019420
_csi_tadp_tx_0_INT_ST_FAP_BNDRY_FRAME_FATAL_reg = 3221328928 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_err_f_bndry_match_vc0 = hc0019420 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc0 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc1 = hc0019420 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc1 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc2 = hc0019420 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc2 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc3 = hc0019420 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc3 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc4 = hc0019420 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc4 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc5 = hc0019420 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc5 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc6 = hc0019420 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc6 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc7 = hc0019420 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc7 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc8 = hc0019420 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc8 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc9 = hc0019420 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc9 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc10 = hc0019420 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc10 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc11 = hc0019420 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc11 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc12 = hc0019420 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc12 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc13 = hc0019420 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc13 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc14 = hc0019420 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc14 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc15 = hc0019420 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc15 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc16 = hc0019420 16 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc16 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc17 = hc0019420 17 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc17 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc18 = hc0019420 18 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc18 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc19 = hc0019420 19 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc19 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc20 = hc0019420 20 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc20 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc21 = hc0019420 21 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc21 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc22 = hc0019420 22 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc22 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc23 = hc0019420 23 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc23 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc24 = hc0019420 24 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc24 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc25 = hc0019420 25 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc25 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc26 = hc0019420 26 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc26 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc27 = hc0019420 27 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc27 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc28 = hc0019420 28 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc28 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc29 = hc0019420 29 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc29 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc30 = hc0019420 30 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc30 General status FPGA use
csi_tadp_tx_0_err_f_bndry_match_vc31 = hc0019420 31 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc31 General status FPGA use



; REGISTER csi_tadp_tx_0_INT_ST_FAP_SEQ_FRAME_FATAL_reg Address hc0019430
_csi_tadp_tx_0_INT_ST_FAP_SEQ_FRAME_FATAL_reg = 3221328944 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_err_f_seq_vc0 = hc0019430 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc0 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc1 = hc0019430 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc1 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc2 = hc0019430 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc2 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc3 = hc0019430 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc3 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc4 = hc0019430 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc4 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc5 = hc0019430 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc5 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc6 = hc0019430 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc6 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc7 = hc0019430 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc7 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc8 = hc0019430 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc8 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc9 = hc0019430 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc9 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc10 = hc0019430 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc10 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc11 = hc0019430 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc11 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc12 = hc0019430 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc12 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc13 = hc0019430 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc13 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc14 = hc0019430 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc14 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc15 = hc0019430 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc15 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc16 = hc0019430 16 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc16 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc17 = hc0019430 17 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc17 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc18 = hc0019430 18 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc18 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc19 = hc0019430 19 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc19 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc20 = hc0019430 20 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc20 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc21 = hc0019430 21 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc21 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc22 = hc0019430 22 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc22 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc23 = hc0019430 23 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc23 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc24 = hc0019430 24 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc24 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc25 = hc0019430 25 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc25 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc26 = hc0019430 26 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc26 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc27 = hc0019430 27 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc27 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc28 = hc0019430 28 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc28 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc29 = hc0019430 29 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc29 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc30 = hc0019430 30 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc30 General status FPGA use
csi_tadp_tx_0_err_f_seq_vc31 = hc0019430 31 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc31 General status FPGA use



; REGISTER csi_tadp_tx_0_INT_ST_FAP_CRC_FRAME_FATAL_reg Address hc0019440
_csi_tadp_tx_0_INT_ST_FAP_CRC_FRAME_FATAL_reg = 3221328960 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_err_frame_data_vc0 = hc0019440 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc0 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc1 = hc0019440 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc1 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc2 = hc0019440 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc2 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc3 = hc0019440 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc3 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc4 = hc0019440 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc4 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc5 = hc0019440 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc5 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc6 = hc0019440 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc6 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc7 = hc0019440 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc7 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc8 = hc0019440 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc8 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc9 = hc0019440 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc9 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc10 = hc0019440 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc10 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc11 = hc0019440 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc11 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc12 = hc0019440 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc12 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc13 = hc0019440 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc13 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc14 = hc0019440 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc14 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc15 = hc0019440 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc15 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc16 = hc0019440 16 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc16 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc17 = hc0019440 17 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc17 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc18 = hc0019440 18 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc18 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc19 = hc0019440 19 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc19 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc20 = hc0019440 20 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc20 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc21 = hc0019440 21 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc21 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc22 = hc0019440 22 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc22 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc23 = hc0019440 23 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc23 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc24 = hc0019440 24 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc24 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc25 = hc0019440 25 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc25 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc26 = hc0019440 26 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc26 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc27 = hc0019440 27 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc27 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc28 = hc0019440 28 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc28 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc29 = hc0019440 29 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc29 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc30 = hc0019440 30 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc30 General status FPGA use
csi_tadp_tx_0_err_frame_data_vc31 = hc0019440 31 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc31 General status FPGA use



; REGISTER csi_tadp_tx_0_INT_ST_FAP_PLD_CRC_FATAL_reg Address hc0019450
_csi_tadp_tx_0_INT_ST_FAP_PLD_CRC_FATAL_reg = 3221328976 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_err_crc_vc0 = hc0019450 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc0 General status FPGA use
csi_tadp_tx_0_err_crc_vc1 = hc0019450 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc1 General status FPGA use
csi_tadp_tx_0_err_crc_vc2 = hc0019450 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc2 General status FPGA use
csi_tadp_tx_0_err_crc_vc3 = hc0019450 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc3 General status FPGA use
csi_tadp_tx_0_err_crc_vc4 = hc0019450 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc4 General status FPGA use
csi_tadp_tx_0_err_crc_vc5 = hc0019450 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc5 General status FPGA use
csi_tadp_tx_0_err_crc_vc6 = hc0019450 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc6 General status FPGA use
csi_tadp_tx_0_err_crc_vc7 = hc0019450 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc7 General status FPGA use
csi_tadp_tx_0_err_crc_vc8 = hc0019450 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc8 General status FPGA use
csi_tadp_tx_0_err_crc_vc9 = hc0019450 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc9 General status FPGA use
csi_tadp_tx_0_err_crc_vc10 = hc0019450 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc10 General status FPGA use
csi_tadp_tx_0_err_crc_vc11 = hc0019450 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc11 General status FPGA use
csi_tadp_tx_0_err_crc_vc12 = hc0019450 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc12 General status FPGA use
csi_tadp_tx_0_err_crc_vc13 = hc0019450 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc13 General status FPGA use
csi_tadp_tx_0_err_crc_vc14 = hc0019450 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc14 General status FPGA use
csi_tadp_tx_0_err_crc_vc15 = hc0019450 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc15 General status FPGA use
csi_tadp_tx_0_err_crc_vc16 = hc0019450 16 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc16 General status FPGA use
csi_tadp_tx_0_err_crc_vc17 = hc0019450 17 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc17 General status FPGA use
csi_tadp_tx_0_err_crc_vc18 = hc0019450 18 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc18 General status FPGA use
csi_tadp_tx_0_err_crc_vc19 = hc0019450 19 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc19 General status FPGA use
csi_tadp_tx_0_err_crc_vc20 = hc0019450 20 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc20 General status FPGA use
csi_tadp_tx_0_err_crc_vc21 = hc0019450 21 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc21 General status FPGA use
csi_tadp_tx_0_err_crc_vc22 = hc0019450 22 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc22 General status FPGA use
csi_tadp_tx_0_err_crc_vc23 = hc0019450 23 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc23 General status FPGA use
csi_tadp_tx_0_err_crc_vc24 = hc0019450 24 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc24 General status FPGA use
csi_tadp_tx_0_err_crc_vc25 = hc0019450 25 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc25 General status FPGA use
csi_tadp_tx_0_err_crc_vc26 = hc0019450 26 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc26 General status FPGA use
csi_tadp_tx_0_err_crc_vc27 = hc0019450 27 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc27 General status FPGA use
csi_tadp_tx_0_err_crc_vc28 = hc0019450 28 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc28 General status FPGA use
csi_tadp_tx_0_err_crc_vc29 = hc0019450 29 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc29 General status FPGA use
csi_tadp_tx_0_err_crc_vc30 = hc0019450 30 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc30 General status FPGA use
csi_tadp_tx_0_err_crc_vc31 = hc0019450 31 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_crc_vc31 General status FPGA use



; REGISTER csi_tadp_tx_0_INT_ST_FAP_DATA_ID_reg Address hc0019460
_csi_tadp_tx_0_INT_ST_FAP_DATA_ID_reg = 3221328992 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_err_id_vc0 = hc0019460 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc0 General status FPGA use
csi_tadp_tx_0_err_id_vc1 = hc0019460 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc1 General status FPGA use
csi_tadp_tx_0_err_id_vc2 = hc0019460 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc2 General status FPGA use
csi_tadp_tx_0_err_id_vc3 = hc0019460 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc3 General status FPGA use
csi_tadp_tx_0_err_id_vc4 = hc0019460 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc4 General status FPGA use
csi_tadp_tx_0_err_id_vc5 = hc0019460 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc5 General status FPGA use
csi_tadp_tx_0_err_id_vc6 = hc0019460 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc6 General status FPGA use
csi_tadp_tx_0_err_id_vc7 = hc0019460 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc7 General status FPGA use
csi_tadp_tx_0_err_id_vc8 = hc0019460 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc8 General status FPGA use
csi_tadp_tx_0_err_id_vc9 = hc0019460 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc9 General status FPGA use
csi_tadp_tx_0_err_id_vc10 = hc0019460 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc10 General status FPGA use
csi_tadp_tx_0_err_id_vc11 = hc0019460 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc11 General status FPGA use
csi_tadp_tx_0_err_id_vc12 = hc0019460 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc12 General status FPGA use
csi_tadp_tx_0_err_id_vc13 = hc0019460 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc13 General status FPGA use
csi_tadp_tx_0_err_id_vc14 = hc0019460 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc14 General status FPGA use
csi_tadp_tx_0_err_id_vc15 = hc0019460 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc15 General status FPGA use
csi_tadp_tx_0_err_id_vc16 = hc0019460 16 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc16 General status FPGA use
csi_tadp_tx_0_err_id_vc17 = hc0019460 17 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc17 General status FPGA use
csi_tadp_tx_0_err_id_vc18 = hc0019460 18 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc18 General status FPGA use
csi_tadp_tx_0_err_id_vc19 = hc0019460 19 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc19 General status FPGA use
csi_tadp_tx_0_err_id_vc20 = hc0019460 20 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc20 General status FPGA use
csi_tadp_tx_0_err_id_vc21 = hc0019460 21 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc21 General status FPGA use
csi_tadp_tx_0_err_id_vc22 = hc0019460 22 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc22 General status FPGA use
csi_tadp_tx_0_err_id_vc23 = hc0019460 23 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc23 General status FPGA use
csi_tadp_tx_0_err_id_vc24 = hc0019460 24 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc24 General status FPGA use
csi_tadp_tx_0_err_id_vc25 = hc0019460 25 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc25 General status FPGA use
csi_tadp_tx_0_err_id_vc26 = hc0019460 26 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc26 General status FPGA use
csi_tadp_tx_0_err_id_vc27 = hc0019460 27 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc27 General status FPGA use
csi_tadp_tx_0_err_id_vc28 = hc0019460 28 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc28 General status FPGA use
csi_tadp_tx_0_err_id_vc29 = hc0019460 29 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc29 General status FPGA use
csi_tadp_tx_0_err_id_vc30 = hc0019460 30 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc30 General status FPGA use
csi_tadp_tx_0_err_id_vc31 = hc0019460 31 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_id_vc31 General status FPGA use



; REGISTER csi_tadp_tx_0_INT_ST_FAP_ECC_CORRECTED_reg Address hc0019470
_csi_tadp_tx_0_INT_ST_FAP_ECC_CORRECTED_reg = 3221329008 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_err_ecc_corrected_vc0 = hc0019470 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc0 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected_vc1 = hc0019470 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc1 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected_vc2 = hc0019470 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc2 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected_vc3 = hc0019470 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc3 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected_vc4 = hc0019470 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc4 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected_vc5 = hc0019470 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc5 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected_vc6 = hc0019470 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc6 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected_vc7 = hc0019470 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc7 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected_vc8 = hc0019470 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc8 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected_vc9 = hc0019470 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc9 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected_vc10 = hc0019470 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc10 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected_vc11 = hc0019470 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc11 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected_vc12 = hc0019470 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc12 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected_vc13 = hc0019470 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc13 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected_vc14 = hc0019470 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc14 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected_vc15 = hc0019470 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc15 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected16 = hc0019470 16 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected16 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected17 = hc0019470 17 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected17 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected18 = hc0019470 18 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected18 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected19 = hc0019470 19 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected19 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected20 = hc0019470 20 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected20 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected21 = hc0019470 21 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected21 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected22 = hc0019470 22 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected22 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected23 = hc0019470 23 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected23 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected24 = hc0019470 24 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected24 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected25 = hc0019470 25 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected25 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected26 = hc0019470 26 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected26 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected27 = hc0019470 27 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected27 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected28 = hc0019470 28 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected28 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected29 = hc0019470 29 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected29 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected30 = hc0019470 30 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected30 General status FPGA use
csi_tadp_tx_0_err_ecc_corrected31 = hc0019470 31 1 h0 RO BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected31 General status FPGA use



; REGISTER csi_tadp_tx_0_PPI_CALIBCTRL_R_COMMON_CALIBCTRL_2_1_reg Address hc0006084
_csi_tadp_tx_0_PPI_CALIBCTRL_R_COMMON_CALIBCTRL_2_1_reg = 3221250180 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_DDL_COUNTER_TARGET_OBS_LSBs = hc0006084 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_DDL_COUNTER_TARGET_OBS_LSBs General status FPGA use



; REGISTER csi_tadp_tx_0_PPI_CALIBCTRL_R_COMMON_CALIBCTRL_2_2_reg Address hc0006088
_csi_tadp_tx_0_PPI_CALIBCTRL_R_COMMON_CALIBCTRL_2_2_reg = 3221250184 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_DDL_COUNTER_TARGET_OBS_MSBs = hc0006088 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_DDL_COUNTER_TARGET_OBS_MSBs General status FPGA use
csi_tadp_tx_0_DDL_COUNTER_MULT_OBS_LSBs = hc0006088 4 12 h0 RO HEX
; Desc_csi_tadp_tx_0_DDL_COUNTER_MULT_OBS_LSBs General status FPGA use



; REGISTER csi_tadp_tx_0_PPI_CALIBCTRL_R_COMMON_CALIBCTRL_2_3_reg Address hc000608c
_csi_tadp_tx_0_PPI_CALIBCTRL_R_COMMON_CALIBCTRL_2_3_reg = 3221250188 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_DDL_COUNTER_MULT_OBS_MSBs = hc000608c 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_DDL_COUNTER_MULT_OBS_MSBs General status FPGA use
csi_tadp_tx_0_RESERVED_15_8 = hc000608c 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 General status FPGA use



; REGISTER csi_tadp_tx_0_PPI_CALIBCTRL_R_COMMON_CALIBCTRL_2_4_reg Address hc0006090
_csi_tadp_tx_0_PPI_CALIBCTRL_R_COMMON_CALIBCTRL_2_4_reg = 3221250192 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_DDL_COUNTER_SUM_OBS = hc0006090 0 11 h0 RO HEX
; Desc_csi_tadp_tx_0_DDL_COUNTER_SUM_OBS General status FPGA use
csi_tadp_tx_0_RESERVED_15_11 = hc0006090 11 5 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_11 General status FPGA use



; REGISTER csi_tadp_tx_0_PPI_CALIBCTRL_R_COMMON_CALIBCTRL_2_5_reg Address hc0006094
_csi_tadp_tx_0_PPI_CALIBCTRL_R_COMMON_CALIBCTRL_2_5_reg = 3221250196 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_DDL_CAL_STATUS0 = hc0006094 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_DDL_CAL_STATUS0 General status FPGA use
csi_tadp_tx_0_DDL_CAL_STATUS1 = hc0006094 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_DDL_CAL_STATUS1 General status FPGA use
csi_tadp_tx_0_DDL_CAL_STATUS2 = hc0006094 8 4 h0 RO HEX
; Desc_csi_tadp_tx_0_DDL_CAL_STATUS2 General status FPGA use
csi_tadp_tx_0_DDL_CAL_STATUS3 = hc0006094 12 4 h0 RO HEX
; Desc_csi_tadp_tx_0_DDL_CAL_STATUS3 General status FPGA use



; REGISTER csi_tadp_tx_0_PPI_CALIBCTRL_R_ADC_DEBUG_reg Address hc00060a8
_csi_tadp_tx_0_PPI_CALIBCTRL_R_ADC_DEBUG_reg = 3221250216 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_CB_ATB_SEL_DAC = hc00060a8 0 10 h0 RO HEX
; Desc_csi_tadp_tx_0_CB_ATB_SEL_DAC General config FPGA use
csi_tadp_tx_0_ADC_DONE = hc00060a8 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_ADC_DONE General config FPGA use
csi_tadp_tx_0_RESERVED_15_11 = hc00060a8 11 5 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_11 General config FPGA use



; REGISTER csi_tadp_tx_0_PPI_R_LPDCOCAL_DEBUG_RB_reg Address hc000681c
_csi_tadp_tx_0_PPI_R_LPDCOCAL_DEBUG_RB_reg = 3221252124 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LPDCOCAL_N_MEAS = hc000681c 0 11 h0 RO HEX
; Desc_csi_tadp_tx_0_LPDCOCAL_N_MEAS General config FPGA use
csi_tadp_tx_0_LPDCOCAL_ERROR_RB = hc000681c 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LPDCOCAL_ERROR_RB General config FPGA use
csi_tadp_tx_0_LPDCOCAL_CAL_DONE = hc000681c 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LPDCOCAL_CAL_DONE General config FPGA use
csi_tadp_tx_0_LPDCOCAL_N_MEAS_DONE = hc000681c 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LPDCOCAL_N_MEAS_DONE General config FPGA use
csi_tadp_tx_0_LPDCOCAL_ERROR_VT_RB = hc000681c 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LPDCOCAL_ERROR_VT_RB General config FPGA use
csi_tadp_tx_0_RESERVED_15_15 = hc000681c 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 General config FPGA use



; REGISTER csi_tadp_tx_0_PPI_R_LPDCOCAL_DEBUG_COARSE_RB_reg Address hc0006824
_csi_tadp_tx_0_PPI_R_LPDCOCAL_DEBUG_COARSE_RB_reg = 3221252132 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LPDCOCAL_CAL_BOUND_STATUS = hc0006824 0 2 h0 RO HEX
; Desc_csi_tadp_tx_0_LPDCOCAL_CAL_BOUND_STATUS General config FPGA use
csi_tadp_tx_0_LPDCOCAL_CAL_COARSE_HIT = hc0006824 2 4 h0 RO HEX
; Desc_csi_tadp_tx_0_LPDCOCAL_CAL_COARSE_HIT General config FPGA use
csi_tadp_tx_0_LPDCOCAL_PON_STATE = hc0006824 6 4 h0 RO HEX
; Desc_csi_tadp_tx_0_LPDCOCAL_PON_STATE General config FPGA use
csi_tadp_tx_0_RESERVED_15_10 = hc0006824 10 6 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 General config FPGA use



; REGISTER csi_tadp_tx_0_PPI_R_LPDCOCAL_DEBUG_COARSE_MEAS_0_RB_reg Address hc0006828
_csi_tadp_tx_0_PPI_R_LPDCOCAL_DEBUG_COARSE_MEAS_0_RB_reg = 3221252136 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LPDCOCAL_STORED_MEAS_0 = hc0006828 0 11 h0 RO HEX
; Desc_csi_tadp_tx_0_LPDCOCAL_STORED_MEAS_0 General config FPGA use
csi_tadp_tx_0_RESERVED_15_11 = hc0006828 11 5 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_11 General config FPGA use



; REGISTER csi_tadp_tx_0_PPI_R_LPDCOCAL_DEBUG_COARSE_MEAS_1_RB_reg Address hc000682c
_csi_tadp_tx_0_PPI_R_LPDCOCAL_DEBUG_COARSE_MEAS_1_RB_reg = 3221252140 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LPDCOCAL_STORED_MEAS_1 = hc000682c 0 11 h0 RO HEX
; Desc_csi_tadp_tx_0_LPDCOCAL_STORED_MEAS_1 General config FPGA use
csi_tadp_tx_0_RESERVED_15_11 = hc000682c 11 5 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_11 General config FPGA use



; REGISTER csi_tadp_tx_0_PPI_R_LPDCOCAL_DEBUG_COARSE_FWORD_RB_reg Address hc0006830
_csi_tadp_tx_0_PPI_R_LPDCOCAL_DEBUG_COARSE_FWORD_RB_reg = 3221252144 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LPDCOCAL_STORED_FWORD_0 = hc0006830 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_LPDCOCAL_STORED_FWORD_0 General config FPGA use
csi_tadp_tx_0_LPDCOCAL_STORED_FWORD_1 = hc0006830 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_LPDCOCAL_STORED_FWORD_1 General config FPGA use



; REGISTER csi_tadp_tx_0_PPI_R_LPDCOCAL_DEBUG_MEASURE_CURR_ERROR_reg Address hc0006834
_csi_tadp_tx_0_PPI_R_LPDCOCAL_DEBUG_MEASURE_CURR_ERROR_reg = 3221252148 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LPDCOCAL_MEAS_CURR_ERROR = hc0006834 0 12 h0 RO HEX
; Desc_csi_tadp_tx_0_LPDCOCAL_MEAS_CURR_ERROR General config FPGA use
csi_tadp_tx_0_RESERVED_15_12 = hc0006834 12 4 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_12 General config FPGA use



; REGISTER csi_tadp_tx_0_PPI_R_LPDCOCAL_DEBUG_MEASURE_LAST_ERROR_reg Address hc0006838
_csi_tadp_tx_0_PPI_R_LPDCOCAL_DEBUG_MEASURE_LAST_ERROR_reg = 3221252152 0 32 b00000000000000000000100000000000 RO
csi_tadp_tx_0_LPDCOCAL_LAST_MEAS_ERROR = hc0006838 0 12 h800 RO HEX
; Desc_csi_tadp_tx_0_LPDCOCAL_LAST_MEAS_ERROR General config FPGA use
csi_tadp_tx_0_LPDCOCAL_VT_STATE = hc0006838 12 3 h0 RO HEX
; Desc_csi_tadp_tx_0_LPDCOCAL_VT_STATE General config FPGA use
csi_tadp_tx_0_RESERVED_15_15 = hc0006838 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 General config FPGA use



; REGISTER csi_tadp_tx_0_PPI_R_LPDCOCAL_DEBUG_VT_reg Address hc000683c
_csi_tadp_tx_0_PPI_R_LPDCOCAL_DEBUG_VT_reg = 3221252156 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LPDCOCAL_N_WITHIN_RANGE_VT = hc000683c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LPDCOCAL_N_WITHIN_RANGE_VT General config FPGA use
csi_tadp_tx_0_LPDCOCAL_N_BELOW_RANGE_VT = hc000683c 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LPDCOCAL_N_BELOW_RANGE_VT General config FPGA use
csi_tadp_tx_0_LPDCOCAL_N_ABOVE_RANGE_VT = hc000683c 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LPDCOCAL_N_ABOVE_RANGE_VT General config FPGA use
csi_tadp_tx_0_LPDCOCAL_MEAS_ADJ_P0_VT = hc000683c 3 11 h0 RO HEX
; Desc_csi_tadp_tx_0_LPDCOCAL_MEAS_ADJ_P0_VT General config FPGA use
csi_tadp_tx_0_RESERVED_15_14 = hc000683c 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 General config FPGA use



; REGISTER csi_tadp_tx_0_PPI_R_LBPULSE_COUNTER_RB_reg Address hc0006848
_csi_tadp_tx_0_PPI_R_LBPULSE_COUNTER_RB_reg = 3221252168 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LB_PULSE_COUNTER = hc0006848 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_LB_PULSE_COUNTER General config FPGA use



; REGISTER csi_tadp_tx_0_PPI_R_LB_START_CMU_RB_reg Address hc000684c
_csi_tadp_tx_0_PPI_R_LB_START_CMU_RB_reg = 3221252172 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LB_STOP_CMU = hc000684c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LB_STOP_CMU General config FPGA use
csi_tadp_tx_0_RESERVED_15_1 = hc000684c 1 15 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_1 General config FPGA use



; REGISTER csi_tadp_tx_0_PPI_R_DDLCAL_DEBUG_0_reg Address hc00068a0
_csi_tadp_tx_0_PPI_R_DDLCAL_DEBUG_0_reg = 3221252256 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_DDLCAL_COUNTER0 = hc00068a0 0 10 h0 RO HEX
; Desc_csi_tadp_tx_0_DDLCAL_COUNTER0 General config FPGA use
csi_tadp_tx_0_RESERVED_15_10 = hc00068a0 10 6 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 General config FPGA use



; REGISTER csi_tadp_tx_0_PPI_R_DDLCAL_DEBUG_1_reg Address hc00068a4
_csi_tadp_tx_0_PPI_R_DDLCAL_DEBUG_1_reg = 3221252260 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_DDLCAL_COUNTERX = hc00068a4 0 10 h0 RO HEX
; Desc_csi_tadp_tx_0_DDLCAL_COUNTERX General config FPGA use
csi_tadp_tx_0_RESERVED_15_10 = hc00068a4 10 6 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 General config FPGA use



; REGISTER csi_tadp_tx_0_PPI_R_TERMCAL_DEBUG_0_reg Address hc0006904
_csi_tadp_tx_0_PPI_R_TERMCAL_DEBUG_0_reg = 3221252356 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_TERMCAL_COMP_UNCHANGED = hc0006904 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_TERMCAL_COMP_UNCHANGED General config FPGA use
csi_tadp_tx_0_TERMCAL_CAL_ERROR = hc0006904 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_TERMCAL_CAL_ERROR General config FPGA use
csi_tadp_tx_0_RESERVED_15_2 = hc0006904 2 14 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_2 General config FPGA use



; REGISTER csi_tadp_tx_0_PPI_R_OFFSETCAL_DEBUG_LANE0_reg Address hc0006944
_csi_tadp_tx_0_PPI_R_OFFSETCAL_DEBUG_LANE0_reg = 3221252420 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OFFSETCAL_ERRCAL_RIGHT = hc0006944 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OFFSETCAL_ERRCAL_RIGHT 
csi_tadp_tx_0_OFFSETCAL_ERRCAL_LEFT = hc0006944 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OFFSETCAL_ERRCAL_LEFT 
csi_tadp_tx_0_RESERVED_15_8 = hc0006944 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 



; REGISTER csi_tadp_tx_0_PPI_R_OFFSETCAL_DEBUG_LANE1_reg Address hc0006948
_csi_tadp_tx_0_PPI_R_OFFSETCAL_DEBUG_LANE1_reg = 3221252424 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OFFSETCAL_ERRCAL_RIGHT = hc0006948 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OFFSETCAL_ERRCAL_RIGHT 
csi_tadp_tx_0_OFFSETCAL_ERRCAL_LEFT = hc0006948 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OFFSETCAL_ERRCAL_LEFT 
csi_tadp_tx_0_RESERVED_15_8 = hc0006948 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 



; REGISTER csi_tadp_tx_0_PPI_R_OFFSETCAL_DEBUG_LANE2_reg Address hc000694c
_csi_tadp_tx_0_PPI_R_OFFSETCAL_DEBUG_LANE2_reg = 3221252428 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OFFSETCAL_ERRCAL_RIGHT = hc000694c 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OFFSETCAL_ERRCAL_RIGHT 
csi_tadp_tx_0_OFFSETCAL_ERRCAL_LEFT = hc000694c 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OFFSETCAL_ERRCAL_LEFT 
csi_tadp_tx_0_RESERVED_15_8 = hc000694c 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 



; REGISTER csi_tadp_tx_0_PPI_R_OFFSETCAL_DEBUG_LANE3_reg Address hc0006950
_csi_tadp_tx_0_PPI_R_OFFSETCAL_DEBUG_LANE3_reg = 3221252432 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OFFSETCAL_ERRCAL_RIGHT = hc0006950 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OFFSETCAL_ERRCAL_RIGHT 
csi_tadp_tx_0_OFFSETCAL_ERRCAL_LEFT = hc0006950 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OFFSETCAL_ERRCAL_LEFT 
csi_tadp_tx_0_RESERVED_15_8 = hc0006950 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 



; REGISTER csi_tadp_tx_0_PPI_R_OFFSETCAL_DEBUG_LANE4_reg Address hc0006954
_csi_tadp_tx_0_PPI_R_OFFSETCAL_DEBUG_LANE4_reg = 3221252436 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OFFSETCAL_ERRCAL_RIGHT = hc0006954 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OFFSETCAL_ERRCAL_RIGHT 
csi_tadp_tx_0_OFFSETCAL_ERRCAL_LEFT = hc0006954 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OFFSETCAL_ERRCAL_LEFT 
csi_tadp_tx_0_RESERVED_15_8 = hc0006954 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE0_OVR_0_9_reg Address hc0007024
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE0_OVR_0_9_reg = 3221254180 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXACTIVEHS_D0 = hc0007024 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXACTIVEHS_D0 
csi_tadp_tx_0_O_RXSYNCHS_D0 = hc0007024 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXSYNCHS_D0 
csi_tadp_tx_0_O_RXVALIDHS_D0 = hc0007024 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXVALIDHS_D0 
csi_tadp_tx_0_O_RXSKEWCALHS_D0 = hc0007024 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXSKEWCALHS_D0 
csi_tadp_tx_0_O_RXWORDCLKHS_D0 = hc0007024 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXWORDCLKHS_D0 
csi_tadp_tx_0_O_RXDATAHS_D0 = hc0007024 5 8 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXDATAHS_D0 
csi_tadp_tx_0_O_RXALTERNATECALHS_D0 = hc0007024 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXALTERNATECALHS_D0 
csi_tadp_tx_0_RESERVED_15_14 = hc0007024 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE0_OVR_0_10_reg Address hc0007028
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE0_OVR_0_10_reg = 3221254184 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_TXREQUESTHS_D0_INT = hc0007028 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTHS_D0_INT 
csi_tadp_tx_0_I_TXDATATRANSFERENHS_D0_INT = hc0007028 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXDATATRANSFERENHS_D0_INT 
csi_tadp_tx_0_O_TXREADYHS_D0 = hc0007028 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_TXREADYHS_D0 
csi_tadp_tx_0_O_TXWORDCLKHS_D0 = hc0007028 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_TXWORDCLKHS_D0 
csi_tadp_tx_0_I_TXDATAHS_D0_INT = hc0007028 4 8 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXDATAHS_D0_INT 
csi_tadp_tx_0_I_TXALTERNATECALHS_D0_INT = hc0007028 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXALTERNATECALHS_D0_INT 
csi_tadp_tx_0_I_TXSKEWCALHS_D0_INT = hc0007028 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXSKEWCALHS_D0_INT 
csi_tadp_tx_0_RESERVED_15_14 = hc0007028 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE0_OVR_0_11_reg Address hc000702c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE0_OVR_0_11_reg = 3221254188 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_TXREQUESTESC_D0_INT = hc000702c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTESC_D0_INT 
csi_tadp_tx_0_I_TXLPDTESC_D0_INT = hc000702c 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXLPDTESC_D0_INT 
csi_tadp_tx_0_I_TXULPSEXIT_D0_INT = hc000702c 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXULPSEXIT_D0_INT 
csi_tadp_tx_0_I_TXULPSESC_D0_INT = hc000702c 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXULPSESC_D0_INT 
csi_tadp_tx_0_I_TXVALIDESC_D0_INT = hc000702c 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXVALIDESC_D0_INT 
csi_tadp_tx_0_O_TXREADYESC_D0 = hc000702c 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_TXREADYESC_D0 
csi_tadp_tx_0_I_TXTRIGGERESC_D0_INT = hc000702c 6 4 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXTRIGGERESC_D0_INT 
csi_tadp_tx_0_RESERVED_15_10 = hc000702c 10 6 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE0_OVR_0_12_reg Address hc0007030
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE0_OVR_0_12_reg = 3221254192 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_TXDATAESC_D0_INT = hc0007030 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXDATAESC_D0_INT 
csi_tadp_tx_0_RESERVED_15_8 = hc0007030 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE0_OVR_0_13_reg Address hc0007034
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE0_OVR_0_13_reg = 3221254196 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXCLKESC_D0 = hc0007034 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXCLKESC_D0 
csi_tadp_tx_0_O_RXLPDTESC_D0 = hc0007034 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXLPDTESC_D0 
csi_tadp_tx_0_O_RXULPSESC_D0 = hc0007034 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXULPSESC_D0 
csi_tadp_tx_0_O_RXVALIDESC_D0 = hc0007034 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXVALIDESC_D0 
csi_tadp_tx_0_O_RXTRIGGERESC_D0 = hc0007034 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXTRIGGERESC_D0 
csi_tadp_tx_0_O_RXDATAESC_D0 = hc0007034 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXDATAESC_D0 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE0_OVR_0_14_reg Address hc0007038
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE0_OVR_0_14_reg = 3221254200 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_ENABLE_D0_INT = hc0007038 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_ENABLE_D0_INT 
csi_tadp_tx_0_O_STOPSTATE_D0 = hc0007038 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_STOPSTATE_D0 
csi_tadp_tx_0_O_ULPSACTIVENOT_D0 = hc0007038 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ULPSACTIVENOT_D0 
csi_tadp_tx_0_I_TURNREQUEST_D0_INT = hc0007038 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TURNREQUEST_D0_INT 
csi_tadp_tx_0_I_TURNDISABLE_D0_INT = hc0007038 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TURNDISABLE_D0_INT 
csi_tadp_tx_0_O_DIRECTION_D0 = hc0007038 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_DIRECTION_D0 
csi_tadp_tx_0_I_FORCERXMODE_D0_INT = hc0007038 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_FORCERXMODE_D0_INT 
csi_tadp_tx_0_I_FORCETXSTOPMODE_D0_INT = hc0007038 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_FORCETXSTOPMODE_D0_INT 
csi_tadp_tx_0_O_ERRESC_D0 = hc0007038 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRESC_D0 
csi_tadp_tx_0_O_ERRSYNCESC_D0 = hc0007038 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRSYNCESC_D0 
csi_tadp_tx_0_O_ERRCONTROL_D0 = hc0007038 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRCONTROL_D0 
csi_tadp_tx_0_O_ERRCONTENTIONLP0_D0 = hc0007038 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP0_D0 
csi_tadp_tx_0_O_ERRCONTENTIONLP1_D0 = hc0007038 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP1_D0 
csi_tadp_tx_0_O_ERRSOTHS_D0 = hc0007038 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRSOTHS_D0 
csi_tadp_tx_0_O_ERRSOTSYNCHS_D0 = hc0007038 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRSOTSYNCHS_D0 
csi_tadp_tx_0_RESERVED_15_15 = hc0007038 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE0_OVR_0_15_reg Address hc000703c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE0_OVR_0_15_reg = 3221254204 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXACTIVEHS_D0 = hc000703c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXACTIVEHS_D0 
csi_tadp_tx_0_O_RXSYNCHS_D0 = hc000703c 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXSYNCHS_D0 
csi_tadp_tx_0_O_RXVALIDHS_D0 = hc000703c 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXVALIDHS_D0 
csi_tadp_tx_0_O_RXSKEWCALHS_D0 = hc000703c 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXSKEWCALHS_D0 
csi_tadp_tx_0_O_RXWORDCLKHS_D0 = hc000703c 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXWORDCLKHS_D0 
csi_tadp_tx_0_O_RXDATAHS_D0 = hc000703c 5 8 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXDATAHS_D0 
csi_tadp_tx_0_RESERVED_15_13 = hc000703c 13 3 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE0_OVR_1_10_reg Address hc0007068
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE0_OVR_1_10_reg = 3221254248 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXDATAHS_C0 = hc0007068 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXDATAHS_C0 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE0_OVR_1_11_reg Address hc000706c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE0_OVR_1_11_reg = 3221254252 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXACTIVEHS_C0 = hc000706c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXACTIVEHS_C0 
csi_tadp_tx_0_O_RXSYNCHS_C0 = hc000706c 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXSYNCHS_C0 
csi_tadp_tx_0_O_RXVALIDHS_C0 = hc000706c 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXVALIDHS_C0 
csi_tadp_tx_0_O_RXINVALIDCODEHS_C0 = hc000706c 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXINVALIDCODEHS_C0 
csi_tadp_tx_0_O_RXWORDCLKHS_C0 = hc000706c 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXWORDCLKHS_C0 
csi_tadp_tx_0_O_RXSYNCTYPEHS_C0 = hc000706c 5 3 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXSYNCTYPEHS_C0 
csi_tadp_tx_0_O_RXALPCODE_C0 = hc000706c 8 4 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXALPCODE_C0 
csi_tadp_tx_0_I_TXSYNCTYPEHS_C0_INT = hc000706c 12 3 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXSYNCTYPEHS_C0_INT 
csi_tadp_tx_0_RESERVED_15_15 = hc000706c 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE0_OVR_1_12_reg Address hc0007070
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE0_OVR_1_12_reg = 3221254256 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXALPVALIDHS_C0 = hc0007070 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXALPVALIDHS_C0 
csi_tadp_tx_0_O_RXALPNIBBLE_C0 = hc0007070 1 4 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXALPNIBBLE_C0 
csi_tadp_tx_0_I_TXDATAESC_C0_INT = hc0007070 5 8 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXDATAESC_C0_INT 
csi_tadp_tx_0_I_TXSENDSYNCHS_C0_INT = hc0007070 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXSENDSYNCHS_C0_INT 
csi_tadp_tx_0_RESERVED_15_14 = hc0007070 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE0_OVR_1_13_reg Address hc0007074
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE0_OVR_1_13_reg = 3221254260 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_TXDATAHS_C0_INT = hc0007074 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXDATAHS_C0_INT 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE0_OVR_1_14_reg Address hc0007078
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE0_OVR_1_14_reg = 3221254264 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_TXREQUESTESC_C0_INT = hc0007078 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTESC_C0_INT 
csi_tadp_tx_0_I_TXLPDTESC_C0_INT = hc0007078 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXLPDTESC_C0_INT 
csi_tadp_tx_0_I_TXULPSEXIT_C0_INT = hc0007078 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXULPSEXIT_C0_INT 
csi_tadp_tx_0_I_TXULPSESC_C0_INT = hc0007078 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXULPSESC_C0_INT 
csi_tadp_tx_0_I_TXVALIDESC_C0_INT = hc0007078 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXVALIDESC_C0_INT 
csi_tadp_tx_0_O_TXREADYESC_C0 = hc0007078 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_TXREADYESC_C0 
csi_tadp_tx_0_I_TXTRIGGERESC_C0_INT = hc0007078 6 4 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXTRIGGERESC_C0_INT 
csi_tadp_tx_0_I_TXREQUESTHS_C0_INT = hc0007078 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTHS_C0_INT 
csi_tadp_tx_0_I_TXDATATRANSFERENHS_C0_INT = hc0007078 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXDATATRANSFERENHS_C0_INT 
csi_tadp_tx_0_O_TXREADYHS_C0 = hc0007078 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_TXREADYHS_C0 
csi_tadp_tx_0_O_TXWORDCLKHS_C0 = hc0007078 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_TXWORDCLKHS_C0 
csi_tadp_tx_0_RESERVED_15_14 = hc0007078 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE0_OVR_1_15_reg Address hc000707c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE0_OVR_1_15_reg = 3221254268 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXCLKESC_C0 = hc000707c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXCLKESC_C0 
csi_tadp_tx_0_O_RXLPDTESC_C0 = hc000707c 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXLPDTESC_C0 
csi_tadp_tx_0_O_RXULPSESC_C0 = hc000707c 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXULPSESC_C0 
csi_tadp_tx_0_O_RXVALIDESC_C0 = hc000707c 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXVALIDESC_C0 
csi_tadp_tx_0_O_RXTRIGGERESC_C0 = hc000707c 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXTRIGGERESC_C0 
csi_tadp_tx_0_O_RXDATAESC_C0 = hc000707c 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXDATAESC_C0 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_3_8_reg Address hc00070e0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_3_8_reg = 3221254368 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE0_HSTX_PON = hc00070e0 0 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_PON 
csi_tadp_tx_0_OA_LANE0_HSTX_BOOST_EN = hc00070e0 2 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_BOOST_EN 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PON = hc00070e0 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PON 
csi_tadp_tx_0_OA_LANE0_HSTX_LOWCAP_EN = hc00070e0 5 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_LOWCAP_EN 
csi_tadp_tx_0_OA_LANE0_LPTX_DIN_DN = hc00070e0 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_LPTX_DIN_DN 
csi_tadp_tx_0_OA_LANE0_LPTX_DIN_DP = hc00070e0 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_LPTX_DIN_DP 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_DCC_EN = hc00070e0 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_DCC_EN 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_EN = hc00070e0 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_EN 
csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN = hc00070e0 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN 
csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_DELAY = hc00070e0 12 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_DELAY 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_3_9_reg Address hc00070e4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_3_9_reg = 3221254372 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE0_HSTX_DATA_AB_DPHY = hc00070e4 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_DATA_AB_DPHY 
csi_tadp_tx_0_OA_LANE0_HSTX_TERM_EN = hc00070e4 8 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_TERM_EN 
csi_tadp_tx_0_OA_LANE0_HSTX_DIV_EN = hc00070e4 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_DIV_EN 
csi_tadp_tx_0_RESERVED_15_11 = hc00070e4 11 5 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_11 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_3_10_reg Address hc00070e8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_3_10_reg = 3221254376 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE0_HSTX_DATA_BC = hc00070e8 0 7 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_DATA_BC clr interrrupt per bit  {1'b0,ssafety_fail_state[5],s|local_reg_check_intr[4] ,s|gpio_intr[3]s ,|sm_op_fail_intr [2],s|sm_sc_fail_intr[1]s ,sm_sc_done_intr [0]}
csi_tadp_tx_0_OA_LANE0_HSTX_DATA_CA = hc00070e8 7 7 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_DATA_CA clr interrrupt per bit  {1'b0,ssafety_fail_state[5],s|local_reg_check_intr[4] ,s|gpio_intr[3]s ,|sm_op_fail_intr [2],s|sm_sc_fail_intr[1]s ,sm_sc_done_intr [0]}
csi_tadp_tx_0_RESERVED_15_14 = hc00070e8 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 clr interrrupt per bit  {1'b0,ssafety_fail_state[5],s|local_reg_check_intr[4] ,s|gpio_intr[3]s ,|sm_op_fail_intr [2],s|sm_sc_fail_intr[1]s ,sm_sc_done_intr [0]}



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_3_11_reg Address hc00070ec
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_3_11_reg = 3221254380 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE0_LPTX_EN = hc00070ec 0 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_LPTX_EN interrupt status intterupt 
csi_tadp_tx_0_OA_LANE0_LPTX_PON = hc00070ec 2 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_LPTX_PON interrupt status intterupt 
csi_tadp_tx_0_OA_LANE0_LPTX_PULLDWN_EN = hc00070ec 4 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_LPTX_PULLDWN_EN interrupt status intterupt 
csi_tadp_tx_0_OA_LANE0_LPRX_LP_PON = hc00070ec 6 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_LPRX_LP_PON interrupt status intterupt 
csi_tadp_tx_0_OA_LANE0_LPRX_CD_PON = hc00070ec 8 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_LPRX_CD_PON interrupt status intterupt 
csi_tadp_tx_0_OA_LANE0_LPRX_ULP_PON = hc00070ec 10 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_LPRX_ULP_PON interrupt status intterupt 
csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_CDR_FBK_EN = hc00070ec 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_CDR_FBK_EN interrupt status intterupt 
csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_MASK_CHANGE = hc00070ec 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_MASK_CHANGE interrupt status intterupt 
csi_tadp_tx_0_RESERVED_15_14 = hc00070ec 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 interrupt status intterupt 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_3_12_reg Address hc00070f0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_3_12_reg = 3221254384 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE0_HSRX_TERM_RIGHT_EN = hc00070f0 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_TERM_RIGHT_EN status of register err check
csi_tadp_tx_0_OA_LANE0_HSRX_TERM_LEFT_EN = hc00070f0 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_TERM_LEFT_EN status of register err check
csi_tadp_tx_0_OA_LANE0_HSRX_HS_CLK_DIV_EN = hc00070f0 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_HS_CLK_DIV_EN status of register err check
csi_tadp_tx_0_OA_LANE0_HSRX_DESERIALIZER_EN = hc00070f0 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DESERIALIZER_EN status of register err check
csi_tadp_tx_0_OA_LANE0_HSRX_DESERIALIZER_DATA_EN = hc00070f0 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DESERIALIZER_DATA_EN status of register err check
csi_tadp_tx_0_OA_LANE0_HSRX_DESERIALIZER_DIV_EN = hc00070f0 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DESERIALIZER_DIV_EN status of register err check
csi_tadp_tx_0_OA_LANE0_HSRX_OFFCAL_OBS_EN = hc00070f0 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_OFFCAL_OBS_EN status of register err check
csi_tadp_tx_0_OA_LANE0_HSRX_VCM_DET_PON = hc00070f0 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_VCM_DET_PON status of register err check
csi_tadp_tx_0_OA_LANE0_HSRX_VCM_DET_OUT_EN = hc00070f0 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_VCM_DET_OUT_EN status of register err check
csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_ALP_DET_RIGHT_PON = hc00070f0 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_ALP_DET_RIGHT_PON status of register err check
csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_ALP_DET_LEFT_PON = hc00070f0 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_ALP_DET_LEFT_PON status of register err check
csi_tadp_tx_0_OA_LANE0_HSRX_PON = hc00070f0 11 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_PON status of register err check
csi_tadp_tx_0_OA_LANE0_HSRX_EN = hc00070f0 13 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_EN status of register err check
csi_tadp_tx_0_RESERVED_15_15 = hc00070f0 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 status of register err check



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_3_13_reg Address hc00070f4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_3_13_reg = 3221254388 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_BIAS_BYPASS_EN = hc00070f4 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_BIAS_BYPASS_EN self check fail status per agent
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_BYPASS_EN = hc00070f4 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_BYPASS_EN self check fail status per agent
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_CHANGE = hc00070f4 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_CHANGE self check fail status per agent
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DLL_EN = hc00070f4 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DLL_EN self check fail status per agent
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_PREAMBLE_CAL_EN = hc00070f4 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_PREAMBLE_CAL_EN self check fail status per agent
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DATA_DELAY = hc00070f4 5 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DATA_DELAY self check fail status per agent
csi_tadp_tx_0_RESERVED_15_9 = hc00070f4 9 7 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_9 self check fail status per agent



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_3_14_reg Address hc00070f8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_3_14_reg = 3221254392 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_BIAS = hc00070f8 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_BIAS self check fail status per agent
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_COARSE_BANK = hc00070f8 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_COARSE_BANK self check fail status per agent
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_TUNE_MODE = hc00070f8 8 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_TUNE_MODE self check fail status per agent
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DLL_FBK = hc00070f8 10 6 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DLL_FBK self check fail status per agent



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_3_15_reg Address hc00070fc
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_3_15_reg = 3221254396 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE0_HSRX_OFFCAL_RIGHT = hc00070fc 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_OFFCAL_RIGHT operation mode fail status
csi_tadp_tx_0_OA_LANE0_HSRX_OFFCAL_LEFT = hc00070fc 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_OFFCAL_LEFT operation mode fail status



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_4_0_reg Address hc0007100
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_4_0_reg = 3221254400 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_RIGHT = hc0007100 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_RIGHT operation mode fail status
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_MID = hc0007100 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_MID operation mode fail status



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_4_1_reg Address hc0007104
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_4_1_reg = 3221254404 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_LEFT = hc0007104 0 9 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_LEFT self check done status
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_MID = hc0007104 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_MID self check done status
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_RIGHT = hc0007104 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_RIGHT self check done status
csi_tadp_tx_0_OA_LANE0_HSRX_MODE = hc0007104 11 3 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_MODE self check done status
csi_tadp_tx_0_RESERVED_15_14 = hc0007104 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 self check done status



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_4_2_reg Address hc0007108
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_4_2_reg = 3221254408 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_IA_LANE0_HSRX_DATA_AB_LEFT_INT = hc0007108 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_DATA_AB_LEFT_INT self check done status
csi_tadp_tx_0_IA_LANE0_HSRX_DATA_BC_MID_INT = hc0007108 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_DATA_BC_MID_INT self check done status



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_4_3_reg Address hc000710c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_4_3_reg = 3221254412 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_IA_LANE0_HSRX_DATA_CA_RIGHT_INT = hc000710c 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_DATA_CA_RIGHT_INT [0]- reg_sc_err_sc_fail_inds[1]- reg_sc_err_op_fail_inds[2]- reg_sc_err_done_inds[3]- safety_ctrl_reg_failsclr by write to any bit of the [3:0]
csi_tadp_tx_0_IA_LANE0_HSRX_WORD_CLK_INT = hc000710c 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_WORD_CLK_INT [0]- reg_sc_err_sc_fail_inds[1]- reg_sc_err_op_fail_inds[2]- reg_sc_err_done_inds[3]- safety_ctrl_reg_failsclr by write to any bit of the [3:0]
csi_tadp_tx_0_IA_LANE0_HSRX_HS_CLK_DIV_OUT_INT = hc000710c 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_HS_CLK_DIV_OUT_INT [0]- reg_sc_err_sc_fail_inds[1]- reg_sc_err_op_fail_inds[2]- reg_sc_err_done_inds[3]- safety_ctrl_reg_failsclr by write to any bit of the [3:0]
csi_tadp_tx_0_IA_LANE0_HSTX_WORD_CLK_INT = hc000710c 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSTX_WORD_CLK_INT [0]- reg_sc_err_sc_fail_inds[1]- reg_sc_err_op_fail_inds[2]- reg_sc_err_done_inds[3]- safety_ctrl_reg_failsclr by write to any bit of the [3:0]
csi_tadp_tx_0_IA_LANE0_HSRX_VCM_DET_OUT_INT = hc000710c 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_VCM_DET_OUT_INT [0]- reg_sc_err_sc_fail_inds[1]- reg_sc_err_op_fail_inds[2]- reg_sc_err_done_inds[3]- safety_ctrl_reg_failsclr by write to any bit of the [3:0]
csi_tadp_tx_0_IA_LANE0_HSRX_OUT_CAL_LEFT_N_INT = hc000710c 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_OUT_CAL_LEFT_N_INT [0]- reg_sc_err_sc_fail_inds[1]- reg_sc_err_op_fail_inds[2]- reg_sc_err_done_inds[3]- safety_ctrl_reg_failsclr by write to any bit of the [3:0]
csi_tadp_tx_0_IA_LANE0_HSRX_OUT_CAL_LEFT_P_INT = hc000710c 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_OUT_CAL_LEFT_P_INT [0]- reg_sc_err_sc_fail_inds[1]- reg_sc_err_op_fail_inds[2]- reg_sc_err_done_inds[3]- safety_ctrl_reg_failsclr by write to any bit of the [3:0]
csi_tadp_tx_0_IA_LANE0_HSRX_OUT_CAL_RIGHT_N_INT = hc000710c 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_OUT_CAL_RIGHT_N_INT [0]- reg_sc_err_sc_fail_inds[1]- reg_sc_err_op_fail_inds[2]- reg_sc_err_done_inds[3]- safety_ctrl_reg_failsclr by write to any bit of the [3:0]
csi_tadp_tx_0_IA_LANE0_HSRX_OUT_CAL_RIGHT_P_INT = hc000710c 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_OUT_CAL_RIGHT_P_INT [0]- reg_sc_err_sc_fail_inds[1]- reg_sc_err_op_fail_inds[2]- reg_sc_err_done_inds[3]- safety_ctrl_reg_failsclr by write to any bit of the [3:0]



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_4_4_reg Address hc0007110
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE0_CTRL_4_4_reg = 3221254416 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_IA_LANE0_HSRX_DPHY_DDL_OSC_CLK_INT = hc0007110 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_DPHY_DDL_OSC_CLK_INT the minimum number of target clocks inside the time window - 24 lsb
csi_tadp_tx_0_IA_LANE0_HSRX_CPHY_ALP_DET_LEFT_OUT_INT = hc0007110 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_CPHY_ALP_DET_LEFT_OUT_INT the minimum number of target clocks inside the time window - 24 lsb
csi_tadp_tx_0_IA_LANE0_HSRX_CPHY_ALP_DET_RIGHT_OUT_INT = hc0007110 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_CPHY_ALP_DET_RIGHT_OUT_INT the minimum number of target clocks inside the time window - 24 lsb
csi_tadp_tx_0_IA_LANE0_HSRX_CPHY_CDR_OSC_CLK_INT = hc0007110 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_CPHY_CDR_OSC_CLK_INT the minimum number of target clocks inside the time window - 24 lsb
csi_tadp_tx_0_IA_LANE0_LPRX_DOUTCD_INT = hc0007110 4 2 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE0_LPRX_DOUTCD_INT the minimum number of target clocks inside the time window - 24 lsb
csi_tadp_tx_0_IA_LANE0_LPRX_DOUTLP_INT = hc0007110 6 2 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE0_LPRX_DOUTLP_INT the minimum number of target clocks inside the time window - 24 lsb
csi_tadp_tx_0_IA_LANE0_LPRX_DOUTULP_INT = hc0007110 8 2 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE0_LPRX_DOUTULP_INT the minimum number of target clocks inside the time window - 24 lsb
csi_tadp_tx_0_IA_LANE0_SPARE_OUT_INT = hc0007110 10 4 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE0_SPARE_OUT_INT the minimum number of target clocks inside the time window - 24 lsb
csi_tadp_tx_0_RESERVED_15_14 = hc0007110 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 the minimum number of target clocks inside the time window - 24 lsb



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE0_OVR_5_0_reg Address hc0007140
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE0_OVR_5_0_reg = 3221254464 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_ENABLE_C0_INT = hc0007140 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_ENABLE_C0_INT the minimum number of target clocks inside the time window - 8 msb
csi_tadp_tx_0_O_STOPSTATE_C0 = hc0007140 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_STOPSTATE_C0 the minimum number of target clocks inside the time window - 8 msb
csi_tadp_tx_0_O_ULPSACTIVENOT_C0 = hc0007140 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ULPSACTIVENOT_C0 the minimum number of target clocks inside the time window - 8 msb
csi_tadp_tx_0_I_TURNREQUEST_C0_INT = hc0007140 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TURNREQUEST_C0_INT the minimum number of target clocks inside the time window - 8 msb
csi_tadp_tx_0_I_TURNDISABLE_C0_INT = hc0007140 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TURNDISABLE_C0_INT the minimum number of target clocks inside the time window - 8 msb
csi_tadp_tx_0_O_DIRECTION_C0 = hc0007140 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_DIRECTION_C0 the minimum number of target clocks inside the time window - 8 msb
csi_tadp_tx_0_I_FORCERXMODE_C0_INT = hc0007140 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_FORCERXMODE_C0_INT the minimum number of target clocks inside the time window - 8 msb
csi_tadp_tx_0_I_FORCETXSTOPMODE_C0_INT = hc0007140 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_FORCETXSTOPMODE_C0_INT the minimum number of target clocks inside the time window - 8 msb
csi_tadp_tx_0_O_ERRESC_C0 = hc0007140 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRESC_C0 the minimum number of target clocks inside the time window - 8 msb
csi_tadp_tx_0_O_ERRSYNCESC_C0 = hc0007140 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRSYNCESC_C0 the minimum number of target clocks inside the time window - 8 msb
csi_tadp_tx_0_O_ERRCONTROL_C0 = hc0007140 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRCONTROL_C0 the minimum number of target clocks inside the time window - 8 msb
csi_tadp_tx_0_O_ERRCONTENTIONLP0_C0 = hc0007140 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP0_C0 the minimum number of target clocks inside the time window - 8 msb
csi_tadp_tx_0_O_ERRCONTENTIONLP1_C0 = hc0007140 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP1_C0 the minimum number of target clocks inside the time window - 8 msb
csi_tadp_tx_0_O_ERRSOTHS_C0 = hc0007140 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRSOTHS_C0 the minimum number of target clocks inside the time window - 8 msb
csi_tadp_tx_0_RESERVED_15_14 = hc0007140 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 the minimum number of target clocks inside the time window - 8 msb



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE0_OVR_5_1_reg Address hc0007144
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE0_OVR_5_1_reg = 3221254468 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXDATAHS_C0 = hc0007144 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXDATAHS_C0 the maximum number of target clocks inside the time window - 24 lsb



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE0_OVR_5_4_reg Address hc0007150
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE0_OVR_5_4_reg = 3221254480 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_TXSENDALPHS_C0_INT = hc0007150 0 2 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXSENDALPHS_C0_INT the maximum number of target clocks inside the time window - 8 msb
csi_tadp_tx_0_I_TXALPCODE_C0_INT = hc0007150 2 4 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXALPCODE_C0_INT the maximum number of target clocks inside the time window - 8 msb
csi_tadp_tx_0_I_TXALPNIBBLE_C0_INT = hc0007150 6 4 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXALPNIBBLE_C0_INT the maximum number of target clocks inside the time window - 8 msb
csi_tadp_tx_0_I_ALPWAKESTATE_C0_INT = hc0007150 10 3 h0 RO HEX
; Desc_csi_tadp_tx_0_I_ALPWAKESTATE_C0_INT the maximum number of target clocks inside the time window - 8 msb
csi_tadp_tx_0_RESERVED_15_13 = hc0007150 13 3 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 the maximum number of target clocks inside the time window - 8 msb



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE1_OVR_0_9_reg Address hc0007824
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE1_OVR_0_9_reg = 3221256228 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXACTIVEHS_D1 = hc0007824 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXACTIVEHS_D1 the time window size in base_clk cycles - change only when enable=0smust be configured to something other than 0 - value of 0 not valid!!!
csi_tadp_tx_0_O_RXSYNCHS_D1 = hc0007824 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXSYNCHS_D1 the time window size in base_clk cycles - change only when enable=0smust be configured to something other than 0 - value of 0 not valid!!!
csi_tadp_tx_0_O_RXVALIDHS_D1 = hc0007824 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXVALIDHS_D1 the time window size in base_clk cycles - change only when enable=0smust be configured to something other than 0 - value of 0 not valid!!!
csi_tadp_tx_0_O_RXSKEWCALHS_D1 = hc0007824 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXSKEWCALHS_D1 the time window size in base_clk cycles - change only when enable=0smust be configured to something other than 0 - value of 0 not valid!!!
csi_tadp_tx_0_O_RXWORDCLKHS_D1 = hc0007824 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXWORDCLKHS_D1 the time window size in base_clk cycles - change only when enable=0smust be configured to something other than 0 - value of 0 not valid!!!
csi_tadp_tx_0_O_RXDATAHS_D1 = hc0007824 5 8 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXDATAHS_D1 the time window size in base_clk cycles - change only when enable=0smust be configured to something other than 0 - value of 0 not valid!!!
csi_tadp_tx_0_O_RXALTERNATECALHS_D1 = hc0007824 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXALTERNATECALHS_D1 the time window size in base_clk cycles - change only when enable=0smust be configured to something other than 0 - value of 0 not valid!!!
csi_tadp_tx_0_RESERVED_15_14 = hc0007824 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 the time window size in base_clk cycles - change only when enable=0smust be configured to something other than 0 - value of 0 not valid!!!



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE1_OVR_0_10_reg Address hc0007828
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE1_OVR_0_10_reg = 3221256232 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_TXREQUESTHS_D1_INT = hc0007828 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTHS_D1_INT the time window size in base_clk cycles - change only when enable=0smust be configured to something other than 0 - value of 0 not valid!!!
csi_tadp_tx_0_I_TXDATATRANSFERENHS_D1_INT = hc0007828 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXDATATRANSFERENHS_D1_INT the time window size in base_clk cycles - change only when enable=0smust be configured to something other than 0 - value of 0 not valid!!!
csi_tadp_tx_0_O_TXREADYHS_D1 = hc0007828 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_TXREADYHS_D1 the time window size in base_clk cycles - change only when enable=0smust be configured to something other than 0 - value of 0 not valid!!!
csi_tadp_tx_0_O_TXWORDCLKHS_D1 = hc0007828 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_TXWORDCLKHS_D1 the time window size in base_clk cycles - change only when enable=0smust be configured to something other than 0 - value of 0 not valid!!!
csi_tadp_tx_0_I_TXDATAHS_D1_INT = hc0007828 4 8 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXDATAHS_D1_INT the time window size in base_clk cycles - change only when enable=0smust be configured to something other than 0 - value of 0 not valid!!!
csi_tadp_tx_0_I_TXALTERNATECALHS_D1_INT = hc0007828 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXALTERNATECALHS_D1_INT the time window size in base_clk cycles - change only when enable=0smust be configured to something other than 0 - value of 0 not valid!!!
csi_tadp_tx_0_I_TXSKEWCALHS_D1_INT = hc0007828 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXSKEWCALHS_D1_INT the time window size in base_clk cycles - change only when enable=0smust be configured to something other than 0 - value of 0 not valid!!!
csi_tadp_tx_0_RESERVED_15_14 = hc0007828 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 the time window size in base_clk cycles - change only when enable=0smust be configured to something other than 0 - value of 0 not valid!!!



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE1_OVR_0_11_reg Address hc000782c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE1_OVR_0_11_reg = 3221256236 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_TXREQUESTESC_D1_INT = hc000782c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTESC_D1_INT how many cycles the clk_monitor waits before starting opernationl mode after reciving sm_en
csi_tadp_tx_0_I_TXLPDTESC_D1_INT = hc000782c 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXLPDTESC_D1_INT how many cycles the clk_monitor waits before starting opernationl mode after reciving sm_en
csi_tadp_tx_0_I_TXULPSEXIT_D1_INT = hc000782c 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXULPSEXIT_D1_INT how many cycles the clk_monitor waits before starting opernationl mode after reciving sm_en
csi_tadp_tx_0_I_TXULPSESC_D1_INT = hc000782c 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXULPSESC_D1_INT how many cycles the clk_monitor waits before starting opernationl mode after reciving sm_en
csi_tadp_tx_0_I_TXVALIDESC_D1_INT = hc000782c 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXVALIDESC_D1_INT how many cycles the clk_monitor waits before starting opernationl mode after reciving sm_en
csi_tadp_tx_0_O_TXREADYESC_D1 = hc000782c 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_TXREADYESC_D1 how many cycles the clk_monitor waits before starting opernationl mode after reciving sm_en
csi_tadp_tx_0_I_TXTRIGGERESC_D1_INT = hc000782c 6 4 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXTRIGGERESC_D1_INT how many cycles the clk_monitor waits before starting opernationl mode after reciving sm_en
csi_tadp_tx_0_RESERVED_15_10 = hc000782c 10 6 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 how many cycles the clk_monitor waits before starting opernationl mode after reciving sm_en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE1_OVR_0_12_reg Address hc0007830
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE1_OVR_0_12_reg = 3221256240 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_TXDATAESC_D1_INT = hc0007830 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXDATAESC_D1_INT the value of the target clock counter at the end of the last time window
csi_tadp_tx_0_RESERVED_15_8 = hc0007830 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 the value of the target clock counter at the end of the last time window



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE1_OVR_0_13_reg Address hc0007834
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE1_OVR_0_13_reg = 3221256244 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXCLKESC_D1 = hc0007834 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXCLKESC_D1 
csi_tadp_tx_0_O_RXLPDTESC_D1 = hc0007834 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXLPDTESC_D1 
csi_tadp_tx_0_O_RXULPSESC_D1 = hc0007834 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXULPSESC_D1 
csi_tadp_tx_0_O_RXVALIDESC_D1 = hc0007834 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXVALIDESC_D1 
csi_tadp_tx_0_O_RXTRIGGERESC_D1 = hc0007834 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXTRIGGERESC_D1 
csi_tadp_tx_0_O_RXDATAESC_D1 = hc0007834 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXDATAESC_D1 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE1_OVR_0_14_reg Address hc0007838
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE1_OVR_0_14_reg = 3221256248 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_ENABLE_D1_INT = hc0007838 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_ENABLE_D1_INT 
csi_tadp_tx_0_O_STOPSTATE_D1 = hc0007838 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_STOPSTATE_D1 
csi_tadp_tx_0_O_ULPSACTIVENOT_D1 = hc0007838 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ULPSACTIVENOT_D1 
csi_tadp_tx_0_I_TURNREQUEST_D1_INT = hc0007838 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TURNREQUEST_D1_INT 
csi_tadp_tx_0_I_TURNDISABLE_D1_INT = hc0007838 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TURNDISABLE_D1_INT 
csi_tadp_tx_0_O_DIRECTION_D1 = hc0007838 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_DIRECTION_D1 
csi_tadp_tx_0_I_FORCERXMODE_D1_INT = hc0007838 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_FORCERXMODE_D1_INT 
csi_tadp_tx_0_I_FORCETXSTOPMODE_D1_INT = hc0007838 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_FORCETXSTOPMODE_D1_INT 
csi_tadp_tx_0_O_ERRESC_D1 = hc0007838 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRESC_D1 
csi_tadp_tx_0_O_ERRSYNCESC_D1 = hc0007838 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRSYNCESC_D1 
csi_tadp_tx_0_O_ERRCONTROL_D1 = hc0007838 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRCONTROL_D1 
csi_tadp_tx_0_O_ERRCONTENTIONLP0_D1 = hc0007838 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP0_D1 
csi_tadp_tx_0_O_ERRCONTENTIONLP1_D1 = hc0007838 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP1_D1 
csi_tadp_tx_0_O_ERRSOTHS_D1 = hc0007838 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRSOTHS_D1 
csi_tadp_tx_0_O_ERRSOTSYNCHS_D1 = hc0007838 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRSOTSYNCHS_D1 
csi_tadp_tx_0_RESERVED_15_15 = hc0007838 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE1_OVR_0_15_reg Address hc000783c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE1_OVR_0_15_reg = 3221256252 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXACTIVEHS_D1 = hc000783c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXACTIVEHS_D1 
csi_tadp_tx_0_O_RXSYNCHS_D1 = hc000783c 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXSYNCHS_D1 
csi_tadp_tx_0_O_RXVALIDHS_D1 = hc000783c 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXVALIDHS_D1 
csi_tadp_tx_0_O_RXSKEWCALHS_D1 = hc000783c 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXSKEWCALHS_D1 
csi_tadp_tx_0_O_RXWORDCLKHS_D1 = hc000783c 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXWORDCLKHS_D1 
csi_tadp_tx_0_O_RXDATAHS_D1 = hc000783c 5 8 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXDATAHS_D1 
csi_tadp_tx_0_RESERVED_15_13 = hc000783c 13 3 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE1_OVR_1_10_reg Address hc0007868
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE1_OVR_1_10_reg = 3221256296 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXDATAHS_C1 = hc0007868 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXDATAHS_C1 number of cycles between oper_en command from safety controller to oper_en internal  at pll_lock_check sm



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE1_OVR_1_11_reg Address hc000786c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE1_OVR_1_11_reg = 3221256300 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXACTIVEHS_C1 = hc000786c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXACTIVEHS_C1 wait_oper reg status
csi_tadp_tx_0_O_RXSYNCHS_C1 = hc000786c 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXSYNCHS_C1 wait_oper reg status
csi_tadp_tx_0_O_RXVALIDHS_C1 = hc000786c 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXVALIDHS_C1 wait_oper reg status
csi_tadp_tx_0_O_RXINVALIDCODEHS_C1 = hc000786c 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXINVALIDCODEHS_C1 wait_oper reg status
csi_tadp_tx_0_O_RXWORDCLKHS_C1 = hc000786c 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXWORDCLKHS_C1 wait_oper reg status
csi_tadp_tx_0_O_RXSYNCTYPEHS_C1 = hc000786c 5 3 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXSYNCTYPEHS_C1 wait_oper reg status
csi_tadp_tx_0_O_RXALPCODE_C1 = hc000786c 8 4 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXALPCODE_C1 wait_oper reg status
csi_tadp_tx_0_I_TXSYNCTYPEHS_C1_INT = hc000786c 12 3 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXSYNCTYPEHS_C1_INT wait_oper reg status
csi_tadp_tx_0_RESERVED_15_15 = hc000786c 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 wait_oper reg status



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE1_OVR_1_12_reg Address hc0007870
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE1_OVR_1_12_reg = 3221256304 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXALPVALIDHS_C1 = hc0007870 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXALPVALIDHS_C1 
csi_tadp_tx_0_O_RXALPNIBBLE_C1 = hc0007870 1 4 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXALPNIBBLE_C1 
csi_tadp_tx_0_I_TXDATAESC_C1_INT = hc0007870 5 8 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXDATAESC_C1_INT 
csi_tadp_tx_0_I_TXSENDSYNCHS_C1_INT = hc0007870 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXSENDSYNCHS_C1_INT 
csi_tadp_tx_0_RESERVED_15_14 = hc0007870 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE1_OVR_1_13_reg Address hc0007874
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE1_OVR_1_13_reg = 3221256308 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_TXDATAHS_C1_INT = hc0007874 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXDATAHS_C1_INT 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE1_OVR_1_14_reg Address hc0007878
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE1_OVR_1_14_reg = 3221256312 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_TXREQUESTESC_C1_INT = hc0007878 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTESC_C1_INT pd reset control bit
csi_tadp_tx_0_I_TXLPDTESC_C1_INT = hc0007878 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXLPDTESC_C1_INT pd reset control bit
csi_tadp_tx_0_I_TXULPSEXIT_C1_INT = hc0007878 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXULPSEXIT_C1_INT pd reset control bit
csi_tadp_tx_0_I_TXULPSESC_C1_INT = hc0007878 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXULPSESC_C1_INT pd reset control bit
csi_tadp_tx_0_I_TXVALIDESC_C1_INT = hc0007878 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXVALIDESC_C1_INT pd reset control bit
csi_tadp_tx_0_O_TXREADYESC_C1 = hc0007878 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_TXREADYESC_C1 pd reset control bit
csi_tadp_tx_0_I_TXTRIGGERESC_C1_INT = hc0007878 6 4 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXTRIGGERESC_C1_INT pd reset control bit
csi_tadp_tx_0_I_TXREQUESTHS_C1_INT = hc0007878 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTHS_C1_INT pd reset control bit
csi_tadp_tx_0_I_TXDATATRANSFERENHS_C1_INT = hc0007878 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXDATATRANSFERENHS_C1_INT pd reset control bit
csi_tadp_tx_0_O_TXREADYHS_C1 = hc0007878 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_TXREADYHS_C1 pd reset control bit
csi_tadp_tx_0_O_TXWORDCLKHS_C1 = hc0007878 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_TXWORDCLKHS_C1 pd reset control bit
csi_tadp_tx_0_RESERVED_15_14 = hc0007878 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 pd reset control bit



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE1_OVR_1_15_reg Address hc000787c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE1_OVR_1_15_reg = 3221256316 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXCLKESC_C1 = hc000787c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXCLKESC_C1 cfg conversion mode
csi_tadp_tx_0_O_RXLPDTESC_C1 = hc000787c 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXLPDTESC_C1 cfg conversion mode
csi_tadp_tx_0_O_RXULPSESC_C1 = hc000787c 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXULPSESC_C1 cfg conversion mode
csi_tadp_tx_0_O_RXVALIDESC_C1 = hc000787c 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXVALIDESC_C1 cfg conversion mode
csi_tadp_tx_0_O_RXTRIGGERESC_C1 = hc000787c 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXTRIGGERESC_C1 cfg conversion mode
csi_tadp_tx_0_O_RXDATAESC_C1 = hc000787c 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXDATAESC_C1 cfg conversion mode



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_3_8_reg Address hc00078e0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_3_8_reg = 3221256416 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE1_HSTX_PON = hc00078e0 0 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_PON place holder
csi_tadp_tx_0_OA_LANE1_HSTX_BOOST_EN = hc00078e0 2 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_BOOST_EN place holder
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PON = hc00078e0 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PON place holder
csi_tadp_tx_0_OA_LANE1_HSTX_LOWCAP_EN = hc00078e0 5 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_LOWCAP_EN place holder
csi_tadp_tx_0_OA_LANE1_LPTX_DIN_DN = hc00078e0 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_LPTX_DIN_DN place holder
csi_tadp_tx_0_OA_LANE1_LPTX_DIN_DP = hc00078e0 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_LPTX_DIN_DP place holder
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_DCC_EN = hc00078e0 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_DCC_EN place holder
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_EN = hc00078e0 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_EN place holder
csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN = hc00078e0 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN place holder
csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_DELAY = hc00078e0 12 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_DELAY place holder



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_3_9_reg Address hc00078e4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_3_9_reg = 3221256420 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE1_HSTX_DATA_AB_DPHY = hc00078e4 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_DATA_AB_DPHY defines the length of high level of pd_clk - default value based onssys_clk = 250MHzspd_clk ~= 6.25MHz
csi_tadp_tx_0_OA_LANE1_HSTX_TERM_EN = hc00078e4 8 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_TERM_EN defines the length of high level of pd_clk - default value based onssys_clk = 250MHzspd_clk ~= 6.25MHz
csi_tadp_tx_0_OA_LANE1_HSTX_DIV_EN = hc00078e4 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_DIV_EN defines the length of high level of pd_clk - default value based onssys_clk = 250MHzspd_clk ~= 6.25MHz
csi_tadp_tx_0_RESERVED_15_11 = hc00078e4 11 5 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_11 defines the length of high level of pd_clk - default value based onssys_clk = 250MHzspd_clk ~= 6.25MHz



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_3_10_reg Address hc00078e8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_3_10_reg = 3221256424 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE1_HSTX_DATA_BC = hc00078e8 0 7 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_DATA_BC defines the length of the analog power-up  period
csi_tadp_tx_0_OA_LANE1_HSTX_DATA_CA = hc00078e8 7 7 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_DATA_CA defines the length of the analog power-up  period
csi_tadp_tx_0_RESERVED_15_14 = hc00078e8 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 defines the length of the analog power-up  period



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_3_11_reg Address hc00078ec
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_3_11_reg = 3221256428 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE1_LPTX_EN = hc00078ec 0 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_LPTX_EN measurement timeout          [15:0]            Defines the waiting time from RUN activation until RDY is received – if the timeout period expires an error flag iss                                                                                 raised.s                                                                                The timeout counter resolution is the pd clock period.s
csi_tadp_tx_0_OA_LANE1_LPTX_PON = hc00078ec 2 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_LPTX_PON measurement timeout          [15:0]            Defines the waiting time from RUN activation until RDY is received – if the timeout period expires an error flag iss                                                                                 raised.s                                                                                The timeout counter resolution is the pd clock period.s
csi_tadp_tx_0_OA_LANE1_LPTX_PULLDWN_EN = hc00078ec 4 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_LPTX_PULLDWN_EN measurement timeout          [15:0]            Defines the waiting time from RUN activation until RDY is received – if the timeout period expires an error flag iss                                                                                 raised.s                                                                                The timeout counter resolution is the pd clock period.s
csi_tadp_tx_0_OA_LANE1_LPRX_LP_PON = hc00078ec 6 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_LPRX_LP_PON measurement timeout          [15:0]            Defines the waiting time from RUN activation until RDY is received – if the timeout period expires an error flag iss                                                                                 raised.s                                                                                The timeout counter resolution is the pd clock period.s
csi_tadp_tx_0_OA_LANE1_LPRX_CD_PON = hc00078ec 8 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_LPRX_CD_PON measurement timeout          [15:0]            Defines the waiting time from RUN activation until RDY is received – if the timeout period expires an error flag iss                                                                                 raised.s                                                                                The timeout counter resolution is the pd clock period.s
csi_tadp_tx_0_OA_LANE1_LPRX_ULP_PON = hc00078ec 10 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_LPRX_ULP_PON measurement timeout          [15:0]            Defines the waiting time from RUN activation until RDY is received – if the timeout period expires an error flag iss                                                                                 raised.s                                                                                The timeout counter resolution is the pd clock period.s
csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_CDR_FBK_EN = hc00078ec 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_CDR_FBK_EN measurement timeout          [15:0]            Defines the waiting time from RUN activation until RDY is received – if the timeout period expires an error flag iss                                                                                 raised.s                                                                                The timeout counter resolution is the pd clock period.s
csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_MASK_CHANGE = hc00078ec 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_MASK_CHANGE measurement timeout          [15:0]            Defines the waiting time from RUN activation until RDY is received – if the timeout period expires an error flag iss                                                                                 raised.s                                                                                The timeout counter resolution is the pd clock period.s
csi_tadp_tx_0_RESERVED_15_14 = hc00078ec 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 measurement timeout          [15:0]            Defines the waiting time from RUN activation until RDY is received – if the timeout period expires an error flag iss                                                                                 raised.s                                                                                The timeout counter resolution is the pd clock period.s



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_3_12_reg Address hc00078f0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_3_12_reg = 3221256432 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE1_HSRX_TERM_RIGHT_EN = hc00078f0 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_TERM_RIGHT_EN each bit set in this field will invert the corresponding bit in the vm_data to cause intentional error
csi_tadp_tx_0_OA_LANE1_HSRX_TERM_LEFT_EN = hc00078f0 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_TERM_LEFT_EN each bit set in this field will invert the corresponding bit in the vm_data to cause intentional error
csi_tadp_tx_0_OA_LANE1_HSRX_HS_CLK_DIV_EN = hc00078f0 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_HS_CLK_DIV_EN each bit set in this field will invert the corresponding bit in the vm_data to cause intentional error
csi_tadp_tx_0_OA_LANE1_HSRX_DESERIALIZER_EN = hc00078f0 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DESERIALIZER_EN each bit set in this field will invert the corresponding bit in the vm_data to cause intentional error
csi_tadp_tx_0_OA_LANE1_HSRX_DESERIALIZER_DATA_EN = hc00078f0 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DESERIALIZER_DATA_EN each bit set in this field will invert the corresponding bit in the vm_data to cause intentional error
csi_tadp_tx_0_OA_LANE1_HSRX_DESERIALIZER_DIV_EN = hc00078f0 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DESERIALIZER_DIV_EN each bit set in this field will invert the corresponding bit in the vm_data to cause intentional error
csi_tadp_tx_0_OA_LANE1_HSRX_OFFCAL_OBS_EN = hc00078f0 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_OFFCAL_OBS_EN each bit set in this field will invert the corresponding bit in the vm_data to cause intentional error
csi_tadp_tx_0_OA_LANE1_HSRX_VCM_DET_PON = hc00078f0 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_VCM_DET_PON each bit set in this field will invert the corresponding bit in the vm_data to cause intentional error
csi_tadp_tx_0_OA_LANE1_HSRX_VCM_DET_OUT_EN = hc00078f0 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_VCM_DET_OUT_EN each bit set in this field will invert the corresponding bit in the vm_data to cause intentional error
csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_ALP_DET_RIGHT_PON = hc00078f0 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_ALP_DET_RIGHT_PON each bit set in this field will invert the corresponding bit in the vm_data to cause intentional error
csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_ALP_DET_LEFT_PON = hc00078f0 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_ALP_DET_LEFT_PON each bit set in this field will invert the corresponding bit in the vm_data to cause intentional error
csi_tadp_tx_0_OA_LANE1_HSRX_PON = hc00078f0 11 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_PON each bit set in this field will invert the corresponding bit in the vm_data to cause intentional error
csi_tadp_tx_0_OA_LANE1_HSRX_EN = hc00078f0 13 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_EN each bit set in this field will invert the corresponding bit in the vm_data to cause intentional error
csi_tadp_tx_0_RESERVED_15_15 = hc00078f0 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 each bit set in this field will invert the corresponding bit in the vm_data to cause intentional error



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_3_13_reg Address hc00078f4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_3_13_reg = 3221256436 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_BIAS_BYPASS_EN = hc00078f4 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_BIAS_BYPASS_EN frequency  converted value from the process detector. 
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_BYPASS_EN = hc00078f4 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_BYPASS_EN frequency  converted value from the process detector. 
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_CHANGE = hc00078f4 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_CHANGE frequency  converted value from the process detector. 
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DLL_EN = hc00078f4 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DLL_EN frequency  converted value from the process detector. 
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_PREAMBLE_CAL_EN = hc00078f4 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_PREAMBLE_CAL_EN frequency  converted value from the process detector. 
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DATA_DELAY = hc00078f4 5 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DATA_DELAY frequency  converted value from the process detector. 
csi_tadp_tx_0_RESERVED_15_9 = hc00078f4 9 7 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_9 frequency  converted value from the process detector. 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_3_14_reg Address hc00078f8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_3_14_reg = 3221256440 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_BIAS = hc00078f8 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_BIAS status register value - report the cause of analog fault 
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_COARSE_BANK = hc00078f8 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_COARSE_BANK status register value - report the cause of analog fault 
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_TUNE_MODE = hc00078f8 8 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_TUNE_MODE status register value - report the cause of analog fault 
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DLL_FBK = hc00078f8 10 6 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DLL_FBK status register value - report the cause of analog fault 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_3_15_reg Address hc00078fc
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_3_15_reg = 3221256444 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE1_HSRX_OFFCAL_RIGHT = hc00078fc 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_OFFCAL_RIGHT pd_run_width                       [1:0]            Defines the width of RUN pulse.s                                                            2'h0 - RUN PULSE width = 1s                                                            2'h1 - RUN PULSE width = 2s                                                            2'h2 - RUN PULSE width = 3s                                                            2'h3 - RUN PULSE width = 4
csi_tadp_tx_0_OA_LANE1_HSRX_OFFCAL_LEFT = hc00078fc 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_OFFCAL_LEFT pd_run_width                       [1:0]            Defines the width of RUN pulse.s                                                            2'h0 - RUN PULSE width = 1s                                                            2'h1 - RUN PULSE width = 2s                                                            2'h2 - RUN PULSE width = 3s                                                            2'h3 - RUN PULSE width = 4



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_4_0_reg Address hc0007900
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_4_0_reg = 3221256448 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_RIGHT = hc0007900 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_RIGHT measurement data ready to be read
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_MID = hc0007900 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_MID measurement data ready to be read



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_4_1_reg Address hc0007904
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_4_1_reg = 3221256452 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_LEFT = hc0007904 0 9 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_LEFT pd reported a analog fault
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_MID = hc0007904 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_MID pd reported a analog fault
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_RIGHT = hc0007904 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_RIGHT pd reported a analog fault
csi_tadp_tx_0_OA_LANE1_HSRX_MODE = hc0007904 11 3 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_MODE pd reported a analog fault
csi_tadp_tx_0_RESERVED_15_14 = hc0007904 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 pd reported a analog fault



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_4_2_reg Address hc0007908
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_4_2_reg = 3221256456 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_IA_LANE1_HSRX_DATA_AB_LEFT_INT = hc0007908 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_DATA_AB_LEFT_INT enable the ring oscilator 
csi_tadp_tx_0_IA_LANE1_HSRX_DATA_BC_MID_INT = hc0007908 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_DATA_BC_MID_INT enable the ring oscilator 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_4_3_reg Address hc000790c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_4_3_reg = 3221256460 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_IA_LANE1_HSRX_DATA_CA_RIGHT_INT = hc000790c 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_DATA_CA_RIGHT_INT pd data output value sampled at rdy
csi_tadp_tx_0_IA_LANE1_HSRX_WORD_CLK_INT = hc000790c 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_WORD_CLK_INT pd data output value sampled at rdy
csi_tadp_tx_0_IA_LANE1_HSRX_HS_CLK_DIV_OUT_INT = hc000790c 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_HS_CLK_DIV_OUT_INT pd data output value sampled at rdy
csi_tadp_tx_0_IA_LANE1_HSTX_WORD_CLK_INT = hc000790c 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSTX_WORD_CLK_INT pd data output value sampled at rdy
csi_tadp_tx_0_IA_LANE1_HSRX_VCM_DET_OUT_INT = hc000790c 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_VCM_DET_OUT_INT pd data output value sampled at rdy
csi_tadp_tx_0_IA_LANE1_HSRX_OUT_CAL_LEFT_N_INT = hc000790c 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_OUT_CAL_LEFT_N_INT pd data output value sampled at rdy
csi_tadp_tx_0_IA_LANE1_HSRX_OUT_CAL_LEFT_P_INT = hc000790c 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_OUT_CAL_LEFT_P_INT pd data output value sampled at rdy
csi_tadp_tx_0_IA_LANE1_HSRX_OUT_CAL_RIGHT_N_INT = hc000790c 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_OUT_CAL_RIGHT_N_INT pd data output value sampled at rdy
csi_tadp_tx_0_IA_LANE1_HSRX_OUT_CAL_RIGHT_P_INT = hc000790c 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_OUT_CAL_RIGHT_P_INT pd data output value sampled at rdy



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_4_4_reg Address hc0007910
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE1_CTRL_4_4_reg = 3221256464 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_IA_LANE1_HSRX_DPHY_DDL_OSC_CLK_INT = hc0007910 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_DPHY_DDL_OSC_CLK_INT Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin2_sel3    [23:20]svm_initial_seq_id_vin2_sel2    [20:16]svm_initial_seq_id_vin2_sel1    [15:12]svm_initial_seq_id_vin2_sel0    [11:8]svm_initial_seq_id_vin1    [7:4]svm_initial_seq_id_vin0    [3:0]
csi_tadp_tx_0_IA_LANE1_HSRX_CPHY_ALP_DET_LEFT_OUT_INT = hc0007910 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_CPHY_ALP_DET_LEFT_OUT_INT Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin2_sel3    [23:20]svm_initial_seq_id_vin2_sel2    [20:16]svm_initial_seq_id_vin2_sel1    [15:12]svm_initial_seq_id_vin2_sel0    [11:8]svm_initial_seq_id_vin1    [7:4]svm_initial_seq_id_vin0    [3:0]
csi_tadp_tx_0_IA_LANE1_HSRX_CPHY_ALP_DET_RIGHT_OUT_INT = hc0007910 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_CPHY_ALP_DET_RIGHT_OUT_INT Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin2_sel3    [23:20]svm_initial_seq_id_vin2_sel2    [20:16]svm_initial_seq_id_vin2_sel1    [15:12]svm_initial_seq_id_vin2_sel0    [11:8]svm_initial_seq_id_vin1    [7:4]svm_initial_seq_id_vin0    [3:0]
csi_tadp_tx_0_IA_LANE1_HSRX_CPHY_CDR_OSC_CLK_INT = hc0007910 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_CPHY_CDR_OSC_CLK_INT Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin2_sel3    [23:20]svm_initial_seq_id_vin2_sel2    [20:16]svm_initial_seq_id_vin2_sel1    [15:12]svm_initial_seq_id_vin2_sel0    [11:8]svm_initial_seq_id_vin1    [7:4]svm_initial_seq_id_vin0    [3:0]
csi_tadp_tx_0_IA_LANE1_LPRX_DOUTCD_INT = hc0007910 4 2 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE1_LPRX_DOUTCD_INT Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin2_sel3    [23:20]svm_initial_seq_id_vin2_sel2    [20:16]svm_initial_seq_id_vin2_sel1    [15:12]svm_initial_seq_id_vin2_sel0    [11:8]svm_initial_seq_id_vin1    [7:4]svm_initial_seq_id_vin0    [3:0]
csi_tadp_tx_0_IA_LANE1_LPRX_DOUTLP_INT = hc0007910 6 2 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE1_LPRX_DOUTLP_INT Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin2_sel3    [23:20]svm_initial_seq_id_vin2_sel2    [20:16]svm_initial_seq_id_vin2_sel1    [15:12]svm_initial_seq_id_vin2_sel0    [11:8]svm_initial_seq_id_vin1    [7:4]svm_initial_seq_id_vin0    [3:0]
csi_tadp_tx_0_IA_LANE1_LPRX_DOUTULP_INT = hc0007910 8 2 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE1_LPRX_DOUTULP_INT Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin2_sel3    [23:20]svm_initial_seq_id_vin2_sel2    [20:16]svm_initial_seq_id_vin2_sel1    [15:12]svm_initial_seq_id_vin2_sel0    [11:8]svm_initial_seq_id_vin1    [7:4]svm_initial_seq_id_vin0    [3:0]
csi_tadp_tx_0_IA_LANE1_SPARE_OUT_INT = hc0007910 10 4 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE1_SPARE_OUT_INT Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin2_sel3    [23:20]svm_initial_seq_id_vin2_sel2    [20:16]svm_initial_seq_id_vin2_sel1    [15:12]svm_initial_seq_id_vin2_sel0    [11:8]svm_initial_seq_id_vin1    [7:4]svm_initial_seq_id_vin0    [3:0]
csi_tadp_tx_0_RESERVED_15_14 = hc0007910 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin2_sel3    [23:20]svm_initial_seq_id_vin2_sel2    [20:16]svm_initial_seq_id_vin2_sel1    [15:12]svm_initial_seq_id_vin2_sel0    [11:8]svm_initial_seq_id_vin1    [7:4]svm_initial_seq_id_vin0    [3:0]



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE1_OVR_5_0_reg Address hc0007940
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE1_OVR_5_0_reg = 3221256512 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_ENABLE_C1_INT = hc0007940 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_ENABLE_C1_INT Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin8    [23:20]svm_initial_seq_id_vin7    [20:16]svm_initial_seq_id_vin6    [15:12]svm_initial_seq_id_vin5    [11:8]svm_initial_seq_id_vin4    [7:4]svm_initial_seq_id_vin3    [3:0]
csi_tadp_tx_0_O_STOPSTATE_C1 = hc0007940 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_STOPSTATE_C1 Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin8    [23:20]svm_initial_seq_id_vin7    [20:16]svm_initial_seq_id_vin6    [15:12]svm_initial_seq_id_vin5    [11:8]svm_initial_seq_id_vin4    [7:4]svm_initial_seq_id_vin3    [3:0]
csi_tadp_tx_0_O_ULPSACTIVENOT_C1 = hc0007940 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ULPSACTIVENOT_C1 Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin8    [23:20]svm_initial_seq_id_vin7    [20:16]svm_initial_seq_id_vin6    [15:12]svm_initial_seq_id_vin5    [11:8]svm_initial_seq_id_vin4    [7:4]svm_initial_seq_id_vin3    [3:0]
csi_tadp_tx_0_I_TURNREQUEST_C1_INT = hc0007940 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TURNREQUEST_C1_INT Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin8    [23:20]svm_initial_seq_id_vin7    [20:16]svm_initial_seq_id_vin6    [15:12]svm_initial_seq_id_vin5    [11:8]svm_initial_seq_id_vin4    [7:4]svm_initial_seq_id_vin3    [3:0]
csi_tadp_tx_0_I_TURNDISABLE_C1_INT = hc0007940 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TURNDISABLE_C1_INT Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin8    [23:20]svm_initial_seq_id_vin7    [20:16]svm_initial_seq_id_vin6    [15:12]svm_initial_seq_id_vin5    [11:8]svm_initial_seq_id_vin4    [7:4]svm_initial_seq_id_vin3    [3:0]
csi_tadp_tx_0_O_DIRECTION_C1 = hc0007940 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_DIRECTION_C1 Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin8    [23:20]svm_initial_seq_id_vin7    [20:16]svm_initial_seq_id_vin6    [15:12]svm_initial_seq_id_vin5    [11:8]svm_initial_seq_id_vin4    [7:4]svm_initial_seq_id_vin3    [3:0]
csi_tadp_tx_0_I_FORCERXMODE_C1_INT = hc0007940 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_FORCERXMODE_C1_INT Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin8    [23:20]svm_initial_seq_id_vin7    [20:16]svm_initial_seq_id_vin6    [15:12]svm_initial_seq_id_vin5    [11:8]svm_initial_seq_id_vin4    [7:4]svm_initial_seq_id_vin3    [3:0]
csi_tadp_tx_0_I_FORCETXSTOPMODE_C1_INT = hc0007940 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_FORCETXSTOPMODE_C1_INT Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin8    [23:20]svm_initial_seq_id_vin7    [20:16]svm_initial_seq_id_vin6    [15:12]svm_initial_seq_id_vin5    [11:8]svm_initial_seq_id_vin4    [7:4]svm_initial_seq_id_vin3    [3:0]
csi_tadp_tx_0_O_ERRESC_C1 = hc0007940 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRESC_C1 Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin8    [23:20]svm_initial_seq_id_vin7    [20:16]svm_initial_seq_id_vin6    [15:12]svm_initial_seq_id_vin5    [11:8]svm_initial_seq_id_vin4    [7:4]svm_initial_seq_id_vin3    [3:0]
csi_tadp_tx_0_O_ERRSYNCESC_C1 = hc0007940 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRSYNCESC_C1 Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin8    [23:20]svm_initial_seq_id_vin7    [20:16]svm_initial_seq_id_vin6    [15:12]svm_initial_seq_id_vin5    [11:8]svm_initial_seq_id_vin4    [7:4]svm_initial_seq_id_vin3    [3:0]
csi_tadp_tx_0_O_ERRCONTROL_C1 = hc0007940 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRCONTROL_C1 Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin8    [23:20]svm_initial_seq_id_vin7    [20:16]svm_initial_seq_id_vin6    [15:12]svm_initial_seq_id_vin5    [11:8]svm_initial_seq_id_vin4    [7:4]svm_initial_seq_id_vin3    [3:0]
csi_tadp_tx_0_O_ERRCONTENTIONLP0_C1 = hc0007940 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP0_C1 Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin8    [23:20]svm_initial_seq_id_vin7    [20:16]svm_initial_seq_id_vin6    [15:12]svm_initial_seq_id_vin5    [11:8]svm_initial_seq_id_vin4    [7:4]svm_initial_seq_id_vin3    [3:0]
csi_tadp_tx_0_O_ERRCONTENTIONLP1_C1 = hc0007940 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP1_C1 Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin8    [23:20]svm_initial_seq_id_vin7    [20:16]svm_initial_seq_id_vin6    [15:12]svm_initial_seq_id_vin5    [11:8]svm_initial_seq_id_vin4    [7:4]svm_initial_seq_id_vin3    [3:0]
csi_tadp_tx_0_O_ERRSOTHS_C1 = hc0007940 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRSOTHS_C1 Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin8    [23:20]svm_initial_seq_id_vin7    [20:16]svm_initial_seq_id_vin6    [15:12]svm_initial_seq_id_vin5    [11:8]svm_initial_seq_id_vin4    [7:4]svm_initial_seq_id_vin3    [3:0]
csi_tadp_tx_0_RESERVED_15_14 = hc0007940 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin8    [23:20]svm_initial_seq_id_vin7    [20:16]svm_initial_seq_id_vin6    [15:12]svm_initial_seq_id_vin5    [11:8]svm_initial_seq_id_vin4    [7:4]svm_initial_seq_id_vin3    [3:0]



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE1_OVR_5_1_reg Address hc0007944
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE1_OVR_5_1_reg = 3221256516 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXDATAHS_C1 = hc0007944 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXDATAHS_C1 Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]svm_initial_seq_id_vin14    [23:20]svm_initial_seq_id_vin13    [20:16]svm_initial_seq_id_vin12    [15:12]svm_initial_seq_id_vin11    [11:8]svm_initial_seq_id_vin10    [7:4]svm_initial_seq_id_vin9    [3:0]



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE1_OVR_5_4_reg Address hc0007950
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE1_OVR_5_4_reg = 3221256528 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_TXSENDALPHS_C1_INT = hc0007950 0 2 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXSENDALPHS_C1_INT Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]sReserved    [23:8]svm_initial_seq_id_vin_internal    [7:4]svm_initial_seq_id_vin15    [3:0]
csi_tadp_tx_0_I_TXALPCODE_C1_INT = hc0007950 2 4 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXALPCODE_C1_INT Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]sReserved    [23:8]svm_initial_seq_id_vin_internal    [7:4]svm_initial_seq_id_vin15    [3:0]
csi_tadp_tx_0_I_TXALPNIBBLE_C1_INT = hc0007950 6 4 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXALPNIBBLE_C1_INT Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]sReserved    [23:8]svm_initial_seq_id_vin_internal    [7:4]svm_initial_seq_id_vin15    [3:0]
csi_tadp_tx_0_I_ALPWAKESTATE_C1_INT = hc0007950 10 3 h0 RO HEX
; Desc_csi_tadp_tx_0_I_ALPWAKESTATE_C1_INT Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]sReserved    [23:8]svm_initial_seq_id_vin_internal    [7:4]svm_initial_seq_id_vin15    [3:0]
csi_tadp_tx_0_RESERVED_15_13 = hc0007950 13 3 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 Initial SEQ_ID Value added to the read voltage register. There is a value for each measurable input. The initial SEQ_ID values will be incremented automatically after every read access to the read voltage register: sfield descriptionsparity                [31:28]smagic_number [27:24]sReserved    [23:8]svm_initial_seq_id_vin_internal    [7:4]svm_initial_seq_id_vin15    [3:0]



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE2_OVR_0_9_reg Address hc0008024
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE2_OVR_0_9_reg = 3221258276 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXACTIVEHS_D2 = hc0008024 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXACTIVEHS_D2 controls the voltage monitor functionalitysfield descriptionspd                       [0]                    Power down –s                                                   1’b0 – vm is actives                                                   1’b1 – vm is forced to power-downsvm_bypass mode     [1]           Selects bypass modes                                                  1’b0 – the voltage_monitor is activated in automatic mode. The vm are controlled according to predefined sequencess                                                  1’b1 – the voltage_monitor is activated in bypass modes                                                  The vm are controlled according to the control signals written by SW to Bypass Control register see para. ‎11.3svm_single_mode      [2]           vm_single run modes                                                 1'b0 - the voltage monitor run in contineous mode -  run command is active until disabled - effective only in bypass modes                                                 1'b1 - the voltage monitor run in single mode - run command per measurementsReserved           [23:3]ssMagic_number  [27:24]   Default value – identical for all registerssParity                 [31:28]   Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXSYNCHS_D2 = hc0008024 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXSYNCHS_D2 controls the voltage monitor functionalitysfield descriptionspd                       [0]                    Power down –s                                                   1’b0 – vm is actives                                                   1’b1 – vm is forced to power-downsvm_bypass mode     [1]           Selects bypass modes                                                  1’b0 – the voltage_monitor is activated in automatic mode. The vm are controlled according to predefined sequencess                                                  1’b1 – the voltage_monitor is activated in bypass modes                                                  The vm are controlled according to the control signals written by SW to Bypass Control register see para. ‎11.3svm_single_mode      [2]           vm_single run modes                                                 1'b0 - the voltage monitor run in contineous mode -  run command is active until disabled - effective only in bypass modes                                                 1'b1 - the voltage monitor run in single mode - run command per measurementsReserved           [23:3]ssMagic_number  [27:24]   Default value – identical for all registerssParity                 [31:28]   Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXVALIDHS_D2 = hc0008024 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXVALIDHS_D2 controls the voltage monitor functionalitysfield descriptionspd                       [0]                    Power down –s                                                   1’b0 – vm is actives                                                   1’b1 – vm is forced to power-downsvm_bypass mode     [1]           Selects bypass modes                                                  1’b0 – the voltage_monitor is activated in automatic mode. The vm are controlled according to predefined sequencess                                                  1’b1 – the voltage_monitor is activated in bypass modes                                                  The vm are controlled according to the control signals written by SW to Bypass Control register see para. ‎11.3svm_single_mode      [2]           vm_single run modes                                                 1'b0 - the voltage monitor run in contineous mode -  run command is active until disabled - effective only in bypass modes                                                 1'b1 - the voltage monitor run in single mode - run command per measurementsReserved           [23:3]ssMagic_number  [27:24]   Default value – identical for all registerssParity                 [31:28]   Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXSKEWCALHS_D2 = hc0008024 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXSKEWCALHS_D2 controls the voltage monitor functionalitysfield descriptionspd                       [0]                    Power down –s                                                   1’b0 – vm is actives                                                   1’b1 – vm is forced to power-downsvm_bypass mode     [1]           Selects bypass modes                                                  1’b0 – the voltage_monitor is activated in automatic mode. The vm are controlled according to predefined sequencess                                                  1’b1 – the voltage_monitor is activated in bypass modes                                                  The vm are controlled according to the control signals written by SW to Bypass Control register see para. ‎11.3svm_single_mode      [2]           vm_single run modes                                                 1'b0 - the voltage monitor run in contineous mode -  run command is active until disabled - effective only in bypass modes                                                 1'b1 - the voltage monitor run in single mode - run command per measurementsReserved           [23:3]ssMagic_number  [27:24]   Default value – identical for all registerssParity                 [31:28]   Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXWORDCLKHS_D2 = hc0008024 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXWORDCLKHS_D2 controls the voltage monitor functionalitysfield descriptionspd                       [0]                    Power down –s                                                   1’b0 – vm is actives                                                   1’b1 – vm is forced to power-downsvm_bypass mode     [1]           Selects bypass modes                                                  1’b0 – the voltage_monitor is activated in automatic mode. The vm are controlled according to predefined sequencess                                                  1’b1 – the voltage_monitor is activated in bypass modes                                                  The vm are controlled according to the control signals written by SW to Bypass Control register see para. ‎11.3svm_single_mode      [2]           vm_single run modes                                                 1'b0 - the voltage monitor run in contineous mode -  run command is active until disabled - effective only in bypass modes                                                 1'b1 - the voltage monitor run in single mode - run command per measurementsReserved           [23:3]ssMagic_number  [27:24]   Default value – identical for all registerssParity                 [31:28]   Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXDATAHS_D2 = hc0008024 5 8 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXDATAHS_D2 controls the voltage monitor functionalitysfield descriptionspd                       [0]                    Power down –s                                                   1’b0 – vm is actives                                                   1’b1 – vm is forced to power-downsvm_bypass mode     [1]           Selects bypass modes                                                  1’b0 – the voltage_monitor is activated in automatic mode. The vm are controlled according to predefined sequencess                                                  1’b1 – the voltage_monitor is activated in bypass modes                                                  The vm are controlled according to the control signals written by SW to Bypass Control register see para. ‎11.3svm_single_mode      [2]           vm_single run modes                                                 1'b0 - the voltage monitor run in contineous mode -  run command is active until disabled - effective only in bypass modes                                                 1'b1 - the voltage monitor run in single mode - run command per measurementsReserved           [23:3]ssMagic_number  [27:24]   Default value – identical for all registerssParity                 [31:28]   Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXALTERNATECALHS_D2 = hc0008024 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXALTERNATECALHS_D2 controls the voltage monitor functionalitysfield descriptionspd                       [0]                    Power down –s                                                   1’b0 – vm is actives                                                   1’b1 – vm is forced to power-downsvm_bypass mode     [1]           Selects bypass modes                                                  1’b0 – the voltage_monitor is activated in automatic mode. The vm are controlled according to predefined sequencess                                                  1’b1 – the voltage_monitor is activated in bypass modes                                                  The vm are controlled according to the control signals written by SW to Bypass Control register see para. ‎11.3svm_single_mode      [2]           vm_single run modes                                                 1'b0 - the voltage monitor run in contineous mode -  run command is active until disabled - effective only in bypass modes                                                 1'b1 - the voltage monitor run in single mode - run command per measurementsReserved           [23:3]ssMagic_number  [27:24]   Default value – identical for all registerssParity                 [31:28]   Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_14 = hc0008024 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 controls the voltage monitor functionalitysfield descriptionspd                       [0]                    Power down –s                                                   1’b0 – vm is actives                                                   1’b1 – vm is forced to power-downsvm_bypass mode     [1]           Selects bypass modes                                                  1’b0 – the voltage_monitor is activated in automatic mode. The vm are controlled according to predefined sequencess                                                  1’b1 – the voltage_monitor is activated in bypass modes                                                  The vm are controlled according to the control signals written by SW to Bypass Control register see para. ‎11.3svm_single_mode      [2]           vm_single run modes                                                 1'b0 - the voltage monitor run in contineous mode -  run command is active until disabled - effective only in bypass modes                                                 1'b1 - the voltage monitor run in single mode - run command per measurementsReserved           [23:3]ssMagic_number  [27:24]   Default value – identical for all registerssParity                 [31:28]   Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE2_OVR_0_10_reg Address hc0008028
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE2_OVR_0_10_reg = 3221258280 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_TXREQUESTHS_D2_INT = hc0008028 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTHS_D2_INT controls thevm activation while in bypass modesvm_pd                       [0]                     vm power down control bit while in bypass modesvm_rstn                    [1]                     vm reset control bit while in bypass mode svm_run                     [2]                     vm run control bit while in bypass modesvm_cload                 [3]                     vm load configuration bit while in bypass modesvm_an_sel              [7:4]                  vm analog select control bits while in bypass modesReserved                 [23:8]ssMagic_number     [27:24]              Default value – identical for all registerssParity                      [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXDATATRANSFERENHS_D2_INT = hc0008028 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXDATATRANSFERENHS_D2_INT controls thevm activation while in bypass modesvm_pd                       [0]                     vm power down control bit while in bypass modesvm_rstn                    [1]                     vm reset control bit while in bypass mode svm_run                     [2]                     vm run control bit while in bypass modesvm_cload                 [3]                     vm load configuration bit while in bypass modesvm_an_sel              [7:4]                  vm analog select control bits while in bypass modesReserved                 [23:8]ssMagic_number     [27:24]              Default value – identical for all registerssParity                      [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_TXREADYHS_D2 = hc0008028 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_TXREADYHS_D2 controls thevm activation while in bypass modesvm_pd                       [0]                     vm power down control bit while in bypass modesvm_rstn                    [1]                     vm reset control bit while in bypass mode svm_run                     [2]                     vm run control bit while in bypass modesvm_cload                 [3]                     vm load configuration bit while in bypass modesvm_an_sel              [7:4]                  vm analog select control bits while in bypass modesReserved                 [23:8]ssMagic_number     [27:24]              Default value – identical for all registerssParity                      [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_TXWORDCLKHS_D2 = hc0008028 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_TXWORDCLKHS_D2 controls thevm activation while in bypass modesvm_pd                       [0]                     vm power down control bit while in bypass modesvm_rstn                    [1]                     vm reset control bit while in bypass mode svm_run                     [2]                     vm run control bit while in bypass modesvm_cload                 [3]                     vm load configuration bit while in bypass modesvm_an_sel              [7:4]                  vm analog select control bits while in bypass modesReserved                 [23:8]ssMagic_number     [27:24]              Default value – identical for all registerssParity                      [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXDATAHS_D2_INT = hc0008028 4 8 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXDATAHS_D2_INT controls thevm activation while in bypass modesvm_pd                       [0]                     vm power down control bit while in bypass modesvm_rstn                    [1]                     vm reset control bit while in bypass mode svm_run                     [2]                     vm run control bit while in bypass modesvm_cload                 [3]                     vm load configuration bit while in bypass modesvm_an_sel              [7:4]                  vm analog select control bits while in bypass modesReserved                 [23:8]ssMagic_number     [27:24]              Default value – identical for all registerssParity                      [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXALTERNATECALHS_D2_INT = hc0008028 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXALTERNATECALHS_D2_INT controls thevm activation while in bypass modesvm_pd                       [0]                     vm power down control bit while in bypass modesvm_rstn                    [1]                     vm reset control bit while in bypass mode svm_run                     [2]                     vm run control bit while in bypass modesvm_cload                 [3]                     vm load configuration bit while in bypass modesvm_an_sel              [7:4]                  vm analog select control bits while in bypass modesReserved                 [23:8]ssMagic_number     [27:24]              Default value – identical for all registerssParity                      [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXSKEWCALHS_D2_INT = hc0008028 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXSKEWCALHS_D2_INT controls thevm activation while in bypass modesvm_pd                       [0]                     vm power down control bit while in bypass modesvm_rstn                    [1]                     vm reset control bit while in bypass mode svm_run                     [2]                     vm run control bit while in bypass modesvm_cload                 [3]                     vm load configuration bit while in bypass modesvm_an_sel              [7:4]                  vm analog select control bits while in bypass modesReserved                 [23:8]ssMagic_number     [27:24]              Default value – identical for all registerssParity                      [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_14 = hc0008028 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 controls thevm activation while in bypass modesvm_pd                       [0]                     vm power down control bit while in bypass modesvm_rstn                    [1]                     vm reset control bit while in bypass mode svm_run                     [2]                     vm run control bit while in bypass modesvm_cload                 [3]                     vm load configuration bit while in bypass modesvm_an_sel              [7:4]                  vm analog select control bits while in bypass modesReserved                 [23:8]ssMagic_number     [27:24]              Default value – identical for all registerssParity                      [31:28]              Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE2_OVR_0_11_reg Address hc000802c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE2_OVR_0_11_reg = 3221258284 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_TXREQUESTESC_D2_INT = hc000802c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTESC_D2_INT defines the configuration register1 of the voltage monitor svm_cf1_sec_mode      [1:0]          secondary_mode s                                                               for pri_mode = 2'b00 should be set to 2'b00s                                                               for pri_mode = 2'b01 should be set to 2'b00s                                                               for pri_mode = 2'b10s                                                                        2'b00 - signature direct mode                                      = 14'h30BCs                                                                        2'b01 - signature inverted direct mode                   = 14'h0F43s                                                                        2'b10 - signature conversion mode                           = 14'h30BCs                                                                        2'b10 - signature inverted conversion mode         = 14'h0F43svm_cf1_pri_mode      [3:2]          primary_modes                                                               2'b00 - voltage measurement modes                                                               2'b01 - read status modes                                                               2'b10 - read signature modes                                                               2'b11 - undefinedsvm_cf1_ser_mode     [4]               defines the output formats                                                                1'b0 - parallel mode s                                                                1'b1 - serial mode - MSb firstsvm_cfg1_resolution  [6:5]            defines the voltage monitor data out resolutions                                                                2'b00 - 14-bit resolutions                                                                2'b01 - 12-bit resolutions                                                                2'b10 - 10-bit resolutions                                                                2'b11 - 8-bit resolutionsreserved                         [23:7]sMagic_number             [27:24]              Default value – identical for all registerssParity                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXLPDTESC_D2_INT = hc000802c 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXLPDTESC_D2_INT defines the configuration register1 of the voltage monitor svm_cf1_sec_mode      [1:0]          secondary_mode s                                                               for pri_mode = 2'b00 should be set to 2'b00s                                                               for pri_mode = 2'b01 should be set to 2'b00s                                                               for pri_mode = 2'b10s                                                                        2'b00 - signature direct mode                                      = 14'h30BCs                                                                        2'b01 - signature inverted direct mode                   = 14'h0F43s                                                                        2'b10 - signature conversion mode                           = 14'h30BCs                                                                        2'b10 - signature inverted conversion mode         = 14'h0F43svm_cf1_pri_mode      [3:2]          primary_modes                                                               2'b00 - voltage measurement modes                                                               2'b01 - read status modes                                                               2'b10 - read signature modes                                                               2'b11 - undefinedsvm_cf1_ser_mode     [4]               defines the output formats                                                                1'b0 - parallel mode s                                                                1'b1 - serial mode - MSb firstsvm_cfg1_resolution  [6:5]            defines the voltage monitor data out resolutions                                                                2'b00 - 14-bit resolutions                                                                2'b01 - 12-bit resolutions                                                                2'b10 - 10-bit resolutions                                                                2'b11 - 8-bit resolutionsreserved                         [23:7]sMagic_number             [27:24]              Default value – identical for all registerssParity                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXULPSEXIT_D2_INT = hc000802c 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXULPSEXIT_D2_INT defines the configuration register1 of the voltage monitor svm_cf1_sec_mode      [1:0]          secondary_mode s                                                               for pri_mode = 2'b00 should be set to 2'b00s                                                               for pri_mode = 2'b01 should be set to 2'b00s                                                               for pri_mode = 2'b10s                                                                        2'b00 - signature direct mode                                      = 14'h30BCs                                                                        2'b01 - signature inverted direct mode                   = 14'h0F43s                                                                        2'b10 - signature conversion mode                           = 14'h30BCs                                                                        2'b10 - signature inverted conversion mode         = 14'h0F43svm_cf1_pri_mode      [3:2]          primary_modes                                                               2'b00 - voltage measurement modes                                                               2'b01 - read status modes                                                               2'b10 - read signature modes                                                               2'b11 - undefinedsvm_cf1_ser_mode     [4]               defines the output formats                                                                1'b0 - parallel mode s                                                                1'b1 - serial mode - MSb firstsvm_cfg1_resolution  [6:5]            defines the voltage monitor data out resolutions                                                                2'b00 - 14-bit resolutions                                                                2'b01 - 12-bit resolutions                                                                2'b10 - 10-bit resolutions                                                                2'b11 - 8-bit resolutionsreserved                         [23:7]sMagic_number             [27:24]              Default value – identical for all registerssParity                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXULPSESC_D2_INT = hc000802c 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXULPSESC_D2_INT defines the configuration register1 of the voltage monitor svm_cf1_sec_mode      [1:0]          secondary_mode s                                                               for pri_mode = 2'b00 should be set to 2'b00s                                                               for pri_mode = 2'b01 should be set to 2'b00s                                                               for pri_mode = 2'b10s                                                                        2'b00 - signature direct mode                                      = 14'h30BCs                                                                        2'b01 - signature inverted direct mode                   = 14'h0F43s                                                                        2'b10 - signature conversion mode                           = 14'h30BCs                                                                        2'b10 - signature inverted conversion mode         = 14'h0F43svm_cf1_pri_mode      [3:2]          primary_modes                                                               2'b00 - voltage measurement modes                                                               2'b01 - read status modes                                                               2'b10 - read signature modes                                                               2'b11 - undefinedsvm_cf1_ser_mode     [4]               defines the output formats                                                                1'b0 - parallel mode s                                                                1'b1 - serial mode - MSb firstsvm_cfg1_resolution  [6:5]            defines the voltage monitor data out resolutions                                                                2'b00 - 14-bit resolutions                                                                2'b01 - 12-bit resolutions                                                                2'b10 - 10-bit resolutions                                                                2'b11 - 8-bit resolutionsreserved                         [23:7]sMagic_number             [27:24]              Default value – identical for all registerssParity                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXVALIDESC_D2_INT = hc000802c 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXVALIDESC_D2_INT defines the configuration register1 of the voltage monitor svm_cf1_sec_mode      [1:0]          secondary_mode s                                                               for pri_mode = 2'b00 should be set to 2'b00s                                                               for pri_mode = 2'b01 should be set to 2'b00s                                                               for pri_mode = 2'b10s                                                                        2'b00 - signature direct mode                                      = 14'h30BCs                                                                        2'b01 - signature inverted direct mode                   = 14'h0F43s                                                                        2'b10 - signature conversion mode                           = 14'h30BCs                                                                        2'b10 - signature inverted conversion mode         = 14'h0F43svm_cf1_pri_mode      [3:2]          primary_modes                                                               2'b00 - voltage measurement modes                                                               2'b01 - read status modes                                                               2'b10 - read signature modes                                                               2'b11 - undefinedsvm_cf1_ser_mode     [4]               defines the output formats                                                                1'b0 - parallel mode s                                                                1'b1 - serial mode - MSb firstsvm_cfg1_resolution  [6:5]            defines the voltage monitor data out resolutions                                                                2'b00 - 14-bit resolutions                                                                2'b01 - 12-bit resolutions                                                                2'b10 - 10-bit resolutions                                                                2'b11 - 8-bit resolutionsreserved                         [23:7]sMagic_number             [27:24]              Default value – identical for all registerssParity                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_TXREADYESC_D2 = hc000802c 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_TXREADYESC_D2 defines the configuration register1 of the voltage monitor svm_cf1_sec_mode      [1:0]          secondary_mode s                                                               for pri_mode = 2'b00 should be set to 2'b00s                                                               for pri_mode = 2'b01 should be set to 2'b00s                                                               for pri_mode = 2'b10s                                                                        2'b00 - signature direct mode                                      = 14'h30BCs                                                                        2'b01 - signature inverted direct mode                   = 14'h0F43s                                                                        2'b10 - signature conversion mode                           = 14'h30BCs                                                                        2'b10 - signature inverted conversion mode         = 14'h0F43svm_cf1_pri_mode      [3:2]          primary_modes                                                               2'b00 - voltage measurement modes                                                               2'b01 - read status modes                                                               2'b10 - read signature modes                                                               2'b11 - undefinedsvm_cf1_ser_mode     [4]               defines the output formats                                                                1'b0 - parallel mode s                                                                1'b1 - serial mode - MSb firstsvm_cfg1_resolution  [6:5]            defines the voltage monitor data out resolutions                                                                2'b00 - 14-bit resolutions                                                                2'b01 - 12-bit resolutions                                                                2'b10 - 10-bit resolutions                                                                2'b11 - 8-bit resolutionsreserved                         [23:7]sMagic_number             [27:24]              Default value – identical for all registerssParity                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXTRIGGERESC_D2_INT = hc000802c 6 4 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXTRIGGERESC_D2_INT defines the configuration register1 of the voltage monitor svm_cf1_sec_mode      [1:0]          secondary_mode s                                                               for pri_mode = 2'b00 should be set to 2'b00s                                                               for pri_mode = 2'b01 should be set to 2'b00s                                                               for pri_mode = 2'b10s                                                                        2'b00 - signature direct mode                                      = 14'h30BCs                                                                        2'b01 - signature inverted direct mode                   = 14'h0F43s                                                                        2'b10 - signature conversion mode                           = 14'h30BCs                                                                        2'b10 - signature inverted conversion mode         = 14'h0F43svm_cf1_pri_mode      [3:2]          primary_modes                                                               2'b00 - voltage measurement modes                                                               2'b01 - read status modes                                                               2'b10 - read signature modes                                                               2'b11 - undefinedsvm_cf1_ser_mode     [4]               defines the output formats                                                                1'b0 - parallel mode s                                                                1'b1 - serial mode - MSb firstsvm_cfg1_resolution  [6:5]            defines the voltage monitor data out resolutions                                                                2'b00 - 14-bit resolutions                                                                2'b01 - 12-bit resolutions                                                                2'b10 - 10-bit resolutions                                                                2'b11 - 8-bit resolutionsreserved                         [23:7]sMagic_number             [27:24]              Default value – identical for all registerssParity                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_10 = hc000802c 10 6 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 defines the configuration register1 of the voltage monitor svm_cf1_sec_mode      [1:0]          secondary_mode s                                                               for pri_mode = 2'b00 should be set to 2'b00s                                                               for pri_mode = 2'b01 should be set to 2'b00s                                                               for pri_mode = 2'b10s                                                                        2'b00 - signature direct mode                                      = 14'h30BCs                                                                        2'b01 - signature inverted direct mode                   = 14'h0F43s                                                                        2'b10 - signature conversion mode                           = 14'h30BCs                                                                        2'b10 - signature inverted conversion mode         = 14'h0F43svm_cf1_pri_mode      [3:2]          primary_modes                                                               2'b00 - voltage measurement modes                                                               2'b01 - read status modes                                                               2'b10 - read signature modes                                                               2'b11 - undefinedsvm_cf1_ser_mode     [4]               defines the output formats                                                                1'b0 - parallel mode s                                                                1'b1 - serial mode - MSb firstsvm_cfg1_resolution  [6:5]            defines the voltage monitor data out resolutions                                                                2'b00 - 14-bit resolutions                                                                2'b01 - 12-bit resolutions                                                                2'b10 - 10-bit resolutions                                                                2'b11 - 8-bit resolutionsreserved                         [23:7]sMagic_number             [27:24]              Default value – identical for all registerssParity                             [31:28]              Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE2_OVR_0_12_reg Address hc0008030
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE2_OVR_0_12_reg = 3221258288 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_TXDATAESC_D2_INT = hc0008030 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXDATAESC_D2_INT defines the configuration register2 of the voltage monitorsinput_select             [4:0]                  defines the input on which the measurement will be performeds                                                                   5'b00000 - vin0 will be measureds                                                                   5'b00001 - vin1 will be measuredss                                                                   5'b01111 - vin15 will be measureds                                                                   5'1xxxxx - internal voltage (VDD & VSS) will be  measuredsreserved                    [6:5]sreference select     [7]                       selects which reference voltage will be used s                                                                    1'b0 - internal references                                                                    1'b1 - external reference connected to an_io[0]sreserved                     [23:8]sMagic_number         [27:24]              Default value – identical for all registerssParity                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_8 = hc0008030 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 defines the configuration register2 of the voltage monitorsinput_select             [4:0]                  defines the input on which the measurement will be performeds                                                                   5'b00000 - vin0 will be measureds                                                                   5'b00001 - vin1 will be measuredss                                                                   5'b01111 - vin15 will be measureds                                                                   5'1xxxxx - internal voltage (VDD & VSS) will be  measuredsreserved                    [6:5]sreference select     [7]                       selects which reference voltage will be used s                                                                    1'b0 - internal references                                                                    1'b1 - external reference connected to an_io[0]sreserved                     [23:8]sMagic_number         [27:24]              Default value – identical for all registerssParity                             [31:28]              Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE2_OVR_0_13_reg Address hc0008034
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE2_OVR_0_13_reg = 3221258292 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXCLKESC_D2 = hc0008034 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXCLKESC_D2 defines the voltage_monitor clocksvm_clk_up_width        [9:0]  - defines the length of high level of vm_clksreserve                          [11:10]svm_clk_down_width   [21:12]  - defines the length of low level of vm_clksreserve                          [23:22]sMagic_number             [27:24]       Default value – identical for all registerssParity                             [31:28]        Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXLPDTESC_D2 = hc0008034 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXLPDTESC_D2 defines the voltage_monitor clocksvm_clk_up_width        [9:0]  - defines the length of high level of vm_clksreserve                          [11:10]svm_clk_down_width   [21:12]  - defines the length of low level of vm_clksreserve                          [23:22]sMagic_number             [27:24]       Default value – identical for all registerssParity                             [31:28]        Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXULPSESC_D2 = hc0008034 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXULPSESC_D2 defines the voltage_monitor clocksvm_clk_up_width        [9:0]  - defines the length of high level of vm_clksreserve                          [11:10]svm_clk_down_width   [21:12]  - defines the length of low level of vm_clksreserve                          [23:22]sMagic_number             [27:24]       Default value – identical for all registerssParity                             [31:28]        Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXVALIDESC_D2 = hc0008034 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXVALIDESC_D2 defines the voltage_monitor clocksvm_clk_up_width        [9:0]  - defines the length of high level of vm_clksreserve                          [11:10]svm_clk_down_width   [21:12]  - defines the length of low level of vm_clksreserve                          [23:22]sMagic_number             [27:24]       Default value – identical for all registerssParity                             [31:28]        Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXTRIGGERESC_D2 = hc0008034 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXTRIGGERESC_D2 defines the voltage_monitor clocksvm_clk_up_width        [9:0]  - defines the length of high level of vm_clksreserve                          [11:10]svm_clk_down_width   [21:12]  - defines the length of low level of vm_clksreserve                          [23:22]sMagic_number             [27:24]       Default value – identical for all registerssParity                             [31:28]        Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXDATAESC_D2 = hc0008034 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXDATAESC_D2 defines the voltage_monitor clocksvm_clk_up_width        [9:0]  - defines the length of high level of vm_clksreserve                          [11:10]svm_clk_down_width   [21:12]  - defines the length of low level of vm_clksreserve                          [23:22]sMagic_number             [27:24]       Default value – identical for all registerssParity                             [31:28]        Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE2_OVR_0_14_reg Address hc0008038
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE2_OVR_0_14_reg = 3221258296 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_ENABLE_D2_INT = hc0008038 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_ENABLE_D2_INT defines the wait period for analog power-ypsvm_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_STOPSTATE_D2 = hc0008038 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_STOPSTATE_D2 defines the wait period for analog power-ypsvm_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_ULPSACTIVENOT_D2 = hc0008038 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ULPSACTIVENOT_D2 defines the wait period for analog power-ypsvm_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TURNREQUEST_D2_INT = hc0008038 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TURNREQUEST_D2_INT defines the wait period for analog power-ypsvm_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TURNDISABLE_D2_INT = hc0008038 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TURNDISABLE_D2_INT defines the wait period for analog power-ypsvm_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_DIRECTION_D2 = hc0008038 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_DIRECTION_D2 defines the wait period for analog power-ypsvm_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_FORCERXMODE_D2_INT = hc0008038 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_FORCERXMODE_D2_INT defines the wait period for analog power-ypsvm_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_FORCETXSTOPMODE_D2_INT = hc0008038 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_FORCETXSTOPMODE_D2_INT defines the wait period for analog power-ypsvm_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_ERRESC_D2 = hc0008038 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRESC_D2 defines the wait period for analog power-ypsvm_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_ERRSYNCESC_D2 = hc0008038 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRSYNCESC_D2 defines the wait period for analog power-ypsvm_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_ERRCONTROL_D2 = hc0008038 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRCONTROL_D2 defines the wait period for analog power-ypsvm_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_ERRCONTENTIONLP0_D2 = hc0008038 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP0_D2 defines the wait period for analog power-ypsvm_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_ERRCONTENTIONLP1_D2 = hc0008038 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP1_D2 defines the wait period for analog power-ypsvm_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_ERRSOTHS_D2 = hc0008038 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRSOTHS_D2 defines the wait period for analog power-ypsvm_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_ERRSOTSYNCHS_D2 = hc0008038 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRSOTSYNCHS_D2 defines the wait period for analog power-ypsvm_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_15 = hc0008038 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 defines the wait period for analog power-ypsvm_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE2_OVR_0_15_reg Address hc000803c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE2_OVR_0_15_reg = 3221258300 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXACTIVEHS_D2 = hc000803c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXACTIVEHS_D2 time gap between adjacent measuremenvmsmeasurement period     [22:0]              Defines number of clocks periods between voltage measurement – the actual period depend on the selected s                                                                          clock frequencysuse_mpr                               [23]                 Use measurement period register s                                                                          1’b0 – measuremenvm will be done at the maximum possible rate – once one measurement is done (on both vm) and values are sampled, a new measurement will be initiateds                                                                          1’b1 – measurement will be done at the rate specified by the measurement period fields                                                                          For example - measurement period = 23’h30d4 means 12500 / 6.25Mhz = 2 msecsMagic_number                  [27:24]             Default value – identical for all registerssParity                                     [31:28]           Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXSYNCHS_D2 = hc000803c 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXSYNCHS_D2 time gap between adjacent measuremenvmsmeasurement period     [22:0]              Defines number of clocks periods between voltage measurement – the actual period depend on the selected s                                                                          clock frequencysuse_mpr                               [23]                 Use measurement period register s                                                                          1’b0 – measuremenvm will be done at the maximum possible rate – once one measurement is done (on both vm) and values are sampled, a new measurement will be initiateds                                                                          1’b1 – measurement will be done at the rate specified by the measurement period fields                                                                          For example - measurement period = 23’h30d4 means 12500 / 6.25Mhz = 2 msecsMagic_number                  [27:24]             Default value – identical for all registerssParity                                     [31:28]           Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXVALIDHS_D2 = hc000803c 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXVALIDHS_D2 time gap between adjacent measuremenvmsmeasurement period     [22:0]              Defines number of clocks periods between voltage measurement – the actual period depend on the selected s                                                                          clock frequencysuse_mpr                               [23]                 Use measurement period register s                                                                          1’b0 – measuremenvm will be done at the maximum possible rate – once one measurement is done (on both vm) and values are sampled, a new measurement will be initiateds                                                                          1’b1 – measurement will be done at the rate specified by the measurement period fields                                                                          For example - measurement period = 23’h30d4 means 12500 / 6.25Mhz = 2 msecsMagic_number                  [27:24]             Default value – identical for all registerssParity                                     [31:28]           Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXSKEWCALHS_D2 = hc000803c 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXSKEWCALHS_D2 time gap between adjacent measuremenvmsmeasurement period     [22:0]              Defines number of clocks periods between voltage measurement – the actual period depend on the selected s                                                                          clock frequencysuse_mpr                               [23]                 Use measurement period register s                                                                          1’b0 – measuremenvm will be done at the maximum possible rate – once one measurement is done (on both vm) and values are sampled, a new measurement will be initiateds                                                                          1’b1 – measurement will be done at the rate specified by the measurement period fields                                                                          For example - measurement period = 23’h30d4 means 12500 / 6.25Mhz = 2 msecsMagic_number                  [27:24]             Default value – identical for all registerssParity                                     [31:28]           Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXWORDCLKHS_D2 = hc000803c 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXWORDCLKHS_D2 time gap between adjacent measuremenvmsmeasurement period     [22:0]              Defines number of clocks periods between voltage measurement – the actual period depend on the selected s                                                                          clock frequencysuse_mpr                               [23]                 Use measurement period register s                                                                          1’b0 – measuremenvm will be done at the maximum possible rate – once one measurement is done (on both vm) and values are sampled, a new measurement will be initiateds                                                                          1’b1 – measurement will be done at the rate specified by the measurement period fields                                                                          For example - measurement period = 23’h30d4 means 12500 / 6.25Mhz = 2 msecsMagic_number                  [27:24]             Default value – identical for all registerssParity                                     [31:28]           Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXDATAHS_D2 = hc000803c 5 8 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXDATAHS_D2 time gap between adjacent measuremenvmsmeasurement period     [22:0]              Defines number of clocks periods between voltage measurement – the actual period depend on the selected s                                                                          clock frequencysuse_mpr                               [23]                 Use measurement period register s                                                                          1’b0 – measuremenvm will be done at the maximum possible rate – once one measurement is done (on both vm) and values are sampled, a new measurement will be initiateds                                                                          1’b1 – measurement will be done at the rate specified by the measurement period fields                                                                          For example - measurement period = 23’h30d4 means 12500 / 6.25Mhz = 2 msecsMagic_number                  [27:24]             Default value – identical for all registerssParity                                     [31:28]           Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_13 = hc000803c 13 3 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 time gap between adjacent measuremenvmsmeasurement period     [22:0]              Defines number of clocks periods between voltage measurement – the actual period depend on the selected s                                                                          clock frequencysuse_mpr                               [23]                 Use measurement period register s                                                                          1’b0 – measuremenvm will be done at the maximum possible rate – once one measurement is done (on both vm) and values are sampled, a new measurement will be initiateds                                                                          1’b1 – measurement will be done at the rate specified by the measurement period fields                                                                          For example - measurement period = 23’h30d4 means 12500 / 6.25Mhz = 2 msecsMagic_number                  [27:24]             Default value – identical for all registerssParity                                     [31:28]           Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE2_OVR_1_10_reg Address hc0008068
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE2_OVR_1_10_reg = 3221258344 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXDATAHS_C2 = hc0008068 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXDATAHS_C2 measurement timeout          [15:0]            Defines the waiting time from RUN activation until RDY is received – if the timeout period expires an error flag iss                                                                                 raised.s                                                                                The timeout counter resolution is the vm clock period.sReserved                                      [23:16]sMagic_number                          [27:24]         Default value – identical for all registerssParity                                             [31:28]         Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE2_OVR_1_11_reg Address hc000806c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE2_OVR_1_11_reg = 3221258348 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXACTIVEHS_C2 = hc000806c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXACTIVEHS_C2 short_self_test_high_limit1       [13:0]                  When short self-test is selected this value is used as high_limit1sreserved                                         [23:14]sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXSYNCHS_C2 = hc000806c 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXSYNCHS_C2 short_self_test_high_limit1       [13:0]                  When short self-test is selected this value is used as high_limit1sreserved                                         [23:14]sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXVALIDHS_C2 = hc000806c 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXVALIDHS_C2 short_self_test_high_limit1       [13:0]                  When short self-test is selected this value is used as high_limit1sreserved                                         [23:14]sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXINVALIDCODEHS_C2 = hc000806c 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXINVALIDCODEHS_C2 short_self_test_high_limit1       [13:0]                  When short self-test is selected this value is used as high_limit1sreserved                                         [23:14]sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXWORDCLKHS_C2 = hc000806c 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXWORDCLKHS_C2 short_self_test_high_limit1       [13:0]                  When short self-test is selected this value is used as high_limit1sreserved                                         [23:14]sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXSYNCTYPEHS_C2 = hc000806c 5 3 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXSYNCTYPEHS_C2 short_self_test_high_limit1       [13:0]                  When short self-test is selected this value is used as high_limit1sreserved                                         [23:14]sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXALPCODE_C2 = hc000806c 8 4 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXALPCODE_C2 short_self_test_high_limit1       [13:0]                  When short self-test is selected this value is used as high_limit1sreserved                                         [23:14]sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXSYNCTYPEHS_C2_INT = hc000806c 12 3 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXSYNCTYPEHS_C2_INT short_self_test_high_limit1       [13:0]                  When short self-test is selected this value is used as high_limit1sreserved                                         [23:14]sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_15 = hc000806c 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 short_self_test_high_limit1       [13:0]                  When short self-test is selected this value is used as high_limit1sreserved                                         [23:14]sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE2_OVR_1_12_reg Address hc0008070
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE2_OVR_1_12_reg = 3221258352 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXALPVALIDHS_C2 = hc0008070 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXALPVALIDHS_C2 short_self_test_low_limit1       [13:0]                  When short self-test is selected this value is used as low_limit1sreserved                                         [23:14]sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXALPNIBBLE_C2 = hc0008070 1 4 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXALPNIBBLE_C2 short_self_test_low_limit1       [13:0]                  When short self-test is selected this value is used as low_limit1sreserved                                         [23:14]sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXDATAESC_C2_INT = hc0008070 5 8 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXDATAESC_C2_INT short_self_test_low_limit1       [13:0]                  When short self-test is selected this value is used as low_limit1sreserved                                         [23:14]sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXSENDSYNCHS_C2_INT = hc0008070 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXSENDSYNCHS_C2_INT short_self_test_low_limit1       [13:0]                  When short self-test is selected this value is used as low_limit1sreserved                                         [23:14]sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_14 = hc0008070 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 short_self_test_low_limit1       [13:0]                  When short self-test is selected this value is used as low_limit1sreserved                                         [23:14]sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE2_OVR_1_13_reg Address hc0008074
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE2_OVR_1_13_reg = 3221258356 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_TXDATAHS_C2_INT = hc0008074 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXDATAHS_C2_INT short_self_test_high_limit2s         [13:0]                When short self-test is selected this value is used as high_limit2sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE2_OVR_1_14_reg Address hc0008078
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE2_OVR_1_14_reg = 3221258360 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_TXREQUESTESC_C2_INT = hc0008078 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTESC_C2_INT short_self_test_low_limit2s         [13:0]                When short self-test is selected this value is used as low_limit2sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXLPDTESC_C2_INT = hc0008078 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXLPDTESC_C2_INT short_self_test_low_limit2s         [13:0]                When short self-test is selected this value is used as low_limit2sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXULPSEXIT_C2_INT = hc0008078 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXULPSEXIT_C2_INT short_self_test_low_limit2s         [13:0]                When short self-test is selected this value is used as low_limit2sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXULPSESC_C2_INT = hc0008078 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXULPSESC_C2_INT short_self_test_low_limit2s         [13:0]                When short self-test is selected this value is used as low_limit2sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXVALIDESC_C2_INT = hc0008078 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXVALIDESC_C2_INT short_self_test_low_limit2s         [13:0]                When short self-test is selected this value is used as low_limit2sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_TXREADYESC_C2 = hc0008078 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_TXREADYESC_C2 short_self_test_low_limit2s         [13:0]                When short self-test is selected this value is used as low_limit2sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXTRIGGERESC_C2_INT = hc0008078 6 4 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXTRIGGERESC_C2_INT short_self_test_low_limit2s         [13:0]                When short self-test is selected this value is used as low_limit2sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXREQUESTHS_C2_INT = hc0008078 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTHS_C2_INT short_self_test_low_limit2s         [13:0]                When short self-test is selected this value is used as low_limit2sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXDATATRANSFERENHS_C2_INT = hc0008078 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXDATATRANSFERENHS_C2_INT short_self_test_low_limit2s         [13:0]                When short self-test is selected this value is used as low_limit2sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_TXREADYHS_C2 = hc0008078 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_TXREADYHS_C2 short_self_test_low_limit2s         [13:0]                When short self-test is selected this value is used as low_limit2sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_TXWORDCLKHS_C2 = hc0008078 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_TXWORDCLKHS_C2 short_self_test_low_limit2s         [13:0]                When short self-test is selected this value is used as low_limit2sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_14 = hc0008078 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 short_self_test_low_limit2s         [13:0]                When short self-test is selected this value is used as low_limit2sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE2_OVR_1_15_reg Address hc000807c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE2_OVR_1_15_reg = 3221258364 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXCLKESC_C2 = hc000807c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXCLKESC_C2 short_self_test_high_limit3s         [13:0]                When short self-test is selected this value is used as high_limit3sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXLPDTESC_C2 = hc000807c 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXLPDTESC_C2 short_self_test_high_limit3s         [13:0]                When short self-test is selected this value is used as high_limit3sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXULPSESC_C2 = hc000807c 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXULPSESC_C2 short_self_test_high_limit3s         [13:0]                When short self-test is selected this value is used as high_limit3sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXVALIDESC_C2 = hc000807c 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXVALIDESC_C2 short_self_test_high_limit3s         [13:0]                When short self-test is selected this value is used as high_limit3sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXTRIGGERESC_C2 = hc000807c 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXTRIGGERESC_C2 short_self_test_high_limit3s         [13:0]                When short self-test is selected this value is used as high_limit3sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXDATAESC_C2 = hc000807c 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXDATAESC_C2 short_self_test_high_limit3s         [13:0]                When short self-test is selected this value is used as high_limit3sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_3_8_reg Address hc00080e0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_3_8_reg = 3221258464 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE2_HSTX_PON = hc00080e0 0 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_PON short_self_test_low_limit3s         [13:0]                When short self-test is selected this value is used as low_limit3sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSTX_BOOST_EN = hc00080e0 2 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_BOOST_EN short_self_test_low_limit3s         [13:0]                When short self-test is selected this value is used as low_limit3sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PON = hc00080e0 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PON short_self_test_low_limit3s         [13:0]                When short self-test is selected this value is used as low_limit3sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSTX_LOWCAP_EN = hc00080e0 5 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_LOWCAP_EN short_self_test_low_limit3s         [13:0]                When short self-test is selected this value is used as low_limit3sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_LPTX_DIN_DN = hc00080e0 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_LPTX_DIN_DN short_self_test_low_limit3s         [13:0]                When short self-test is selected this value is used as low_limit3sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_LPTX_DIN_DP = hc00080e0 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_LPTX_DIN_DP short_self_test_low_limit3s         [13:0]                When short self-test is selected this value is used as low_limit3sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_DCC_EN = hc00080e0 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_DCC_EN short_self_test_low_limit3s         [13:0]                When short self-test is selected this value is used as low_limit3sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_EN = hc00080e0 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_EN short_self_test_low_limit3s         [13:0]                When short self-test is selected this value is used as low_limit3sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN = hc00080e0 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN short_self_test_low_limit3s         [13:0]                When short self-test is selected this value is used as low_limit3sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_DELAY = hc00080e0 12 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_DELAY short_self_test_low_limit3s         [13:0]                When short self-test is selected this value is used as low_limit3sreserved                                         [23:14]sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_3_9_reg Address hc00080e4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_3_9_reg = 3221258468 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE2_HSTX_DATA_AB_DPHY = hc00080e4 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_DATA_AB_DPHY short_self_test_forced_vm_value1             [13:0]               When short self-test is selected this value is used for comparison against above defined limitssreserved                                                                 [23:14] sMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSTX_TERM_EN = hc00080e4 8 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_TERM_EN short_self_test_forced_vm_value1             [13:0]               When short self-test is selected this value is used for comparison against above defined limitssreserved                                                                 [23:14] sMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSTX_DIV_EN = hc00080e4 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_DIV_EN short_self_test_forced_vm_value1             [13:0]               When short self-test is selected this value is used for comparison against above defined limitssreserved                                                                 [23:14] sMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_11 = hc00080e4 11 5 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_11 short_self_test_forced_vm_value1             [13:0]               When short self-test is selected this value is used for comparison against above defined limitssreserved                                                                 [23:14] sMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_3_10_reg Address hc00080e8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_3_10_reg = 3221258472 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE2_HSTX_DATA_BC = hc00080e8 0 7 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_DATA_BC short_self_test_forced_vm_value3             [13:0]               When short self-test is selected this value is used for comparison against above defined limitssreserved                                                   [23:14]sMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSTX_DATA_CA = hc00080e8 7 7 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_DATA_CA short_self_test_forced_vm_value3             [13:0]               When short self-test is selected this value is used for comparison against above defined limitssreserved                                                   [23:14]sMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_14 = hc00080e8 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 short_self_test_forced_vm_value3             [13:0]               When short self-test is selected this value is used for comparison against above defined limitssreserved                                                   [23:14]sMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_3_11_reg Address hc00080ec
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_3_11_reg = 3221258476 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE2_LPTX_EN = hc00080ec 0 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_LPTX_EN short_self_test_forced_vm_value1             [13:0]               When short self-test is selected this value is used for comparison against above defined limitssreserved                                                   [23:14] sMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_LPTX_PON = hc00080ec 2 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_LPTX_PON short_self_test_forced_vm_value1             [13:0]               When short self-test is selected this value is used for comparison against above defined limitssreserved                                                   [23:14] sMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_LPTX_PULLDWN_EN = hc00080ec 4 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_LPTX_PULLDWN_EN short_self_test_forced_vm_value1             [13:0]               When short self-test is selected this value is used for comparison against above defined limitssreserved                                                   [23:14] sMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_LPRX_LP_PON = hc00080ec 6 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_LPRX_LP_PON short_self_test_forced_vm_value1             [13:0]               When short self-test is selected this value is used for comparison against above defined limitssreserved                                                   [23:14] sMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_LPRX_CD_PON = hc00080ec 8 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_LPRX_CD_PON short_self_test_forced_vm_value1             [13:0]               When short self-test is selected this value is used for comparison against above defined limitssreserved                                                   [23:14] sMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_LPRX_ULP_PON = hc00080ec 10 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_LPRX_ULP_PON short_self_test_forced_vm_value1             [13:0]               When short self-test is selected this value is used for comparison against above defined limitssreserved                                                   [23:14] sMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_CDR_FBK_EN = hc00080ec 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_CDR_FBK_EN short_self_test_forced_vm_value1             [13:0]               When short self-test is selected this value is used for comparison against above defined limitssreserved                                                   [23:14] sMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_MASK_CHANGE = hc00080ec 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_MASK_CHANGE short_self_test_forced_vm_value1             [13:0]               When short self-test is selected this value is used for comparison against above defined limitssreserved                                                   [23:14] sMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_14 = hc00080ec 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 short_self_test_forced_vm_value1             [13:0]               When short self-test is selected this value is used for comparison against above defined limitssreserved                                                   [23:14] sMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_3_12_reg Address hc00080f0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_3_12_reg = 3221258480 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE2_HSRX_TERM_RIGHT_EN = hc00080f0 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_TERM_RIGHT_EN short_self_test_DS_low_limit_high_value                [13:0]                 When short self-test is selected this value is used as low_limit against the high value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_TERM_LEFT_EN = hc00080f0 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_TERM_LEFT_EN short_self_test_DS_low_limit_high_value                [13:0]                 When short self-test is selected this value is used as low_limit against the high value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_HS_CLK_DIV_EN = hc00080f0 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_HS_CLK_DIV_EN short_self_test_DS_low_limit_high_value                [13:0]                 When short self-test is selected this value is used as low_limit against the high value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_DESERIALIZER_EN = hc00080f0 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DESERIALIZER_EN short_self_test_DS_low_limit_high_value                [13:0]                 When short self-test is selected this value is used as low_limit against the high value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_DESERIALIZER_DATA_EN = hc00080f0 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DESERIALIZER_DATA_EN short_self_test_DS_low_limit_high_value                [13:0]                 When short self-test is selected this value is used as low_limit against the high value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_DESERIALIZER_DIV_EN = hc00080f0 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DESERIALIZER_DIV_EN short_self_test_DS_low_limit_high_value                [13:0]                 When short self-test is selected this value is used as low_limit against the high value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_OFFCAL_OBS_EN = hc00080f0 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_OFFCAL_OBS_EN short_self_test_DS_low_limit_high_value                [13:0]                 When short self-test is selected this value is used as low_limit against the high value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_VCM_DET_PON = hc00080f0 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_VCM_DET_PON short_self_test_DS_low_limit_high_value                [13:0]                 When short self-test is selected this value is used as low_limit against the high value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_VCM_DET_OUT_EN = hc00080f0 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_VCM_DET_OUT_EN short_self_test_DS_low_limit_high_value                [13:0]                 When short self-test is selected this value is used as low_limit against the high value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_ALP_DET_RIGHT_PON = hc00080f0 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_ALP_DET_RIGHT_PON short_self_test_DS_low_limit_high_value                [13:0]                 When short self-test is selected this value is used as low_limit against the high value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_ALP_DET_LEFT_PON = hc00080f0 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_ALP_DET_LEFT_PON short_self_test_DS_low_limit_high_value                [13:0]                 When short self-test is selected this value is used as low_limit against the high value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_PON = hc00080f0 11 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_PON short_self_test_DS_low_limit_high_value                [13:0]                 When short self-test is selected this value is used as low_limit against the high value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_EN = hc00080f0 13 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_EN short_self_test_DS_low_limit_high_value                [13:0]                 When short self-test is selected this value is used as low_limit against the high value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_15 = hc00080f0 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 short_self_test_DS_low_limit_high_value                [13:0]                 When short self-test is selected this value is used as low_limit against the high value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_3_13_reg Address hc00080f4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_3_13_reg = 3221258484 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_BIAS_BYPASS_EN = hc00080f4 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_BIAS_BYPASS_EN short_self_test_DS_high_limit_high_value               [13:0]                 When short self-test is selected this value is used as high_limit against the high value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                 [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_BYPASS_EN = hc00080f4 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_BYPASS_EN short_self_test_DS_high_limit_high_value               [13:0]                 When short self-test is selected this value is used as high_limit against the high value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                 [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_CHANGE = hc00080f4 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_CHANGE short_self_test_DS_high_limit_high_value               [13:0]                 When short self-test is selected this value is used as high_limit against the high value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                 [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DLL_EN = hc00080f4 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DLL_EN short_self_test_DS_high_limit_high_value               [13:0]                 When short self-test is selected this value is used as high_limit against the high value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                 [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_PREAMBLE_CAL_EN = hc00080f4 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_PREAMBLE_CAL_EN short_self_test_DS_high_limit_high_value               [13:0]                 When short self-test is selected this value is used as high_limit against the high value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                 [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DATA_DELAY = hc00080f4 5 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DATA_DELAY short_self_test_DS_high_limit_high_value               [13:0]                 When short self-test is selected this value is used as high_limit against the high value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                 [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_9 = hc00080f4 9 7 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_9 short_self_test_DS_high_limit_high_value               [13:0]                 When short self-test is selected this value is used as high_limit against the high value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_3_14_reg Address hc00080f8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_3_14_reg = 3221258488 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_BIAS = hc00080f8 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_BIAS short_self_test_DS_low_limit_low_value                [13:0]                 When short self-test is selected this value is used as low_limit against the low value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_COARSE_BANK = hc00080f8 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_COARSE_BANK short_self_test_DS_low_limit_low_value                [13:0]                 When short self-test is selected this value is used as low_limit against the low value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_TUNE_MODE = hc00080f8 8 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_TUNE_MODE short_self_test_DS_low_limit_low_value                [13:0]                 When short self-test is selected this value is used as low_limit against the low value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DLL_FBK = hc00080f8 10 6 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DLL_FBK short_self_test_DS_low_limit_low_value                [13:0]                 When short self-test is selected this value is used as low_limit against the low value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_3_15_reg Address hc00080fc
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_3_15_reg = 3221258492 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE2_HSRX_OFFCAL_RIGHT = hc00080fc 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_OFFCAL_RIGHT short_self_test_DS_high_limit_high_value               [13:0]                 When short self-test is selected this value is used as high_limit against the low value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                 [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_OFFCAL_LEFT = hc00080fc 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_OFFCAL_LEFT short_self_test_DS_high_limit_high_value               [13:0]                 When short self-test is selected this value is used as high_limit against the low value ofs                                                                                                                         direct signature from vm sreserved                                                                        [23:14]sMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_4_0_reg Address hc0008100
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_4_0_reg = 3221258496 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_RIGHT = hc0008100 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_RIGHT vm_high_comp              0                           vm comparison expected result  - step1s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               1                           vm comparison expected result - step1s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comps             2                           vm comparison expected result - step2s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               3                           vm comparison expected result - step2s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comp              4                           vm comparison expected result  - step3s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               5                           vm comparison expected result - step3s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comps             6                           vm comparison expected result - step4s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               7                           vm comparison expected resultv - step4s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comp              8                           vm comparison expected result  - step5s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               9                           vm comparison expected result - step5s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comps             10                           vm comparison expected result - step6s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               11                           vm comparison expected result - step6s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comp              12                           vm comparison expected result  - step7s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               13                           vm comparison expected result - step7s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comps             14                           vm comparison expected result - step8s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               15                           vm comparison expected result - step8s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsReserved                         [23:16]sMagic_number              [27:24]               Default value – identical for all registerssParity                                 [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_MID = hc0008100 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_MID vm_high_comp              0                           vm comparison expected result  - step1s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               1                           vm comparison expected result - step1s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comps             2                           vm comparison expected result - step2s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               3                           vm comparison expected result - step2s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comp              4                           vm comparison expected result  - step3s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               5                           vm comparison expected result - step3s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comps             6                           vm comparison expected result - step4s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               7                           vm comparison expected resultv - step4s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comp              8                           vm comparison expected result  - step5s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               9                           vm comparison expected result - step5s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comps             10                           vm comparison expected result - step6s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               11                           vm comparison expected result - step6s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comp              12                           vm comparison expected result  - step7s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               13                           vm comparison expected result - step7s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsvm_high_comps             14                           vm comparison expected result - step8s                                                                              1’b0 – voltage is supposed to be less or equal than high limits                                                                              1’b1 -  voltage is supposed to be higher than high limitsvm_low_comp               15                           vm comparison expected result - step8s                                                                              1’b0 – voltage is supposed to be higher or equal than low limits                                                                              1’b1 -  voltage is supposed to be lower than low limitsReserved                         [23:16]sMagic_number              [27:24]               Default value – identical for all registerssParity                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_4_1_reg Address hc0008104
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_4_1_reg = 3221258500 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_LEFT = hc0008104 0 9 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_LEFT func_vm_high_limit_vin0                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_MID = hc0008104 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_MID func_vm_high_limit_vin0                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_RIGHT = hc0008104 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_RIGHT func_vm_high_limit_vin0                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE2_HSRX_MODE = hc0008104 11 3 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_MODE func_vm_high_limit_vin0                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_14 = hc0008104 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 func_vm_high_limit_vin0                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_4_2_reg Address hc0008108
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_4_2_reg = 3221258504 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_IA_LANE2_HSRX_DATA_AB_LEFT_INT = hc0008108 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_DATA_AB_LEFT_INT func_vm_low_limit_vin0                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE2_HSRX_DATA_BC_MID_INT = hc0008108 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_DATA_BC_MID_INT func_vm_low_limit_vin0                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_4_3_reg Address hc000810c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_4_3_reg = 3221258508 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_IA_LANE2_HSRX_DATA_CA_RIGHT_INT = hc000810c 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_DATA_CA_RIGHT_INT func_vm_high_limit_vin1                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE2_HSRX_WORD_CLK_INT = hc000810c 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_WORD_CLK_INT func_vm_high_limit_vin1                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE2_HSRX_HS_CLK_DIV_OUT_INT = hc000810c 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_HS_CLK_DIV_OUT_INT func_vm_high_limit_vin1                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE2_HSTX_WORD_CLK_INT = hc000810c 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSTX_WORD_CLK_INT func_vm_high_limit_vin1                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE2_HSRX_VCM_DET_OUT_INT = hc000810c 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_VCM_DET_OUT_INT func_vm_high_limit_vin1                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE2_HSRX_OUT_CAL_LEFT_N_INT = hc000810c 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_OUT_CAL_LEFT_N_INT func_vm_high_limit_vin1                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE2_HSRX_OUT_CAL_LEFT_P_INT = hc000810c 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_OUT_CAL_LEFT_P_INT func_vm_high_limit_vin1                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE2_HSRX_OUT_CAL_RIGHT_N_INT = hc000810c 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_OUT_CAL_RIGHT_N_INT func_vm_high_limit_vin1                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE2_HSRX_OUT_CAL_RIGHT_P_INT = hc000810c 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_OUT_CAL_RIGHT_P_INT func_vm_high_limit_vin1                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_4_4_reg Address hc0008110
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE2_CTRL_4_4_reg = 3221258512 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_IA_LANE2_HSRX_DPHY_DDL_OSC_CLK_INT = hc0008110 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_DPHY_DDL_OSC_CLK_INT func_vm_low_limit_vin1                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE2_HSRX_CPHY_ALP_DET_LEFT_OUT_INT = hc0008110 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_CPHY_ALP_DET_LEFT_OUT_INT func_vm_low_limit_vin1                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE2_HSRX_CPHY_ALP_DET_RIGHT_OUT_INT = hc0008110 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_CPHY_ALP_DET_RIGHT_OUT_INT func_vm_low_limit_vin1                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE2_HSRX_CPHY_CDR_OSC_CLK_INT = hc0008110 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_CPHY_CDR_OSC_CLK_INT func_vm_low_limit_vin1                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE2_LPRX_DOUTCD_INT = hc0008110 4 2 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE2_LPRX_DOUTCD_INT func_vm_low_limit_vin1                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE2_LPRX_DOUTLP_INT = hc0008110 6 2 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE2_LPRX_DOUTLP_INT func_vm_low_limit_vin1                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE2_LPRX_DOUTULP_INT = hc0008110 8 2 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE2_LPRX_DOUTULP_INT func_vm_low_limit_vin1                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE2_SPARE_OUT_INT = hc0008110 10 4 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE2_SPARE_OUT_INT func_vm_low_limit_vin1                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_14 = hc0008110 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 func_vm_low_limit_vin1                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE2_OVR_5_0_reg Address hc0008140
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE2_OVR_5_0_reg = 3221258560 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_ENABLE_C2_INT = hc0008140 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_ENABLE_C2_INT func_vm_high_limit_vin2_sel0                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_STOPSTATE_C2 = hc0008140 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_STOPSTATE_C2 func_vm_high_limit_vin2_sel0                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_ULPSACTIVENOT_C2 = hc0008140 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ULPSACTIVENOT_C2 func_vm_high_limit_vin2_sel0                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TURNREQUEST_C2_INT = hc0008140 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TURNREQUEST_C2_INT func_vm_high_limit_vin2_sel0                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TURNDISABLE_C2_INT = hc0008140 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TURNDISABLE_C2_INT func_vm_high_limit_vin2_sel0                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_DIRECTION_C2 = hc0008140 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_DIRECTION_C2 func_vm_high_limit_vin2_sel0                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_FORCERXMODE_C2_INT = hc0008140 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_FORCERXMODE_C2_INT func_vm_high_limit_vin2_sel0                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_FORCETXSTOPMODE_C2_INT = hc0008140 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_FORCETXSTOPMODE_C2_INT func_vm_high_limit_vin2_sel0                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_ERRESC_C2 = hc0008140 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRESC_C2 func_vm_high_limit_vin2_sel0                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_ERRSYNCESC_C2 = hc0008140 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRSYNCESC_C2 func_vm_high_limit_vin2_sel0                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_ERRCONTROL_C2 = hc0008140 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRCONTROL_C2 func_vm_high_limit_vin2_sel0                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_ERRCONTENTIONLP0_C2 = hc0008140 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP0_C2 func_vm_high_limit_vin2_sel0                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_ERRCONTENTIONLP1_C2 = hc0008140 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP1_C2 func_vm_high_limit_vin2_sel0                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_ERRSOTHS_C2 = hc0008140 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRSOTHS_C2 func_vm_high_limit_vin2_sel0                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_14 = hc0008140 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 func_vm_high_limit_vin2_sel0                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE2_OVR_5_1_reg Address hc0008144
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE2_OVR_5_1_reg = 3221258564 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXDATAHS_C2 = hc0008144 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXDATAHS_C2 func_vm_low_limit_vin2_sel0                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE2_OVR_5_4_reg Address hc0008150
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_CPHY_PPI_LANE2_OVR_5_4_reg = 3221258576 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_TXSENDALPHS_C2_INT = hc0008150 0 2 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXSENDALPHS_C2_INT func_vm_high_limit_vin2_sel1                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXALPCODE_C2_INT = hc0008150 2 4 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXALPCODE_C2_INT func_vm_high_limit_vin2_sel1                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXALPNIBBLE_C2_INT = hc0008150 6 4 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXALPNIBBLE_C2_INT func_vm_high_limit_vin2_sel1                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_ALPWAKESTATE_C2_INT = hc0008150 10 3 h0 RO HEX
; Desc_csi_tadp_tx_0_I_ALPWAKESTATE_C2_INT func_vm_high_limit_vin2_sel1                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_13 = hc0008150 13 3 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 func_vm_high_limit_vin2_sel1                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE3_OVR_0_9_reg Address hc0008824
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE3_OVR_0_9_reg = 3221260324 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXACTIVEHS_D3 = hc0008824 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXACTIVEHS_D3 func_vm_low_limit_vin2_sel1                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXSYNCHS_D3 = hc0008824 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXSYNCHS_D3 func_vm_low_limit_vin2_sel1                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXVALIDHS_D3 = hc0008824 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXVALIDHS_D3 func_vm_low_limit_vin2_sel1                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXSKEWCALHS_D3 = hc0008824 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXSKEWCALHS_D3 func_vm_low_limit_vin2_sel1                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXWORDCLKHS_D3 = hc0008824 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXWORDCLKHS_D3 func_vm_low_limit_vin2_sel1                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXDATAHS_D3 = hc0008824 5 8 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXDATAHS_D3 func_vm_low_limit_vin2_sel1                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXALTERNATECALHS_D3 = hc0008824 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXALTERNATECALHS_D3 func_vm_low_limit_vin2_sel1                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_14 = hc0008824 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 func_vm_low_limit_vin2_sel1                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE3_OVR_0_10_reg Address hc0008828
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE3_OVR_0_10_reg = 3221260328 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_TXREQUESTHS_D3_INT = hc0008828 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTHS_D3_INT func_vm_high_limit_vin2_sel2                                [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXDATATRANSFERENHS_D3_INT = hc0008828 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXDATATRANSFERENHS_D3_INT func_vm_high_limit_vin2_sel2                                [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_TXREADYHS_D3 = hc0008828 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_TXREADYHS_D3 func_vm_high_limit_vin2_sel2                                [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_TXWORDCLKHS_D3 = hc0008828 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_TXWORDCLKHS_D3 func_vm_high_limit_vin2_sel2                                [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXDATAHS_D3_INT = hc0008828 4 8 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXDATAHS_D3_INT func_vm_high_limit_vin2_sel2                                [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXALTERNATECALHS_D3_INT = hc0008828 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXALTERNATECALHS_D3_INT func_vm_high_limit_vin2_sel2                                [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXSKEWCALHS_D3_INT = hc0008828 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXSKEWCALHS_D3_INT func_vm_high_limit_vin2_sel2                                [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_14 = hc0008828 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 func_vm_high_limit_vin2_sel2                                [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE3_OVR_0_11_reg Address hc000882c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE3_OVR_0_11_reg = 3221260332 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_TXREQUESTESC_D3_INT = hc000882c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTESC_D3_INT func_vm_low_limit_vin2_sel2                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXLPDTESC_D3_INT = hc000882c 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXLPDTESC_D3_INT func_vm_low_limit_vin2_sel2                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXULPSEXIT_D3_INT = hc000882c 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXULPSEXIT_D3_INT func_vm_low_limit_vin2_sel2                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXULPSESC_D3_INT = hc000882c 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXULPSESC_D3_INT func_vm_low_limit_vin2_sel2                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXVALIDESC_D3_INT = hc000882c 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXVALIDESC_D3_INT func_vm_low_limit_vin2_sel2                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_TXREADYESC_D3 = hc000882c 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_TXREADYESC_D3 func_vm_low_limit_vin2_sel2                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXTRIGGERESC_D3_INT = hc000882c 6 4 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXTRIGGERESC_D3_INT func_vm_low_limit_vin2_sel2                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_10 = hc000882c 10 6 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 func_vm_low_limit_vin2_sel2                                  [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE3_OVR_0_12_reg Address hc0008830
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE3_OVR_0_12_reg = 3221260336 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_TXDATAESC_D3_INT = hc0008830 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_I_TXDATAESC_D3_INT func_vm_high_limit_vin2_sel3                                [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_8 = hc0008830 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 func_vm_high_limit_vin2_sel3                                [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE3_OVR_0_13_reg Address hc0008834
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE3_OVR_0_13_reg = 3221260340 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXCLKESC_D3 = hc0008834 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXCLKESC_D3 func_vm_low_limit_vin2_sel3                                       [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXLPDTESC_D3 = hc0008834 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXLPDTESC_D3 func_vm_low_limit_vin2_sel3                                       [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXULPSESC_D3 = hc0008834 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXULPSESC_D3 func_vm_low_limit_vin2_sel3                                       [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXVALIDESC_D3 = hc0008834 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXVALIDESC_D3 func_vm_low_limit_vin2_sel3                                       [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXTRIGGERESC_D3 = hc0008834 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXTRIGGERESC_D3 func_vm_low_limit_vin2_sel3                                       [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXDATAESC_D3 = hc0008834 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXDATAESC_D3 func_vm_low_limit_vin2_sel3                                       [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE3_OVR_0_14_reg Address hc0008838
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE3_OVR_0_14_reg = 3221260344 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_ENABLE_D3_INT = hc0008838 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_ENABLE_D3_INT func_vm_high_limit_vin3                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_STOPSTATE_D3 = hc0008838 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_STOPSTATE_D3 func_vm_high_limit_vin3                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_ULPSACTIVENOT_D3 = hc0008838 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ULPSACTIVENOT_D3 func_vm_high_limit_vin3                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TURNREQUEST_D3_INT = hc0008838 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TURNREQUEST_D3_INT func_vm_high_limit_vin3                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TURNDISABLE_D3_INT = hc0008838 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TURNDISABLE_D3_INT func_vm_high_limit_vin3                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_DIRECTION_D3 = hc0008838 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_DIRECTION_D3 func_vm_high_limit_vin3                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_FORCERXMODE_D3_INT = hc0008838 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_FORCERXMODE_D3_INT func_vm_high_limit_vin3                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_FORCETXSTOPMODE_D3_INT = hc0008838 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_FORCETXSTOPMODE_D3_INT func_vm_high_limit_vin3                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_ERRESC_D3 = hc0008838 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRESC_D3 func_vm_high_limit_vin3                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_ERRSYNCESC_D3 = hc0008838 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRSYNCESC_D3 func_vm_high_limit_vin3                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_ERRCONTROL_D3 = hc0008838 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRCONTROL_D3 func_vm_high_limit_vin3                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_ERRCONTENTIONLP0_D3 = hc0008838 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP0_D3 func_vm_high_limit_vin3                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_ERRCONTENTIONLP1_D3 = hc0008838 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP1_D3 func_vm_high_limit_vin3                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_ERRSOTHS_D3 = hc0008838 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRSOTHS_D3 func_vm_high_limit_vin3                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_ERRSOTSYNCHS_D3 = hc0008838 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ERRSOTSYNCHS_D3 func_vm_high_limit_vin3                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_15 = hc0008838 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 func_vm_high_limit_vin3                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE3_OVR_0_15_reg Address hc000883c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_LANE3_OVR_0_15_reg = 3221260348 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_RXACTIVEHS_D3 = hc000883c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXACTIVEHS_D3 func_vm_low_limit_vin3                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXSYNCHS_D3 = hc000883c 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXSYNCHS_D3 func_vm_low_limit_vin3                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXVALIDHS_D3 = hc000883c 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXVALIDHS_D3 func_vm_low_limit_vin3                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXSKEWCALHS_D3 = hc000883c 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXSKEWCALHS_D3 func_vm_low_limit_vin3                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXWORDCLKHS_D3 = hc000883c 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXWORDCLKHS_D3 func_vm_low_limit_vin3                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXDATAHS_D3 = hc000883c 5 8 h0 RO HEX
; Desc_csi_tadp_tx_0_O_RXDATAHS_D3 func_vm_low_limit_vin3                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_13 = hc000883c 13 3 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 func_vm_low_limit_vin3                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_3_8_reg Address hc00088e0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_3_8_reg = 3221260512 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE3_HSTX_PON = hc00088e0 0 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_PON func_vm_high_limit_vin4                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSTX_BOOST_EN = hc00088e0 2 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_BOOST_EN func_vm_high_limit_vin4                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PON = hc00088e0 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PON func_vm_high_limit_vin4                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSTX_LOWCAP_EN = hc00088e0 5 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_LOWCAP_EN func_vm_high_limit_vin4                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_LPTX_DIN_DN = hc00088e0 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_LPTX_DIN_DN func_vm_high_limit_vin4                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_LPTX_DIN_DP = hc00088e0 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_LPTX_DIN_DP func_vm_high_limit_vin4                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_DCC_EN = hc00088e0 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_DCC_EN func_vm_high_limit_vin4                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_EN = hc00088e0 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_EN func_vm_high_limit_vin4                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN = hc00088e0 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN func_vm_high_limit_vin4                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_DELAY = hc00088e0 12 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_DELAY func_vm_high_limit_vin4                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_3_9_reg Address hc00088e4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_3_9_reg = 3221260516 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE3_HSTX_DATA_AB_DPHY = hc00088e4 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_DATA_AB_DPHY func_vm_low_limit_vin4                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSTX_TERM_EN = hc00088e4 8 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_TERM_EN func_vm_low_limit_vin4                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSTX_DIV_EN = hc00088e4 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_DIV_EN func_vm_low_limit_vin4                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_11 = hc00088e4 11 5 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_11 func_vm_low_limit_vin4                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_3_10_reg Address hc00088e8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_3_10_reg = 3221260520 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE3_HSTX_DATA_BC = hc00088e8 0 7 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_DATA_BC func_vm_high_limit_vin5                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSTX_DATA_CA = hc00088e8 7 7 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_DATA_CA func_vm_high_limit_vin5                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_14 = hc00088e8 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 func_vm_high_limit_vin5                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_3_11_reg Address hc00088ec
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_3_11_reg = 3221260524 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE3_LPTX_EN = hc00088ec 0 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_LPTX_EN func_vm_low_limit_vin5                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_LPTX_PON = hc00088ec 2 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_LPTX_PON func_vm_low_limit_vin5                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_LPTX_PULLDWN_EN = hc00088ec 4 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_LPTX_PULLDWN_EN func_vm_low_limit_vin5                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_LPRX_LP_PON = hc00088ec 6 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_LPRX_LP_PON func_vm_low_limit_vin5                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_LPRX_CD_PON = hc00088ec 8 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_LPRX_CD_PON func_vm_low_limit_vin5                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_LPRX_ULP_PON = hc00088ec 10 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_LPRX_ULP_PON func_vm_low_limit_vin5                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_CDR_FBK_EN = hc00088ec 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_CDR_FBK_EN func_vm_low_limit_vin5                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_MASK_CHANGE = hc00088ec 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_MASK_CHANGE func_vm_low_limit_vin5                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_14 = hc00088ec 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 func_vm_low_limit_vin5                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_3_12_reg Address hc00088f0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_3_12_reg = 3221260528 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE3_HSRX_TERM_RIGHT_EN = hc00088f0 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_TERM_RIGHT_EN func_vm_high_limit_vin6                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_TERM_LEFT_EN = hc00088f0 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_TERM_LEFT_EN func_vm_high_limit_vin6                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_HS_CLK_DIV_EN = hc00088f0 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_HS_CLK_DIV_EN func_vm_high_limit_vin6                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_DESERIALIZER_EN = hc00088f0 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DESERIALIZER_EN func_vm_high_limit_vin6                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_DESERIALIZER_DATA_EN = hc00088f0 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DESERIALIZER_DATA_EN func_vm_high_limit_vin6                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_DESERIALIZER_DIV_EN = hc00088f0 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DESERIALIZER_DIV_EN func_vm_high_limit_vin6                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_OFFCAL_OBS_EN = hc00088f0 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_OFFCAL_OBS_EN func_vm_high_limit_vin6                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_VCM_DET_PON = hc00088f0 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_VCM_DET_PON func_vm_high_limit_vin6                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_VCM_DET_OUT_EN = hc00088f0 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_VCM_DET_OUT_EN func_vm_high_limit_vin6                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_ALP_DET_RIGHT_PON = hc00088f0 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_ALP_DET_RIGHT_PON func_vm_high_limit_vin6                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_ALP_DET_LEFT_PON = hc00088f0 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_ALP_DET_LEFT_PON func_vm_high_limit_vin6                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_PON = hc00088f0 11 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_PON func_vm_high_limit_vin6                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_EN = hc00088f0 13 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_EN func_vm_high_limit_vin6                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_15 = hc00088f0 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 func_vm_high_limit_vin6                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_3_13_reg Address hc00088f4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_3_13_reg = 3221260532 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_BIAS_BYPASS_EN = hc00088f4 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_BIAS_BYPASS_EN func_vm_low_limit_vin6                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_BYPASS_EN = hc00088f4 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_BYPASS_EN func_vm_low_limit_vin6                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_CHANGE = hc00088f4 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_CHANGE func_vm_low_limit_vin6                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DLL_EN = hc00088f4 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DLL_EN func_vm_low_limit_vin6                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_PREAMBLE_CAL_EN = hc00088f4 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_PREAMBLE_CAL_EN func_vm_low_limit_vin6                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DATA_DELAY = hc00088f4 5 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DATA_DELAY func_vm_low_limit_vin6                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_9 = hc00088f4 9 7 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_9 func_vm_low_limit_vin6                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_3_14_reg Address hc00088f8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_3_14_reg = 3221260536 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_BIAS = hc00088f8 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_BIAS func_vm_high_limit_vin7                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_COARSE_BANK = hc00088f8 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_COARSE_BANK func_vm_high_limit_vin7                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_TUNE_MODE = hc00088f8 8 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_TUNE_MODE func_vm_high_limit_vin7                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DLL_FBK = hc00088f8 10 6 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DLL_FBK func_vm_high_limit_vin7                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_3_15_reg Address hc00088fc
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_3_15_reg = 3221260540 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE3_HSRX_OFFCAL_RIGHT = hc00088fc 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_OFFCAL_RIGHT func_vm_low_limit_vin7                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_OFFCAL_LEFT = hc00088fc 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_OFFCAL_LEFT func_vm_low_limit_vin7                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_4_0_reg Address hc0008900
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_4_0_reg = 3221260544 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_RIGHT = hc0008900 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_RIGHT func_vm_high_limit_vin8                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_MID = hc0008900 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_MID func_vm_high_limit_vin8                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_4_1_reg Address hc0008904
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_4_1_reg = 3221260548 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_LEFT = hc0008904 0 9 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_LEFT func_vm_low_limit_vin8                                          [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_MID = hc0008904 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_MID func_vm_low_limit_vin8                                          [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_RIGHT = hc0008904 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_RIGHT func_vm_low_limit_vin8                                          [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE3_HSRX_MODE = hc0008904 11 3 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_MODE func_vm_low_limit_vin8                                          [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_14 = hc0008904 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 func_vm_low_limit_vin8                                          [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_4_2_reg Address hc0008908
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_4_2_reg = 3221260552 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_IA_LANE3_HSRX_DATA_AB_LEFT_INT = hc0008908 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_DATA_AB_LEFT_INT func_vm_high_limit_vin9                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE3_HSRX_DATA_BC_MID_INT = hc0008908 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_DATA_BC_MID_INT func_vm_high_limit_vin9                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_4_3_reg Address hc000890c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_4_3_reg = 3221260556 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_IA_LANE3_HSRX_DATA_CA_RIGHT_INT = hc000890c 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_DATA_CA_RIGHT_INT func_vm_low_limit_vin9                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE3_HSRX_WORD_CLK_INT = hc000890c 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_WORD_CLK_INT func_vm_low_limit_vin9                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE3_HSRX_HS_CLK_DIV_OUT_INT = hc000890c 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_HS_CLK_DIV_OUT_INT func_vm_low_limit_vin9                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE3_HSTX_WORD_CLK_INT = hc000890c 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSTX_WORD_CLK_INT func_vm_low_limit_vin9                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE3_HSRX_VCM_DET_OUT_INT = hc000890c 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_VCM_DET_OUT_INT func_vm_low_limit_vin9                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE3_HSRX_OUT_CAL_LEFT_N_INT = hc000890c 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_OUT_CAL_LEFT_N_INT func_vm_low_limit_vin9                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE3_HSRX_OUT_CAL_LEFT_P_INT = hc000890c 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_OUT_CAL_LEFT_P_INT func_vm_low_limit_vin9                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE3_HSRX_OUT_CAL_RIGHT_N_INT = hc000890c 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_OUT_CAL_RIGHT_N_INT func_vm_low_limit_vin9                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE3_HSRX_OUT_CAL_RIGHT_P_INT = hc000890c 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_OUT_CAL_RIGHT_P_INT func_vm_low_limit_vin9                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_4_4_reg Address hc0008910
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE3_CTRL_4_4_reg = 3221260560 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_IA_LANE3_HSRX_DPHY_DDL_OSC_CLK_INT = hc0008910 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_DPHY_DDL_OSC_CLK_INT func_vm_high_limit_vin10                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE3_HSRX_CPHY_ALP_DET_LEFT_OUT_INT = hc0008910 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_CPHY_ALP_DET_LEFT_OUT_INT func_vm_high_limit_vin10                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE3_HSRX_CPHY_ALP_DET_RIGHT_OUT_INT = hc0008910 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_CPHY_ALP_DET_RIGHT_OUT_INT func_vm_high_limit_vin10                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE3_HSRX_CPHY_CDR_OSC_CLK_INT = hc0008910 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_CPHY_CDR_OSC_CLK_INT func_vm_high_limit_vin10                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE3_LPRX_DOUTCD_INT = hc0008910 4 2 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE3_LPRX_DOUTCD_INT func_vm_high_limit_vin10                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE3_LPRX_DOUTLP_INT = hc0008910 6 2 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE3_LPRX_DOUTLP_INT func_vm_high_limit_vin10                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE3_LPRX_DOUTULP_INT = hc0008910 8 2 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE3_LPRX_DOUTULP_INT func_vm_high_limit_vin10                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE3_SPARE_OUT_INT = hc0008910 10 4 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE3_SPARE_OUT_INT func_vm_high_limit_vin10                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_14 = hc0008910 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 func_vm_high_limit_vin10                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_3_8_reg Address hc00090e0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_3_8_reg = 3221262560 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE4_HSTX_PON = hc00090e0 0 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_PON func_vm_low_limit_vin10                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSTX_BOOST_EN = hc00090e0 2 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_BOOST_EN func_vm_low_limit_vin10                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PON = hc00090e0 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PON func_vm_low_limit_vin10                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSTX_LOWCAP_EN = hc00090e0 5 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_LOWCAP_EN func_vm_low_limit_vin10                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_LPTX_DIN_DN = hc00090e0 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_LPTX_DIN_DN func_vm_low_limit_vin10                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_LPTX_DIN_DP = hc00090e0 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_LPTX_DIN_DP func_vm_low_limit_vin10                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_DCC_EN = hc00090e0 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_DCC_EN func_vm_low_limit_vin10                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_EN = hc00090e0 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_EN func_vm_low_limit_vin10                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN = hc00090e0 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN func_vm_low_limit_vin10                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_DELAY = hc00090e0 12 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_DELAY func_vm_low_limit_vin10                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_3_9_reg Address hc00090e4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_3_9_reg = 3221262564 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE4_HSTX_DATA_AB_DPHY = hc00090e4 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_DATA_AB_DPHY func_vm_high_limit_vin11                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSTX_TERM_EN = hc00090e4 8 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_TERM_EN func_vm_high_limit_vin11                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSTX_DIV_EN = hc00090e4 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_DIV_EN func_vm_high_limit_vin11                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_11 = hc00090e4 11 5 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_11 func_vm_high_limit_vin11                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_3_10_reg Address hc00090e8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_3_10_reg = 3221262568 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE4_HSTX_DATA_BC = hc00090e8 0 7 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_DATA_BC func_vm_low_limit_vin11                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSTX_DATA_CA = hc00090e8 7 7 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_DATA_CA func_vm_low_limit_vin11                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_14 = hc00090e8 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 func_vm_low_limit_vin11                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_3_11_reg Address hc00090ec
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_3_11_reg = 3221262572 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE4_LPTX_EN = hc00090ec 0 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_LPTX_EN func_vm_high_limit_vin12                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_LPTX_PON = hc00090ec 2 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_LPTX_PON func_vm_high_limit_vin12                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_LPTX_PULLDWN_EN = hc00090ec 4 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_LPTX_PULLDWN_EN func_vm_high_limit_vin12                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_LPRX_LP_PON = hc00090ec 6 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_LPRX_LP_PON func_vm_high_limit_vin12                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_LPRX_CD_PON = hc00090ec 8 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_LPRX_CD_PON func_vm_high_limit_vin12                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_LPRX_ULP_PON = hc00090ec 10 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_LPRX_ULP_PON func_vm_high_limit_vin12                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_CDR_FBK_EN = hc00090ec 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_CDR_FBK_EN func_vm_high_limit_vin12                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_MASK_CHANGE = hc00090ec 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_MASK_CHANGE func_vm_high_limit_vin12                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_14 = hc00090ec 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 func_vm_high_limit_vin12                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_3_12_reg Address hc00090f0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_3_12_reg = 3221262576 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE4_HSRX_TERM_RIGHT_EN = hc00090f0 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_TERM_RIGHT_EN func_vm_low_limit_vin12                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_TERM_LEFT_EN = hc00090f0 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_TERM_LEFT_EN func_vm_low_limit_vin12                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_HS_CLK_DIV_EN = hc00090f0 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_HS_CLK_DIV_EN func_vm_low_limit_vin12                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_DESERIALIZER_EN = hc00090f0 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DESERIALIZER_EN func_vm_low_limit_vin12                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_DESERIALIZER_DATA_EN = hc00090f0 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DESERIALIZER_DATA_EN func_vm_low_limit_vin12                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_DESERIALIZER_DIV_EN = hc00090f0 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DESERIALIZER_DIV_EN func_vm_low_limit_vin12                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_OFFCAL_OBS_EN = hc00090f0 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_OFFCAL_OBS_EN func_vm_low_limit_vin12                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_VCM_DET_PON = hc00090f0 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_VCM_DET_PON func_vm_low_limit_vin12                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_VCM_DET_OUT_EN = hc00090f0 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_VCM_DET_OUT_EN func_vm_low_limit_vin12                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_ALP_DET_RIGHT_PON = hc00090f0 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_ALP_DET_RIGHT_PON func_vm_low_limit_vin12                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_ALP_DET_LEFT_PON = hc00090f0 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_ALP_DET_LEFT_PON func_vm_low_limit_vin12                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_PON = hc00090f0 11 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_PON func_vm_low_limit_vin12                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_EN = hc00090f0 13 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_EN func_vm_low_limit_vin12                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_15 = hc00090f0 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 func_vm_low_limit_vin12                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_3_13_reg Address hc00090f4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_3_13_reg = 3221262580 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_BIAS_BYPASS_EN = hc00090f4 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_BIAS_BYPASS_EN func_vm_high_limit_vin13                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_BYPASS_EN = hc00090f4 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_BYPASS_EN func_vm_high_limit_vin13                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_CHANGE = hc00090f4 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_CHANGE func_vm_high_limit_vin13                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DLL_EN = hc00090f4 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DLL_EN func_vm_high_limit_vin13                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_PREAMBLE_CAL_EN = hc00090f4 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_PREAMBLE_CAL_EN func_vm_high_limit_vin13                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DATA_DELAY = hc00090f4 5 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DATA_DELAY func_vm_high_limit_vin13                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_9 = hc00090f4 9 7 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_9 func_vm_high_limit_vin13                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_3_14_reg Address hc00090f8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_3_14_reg = 3221262584 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_BIAS = hc00090f8 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_BIAS func_vm_low_limit_vin13                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_COARSE_BANK = hc00090f8 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_COARSE_BANK func_vm_low_limit_vin13                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_TUNE_MODE = hc00090f8 8 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_TUNE_MODE func_vm_low_limit_vin13                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DLL_FBK = hc00090f8 10 6 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DLL_FBK func_vm_low_limit_vin13                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_3_15_reg Address hc00090fc
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_3_15_reg = 3221262588 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE4_HSRX_OFFCAL_RIGHT = hc00090fc 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_OFFCAL_RIGHT func_vm_high_limit_vin14                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_OFFCAL_LEFT = hc00090fc 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_OFFCAL_LEFT func_vm_high_limit_vin14                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_4_0_reg Address hc0009100
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_4_0_reg = 3221262592 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_RIGHT = hc0009100 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_RIGHT func_vm_low_limit_vin14                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_MID = hc0009100 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_MID func_vm_low_limit_vin14                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_4_1_reg Address hc0009104
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_4_1_reg = 3221262596 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_LEFT = hc0009104 0 9 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_LEFT func_vm_high_limit_vin15                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_MID = hc0009104 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_MID func_vm_high_limit_vin15                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_RIGHT = hc0009104 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_RIGHT func_vm_high_limit_vin15                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_LANE4_HSRX_MODE = hc0009104 11 3 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_MODE func_vm_high_limit_vin15                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_14 = hc0009104 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 func_vm_high_limit_vin15                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_4_2_reg Address hc0009108
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_4_2_reg = 3221262600 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_IA_LANE4_HSRX_DATA_AB_LEFT_INT = hc0009108 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_DATA_AB_LEFT_INT func_vm_low_limit_vin15                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE4_HSRX_DATA_BC_MID_INT = hc0009108 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_DATA_BC_MID_INT func_vm_low_limit_vin15                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_4_3_reg Address hc000910c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_4_3_reg = 3221262604 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_IA_LANE4_HSRX_DATA_CA_RIGHT_INT = hc000910c 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_DATA_CA_RIGHT_INT func_vm_high_limit_vinternal                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE4_HSRX_WORD_CLK_INT = hc000910c 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_WORD_CLK_INT func_vm_high_limit_vinternal                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE4_HSRX_HS_CLK_DIV_OUT_INT = hc000910c 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_HS_CLK_DIV_OUT_INT func_vm_high_limit_vinternal                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE4_HSTX_WORD_CLK_INT = hc000910c 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSTX_WORD_CLK_INT func_vm_high_limit_vinternal                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE4_HSRX_VCM_DET_OUT_INT = hc000910c 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_VCM_DET_OUT_INT func_vm_high_limit_vinternal                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE4_HSRX_OUT_CAL_LEFT_N_INT = hc000910c 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_OUT_CAL_LEFT_N_INT func_vm_high_limit_vinternal                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE4_HSRX_OUT_CAL_LEFT_P_INT = hc000910c 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_OUT_CAL_LEFT_P_INT func_vm_high_limit_vinternal                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE4_HSRX_OUT_CAL_RIGHT_N_INT = hc000910c 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_OUT_CAL_RIGHT_N_INT func_vm_high_limit_vinternal                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE4_HSRX_OUT_CAL_RIGHT_P_INT = hc000910c 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_OUT_CAL_RIGHT_P_INT func_vm_high_limit_vinternal                                          [13:0]                 The highest voltage value allowed. higher voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_4_4_reg Address hc0009110
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_LANE4_CTRL_4_4_reg = 3221262608 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_IA_LANE4_HSRX_DPHY_DDL_OSC_CLK_INT = hc0009110 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_DPHY_DDL_OSC_CLK_INT func_vm_low_limit_vinternal                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE4_HSRX_CPHY_ALP_DET_LEFT_OUT_INT = hc0009110 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_CPHY_ALP_DET_LEFT_OUT_INT func_vm_low_limit_vinternal                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE4_HSRX_CPHY_ALP_DET_RIGHT_OUT_INT = hc0009110 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_CPHY_ALP_DET_RIGHT_OUT_INT func_vm_low_limit_vinternal                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE4_HSRX_CPHY_CDR_OSC_CLK_INT = hc0009110 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_CPHY_CDR_OSC_CLK_INT func_vm_low_limit_vinternal                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE4_LPRX_DOUTCD_INT = hc0009110 4 2 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE4_LPRX_DOUTCD_INT func_vm_low_limit_vinternal                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE4_LPRX_DOUTLP_INT = hc0009110 6 2 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE4_LPRX_DOUTLP_INT func_vm_low_limit_vinternal                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE4_LPRX_DOUTULP_INT = hc0009110 8 2 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE4_LPRX_DOUTULP_INT func_vm_low_limit_vinternal                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_LANE4_SPARE_OUT_INT = hc0009110 10 4 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_LANE4_SPARE_OUT_INT func_vm_low_limit_vinternal                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_14 = hc0009110 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 func_vm_low_limit_vinternal                                           [13:0]                 The lowest voltage value allowed. lower voltage will result in an error indicationsreserved                                                                       [23:14] sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                             [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_CLK_OVR_0_2_reg Address hc0009808
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_DPHY_PPI_CLK_OVR_0_2_reg = 3221264392 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_ENABLE_DCK_INT = hc0009808 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_ENABLE_DCK_INT error_count_limit_vin0                                             [7:0]                 when number of measurement error on vin0 equals or exceeds this number failure indication will be reported. serror_count_limit_vin1                                             [15:8]              when number of measurement error on vin1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel0                                  [23:16]            when number of measurement error on vin2_sel0 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_STOPSTATE_DCK = hc0009808 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_STOPSTATE_DCK error_count_limit_vin0                                             [7:0]                 when number of measurement error on vin0 equals or exceeds this number failure indication will be reported. serror_count_limit_vin1                                             [15:8]              when number of measurement error on vin1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel0                                  [23:16]            when number of measurement error on vin2_sel0 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_ULPSACTIVENOT_DCK = hc0009808 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_ULPSACTIVENOT_DCK error_count_limit_vin0                                             [7:0]                 when number of measurement error on vin0 equals or exceeds this number failure indication will be reported. serror_count_limit_vin1                                             [15:8]              when number of measurement error on vin1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel0                                  [23:16]            when number of measurement error on vin2_sel0 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXULPSCLKNOT_DCK = hc0009808 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXULPSCLKNOT_DCK error_count_limit_vin0                                             [7:0]                 when number of measurement error on vin0 equals or exceeds this number failure indication will be reported. serror_count_limit_vin1                                             [15:8]              when number of measurement error on vin1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel0                                  [23:16]            when number of measurement error on vin2_sel0 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_RXCLKACTIVEHS_DCK_INT = hc0009808 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_RXCLKACTIVEHS_DCK_INT error_count_limit_vin0                                             [7:0]                 when number of measurement error on vin0 equals or exceeds this number failure indication will be reported. serror_count_limit_vin1                                             [15:8]              when number of measurement error on vin1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel0                                  [23:16]            when number of measurement error on vin2_sel0 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXREQUESTHS_DCK = hc0009808 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTHS_DCK error_count_limit_vin0                                             [7:0]                 when number of measurement error on vin0 equals or exceeds this number failure indication will be reported. serror_count_limit_vin1                                             [15:8]              when number of measurement error on vin1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel0                                  [23:16]            when number of measurement error on vin2_sel0 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_FORCETXSTOPMODE_DCK_INT = hc0009808 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_FORCETXSTOPMODE_DCK_INT error_count_limit_vin0                                             [7:0]                 when number of measurement error on vin0 equals or exceeds this number failure indication will be reported. serror_count_limit_vin1                                             [15:8]              when number of measurement error on vin1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel0                                  [23:16]            when number of measurement error on vin2_sel0 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_FORCERXMODE_DCK_INT = hc0009808 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_FORCERXMODE_DCK_INT error_count_limit_vin0                                             [7:0]                 when number of measurement error on vin0 equals or exceeds this number failure indication will be reported. serror_count_limit_vin1                                             [15:8]              when number of measurement error on vin1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel0                                  [23:16]            when number of measurement error on vin2_sel0 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXULPSCLK_DCK_INT = hc0009808 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXULPSCLK_DCK_INT error_count_limit_vin0                                             [7:0]                 when number of measurement error on vin0 equals or exceeds this number failure indication will be reported. serror_count_limit_vin1                                             [15:8]              when number of measurement error on vin1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel0                                  [23:16]            when number of measurement error on vin2_sel0 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXULPSEXIT_DCK_INT = hc0009808 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXULPSEXIT_DCK_INT error_count_limit_vin0                                             [7:0]                 when number of measurement error on vin0 equals or exceeds this number failure indication will be reported. serror_count_limit_vin1                                             [15:8]              when number of measurement error on vin1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel0                                  [23:16]            when number of measurement error on vin2_sel0 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXHSIDLECLKHS_INT = hc0009808 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXHSIDLECLKHS_INT error_count_limit_vin0                                             [7:0]                 when number of measurement error on vin0 equals or exceeds this number failure indication will be reported. serror_count_limit_vin1                                             [15:8]              when number of measurement error on vin1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel0                                  [23:16]            when number of measurement error on vin2_sel0 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_TXHSIDLECLKREADYHS_INT = hc0009808 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_TXHSIDLECLKREADYHS_INT error_count_limit_vin0                                             [7:0]                 when number of measurement error on vin0 equals or exceeds this number failure indication will be reported. serror_count_limit_vin1                                             [15:8]              when number of measurement error on vin1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel0                                  [23:16]            when number of measurement error on vin2_sel0 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_12 = hc0009808 12 4 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_12 error_count_limit_vin0                                             [7:0]                 when number of measurement error on vin0 equals or exceeds this number failure indication will be reported. serror_count_limit_vin1                                             [15:8]              when number of measurement error on vin1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel0                                  [23:16]            when number of measurement error on vin2_sel0 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_COMMON_PPI_OVR_0_11_reg Address hc000a02c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_COMMON_PPI_OVR_0_11_reg = 3221266476 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_CFG_CLK_INT = hc000a02c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_CFG_CLK_INT error_count_limit_vin2_sel1                                  [7:0]                when number of measurement error on vin2_sel1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel2                                  [15:8]              when number of measurement error on vin2_sel2 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel3                                  [23:16]            when number of measurement error on vin2_sel3 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TXCLKESC_INT = hc000a02c 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TXCLKESC_INT error_count_limit_vin2_sel1                                  [7:0]                when number of measurement error on vin2_sel1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel2                                  [15:8]              when number of measurement error on vin2_sel2 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel3                                  [23:16]            when number of measurement error on vin2_sel3 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_RST_N_INT = hc000a02c 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_RST_N_INT error_count_limit_vin2_sel1                                  [7:0]                when number of measurement error on vin2_sel1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel2                                  [15:8]              when number of measurement error on vin2_sel2 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel3                                  [23:16]            when number of measurement error on vin2_sel3 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_PHY_MODE_INT = hc000a02c 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_PHY_MODE_INT error_count_limit_vin2_sel1                                  [7:0]                when number of measurement error on vin2_sel1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel2                                  [15:8]              when number of measurement error on vin2_sel2 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel3                                  [23:16]            when number of measurement error on vin2_sel3 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_CONT_EN_INT = hc000a02c 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_CONT_EN_INT error_count_limit_vin2_sel1                                  [7:0]                when number of measurement error on vin2_sel1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel2                                  [15:8]              when number of measurement error on vin2_sel2 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel3                                  [23:16]            when number of measurement error on vin2_sel3 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_TEST_STOP_CLK_EN_INT = hc000a02c 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_TEST_STOP_CLK_EN_INT error_count_limit_vin2_sel1                                  [7:0]                when number of measurement error on vin2_sel1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel2                                  [15:8]              when number of measurement error on vin2_sel2 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel3                                  [23:16]            when number of measurement error on vin2_sel3 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_OCLA_CLK = hc000a02c 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_OCLA_CLK error_count_limit_vin2_sel1                                  [7:0]                when number of measurement error on vin2_sel1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel2                                  [15:8]              when number of measurement error on vin2_sel2 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel3                                  [23:16]            when number of measurement error on vin2_sel3 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_MON_OUT_VALID = hc000a02c 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_MON_OUT_VALID error_count_limit_vin2_sel1                                  [7:0]                when number of measurement error on vin2_sel1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel2                                  [15:8]              when number of measurement error on vin2_sel2 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel3                                  [23:16]            when number of measurement error on vin2_sel3 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_I_RX_TX_N = hc000a02c 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_I_RX_TX_N error_count_limit_vin2_sel1                                  [7:0]                when number of measurement error on vin2_sel1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel2                                  [15:8]              when number of measurement error on vin2_sel2 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel3                                  [23:16]            when number of measurement error on vin2_sel3 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_9 = hc000a02c 9 7 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_9 error_count_limit_vin2_sel1                                  [7:0]                when number of measurement error on vin2_sel1 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel2                                  [15:8]              when number of measurement error on vin2_sel2 equals or exceeds this number failure indication will be reported. serror_count_limit_vin2_sel3                                  [23:16]            when number of measurement error on vin2_sel3 equals or exceeds this number failure indication will be reported. sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_COMMON_PPI_OVR_0_12_reg Address hc000a030
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_COMMON_PPI_OVR_0_12_reg = 3221266480 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_PHY_STATE_INT = hc000a030 0 5 h0 RO HEX
; Desc_csi_tadp_tx_0_I_PHY_STATE_INT error_count_limit_vin3                                  [7:0]                when number of measurement error on vin3 equals or exceeds this number failure indication will be reported. serror_count_limit_vin4                                  [15:8]              when number of measurement error on vin4 equals or exceeds this number failure indication will be reported. serror_count_limit_vin5                                  [23:16]            when number of measurement error on vin5 equals or exceeds this number failure indication will be reported. sMagic_number                                                [27:24]              Default value – identical for all registerssParity                                                                 [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_CONT_DATA = hc000a030 5 11 h0 RO HEX
; Desc_csi_tadp_tx_0_O_CONT_DATA error_count_limit_vin3                                  [7:0]                when number of measurement error on vin3 equals or exceeds this number failure indication will be reported. serror_count_limit_vin4                                  [15:8]              when number of measurement error on vin4 equals or exceeds this number failure indication will be reported. serror_count_limit_vin5                                  [23:16]            when number of measurement error on vin5 equals or exceeds this number failure indication will be reported. sMagic_number                                                [27:24]              Default value – identical for all registerssParity                                                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_COMMON_PPI_OVR_0_13_reg Address hc000a034
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_COMMON_PPI_OVR_0_13_reg = 3221266484 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_PHY_CALIB_IN_INT = hc000a034 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_I_PHY_CALIB_IN_INT error_count_limit_vin6                                  [7:0]                when number of measurement error on vin6 equals or exceeds this number failure indication will be reported. serror_count_limit_vin7                                  [15:8]              when number of measurement error on vin7 equals or exceeds this number failure indication will be reported. serror_count_limit_vin8                                  [23:16]            when number of measurement error on vin8 equals or exceeds this number failure indication will be reported. sMagic_number                                                [27:24]              Default value – identical for all registerssParity                                                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_COMMON_PPI_OVR_0_14_reg Address hc000a038
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_COMMON_PPI_OVR_0_14_reg = 3221266488 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_PHY_CALIB_IN_INT = hc000a038 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_I_PHY_CALIB_IN_INT error_count_limit_vin9                                  [7:0]                when number of measurement error on vin9 equals or exceeds this number failure indication will be reported. serror_count_limit_vin10                                [15:8]              when number of measurement error on vin10 equals or exceeds this number failure indication will be reported. serror_count_limit_vin11                                [23:16]            when number of measurement error on vin11 equals or exceeds this number failure indication will be reported. sMagic_number                                                [27:24]              Default value – identical for all registerssParity                                                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_COMMON_PPI_OVR_0_15_reg Address hc000a03c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_COMMON_PPI_OVR_0_15_reg = 3221266492 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_I_PHY_CALIB_IN_INT = hc000a03c 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_I_PHY_CALIB_IN_INT error_count_limit_vin12                                  [7:0]                when number of measurement error on vin12 equals or exceeds this number failure indication will be reported. serror_count_limit_vin13                                [15:8]              when number of measurement error on vin13 equals or exceeds this number failure indication will be reported. serror_count_limit_vin14                                [23:16]            when number of measurement error on vin14 equals or exceeds this number failure indication will be reported. sMagic_number                                                [27:24]              Default value – identical for all registerssParity                                                                 [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_O_DTB_OUT = hc000a03c 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_O_DTB_OUT error_count_limit_vin12                                  [7:0]                when number of measurement error on vin12 equals or exceeds this number failure indication will be reported. serror_count_limit_vin13                                [15:8]              when number of measurement error on vin13 equals or exceeds this number failure indication will be reported. serror_count_limit_vin14                                [23:16]            when number of measurement error on vin14 equals or exceeds this number failure indication will be reported. sMagic_number                                                [27:24]              Default value – identical for all registerssParity                                                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_COMMON_PPI_OVR_1_0_reg Address hc000a040
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_COMMON_PPI_OVR_1_0_reg = 3221266496 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_PHY_CALIB_OUT = hc000a040 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_O_PHY_CALIB_OUT error_count_limit_vin15                                  [7:0]                when number of measurement error on vin15 equals or exceeds this number failure indication will be reported. serror_count_limit_vinternal                          [15:8]              when number of measurement error on vinternal equals or exceeds this number failure indication will be reported. serror_count_limit_self_test                          [23:16]            when number of measurement error on self_test equals or exceeds this number failure indication will be reported. sMagic_number                                                [27:24]              Default value – identical for all registerssParity                                                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_COMMON_PPI_OVR_1_1_reg Address hc000a044
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_COMMON_PPI_OVR_1_1_reg = 3221266500 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_MON_OUT = hc000a044 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_O_MON_OUT defines the detection_enable for each error per portsvm_high_level_detect_en_vin0       [0]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin0        [1]  - defines if vm  low_level comparator will report a detected errorrsvm_high_level_detect_en_vin1       [2]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin1        [3]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vin2_sel0       [4]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin2_sel0       [5]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vin2_sel1       [6]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin2_sel1        [7]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vin2_sel2       [8]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin2_sel2        [9]  - defines if vm  low_level comparator will report a detected errorsvm_high_level_detect_en_vin2_sel3       [10]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin2_sel3        [11]  - defines if vm  low_level comparator will report a detected errorsvm_high_level_detect_en_vin3       [12]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin3        [13]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vin4       [14]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin4        [15]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vin5       [16]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin5        [17]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vin6       [18]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin6        [19]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vin7       [20]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin7        [21]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_detect_en_vin8       [22]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin8        [23]  - defines if vm  low_level comparator will report a detected errotsMagic_number                                                      [27:24]              Default value – identical for all registerssParity                                                                         [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_COMMON_PPI_OVR_1_2_reg Address hc000a048
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_COMMON_PPI_OVR_1_2_reg = 3221266504 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_MON_OUT = hc000a048 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_O_MON_OUT defines the detection_enable for each error per portsvm_high_level_detect_en_vin9       [0]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin9        [1]  - defines if vm  low_level comparator will report a detected errorrsvm_high_level_detect_en_vin10       [2]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin10        [3]  - defines if vm  low_level comparator will report a detected errorrsvm_high_level_detect_en_vin11       [4]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin11        [5]  - defines if vm  low_level comparator will report a detected errorrsvm_high_level_detect_en_vin12       [6]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin12        [7]  - defines if vm  low_level comparator will report a detected errorrsvm_high_level_detect_en_vin13       [8]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin13        [9]  - defines if vm  low_level comparator will report a detected errorrsvm_high_level_detect_en_vin14       [10]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin14        [11]  - defines if vm  low_level comparator will report a detected errorrsvm_high_level_detect_en_vin15       [12]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_vin15        [13]  - defines if vm  low_level comparator will report a detected errorrsvm_high_level_detect_en_internal       [14]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_detect_en_internal        [15]  - defines if vm  low_level comparator will report a detected errorsparity_error_detect_en                            [16]   - defines if register_parity error will be detected. svm_analog_faultn                                     [17]  -  defines if analog fault error will be detectedsMagic_number                                                      [27:24]              Default value – identical for all registerssParity                                                                         [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_COMMON_PPI_OVR_1_3_reg Address hc000a04c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_COMMON_PPI_OVR_1_3_reg = 3221266508 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_MON_OUT = hc000a04c 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_O_MON_OUT defines the count enable  for each errorsvm_high_level_count_en_vin0       [0]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin0        [1]  - defines if vm  low_level comparator will report a detected errorrsvm_high_level_count_en_vin1       [2]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin1        [3]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin2_sel0       [4]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin2_sel0       [5]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin2_sel1       [6]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin2_sel1        [7]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin2_sel2       [8]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin2_sel2        [9]  - defines if vm  low_level comparator will report a detected errorsvm_high_level_count_en_vin2_sel3       [10]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin_sel3        [11]  - defines if vm  low_level comparator will report a detected errorsvm_high_level_count_en_vin3       [12]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin3        [13]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin4       [14]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin4        [15]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin5       [16]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin5        [17]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin6       [18]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin6        [19]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin7       [20]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin7        [21]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin8       [22]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin8        [23]  - defines if vm  low_level comparator will report a detected errotsMagic_number                                     [27:24]              Default value – identical for all registerssParity                                                     [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_COMMON_PPI_OVR_1_4_reg Address hc000a050
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_COMMON_PPI_OVR_1_4_reg = 3221266512 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_MON_OUT = hc000a050 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_O_MON_OUT defines the count enable  for each errorsvm_high_level_count_en_vin9       [0]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin9       [1]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin10       [2]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vmin10       [3]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin11       [4]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin11        [5]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin12       [6]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vin12        [7]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin13       [8]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vmin13     [9]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin14       [10]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vmin14      [11]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_vin15       [12]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_vmin15     [13]  - defines if vm  low_level comparator will report a detected errotsvm_high_level_count_en_internal  [14]  - defines if vm  high_level comparator will report a detected errorsvm_low_level_count_en_internal   [15]  - defines if vm  low_level comparator will report a detected errorsMagic_number                                     [27:24]              Default value – identical for all registerssParity                                                     [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_CB_CTRL_2_12_reg Address hc000a0b0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_CB_CTRL_2_12_reg = 3221266608 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_SEL_CPHY_DPHY = hc000a0b0 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_SEL_CPHY_DPHY defines which inputs to the Voltage monitor will be measured during the self_test sequencesvin0_voltage_measurement_en                           [0]svin1_voltage_measurement_en                           [1]svin2_sel0_voltage_measurement_en                [2]svin2_sel1_voltage_measurement_en                [3]svin2_sel2_voltage_measurement_en                [4]svin2_sel3_voltage_measurement_en                [5]svin3_voltage_measurement_en                           [6]svin4_voltage_measurement_en                           [7]svin5_voltage_measurement_en                           [8]svin6_voltage_measurement_en                           [9]svin7_voltage_measurement_en                           [10]svin8_voltage_measurement_en                           [11]svin9_voltage_measurement_en                           [12]svin10_voltage_measurement_en                           [13]svin11_voltage_measurement_en                           [14]svin12_voltage_measurement_en                           [15]svin13_voltage_measurement_en                           [16]svin14_voltage_measurement_en                           [17]svin15_voltage_measurement_en                           [18]sinternal_voltage_measurement_en                   [19]sreserved                                                                         [23:20]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_ATB_CLK = hc000a0b0 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_CB_ATB_CLK defines which inputs to the Voltage monitor will be measured during the self_test sequencesvin0_voltage_measurement_en                           [0]svin1_voltage_measurement_en                           [1]svin2_sel0_voltage_measurement_en                [2]svin2_sel1_voltage_measurement_en                [3]svin2_sel2_voltage_measurement_en                [4]svin2_sel3_voltage_measurement_en                [5]svin3_voltage_measurement_en                           [6]svin4_voltage_measurement_en                           [7]svin5_voltage_measurement_en                           [8]svin6_voltage_measurement_en                           [9]svin7_voltage_measurement_en                           [10]svin8_voltage_measurement_en                           [11]svin9_voltage_measurement_en                           [12]svin10_voltage_measurement_en                           [13]svin11_voltage_measurement_en                           [14]svin12_voltage_measurement_en                           [15]svin13_voltage_measurement_en                           [16]svin14_voltage_measurement_en                           [17]svin15_voltage_measurement_en                           [18]sinternal_voltage_measurement_en                   [19]sreserved                                                                         [23:20]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_CHOP_CLK = hc000a0b0 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_CB_CHOP_CLK defines which inputs to the Voltage monitor will be measured during the self_test sequencesvin0_voltage_measurement_en                           [0]svin1_voltage_measurement_en                           [1]svin2_sel0_voltage_measurement_en                [2]svin2_sel1_voltage_measurement_en                [3]svin2_sel2_voltage_measurement_en                [4]svin2_sel3_voltage_measurement_en                [5]svin3_voltage_measurement_en                           [6]svin4_voltage_measurement_en                           [7]svin5_voltage_measurement_en                           [8]svin6_voltage_measurement_en                           [9]svin7_voltage_measurement_en                           [10]svin8_voltage_measurement_en                           [11]svin9_voltage_measurement_en                           [12]svin10_voltage_measurement_en                           [13]svin11_voltage_measurement_en                           [14]svin12_voltage_measurement_en                           [15]svin13_voltage_measurement_en                           [16]svin14_voltage_measurement_en                           [17]svin15_voltage_measurement_en                           [18]sinternal_voltage_measurement_en                   [19]sreserved                                                                         [23:20]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_CHOP_CLK_EN = hc000a0b0 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_CB_CHOP_CLK_EN defines which inputs to the Voltage monitor will be measured during the self_test sequencesvin0_voltage_measurement_en                           [0]svin1_voltage_measurement_en                           [1]svin2_sel0_voltage_measurement_en                [2]svin2_sel1_voltage_measurement_en                [3]svin2_sel2_voltage_measurement_en                [4]svin2_sel3_voltage_measurement_en                [5]svin3_voltage_measurement_en                           [6]svin4_voltage_measurement_en                           [7]svin5_voltage_measurement_en                           [8]svin6_voltage_measurement_en                           [9]svin7_voltage_measurement_en                           [10]svin8_voltage_measurement_en                           [11]svin9_voltage_measurement_en                           [12]svin10_voltage_measurement_en                           [13]svin11_voltage_measurement_en                           [14]svin12_voltage_measurement_en                           [15]svin13_voltage_measurement_en                           [16]svin14_voltage_measurement_en                           [17]svin15_voltage_measurement_en                           [18]sinternal_voltage_measurement_en                   [19]sreserved                                                                         [23:20]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_PON = hc000a0b0 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_CB_PON defines which inputs to the Voltage monitor will be measured during the self_test sequencesvin0_voltage_measurement_en                           [0]svin1_voltage_measurement_en                           [1]svin2_sel0_voltage_measurement_en                [2]svin2_sel1_voltage_measurement_en                [3]svin2_sel2_voltage_measurement_en                [4]svin2_sel3_voltage_measurement_en                [5]svin3_voltage_measurement_en                           [6]svin4_voltage_measurement_en                           [7]svin5_voltage_measurement_en                           [8]svin6_voltage_measurement_en                           [9]svin7_voltage_measurement_en                           [10]svin8_voltage_measurement_en                           [11]svin9_voltage_measurement_en                           [12]svin10_voltage_measurement_en                           [13]svin11_voltage_measurement_en                           [14]svin12_voltage_measurement_en                           [15]svin13_voltage_measurement_en                           [16]svin14_voltage_measurement_en                           [17]svin15_voltage_measurement_en                           [18]sinternal_voltage_measurement_en                   [19]sreserved                                                                         [23:20]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_BG_PON = hc000a0b0 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_CB_BG_PON defines which inputs to the Voltage monitor will be measured during the self_test sequencesvin0_voltage_measurement_en                           [0]svin1_voltage_measurement_en                           [1]svin2_sel0_voltage_measurement_en                [2]svin2_sel1_voltage_measurement_en                [3]svin2_sel2_voltage_measurement_en                [4]svin2_sel3_voltage_measurement_en                [5]svin3_voltage_measurement_en                           [6]svin4_voltage_measurement_en                           [7]svin5_voltage_measurement_en                           [8]svin6_voltage_measurement_en                           [9]svin7_voltage_measurement_en                           [10]svin8_voltage_measurement_en                           [11]svin9_voltage_measurement_en                           [12]svin10_voltage_measurement_en                           [13]svin11_voltage_measurement_en                           [14]svin12_voltage_measurement_en                           [15]svin13_voltage_measurement_en                           [16]svin14_voltage_measurement_en                           [17]svin15_voltage_measurement_en                           [18]sinternal_voltage_measurement_en                   [19]sreserved                                                                         [23:20]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_CAL_PON = hc000a0b0 6 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_CB_CAL_PON defines which inputs to the Voltage monitor will be measured during the self_test sequencesvin0_voltage_measurement_en                           [0]svin1_voltage_measurement_en                           [1]svin2_sel0_voltage_measurement_en                [2]svin2_sel1_voltage_measurement_en                [3]svin2_sel2_voltage_measurement_en                [4]svin2_sel3_voltage_measurement_en                [5]svin3_voltage_measurement_en                           [6]svin4_voltage_measurement_en                           [7]svin5_voltage_measurement_en                           [8]svin6_voltage_measurement_en                           [9]svin7_voltage_measurement_en                           [10]svin8_voltage_measurement_en                           [11]svin9_voltage_measurement_en                           [12]svin10_voltage_measurement_en                           [13]svin11_voltage_measurement_en                           [14]svin12_voltage_measurement_en                           [15]svin13_voltage_measurement_en                           [16]svin14_voltage_measurement_en                           [17]svin15_voltage_measurement_en                           [18]sinternal_voltage_measurement_en                   [19]sreserved                                                                         [23:20]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_CAL_UP_EN = hc000a0b0 7 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_CB_CAL_UP_EN defines which inputs to the Voltage monitor will be measured during the self_test sequencesvin0_voltage_measurement_en                           [0]svin1_voltage_measurement_en                           [1]svin2_sel0_voltage_measurement_en                [2]svin2_sel1_voltage_measurement_en                [3]svin2_sel2_voltage_measurement_en                [4]svin2_sel3_voltage_measurement_en                [5]svin3_voltage_measurement_en                           [6]svin4_voltage_measurement_en                           [7]svin5_voltage_measurement_en                           [8]svin6_voltage_measurement_en                           [9]svin7_voltage_measurement_en                           [10]svin8_voltage_measurement_en                           [11]svin9_voltage_measurement_en                           [12]svin10_voltage_measurement_en                           [13]svin11_voltage_measurement_en                           [14]svin12_voltage_measurement_en                           [15]svin13_voltage_measurement_en                           [16]svin14_voltage_measurement_en                           [17]svin15_voltage_measurement_en                           [18]sinternal_voltage_measurement_en                   [19]sreserved                                                                         [23:20]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_CAL_DOWN_EN = hc000a0b0 8 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_CB_CAL_DOWN_EN defines which inputs to the Voltage monitor will be measured during the self_test sequencesvin0_voltage_measurement_en                           [0]svin1_voltage_measurement_en                           [1]svin2_sel0_voltage_measurement_en                [2]svin2_sel1_voltage_measurement_en                [3]svin2_sel2_voltage_measurement_en                [4]svin2_sel3_voltage_measurement_en                [5]svin3_voltage_measurement_en                           [6]svin4_voltage_measurement_en                           [7]svin5_voltage_measurement_en                           [8]svin6_voltage_measurement_en                           [9]svin7_voltage_measurement_en                           [10]svin8_voltage_measurement_en                           [11]svin9_voltage_measurement_en                           [12]svin10_voltage_measurement_en                           [13]svin11_voltage_measurement_en                           [14]svin12_voltage_measurement_en                           [15]svin13_voltage_measurement_en                           [16]svin14_voltage_measurement_en                           [17]svin15_voltage_measurement_en                           [18]sinternal_voltage_measurement_en                   [19]sreserved                                                                         [23:20]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_ATB_COMP_PON = hc000a0b0 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_CB_ATB_COMP_PON defines which inputs to the Voltage monitor will be measured during the self_test sequencesvin0_voltage_measurement_en                           [0]svin1_voltage_measurement_en                           [1]svin2_sel0_voltage_measurement_en                [2]svin2_sel1_voltage_measurement_en                [3]svin2_sel2_voltage_measurement_en                [4]svin2_sel3_voltage_measurement_en                [5]svin3_voltage_measurement_en                           [6]svin4_voltage_measurement_en                           [7]svin5_voltage_measurement_en                           [8]svin6_voltage_measurement_en                           [9]svin7_voltage_measurement_en                           [10]svin8_voltage_measurement_en                           [11]svin9_voltage_measurement_en                           [12]svin10_voltage_measurement_en                           [13]svin11_voltage_measurement_en                           [14]svin12_voltage_measurement_en                           [15]svin13_voltage_measurement_en                           [16]svin14_voltage_measurement_en                           [17]svin15_voltage_measurement_en                           [18]sinternal_voltage_measurement_en                   [19]sreserved                                                                         [23:20]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_HSTX_VCOMM_REG_PON = hc000a0b0 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_CB_HSTX_VCOMM_REG_PON defines which inputs to the Voltage monitor will be measured during the self_test sequencesvin0_voltage_measurement_en                           [0]svin1_voltage_measurement_en                           [1]svin2_sel0_voltage_measurement_en                [2]svin2_sel1_voltage_measurement_en                [3]svin2_sel2_voltage_measurement_en                [4]svin2_sel3_voltage_measurement_en                [5]svin3_voltage_measurement_en                           [6]svin4_voltage_measurement_en                           [7]svin5_voltage_measurement_en                           [8]svin6_voltage_measurement_en                           [9]svin7_voltage_measurement_en                           [10]svin8_voltage_measurement_en                           [11]svin9_voltage_measurement_en                           [12]svin10_voltage_measurement_en                           [13]svin11_voltage_measurement_en                           [14]svin12_voltage_measurement_en                           [15]svin13_voltage_measurement_en                           [16]svin14_voltage_measurement_en                           [17]svin15_voltage_measurement_en                           [18]sinternal_voltage_measurement_en                   [19]sreserved                                                                         [23:20]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_IBIAS_PON = hc000a0b0 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_CB_IBIAS_PON defines which inputs to the Voltage monitor will be measured during the self_test sequencesvin0_voltage_measurement_en                           [0]svin1_voltage_measurement_en                           [1]svin2_sel0_voltage_measurement_en                [2]svin2_sel1_voltage_measurement_en                [3]svin2_sel2_voltage_measurement_en                [4]svin2_sel3_voltage_measurement_en                [5]svin3_voltage_measurement_en                           [6]svin4_voltage_measurement_en                           [7]svin5_voltage_measurement_en                           [8]svin6_voltage_measurement_en                           [9]svin7_voltage_measurement_en                           [10]svin8_voltage_measurement_en                           [11]svin9_voltage_measurement_en                           [12]svin10_voltage_measurement_en                           [13]svin11_voltage_measurement_en                           [14]svin12_voltage_measurement_en                           [15]svin13_voltage_measurement_en                           [16]svin14_voltage_measurement_en                           [17]svin15_voltage_measurement_en                           [18]sinternal_voltage_measurement_en                   [19]sreserved                                                                         [23:20]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_AMP1200_PON = hc000a0b0 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_CB_AMP1200_PON defines which inputs to the Voltage monitor will be measured during the self_test sequencesvin0_voltage_measurement_en                           [0]svin1_voltage_measurement_en                           [1]svin2_sel0_voltage_measurement_en                [2]svin2_sel1_voltage_measurement_en                [3]svin2_sel2_voltage_measurement_en                [4]svin2_sel3_voltage_measurement_en                [5]svin3_voltage_measurement_en                           [6]svin4_voltage_measurement_en                           [7]svin5_voltage_measurement_en                           [8]svin6_voltage_measurement_en                           [9]svin7_voltage_measurement_en                           [10]svin8_voltage_measurement_en                           [11]svin9_voltage_measurement_en                           [12]svin10_voltage_measurement_en                           [13]svin11_voltage_measurement_en                           [14]svin12_voltage_measurement_en                           [15]svin13_voltage_measurement_en                           [16]svin14_voltage_measurement_en                           [17]svin15_voltage_measurement_en                           [18]sinternal_voltage_measurement_en                   [19]sreserved                                                                         [23:20]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_VPCLK_REG_PON = hc000a0b0 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_CB_VPCLK_REG_PON defines which inputs to the Voltage monitor will be measured during the self_test sequencesvin0_voltage_measurement_en                           [0]svin1_voltage_measurement_en                           [1]svin2_sel0_voltage_measurement_en                [2]svin2_sel1_voltage_measurement_en                [3]svin2_sel2_voltage_measurement_en                [4]svin2_sel3_voltage_measurement_en                [5]svin3_voltage_measurement_en                           [6]svin4_voltage_measurement_en                           [7]svin5_voltage_measurement_en                           [8]svin6_voltage_measurement_en                           [9]svin7_voltage_measurement_en                           [10]svin8_voltage_measurement_en                           [11]svin9_voltage_measurement_en                           [12]svin10_voltage_measurement_en                           [13]svin11_voltage_measurement_en                           [14]svin12_voltage_measurement_en                           [15]svin13_voltage_measurement_en                           [16]svin14_voltage_measurement_en                           [17]svin15_voltage_measurement_en                           [18]sinternal_voltage_measurement_en                   [19]sreserved                                                                         [23:20]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_HSTXLB_DCO_CLK90_EN = hc000a0b0 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_CB_HSTXLB_DCO_CLK90_EN defines which inputs to the Voltage monitor will be measured during the self_test sequencesvin0_voltage_measurement_en                           [0]svin1_voltage_measurement_en                           [1]svin2_sel0_voltage_measurement_en                [2]svin2_sel1_voltage_measurement_en                [3]svin2_sel2_voltage_measurement_en                [4]svin2_sel3_voltage_measurement_en                [5]svin3_voltage_measurement_en                           [6]svin4_voltage_measurement_en                           [7]svin5_voltage_measurement_en                           [8]svin6_voltage_measurement_en                           [9]svin7_voltage_measurement_en                           [10]svin8_voltage_measurement_en                           [11]svin9_voltage_measurement_en                           [12]svin10_voltage_measurement_en                           [13]svin11_voltage_measurement_en                           [14]svin12_voltage_measurement_en                           [15]svin13_voltage_measurement_en                           [16]svin14_voltage_measurement_en                           [17]svin15_voltage_measurement_en                           [18]sinternal_voltage_measurement_en                   [19]sreserved                                                                         [23:20]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_REXT_IOCONT_EN = hc000a0b0 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_CB_REXT_IOCONT_EN defines which inputs to the Voltage monitor will be measured during the self_test sequencesvin0_voltage_measurement_en                           [0]svin1_voltage_measurement_en                           [1]svin2_sel0_voltage_measurement_en                [2]svin2_sel1_voltage_measurement_en                [3]svin2_sel2_voltage_measurement_en                [4]svin2_sel3_voltage_measurement_en                [5]svin3_voltage_measurement_en                           [6]svin4_voltage_measurement_en                           [7]svin5_voltage_measurement_en                           [8]svin6_voltage_measurement_en                           [9]svin7_voltage_measurement_en                           [10]svin8_voltage_measurement_en                           [11]svin9_voltage_measurement_en                           [12]svin10_voltage_measurement_en                           [13]svin11_voltage_measurement_en                           [14]svin12_voltage_measurement_en                           [15]svin13_voltage_measurement_en                           [16]svin14_voltage_measurement_en                           [17]svin15_voltage_measurement_en                           [18]sinternal_voltage_measurement_en                   [19]sreserved                                                                         [23:20]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_CB_CTRL_2_13_reg Address hc000a0b4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_CB_CTRL_2_13_reg = 3221266612 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_CB_ATB_SEL_DAC = hc000a0b4 0 10 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_CB_ATB_SEL_DAC defines which inputs to the Voltage monitor will be measured during the fnctional sequencesvin0_voltage_measurement_en                           [0]svin1_voltage_measurement_en                           [1]svin2_sel0_voltage_measurement_en                [2]svin2_sel1_voltage_measurement_en                [3]svin2_sel2_voltage_measurement_en                [4]svin2_sel3_voltage_measurement_en                [5]svin3_voltage_measurement_en                           [6]svin4_voltage_measurement_en                           [7]svin5_voltage_measurement_en                           [8]svin6_voltage_measurement_en                           [9]svin7_voltage_measurement_en                           [10]svin8_voltage_measurement_en                           [11]svin9_voltage_measurement_en                           [12]svin10_voltage_measurement_en                           [13]svin11_voltage_measurement_en                           [14]svin12_voltage_measurement_en                           [15]svin13_voltage_measurement_en                           [16]svin14_voltage_measurement_en                           [17]svin15_voltage_measurement_en                           [18]sinternal_voltage_measurement_en                   [19]sreserved                                                                         [23:12]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_ATB_SEL = hc000a0b4 10 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_CB_ATB_SEL defines which inputs to the Voltage monitor will be measured during the fnctional sequencesvin0_voltage_measurement_en                           [0]svin1_voltage_measurement_en                           [1]svin2_sel0_voltage_measurement_en                [2]svin2_sel1_voltage_measurement_en                [3]svin2_sel2_voltage_measurement_en                [4]svin2_sel3_voltage_measurement_en                [5]svin3_voltage_measurement_en                           [6]svin4_voltage_measurement_en                           [7]svin5_voltage_measurement_en                           [8]svin6_voltage_measurement_en                           [9]svin7_voltage_measurement_en                           [10]svin8_voltage_measurement_en                           [11]svin9_voltage_measurement_en                           [12]svin10_voltage_measurement_en                           [13]svin11_voltage_measurement_en                           [14]svin12_voltage_measurement_en                           [15]svin13_voltage_measurement_en                           [16]svin14_voltage_measurement_en                           [17]svin15_voltage_measurement_en                           [18]sinternal_voltage_measurement_en                   [19]sreserved                                                                         [23:12]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_CAL_SINK_EN = hc000a0b4 12 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_CB_CAL_SINK_EN defines which inputs to the Voltage monitor will be measured during the fnctional sequencesvin0_voltage_measurement_en                           [0]svin1_voltage_measurement_en                           [1]svin2_sel0_voltage_measurement_en                [2]svin2_sel1_voltage_measurement_en                [3]svin2_sel2_voltage_measurement_en                [4]svin2_sel3_voltage_measurement_en                [5]svin3_voltage_measurement_en                           [6]svin4_voltage_measurement_en                           [7]svin5_voltage_measurement_en                           [8]svin6_voltage_measurement_en                           [9]svin7_voltage_measurement_en                           [10]svin8_voltage_measurement_en                           [11]svin9_voltage_measurement_en                           [12]svin10_voltage_measurement_en                           [13]svin11_voltage_measurement_en                           [14]svin12_voltage_measurement_en                           [15]svin13_voltage_measurement_en                           [16]svin14_voltage_measurement_en                           [17]svin15_voltage_measurement_en                           [18]sinternal_voltage_measurement_en                   [19]sreserved                                                                         [23:12]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_HSTXLB_DCO_CLK0_EN = hc000a0b4 13 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_CB_HSTXLB_DCO_CLK0_EN defines which inputs to the Voltage monitor will be measured during the fnctional sequencesvin0_voltage_measurement_en                           [0]svin1_voltage_measurement_en                           [1]svin2_sel0_voltage_measurement_en                [2]svin2_sel1_voltage_measurement_en                [3]svin2_sel2_voltage_measurement_en                [4]svin2_sel3_voltage_measurement_en                [5]svin3_voltage_measurement_en                           [6]svin4_voltage_measurement_en                           [7]svin5_voltage_measurement_en                           [8]svin6_voltage_measurement_en                           [9]svin7_voltage_measurement_en                           [10]svin8_voltage_measurement_en                           [11]svin9_voltage_measurement_en                           [12]svin10_voltage_measurement_en                           [13]svin11_voltage_measurement_en                           [14]svin12_voltage_measurement_en                           [15]svin13_voltage_measurement_en                           [16]svin14_voltage_measurement_en                           [17]svin15_voltage_measurement_en                           [18]sinternal_voltage_measurement_en                   [19]sreserved                                                                         [23:12]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_HSTXLB_DCO_TUNE_CLKDIG_EN = hc000a0b4 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_CB_HSTXLB_DCO_TUNE_CLKDIG_EN defines which inputs to the Voltage monitor will be measured during the fnctional sequencesvin0_voltage_measurement_en                           [0]svin1_voltage_measurement_en                           [1]svin2_sel0_voltage_measurement_en                [2]svin2_sel1_voltage_measurement_en                [3]svin2_sel2_voltage_measurement_en                [4]svin2_sel3_voltage_measurement_en                [5]svin3_voltage_measurement_en                           [6]svin4_voltage_measurement_en                           [7]svin5_voltage_measurement_en                           [8]svin6_voltage_measurement_en                           [9]svin7_voltage_measurement_en                           [10]svin8_voltage_measurement_en                           [11]svin9_voltage_measurement_en                           [12]svin10_voltage_measurement_en                           [13]svin11_voltage_measurement_en                           [14]svin12_voltage_measurement_en                           [15]svin13_voltage_measurement_en                           [16]svin14_voltage_measurement_en                           [17]svin15_voltage_measurement_en                           [18]sinternal_voltage_measurement_en                   [19]sreserved                                                                         [23:12]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_15 = hc000a0b4 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 defines which inputs to the Voltage monitor will be measured during the fnctional sequencesvin0_voltage_measurement_en                           [0]svin1_voltage_measurement_en                           [1]svin2_sel0_voltage_measurement_en                [2]svin2_sel1_voltage_measurement_en                [3]svin2_sel2_voltage_measurement_en                [4]svin2_sel3_voltage_measurement_en                [5]svin3_voltage_measurement_en                           [6]svin4_voltage_measurement_en                           [7]svin5_voltage_measurement_en                           [8]svin6_voltage_measurement_en                           [9]svin7_voltage_measurement_en                           [10]svin8_voltage_measurement_en                           [11]svin9_voltage_measurement_en                           [12]svin10_voltage_measurement_en                           [13]svin11_voltage_measurement_en                           [14]svin12_voltage_measurement_en                           [15]svin13_voltage_measurement_en                           [16]svin14_voltage_measurement_en                           [17]svin15_voltage_measurement_en                           [18]sinternal_voltage_measurement_en                   [19]sreserved                                                                         [23:12]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_CB_CTRL_2_14_reg Address hc000a0b8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_CB_CTRL_2_14_reg = 3221266616 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_CB_LP_DCO_PON = hc000a0b8 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_CB_LP_DCO_PON defines the required stabilization time - resolution in vm_clksmax between  - Voltage monitor stabilization time when switching between the analog inputs s                          - stabilization time when swithcing between vmref output voltagesstabilization time                  [7:0]sreserved                                  [23:8]sMagic_number                      [27:24]              Default value – identical for all registerssParity                                      [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_LP_DCO_EN = hc000a0b8 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_CB_LP_DCO_EN defines the required stabilization time - resolution in vm_clksmax between  - Voltage monitor stabilization time when switching between the analog inputs s                          - stabilization time when swithcing between vmref output voltagesstabilization time                  [7:0]sreserved                                  [23:8]sMagic_number                      [27:24]              Default value – identical for all registerssParity                                      [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_LP_DCO_CLK_EN = hc000a0b8 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_CB_LP_DCO_CLK_EN defines the required stabilization time - resolution in vm_clksmax between  - Voltage monitor stabilization time when switching between the analog inputs s                          - stabilization time when swithcing between vmref output voltagesstabilization time                  [7:0]sreserved                                  [23:8]sMagic_number                      [27:24]              Default value – identical for all registerssParity                                      [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_LP_DCO_FWORD_CHANGE = hc000a0b8 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_CB_LP_DCO_FWORD_CHANGE defines the required stabilization time - resolution in vm_clksmax between  - Voltage monitor stabilization time when switching between the analog inputs s                          - stabilization time when swithcing between vmref output voltagesstabilization time                  [7:0]sreserved                                  [23:8]sMagic_number                      [27:24]              Default value – identical for all registerssParity                                      [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_LP_DCO_FWORD = hc000a0b8 4 7 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_CB_LP_DCO_FWORD defines the required stabilization time - resolution in vm_clksmax between  - Voltage monitor stabilization time when switching between the analog inputs s                          - stabilization time when swithcing between vmref output voltagesstabilization time                  [7:0]sreserved                                  [23:8]sMagic_number                      [27:24]              Default value – identical for all registerssParity                                      [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_HSTXLB_DCO_FWORD = hc000a0b8 11 3 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_CB_HSTXLB_DCO_FWORD defines the required stabilization time - resolution in vm_clksmax between  - Voltage monitor stabilization time when switching between the analog inputs s                          - stabilization time when swithcing between vmref output voltagesstabilization time                  [7:0]sreserved                                  [23:8]sMagic_number                      [27:24]              Default value – identical for all registerssParity                                      [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_HSTXLB_DCO_PON = hc000a0b8 14 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_CB_HSTXLB_DCO_PON defines the required stabilization time - resolution in vm_clksmax between  - Voltage monitor stabilization time when switching between the analog inputs s                          - stabilization time when swithcing between vmref output voltagesstabilization time                  [7:0]sreserved                                  [23:8]sMagic_number                      [27:24]              Default value – identical for all registerssParity                                      [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_HSTXLB_DCO_EN = hc000a0b8 15 1 h0 RO BIN
; Desc_csi_tadp_tx_0_OA_CB_HSTXLB_DCO_EN defines the required stabilization time - resolution in vm_clksmax between  - Voltage monitor stabilization time when switching between the analog inputs s                          - stabilization time when swithcing between vmref output voltagesstabilization time                  [7:0]sreserved                                  [23:8]sMagic_number                      [27:24]              Default value – identical for all registerssParity                                      [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_CB_CTRL_2_15_reg Address hc000a0bc
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_CB_CTRL_2_15_reg = 3221266620 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_OA_SETR = hc000a0bc 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_SETR vm_run_width                       [1:0]            Defines the width of RUN pulse.s                                                            2'h0 - RUN PULSE width = 1s                                                            2'h1 - RUN PULSE width = 2s                                                            2'h2 - RUN PULSE width = 3s                                                            2'h3 - RUN PULSE width = 4svm_cload_width                    [3:2]            Defines the width of CLOAD pulse.s                                                            2'h0 - CLOAD PULSE width = 1s                                                            2'h1 - CLOAD PULSE width = 2s                                                            2'h2 - CLOAD PULSE width = 3s                                                            2'h3 - CLOAD PULSE width = 4sMagic_number                    [27:24]              Default value – identical for all registerssParity                                       [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_SETR_CALIB = hc000a0bc 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_SETR_CALIB vm_run_width                       [1:0]            Defines the width of RUN pulse.s                                                            2'h0 - RUN PULSE width = 1s                                                            2'h1 - RUN PULSE width = 2s                                                            2'h2 - RUN PULSE width = 3s                                                            2'h3 - RUN PULSE width = 4svm_cload_width                    [3:2]            Defines the width of CLOAD pulse.s                                                            2'h0 - CLOAD PULSE width = 1s                                                            2'h1 - CLOAD PULSE width = 2s                                                            2'h2 - CLOAD PULSE width = 3s                                                            2'h3 - CLOAD PULSE width = 4sMagic_number                    [27:24]              Default value – identical for all registerssParity                                       [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_SETRA = hc000a0bc 8 3 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_SETRA vm_run_width                       [1:0]            Defines the width of RUN pulse.s                                                            2'h0 - RUN PULSE width = 1s                                                            2'h1 - RUN PULSE width = 2s                                                            2'h2 - RUN PULSE width = 3s                                                            2'h3 - RUN PULSE width = 4svm_cload_width                    [3:2]            Defines the width of CLOAD pulse.s                                                            2'h0 - CLOAD PULSE width = 1s                                                            2'h1 - CLOAD PULSE width = 2s                                                            2'h2 - CLOAD PULSE width = 3s                                                            2'h3 - CLOAD PULSE width = 4sMagic_number                    [27:24]              Default value – identical for all registerssParity                                       [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_SETRB = hc000a0bc 11 3 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_SETRB vm_run_width                       [1:0]            Defines the width of RUN pulse.s                                                            2'h0 - RUN PULSE width = 1s                                                            2'h1 - RUN PULSE width = 2s                                                            2'h2 - RUN PULSE width = 3s                                                            2'h3 - RUN PULSE width = 4svm_cload_width                    [3:2]            Defines the width of CLOAD pulse.s                                                            2'h0 - CLOAD PULSE width = 1s                                                            2'h1 - CLOAD PULSE width = 2s                                                            2'h2 - CLOAD PULSE width = 3s                                                            2'h3 - CLOAD PULSE width = 4sMagic_number                    [27:24]              Default value – identical for all registerssParity                                       [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_OA_CB_DSK_CLK_MODE = hc000a0bc 14 2 h0 RO HEX
; Desc_csi_tadp_tx_0_OA_CB_DSK_CLK_MODE vm_run_width                       [1:0]            Defines the width of RUN pulse.s                                                            2'h0 - RUN PULSE width = 1s                                                            2'h1 - RUN PULSE width = 2s                                                            2'h2 - RUN PULSE width = 3s                                                            2'h3 - RUN PULSE width = 4svm_cload_width                    [3:2]            Defines the width of CLOAD pulse.s                                                            2'h0 - CLOAD PULSE width = 1s                                                            2'h1 - CLOAD PULSE width = 2s                                                            2'h2 - CLOAD PULSE width = 3s                                                            2'h3 - CLOAD PULSE width = 4sMagic_number                    [27:24]              Default value – identical for all registerssParity                                       [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_CB_CTRL_3_0_reg Address hc000a0c0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_R_AFE_CB_CTRL_3_0_reg = 3221266624 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_IA_CB_ATB_COMP_OUT_INT = hc000a0c0 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_CB_ATB_COMP_OUT_INT vmu_wait_oper                                                             [23:0]                defines # of clocks before funtional safety enters functional mode  sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                              [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_CB_DET_VP_INT = hc000a0c0 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_CB_DET_VP_INT vmu_wait_oper                                                             [23:0]                defines # of clocks before funtional safety enters functional mode  sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                              [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_CB_DET_VPH_INT = hc000a0c0 2 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_CB_DET_VPH_INT vmu_wait_oper                                                             [23:0]                defines # of clocks before funtional safety enters functional mode  sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                              [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_CB_HSTXLB_CLKDIG_INT = hc000a0c0 3 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_CB_HSTXLB_CLKDIG_INT vmu_wait_oper                                                             [23:0]                defines # of clocks before funtional safety enters functional mode  sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                              [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_CB_LP_DCO_CLK_INT = hc000a0c0 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_CB_LP_DCO_CLK_INT vmu_wait_oper                                                             [23:0]                defines # of clocks before funtional safety enters functional mode  sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                              [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_CB_REXT_IOCONT_INT = hc000a0c0 5 1 h0 RO BIN
; Desc_csi_tadp_tx_0_IA_CB_REXT_IOCONT_INT vmu_wait_oper                                                             [23:0]                defines # of clocks before funtional safety enters functional mode  sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                              [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_IA_CB_SPARE_OUT_INT = hc000a0c0 6 4 h0 RO HEX
; Desc_csi_tadp_tx_0_IA_CB_SPARE_OUT_INT vmu_wait_oper                                                             [23:0]                defines # of clocks before funtional safety enters functional mode  sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                              [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_10 = hc000a0c0 10 6 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 vmu_wait_oper                                                             [23:0]                defines # of clocks before funtional safety enters functional mode  sMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                              [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_COMMON_R_DESKEW_FINE_MEM_reg Address hc000afc4
_csi_tadp_tx_0_CORE_DIG_COMMON_R_DESKEW_FINE_MEM_reg = 3221270468 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_DESKEW_FINE_MEM_VALUE = hc000afc4 0 3 h0 RO HEX
; Desc_csi_tadp_tx_0_DESKEW_FINE_MEM_VALUE enable                                                 [0]siout_trim                                            [3:1]svsrc_sel                                              [4]svmref_trim                                      [6:5]sabt_sel                                             [8:7]siout_enable                                       [9]sspare                                                [13:10]sreserved                                         [23:14]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_3 = hc000afc4 3 13 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_3 enable                                                 [0]siout_trim                                            [3:1]svsrc_sel                                              [4]svmref_trim                                      [6:5]sabt_sel                                             [8:7]siout_enable                                       [9]sspare                                                [13:10]sreserved                                         [23:14]sMagic_number                                                             [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_PPI_R_DPHY_LANE0_LBERT_0_reg Address hc000b008
_csi_tadp_tx_0_PPI_R_DPHY_LANE0_LBERT_0_reg = 3221270536 0 32 b00000000000000000000000000000001 RO
csi_tadp_tx_0_LBERT_PM_ERROR_COUNTER = hc000b008 0 16 h1 RO HEX
; Desc_csi_tadp_tx_0_LBERT_PM_ERROR_COUNTER K3                                                          [17:0]                K3 + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_PPI_R_DPHY_LANE0_LBERT_1_reg Address hc000b00c
_csi_tadp_tx_0_PPI_R_DPHY_LANE0_LBERT_1_reg = 3221270540 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LBERT_PG_ENABLED = hc000b00c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LBERT_PG_ENABLED N0                                                         [17:0]                N0 + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_1 = hc000b00c 1 15 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_1 N0                                                         [17:0]                N0 + paritysMagic_number                                   [27:24]              Default value – identical for all registerssParity                                                    [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_PPI_R_DPHY_LANE1_LBERT_0_reg Address hc000b808
_csi_tadp_tx_0_PPI_R_DPHY_LANE1_LBERT_0_reg = 3221272584 0 32 b00000000000000000000000000000001 RO
csi_tadp_tx_0_LBERT_PM_ERROR_COUNTER = hc000b808 0 16 h1 RO HEX
; Desc_csi_tadp_tx_0_LBERT_PM_ERROR_COUNTER CRC calculated on bits [31:8]



; REGISTER csi_tadp_tx_0_PPI_R_DPHY_LANE1_LBERT_1_reg Address hc000b80c
_csi_tadp_tx_0_PPI_R_DPHY_LANE1_LBERT_1_reg = 3221272588 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LBERT_PG_ENABLED = hc000b80c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LBERT_PG_ENABLED CRC calculated on bits [31:8]
csi_tadp_tx_0_RESERVED_15_1 = hc000b80c 1 15 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_1 CRC calculated on bits [31:8]



; REGISTER csi_tadp_tx_0_PPI_R_DPHY_LANE2_LBERT_0_reg Address hc000c008
_csi_tadp_tx_0_PPI_R_DPHY_LANE2_LBERT_0_reg = 3221274632 0 32 b00000000000000000000000000000001 RO
csi_tadp_tx_0_LBERT_PM_ERROR_COUNTER = hc000c008 0 16 h1 RO HEX
; Desc_csi_tadp_tx_0_LBERT_PM_ERROR_COUNTER CRC calculated on bits [31:8]



; REGISTER csi_tadp_tx_0_PPI_R_DPHY_LANE2_LBERT_1_reg Address hc000c00c
_csi_tadp_tx_0_PPI_R_DPHY_LANE2_LBERT_1_reg = 3221274636 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LBERT_PG_ENABLED = hc000c00c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LBERT_PG_ENABLED CRC calculated on bits [31:8]
csi_tadp_tx_0_RESERVED_15_1 = hc000c00c 1 15 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_1 CRC calculated on bits [31:8]



; REGISTER csi_tadp_tx_0_PPI_R_DPHY_LANE3_LBERT_0_reg Address hc000c808
_csi_tadp_tx_0_PPI_R_DPHY_LANE3_LBERT_0_reg = 3221276680 0 32 b00000000000000000000000000000001 RO
csi_tadp_tx_0_LBERT_PM_ERROR_COUNTER = hc000c808 0 16 h1 RO HEX
; Desc_csi_tadp_tx_0_LBERT_PM_ERROR_COUNTER CRC calculated on bits [31:8]



; REGISTER csi_tadp_tx_0_PPI_R_DPHY_LANE3_LBERT_1_reg Address hc000c80c
_csi_tadp_tx_0_PPI_R_DPHY_LANE3_LBERT_1_reg = 3221276684 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LBERT_PG_ENABLED = hc000c80c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LBERT_PG_ENABLED CRC calculated on bits [31:8]
csi_tadp_tx_0_RESERVED_15_1 = hc000c80c 1 15 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_1 CRC calculated on bits [31:8]



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_R_LP_0_reg Address hc000f140
_csi_tadp_tx_0_CORE_DIG_DLANE_0_R_LP_0_reg = 3221287232 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LP_0_HSACTIVERX = hc000f140 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LP_0_HSACTIVERX CRC calculated on bits [31:8]
csi_tadp_tx_0_LP_0_RXHSRQST = hc000f140 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LP_0_RXHSRQST CRC calculated on bits [31:8]
csi_tadp_tx_0_RESERVED_15_2 = hc000f140 2 14 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_2 CRC calculated on bits [31:8]



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_R_LP_1_reg Address hc000f144
_csi_tadp_tx_0_CORE_DIG_DLANE_0_R_LP_1_reg = 3221287236 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LP_1_STATE_BTA = hc000f144 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_LP_1_STATE_BTA CRC calculated on bits [31:8]
csi_tadp_tx_0_LP_1_STATE_LPRX = hc000f144 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_LP_1_STATE_LPRX CRC calculated on bits [31:8]
csi_tadp_tx_0_LP_1_STATE_LPTX = hc000f144 8 5 h0 RO HEX
; Desc_csi_tadp_tx_0_LP_1_STATE_LPTX CRC calculated on bits [31:8]
csi_tadp_tx_0_RESERVED_15_13 = hc000f144 13 3 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 CRC calculated on bits [31:8]



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_R_HS_TX_0_reg Address hc000f1c0
_csi_tadp_tx_0_CORE_DIG_DLANE_0_R_HS_TX_0_reg = 3221287360 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_STATE_DHSTX = hc000f1c0 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_STATE_DHSTX CRC calculated on bits [31:8]
csi_tadp_tx_0_STATE_DCO_DHSTX = hc000f1c0 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_STATE_DCO_DHSTX CRC calculated on bits [31:8]
csi_tadp_tx_0_RESERVED_15_8 = hc000f1c0 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 CRC calculated on bits [31:8]



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_R_HS_RX_0_reg Address hc000f240
_csi_tadp_tx_0_CORE_DIG_DLANE_0_R_HS_RX_0_reg = 3221287488 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_DESKEWCALDONE = hc000f240 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEWCALDONE CRC calculated on bits [31:8]
csi_tadp_tx_0_DESKEWCALFAILED = hc000f240 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEWCALFAILED CRC calculated on bits [31:8]
csi_tadp_tx_0_DESKEW_CAL_STATUS = hc000f240 2 8 h0 RO HEX
; Desc_csi_tadp_tx_0_DESKEW_CAL_STATUS CRC calculated on bits [31:8]
csi_tadp_tx_0_RESERVED_15_10 = hc000f240 10 6 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 CRC calculated on bits [31:8]



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_R_HS_RX_1_reg Address hc000f244
_csi_tadp_tx_0_CORE_DIG_DLANE_0_R_HS_RX_1_reg = 3221287492 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_DESKEWCALTIME = hc000f244 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_DESKEWCALTIME CRC calculated on bits [31:8]



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_R_HS_RX_2_reg Address hc000f248
_csi_tadp_tx_0_CORE_DIG_DLANE_0_R_HS_RX_2_reg = 3221287496 0 32 b00000000000000000000000010100000 RO
csi_tadp_tx_0_DESKEW_STATE = hc000f248 0 8 ha0 RO HEX
; Desc_csi_tadp_tx_0_DESKEW_STATE CRC calculated on bits [31:8]
csi_tadp_tx_0_RESERVED_15_8 = hc000f248 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 CRC calculated on bits [31:8]



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_R_HS_RX_3_reg Address hc000f24c
_csi_tadp_tx_0_CORE_DIG_DLANE_0_R_HS_RX_3_reg = 3221287500 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_DESKEW_PREV_ACTION = hc000f24c 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_DESKEW_PREV_ACTION CRC calculated on bits [31:8]
csi_tadp_tx_0_DESKEW_PREV_RESULT = hc000f24c 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEW_PREV_RESULT CRC calculated on bits [31:8]
csi_tadp_tx_0_DESKEW_CURR_ACTION = hc000f24c 5 4 h0 RO HEX
; Desc_csi_tadp_tx_0_DESKEW_CURR_ACTION CRC calculated on bits [31:8]
csi_tadp_tx_0_DESKEW_FAILED_LEFT = hc000f24c 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEW_FAILED_LEFT CRC calculated on bits [31:8]
csi_tadp_tx_0_DESKEW_FAILED_RIGHT = hc000f24c 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEW_FAILED_RIGHT CRC calculated on bits [31:8]
csi_tadp_tx_0_DESKEW_ALL_DIFF = hc000f24c 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEW_ALL_DIFF CRC calculated on bits [31:8]
csi_tadp_tx_0_RESERVED_15_12 = hc000f24c 12 4 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_12 CRC calculated on bits [31:8]



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_R_HS_RX_4_reg Address hc000f250
_csi_tadp_tx_0_CORE_DIG_DLANE_0_R_HS_RX_4_reg = 3221287504 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_EDGE1POINTER_SKEWCAL = hc000f250 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_EDGE1POINTER_SKEWCAL CRC calculated on bits [31:8]
csi_tadp_tx_0_EDGE2POINTER_SKEWCAL = hc000f250 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_EDGE2POINTER_SKEWCAL CRC calculated on bits [31:8]



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_R_LP_0_reg Address hc000f940
_csi_tadp_tx_0_CORE_DIG_DLANE_1_R_LP_0_reg = 3221289280 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LP_0_HSACTIVERX = hc000f940 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LP_0_HSACTIVERX CRC calculated on bits [31:8]
csi_tadp_tx_0_LP_0_RXHSRQST = hc000f940 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LP_0_RXHSRQST CRC calculated on bits [31:8]
csi_tadp_tx_0_RESERVED_15_2 = hc000f940 2 14 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_2 CRC calculated on bits [31:8]



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_R_LP_1_reg Address hc000f944
_csi_tadp_tx_0_CORE_DIG_DLANE_1_R_LP_1_reg = 3221289284 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LP_1_STATE_BTA = hc000f944 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_LP_1_STATE_BTA CRC calculated on bits [31:8]
csi_tadp_tx_0_LP_1_STATE_LPRX = hc000f944 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_LP_1_STATE_LPRX CRC calculated on bits [31:8]
csi_tadp_tx_0_LP_1_STATE_LPTX = hc000f944 8 5 h0 RO HEX
; Desc_csi_tadp_tx_0_LP_1_STATE_LPTX CRC calculated on bits [31:8]
csi_tadp_tx_0_RESERVED_15_13 = hc000f944 13 3 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 CRC calculated on bits [31:8]



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_R_HS_TX_0_reg Address hc000f9c0
_csi_tadp_tx_0_CORE_DIG_DLANE_1_R_HS_TX_0_reg = 3221289408 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_STATE_DHSTX = hc000f9c0 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_STATE_DHSTX CRC calculated on bits [31:8]
csi_tadp_tx_0_STATE_DCO_DHSTX = hc000f9c0 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_STATE_DCO_DHSTX CRC calculated on bits [31:8]
csi_tadp_tx_0_RESERVED_15_8 = hc000f9c0 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 CRC calculated on bits [31:8]



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_R_HS_RX_0_reg Address hc000fa40
_csi_tadp_tx_0_CORE_DIG_DLANE_1_R_HS_RX_0_reg = 3221289536 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_DESKEWCALDONE = hc000fa40 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEWCALDONE CRC calculated on bits [31:8]
csi_tadp_tx_0_DESKEWCALFAILED = hc000fa40 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEWCALFAILED CRC calculated on bits [31:8]
csi_tadp_tx_0_DESKEW_CAL_STATUS = hc000fa40 2 8 h0 RO HEX
; Desc_csi_tadp_tx_0_DESKEW_CAL_STATUS CRC calculated on bits [31:8]
csi_tadp_tx_0_RESERVED_15_10 = hc000fa40 10 6 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 CRC calculated on bits [31:8]



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_R_HS_RX_1_reg Address hc000fa44
_csi_tadp_tx_0_CORE_DIG_DLANE_1_R_HS_RX_1_reg = 3221289540 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_DESKEWCALTIME = hc000fa44 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_DESKEWCALTIME CRC calculated on bits [31:8]



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_R_HS_RX_2_reg Address hc000fa48
_csi_tadp_tx_0_CORE_DIG_DLANE_1_R_HS_RX_2_reg = 3221289544 0 32 b00000000000000000000000010100000 RO
csi_tadp_tx_0_DESKEW_STATE = hc000fa48 0 8 ha0 RO HEX
; Desc_csi_tadp_tx_0_DESKEW_STATE CRC calculated on bits [31:8]
csi_tadp_tx_0_RESERVED_15_8 = hc000fa48 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 CRC calculated on bits [31:8]



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_R_HS_RX_3_reg Address hc000fa4c
_csi_tadp_tx_0_CORE_DIG_DLANE_1_R_HS_RX_3_reg = 3221289548 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_DESKEW_PREV_ACTION = hc000fa4c 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_DESKEW_PREV_ACTION measurement data ready to be read
csi_tadp_tx_0_DESKEW_PREV_RESULT = hc000fa4c 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEW_PREV_RESULT measurement data ready to be read
csi_tadp_tx_0_DESKEW_CURR_ACTION = hc000fa4c 5 4 h0 RO HEX
; Desc_csi_tadp_tx_0_DESKEW_CURR_ACTION measurement data ready to be read
csi_tadp_tx_0_DESKEW_FAILED_LEFT = hc000fa4c 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEW_FAILED_LEFT measurement data ready to be read
csi_tadp_tx_0_DESKEW_FAILED_RIGHT = hc000fa4c 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEW_FAILED_RIGHT measurement data ready to be read
csi_tadp_tx_0_DESKEW_ALL_DIFF = hc000fa4c 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEW_ALL_DIFF measurement data ready to be read
csi_tadp_tx_0_RESERVED_15_12 = hc000fa4c 12 4 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_12 measurement data ready to be read



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_R_HS_RX_4_reg Address hc000fa50
_csi_tadp_tx_0_CORE_DIG_DLANE_1_R_HS_RX_4_reg = 3221289552 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_EDGE1POINTER_SKEWCAL = hc000fa50 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_EDGE1POINTER_SKEWCAL vm measured voltage is out of the defined limits – either higher or lower
csi_tadp_tx_0_EDGE2POINTER_SKEWCAL = hc000fa50 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_EDGE2POINTER_SKEWCAL vm measured voltage is out of the defined limits – either higher or lower



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_R_LP_0_reg Address hc0010140
_csi_tadp_tx_0_CORE_DIG_DLANE_2_R_LP_0_reg = 3221291328 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LP_0_HSACTIVERX = hc0010140 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LP_0_HSACTIVERX Actual number of out_of_limit errors
csi_tadp_tx_0_LP_0_RXHSRQST = hc0010140 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LP_0_RXHSRQST Actual number of out_of_limit errors
csi_tadp_tx_0_RESERVED_15_2 = hc0010140 2 14 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_2 Actual number of out_of_limit errors



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_R_LP_1_reg Address hc0010144
_csi_tadp_tx_0_CORE_DIG_DLANE_2_R_LP_1_reg = 3221291332 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LP_1_STATE_BTA = hc0010144 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_LP_1_STATE_BTA Actual number of out_of_limit errors
csi_tadp_tx_0_LP_1_STATE_LPRX = hc0010144 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_LP_1_STATE_LPRX Actual number of out_of_limit errors
csi_tadp_tx_0_LP_1_STATE_LPTX = hc0010144 8 5 h0 RO HEX
; Desc_csi_tadp_tx_0_LP_1_STATE_LPTX Actual number of out_of_limit errors
csi_tadp_tx_0_RESERVED_15_13 = hc0010144 13 3 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 Actual number of out_of_limit errors



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_R_HS_TX_0_reg Address hc00101c0
_csi_tadp_tx_0_CORE_DIG_DLANE_2_R_HS_TX_0_reg = 3221291456 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_STATE_DHSTX = hc00101c0 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_STATE_DHSTX Actual number of out_of_limit errors
csi_tadp_tx_0_STATE_DCO_DHSTX = hc00101c0 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_STATE_DCO_DHSTX Actual number of out_of_limit errors
csi_tadp_tx_0_RESERVED_15_8 = hc00101c0 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 Actual number of out_of_limit errors



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_R_HS_RX_0_reg Address hc0010240
_csi_tadp_tx_0_CORE_DIG_DLANE_2_R_HS_RX_0_reg = 3221291584 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_DESKEWCALDONE = hc0010240 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEWCALDONE Actual number of out_of_limit errors
csi_tadp_tx_0_DESKEWCALFAILED = hc0010240 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEWCALFAILED Actual number of out_of_limit errors
csi_tadp_tx_0_DESKEW_CAL_STATUS = hc0010240 2 8 h0 RO HEX
; Desc_csi_tadp_tx_0_DESKEW_CAL_STATUS Actual number of out_of_limit errors
csi_tadp_tx_0_RESERVED_15_10 = hc0010240 10 6 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 Actual number of out_of_limit errors



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_R_HS_RX_1_reg Address hc0010244
_csi_tadp_tx_0_CORE_DIG_DLANE_2_R_HS_RX_1_reg = 3221291588 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_DESKEWCALTIME = hc0010244 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_DESKEWCALTIME Actual number of out_of_limit errors



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_R_HS_RX_2_reg Address hc0010248
_csi_tadp_tx_0_CORE_DIG_DLANE_2_R_HS_RX_2_reg = 3221291592 0 32 b00000000000000000000000010100000 RO
csi_tadp_tx_0_DESKEW_STATE = hc0010248 0 8 ha0 RO HEX
; Desc_csi_tadp_tx_0_DESKEW_STATE Actual number of out_of_limit errors
csi_tadp_tx_0_RESERVED_15_8 = hc0010248 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 Actual number of out_of_limit errors



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_R_HS_RX_3_reg Address hc001024c
_csi_tadp_tx_0_CORE_DIG_DLANE_2_R_HS_RX_3_reg = 3221291596 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_DESKEW_PREV_ACTION = hc001024c 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_DESKEW_PREV_ACTION Actual number of out_of_limit errors
csi_tadp_tx_0_DESKEW_PREV_RESULT = hc001024c 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEW_PREV_RESULT Actual number of out_of_limit errors
csi_tadp_tx_0_DESKEW_CURR_ACTION = hc001024c 5 4 h0 RO HEX
; Desc_csi_tadp_tx_0_DESKEW_CURR_ACTION Actual number of out_of_limit errors
csi_tadp_tx_0_DESKEW_FAILED_LEFT = hc001024c 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEW_FAILED_LEFT Actual number of out_of_limit errors
csi_tadp_tx_0_DESKEW_FAILED_RIGHT = hc001024c 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEW_FAILED_RIGHT Actual number of out_of_limit errors
csi_tadp_tx_0_DESKEW_ALL_DIFF = hc001024c 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEW_ALL_DIFF Actual number of out_of_limit errors
csi_tadp_tx_0_RESERVED_15_12 = hc001024c 12 4 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_12 Actual number of out_of_limit errors



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_R_HS_RX_4_reg Address hc0010250
_csi_tadp_tx_0_CORE_DIG_DLANE_2_R_HS_RX_4_reg = 3221291600 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_EDGE1POINTER_SKEWCAL = hc0010250 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_EDGE1POINTER_SKEWCAL Actual number of out_of_limit errors
csi_tadp_tx_0_EDGE2POINTER_SKEWCAL = hc0010250 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_EDGE2POINTER_SKEWCAL Actual number of out_of_limit errors



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_R_LP_0_reg Address hc0010940
_csi_tadp_tx_0_CORE_DIG_DLANE_3_R_LP_0_reg = 3221293376 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LP_0_HSACTIVERX = hc0010940 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LP_0_HSACTIVERX Actual number of out_of_limit errors
csi_tadp_tx_0_LP_0_RXHSRQST = hc0010940 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LP_0_RXHSRQST Actual number of out_of_limit errors
csi_tadp_tx_0_RESERVED_15_2 = hc0010940 2 14 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_2 Actual number of out_of_limit errors



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_R_LP_1_reg Address hc0010944
_csi_tadp_tx_0_CORE_DIG_DLANE_3_R_LP_1_reg = 3221293380 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LP_1_STATE_BTA = hc0010944 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_LP_1_STATE_BTA Actual number of out_of_limit errors
csi_tadp_tx_0_LP_1_STATE_LPRX = hc0010944 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_LP_1_STATE_LPRX Actual number of out_of_limit errors
csi_tadp_tx_0_LP_1_STATE_LPTX = hc0010944 8 5 h0 RO HEX
; Desc_csi_tadp_tx_0_LP_1_STATE_LPTX Actual number of out_of_limit errors
csi_tadp_tx_0_RESERVED_15_13 = hc0010944 13 3 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 Actual number of out_of_limit errors



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_R_HS_TX_0_reg Address hc00109c0
_csi_tadp_tx_0_CORE_DIG_DLANE_3_R_HS_TX_0_reg = 3221293504 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_STATE_DHSTX = hc00109c0 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_STATE_DHSTX Actual number of out_of_limit errors
csi_tadp_tx_0_STATE_DCO_DHSTX = hc00109c0 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_STATE_DCO_DHSTX Actual number of out_of_limit errors
csi_tadp_tx_0_RESERVED_15_8 = hc00109c0 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 Actual number of out_of_limit errors



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_R_HS_RX_0_reg Address hc0010a40
_csi_tadp_tx_0_CORE_DIG_DLANE_3_R_HS_RX_0_reg = 3221293632 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_DESKEWCALDONE = hc0010a40 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEWCALDONE Actual number of out_of_limit errors
csi_tadp_tx_0_DESKEWCALFAILED = hc0010a40 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEWCALFAILED Actual number of out_of_limit errors
csi_tadp_tx_0_DESKEW_CAL_STATUS = hc0010a40 2 8 h0 RO HEX
; Desc_csi_tadp_tx_0_DESKEW_CAL_STATUS Actual number of out_of_limit errors
csi_tadp_tx_0_RESERVED_15_10 = hc0010a40 10 6 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 Actual number of out_of_limit errors



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_R_HS_RX_1_reg Address hc0010a44
_csi_tadp_tx_0_CORE_DIG_DLANE_3_R_HS_RX_1_reg = 3221293636 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_DESKEWCALTIME = hc0010a44 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_DESKEWCALTIME Actual number of out_of_limit errors



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_R_HS_RX_2_reg Address hc0010a48
_csi_tadp_tx_0_CORE_DIG_DLANE_3_R_HS_RX_2_reg = 3221293640 0 32 b00000000000000000000000010100000 RO
csi_tadp_tx_0_DESKEW_STATE = hc0010a48 0 8 ha0 RO HEX
; Desc_csi_tadp_tx_0_DESKEW_STATE Actual number of out_of_limit errors
csi_tadp_tx_0_RESERVED_15_8 = hc0010a48 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 Actual number of out_of_limit errors



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_R_HS_RX_3_reg Address hc0010a4c
_csi_tadp_tx_0_CORE_DIG_DLANE_3_R_HS_RX_3_reg = 3221293644 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_DESKEW_PREV_ACTION = hc0010a4c 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_DESKEW_PREV_ACTION Actual number of out_of_limit errors
csi_tadp_tx_0_DESKEW_PREV_RESULT = hc0010a4c 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEW_PREV_RESULT Actual number of out_of_limit errors
csi_tadp_tx_0_DESKEW_CURR_ACTION = hc0010a4c 5 4 h0 RO HEX
; Desc_csi_tadp_tx_0_DESKEW_CURR_ACTION Actual number of out_of_limit errors
csi_tadp_tx_0_DESKEW_FAILED_LEFT = hc0010a4c 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEW_FAILED_LEFT Actual number of out_of_limit errors
csi_tadp_tx_0_DESKEW_FAILED_RIGHT = hc0010a4c 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEW_FAILED_RIGHT Actual number of out_of_limit errors
csi_tadp_tx_0_DESKEW_ALL_DIFF = hc0010a4c 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEW_ALL_DIFF Actual number of out_of_limit errors
csi_tadp_tx_0_RESERVED_15_12 = hc0010a4c 12 4 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_12 Actual number of out_of_limit errors



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_R_HS_RX_4_reg Address hc0010a50
_csi_tadp_tx_0_CORE_DIG_DLANE_3_R_HS_RX_4_reg = 3221293648 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_EDGE1POINTER_SKEWCAL = hc0010a50 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_EDGE1POINTER_SKEWCAL Actual number of out_of_limit errors
csi_tadp_tx_0_EDGE2POINTER_SKEWCAL = hc0010a50 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_EDGE2POINTER_SKEWCAL Actual number of out_of_limit errors



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_R_LP_0_reg Address hc0011140
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_R_LP_0_reg = 3221295424 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LP_0_HSACTIVERX = hc0011140 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LP_0_HSACTIVERX Actual number of out_of_limit errors
csi_tadp_tx_0_LP_0_RXHSRQST = hc0011140 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LP_0_RXHSRQST Actual number of out_of_limit errors
csi_tadp_tx_0_RESERVED_15_2 = hc0011140 2 14 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_2 Actual number of out_of_limit errors



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_R_LP_1_reg Address hc0011144
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_R_LP_1_reg = 3221295428 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LP_1_STATE_BTA = hc0011144 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_LP_1_STATE_BTA Actual number of out_of_limit errors
csi_tadp_tx_0_LP_1_STATE_LPRX = hc0011144 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_LP_1_STATE_LPRX Actual number of out_of_limit errors
csi_tadp_tx_0_LP_1_STATE_LPTX = hc0011144 8 5 h0 RO HEX
; Desc_csi_tadp_tx_0_LP_1_STATE_LPTX Actual number of out_of_limit errors
csi_tadp_tx_0_RESERVED_15_13 = hc0011144 13 3 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 Actual number of out_of_limit errors



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_R_HS_TX_0_reg Address hc00111c0
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_R_HS_TX_0_reg = 3221295552 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_STATE_DHSTX = hc00111c0 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_STATE_DHSTX Actual number of out_of_limit errors
csi_tadp_tx_0_STATE_DCO_DHSTX = hc00111c0 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_STATE_DCO_DHSTX Actual number of out_of_limit errors
csi_tadp_tx_0_RESERVED_15_8 = hc00111c0 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 Actual number of out_of_limit errors



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_R_HS_RX_0_reg Address hc0011240
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_R_HS_RX_0_reg = 3221295680 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_DESKEWCALDONE = hc0011240 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEWCALDONE Actual number of out_of_limit errors
csi_tadp_tx_0_DESKEWCALFAILED = hc0011240 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEWCALFAILED Actual number of out_of_limit errors
csi_tadp_tx_0_DESKEW_CAL_STATUS = hc0011240 2 8 h0 RO HEX
; Desc_csi_tadp_tx_0_DESKEW_CAL_STATUS Actual number of out_of_limit errors
csi_tadp_tx_0_RESERVED_15_10 = hc0011240 10 6 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 Actual number of out_of_limit errors



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_R_HS_RX_1_reg Address hc0011244
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_R_HS_RX_1_reg = 3221295684 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_DESKEWCALTIME = hc0011244 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_DESKEWCALTIME Actual number of out_of_limit errors



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_R_HS_RX_2_reg Address hc0011248
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_R_HS_RX_2_reg = 3221295688 0 32 b00000000000000000000000010100000 RO
csi_tadp_tx_0_DESKEW_STATE = hc0011248 0 8 ha0 RO HEX
; Desc_csi_tadp_tx_0_DESKEW_STATE When active – the configuration register x, fail to meet the safety requiremenvm
csi_tadp_tx_0_RESERVED_15_8 = hc0011248 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 When active – the configuration register x, fail to meet the safety requiremenvm



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_R_HS_RX_3_reg Address hc001124c
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_R_HS_RX_3_reg = 3221295692 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_DESKEW_PREV_ACTION = hc001124c 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_DESKEW_PREV_ACTION When active – the configuration register x, fail to meet the safety requiremenvm
csi_tadp_tx_0_DESKEW_PREV_RESULT = hc001124c 4 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEW_PREV_RESULT When active – the configuration register x, fail to meet the safety requiremenvm
csi_tadp_tx_0_DESKEW_CURR_ACTION = hc001124c 5 4 h0 RO HEX
; Desc_csi_tadp_tx_0_DESKEW_CURR_ACTION When active – the configuration register x, fail to meet the safety requiremenvm
csi_tadp_tx_0_DESKEW_FAILED_LEFT = hc001124c 9 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEW_FAILED_LEFT When active – the configuration register x, fail to meet the safety requiremenvm
csi_tadp_tx_0_DESKEW_FAILED_RIGHT = hc001124c 10 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEW_FAILED_RIGHT When active – the configuration register x, fail to meet the safety requiremenvm
csi_tadp_tx_0_DESKEW_ALL_DIFF = hc001124c 11 1 h0 RO BIN
; Desc_csi_tadp_tx_0_DESKEW_ALL_DIFF When active – the configuration register x, fail to meet the safety requiremenvm
csi_tadp_tx_0_RESERVED_15_12 = hc001124c 12 4 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_12 When active – the configuration register x, fail to meet the safety requiremenvm



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_R_HS_RX_4_reg Address hc0011250
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_R_HS_RX_4_reg = 3221295696 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_EDGE1POINTER_SKEWCAL = hc0011250 0 8 h0 RO HEX
; Desc_csi_tadp_tx_0_EDGE1POINTER_SKEWCAL When active – the configuration register x, fail to meet the safety requiremenvm
csi_tadp_tx_0_EDGE2POINTER_SKEWCAL = hc0011250 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_EDGE2POINTER_SKEWCAL When active – the configuration register x, fail to meet the safety requiremenvm



; REGISTER csi_tadp_tx_0_PPI_R_CPHY_TRIO0_LBERT_0_reg Address hc0013008
_csi_tadp_tx_0_PPI_R_CPHY_TRIO0_LBERT_0_reg = 3221303304 0 32 b00000000000000000000000000000001 RO
csi_tadp_tx_0_LBERT_PM_ERROR_COUNTER = hc0013008 0 16 h1 RO HEX
; Desc_csi_tadp_tx_0_LBERT_PM_ERROR_COUNTER short_self_test_comperator results per self_test steps    [1]      vm_GT_high_limit step 1s    [0]      vm_LT_low_limit step 1



; REGISTER csi_tadp_tx_0_PPI_R_CPHY_TRIO0_LBERT_1_reg Address hc001300c
_csi_tadp_tx_0_PPI_R_CPHY_TRIO0_LBERT_1_reg = 3221303308 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LBERT_PG_ENABLED = hc001300c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LBERT_PG_ENABLED functional comperator results for internal voltage measurements    [1]      vm_GT_high_limits    [0]      vm_LT_low_limit
csi_tadp_tx_0_RESERVED_15_1 = hc001300c 1 15 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_1 functional comperator results for internal voltage measurements    [1]      vm_GT_high_limits    [0]      vm_LT_low_limit



; REGISTER csi_tadp_tx_0_PPI_R_CPHY_TRIO1_LBERT_0_reg Address hc0013808
_csi_tadp_tx_0_PPI_R_CPHY_TRIO1_LBERT_0_reg = 3221305352 0 32 b00000000000000000000000000000001 RO
csi_tadp_tx_0_LBERT_PM_ERROR_COUNTER = hc0013808 0 16 h1 RO HEX
; Desc_csi_tadp_tx_0_LBERT_PM_ERROR_COUNTER functional comperator results for internal voltage measurements    [1]      vm_GT_high_limits    [0]      vm_LT_low_limit



; REGISTER csi_tadp_tx_0_PPI_R_CPHY_TRIO1_LBERT_1_reg Address hc001380c
_csi_tadp_tx_0_PPI_R_CPHY_TRIO1_LBERT_1_reg = 3221305356 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LBERT_PG_ENABLED = hc001380c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LBERT_PG_ENABLED vm error count is greater than the defined error limits
csi_tadp_tx_0_RESERVED_15_1 = hc001380c 1 15 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_1 vm error count is greater than the defined error limits



; REGISTER csi_tadp_tx_0_PPI_R_CPHY_TRIO2_LBERT_0_reg Address hc0014008
_csi_tadp_tx_0_PPI_R_CPHY_TRIO2_LBERT_0_reg = 3221307400 0 32 b00000000000000000000000000000001 RO
csi_tadp_tx_0_LBERT_PM_ERROR_COUNTER = hc0014008 0 16 h1 RO HEX
; Desc_csi_tadp_tx_0_LBERT_PM_ERROR_COUNTER func_measurement_count               [15:0]                number of measurement done - counts all the meaurements done when the VMU is in functional safety mode



; REGISTER csi_tadp_tx_0_PPI_R_CPHY_TRIO2_LBERT_1_reg Address hc001400c
_csi_tadp_tx_0_PPI_R_CPHY_TRIO2_LBERT_1_reg = 3221307404 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LBERT_PG_ENABLED = hc001400c 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LBERT_PG_ENABLED func_measurement_iteration_count               [15:0]                number of measurement loops each loops include all the measurements defined in  func_mode_measurement_en
csi_tadp_tx_0_RESERVED_15_1 = hc001400c 1 15 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_1 func_measurement_iteration_count               [15:0]                number of measurement loops each loops include all the measurements defined in  func_mode_measurement_en



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_R_LP_0_reg Address hc0017140
_csi_tadp_tx_0_CORE_DIG_CLANE_0_R_LP_0_reg = 3221320000 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LP_0_HSACTIVERX = hc0017140 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LP_0_HSACTIVERX func_measurement_iteration_count               [15:0]                number of measurement loops each loops include all the measurements defined in  func_mode_measurement_en
csi_tadp_tx_0_LP_0_RXHSRQST = hc0017140 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LP_0_RXHSRQST func_measurement_iteration_count               [15:0]                number of measurement loops each loops include all the measurements defined in  func_mode_measurement_en
csi_tadp_tx_0_RESERVED_15_2 = hc0017140 2 14 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_2 func_measurement_iteration_count               [15:0]                number of measurement loops each loops include all the measurements defined in  func_mode_measurement_en



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_R_LP_1_reg Address hc0017144
_csi_tadp_tx_0_CORE_DIG_CLANE_0_R_LP_1_reg = 3221320004 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LP_1_STATE_BTA = hc0017144 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_LP_1_STATE_BTA vm_data_error_gen                                                      [11:0]                  each bit set in this field will invert the corresponding bit in the vm_data to cause intentional error  sReserved                                                                         [22:12]svm_rdy_error_gen                                                        [23]                     setting this bit will set the vm_rdy to 1'b0 - for error and timeout testssMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_LP_1_STATE_LPRX = hc0017144 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_LP_1_STATE_LPRX vm_data_error_gen                                                      [11:0]                  each bit set in this field will invert the corresponding bit in the vm_data to cause intentional error  sReserved                                                                         [22:12]svm_rdy_error_gen                                                        [23]                     setting this bit will set the vm_rdy to 1'b0 - for error and timeout testssMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_LP_1_STATE_LPTX = hc0017144 8 5 h0 RO HEX
; Desc_csi_tadp_tx_0_LP_1_STATE_LPTX vm_data_error_gen                                                      [11:0]                  each bit set in this field will invert the corresponding bit in the vm_data to cause intentional error  sReserved                                                                         [22:12]svm_rdy_error_gen                                                        [23]                     setting this bit will set the vm_rdy to 1'b0 - for error and timeout testssMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_13 = hc0017144 13 3 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 vm_data_error_gen                                                      [11:0]                  each bit set in this field will invert the corresponding bit in the vm_data to cause intentional error  sReserved                                                                         [22:12]svm_rdy_error_gen                                                        [23]                     setting this bit will set the vm_rdy to 1'b0 - for error and timeout testssMagic_number                                                              [27:24]              Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_R_RX_0_reg Address hc0017240
_csi_tadp_tx_0_CORE_DIG_CLANE_0_R_RX_0_reg = 3221320256 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_CDR_CALDONE = hc0017240 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_CDR_CALDONE VM data output value sampled at rdy
csi_tadp_tx_0_RESERVED_15_1 = hc0017240 1 15 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_1 VM data output value sampled at rdy



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_R_RX_1_reg Address hc0017244
_csi_tadp_tx_0_CORE_DIG_CLANE_0_R_RX_1_reg = 3221320260 0 32 b00000000000000001111111111111111 RO
csi_tadp_tx_0_COARSE_DIF_TARGET = hc0017244 0 16 hffff RO HEX
; Desc_csi_tadp_tx_0_COARSE_DIF_TARGET Initial SEQ_ID Value added to the read temperature register. This values will be incremented automatically after every read access to the read temperature register: sfield descriptionsparity                [31:28]smagic_number [27:24]sReserved           [23:4]sts_initial_seq_id    [3:0]



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_R_TX_0_reg Address hc0017248
_csi_tadp_tx_0_CORE_DIG_CLANE_0_R_TX_0_reg = 3221320264 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_STATE_CHSTX = hc0017248 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_STATE_CHSTX controls the TSC functionalitysfield descriptionsts_pd                       [0]                    Power down –s                                                   1’b0 – both TS are actives                                                   1’b1 – both TS are forced to power-downsts_bypass mode     [1]           Selects bypass modes                                                  1’b0 – the TS is activated in automatic mode. The TS are controlled according to predefined sequencess                                                  1’b1 – the TS is activated in bypass modes                                                  The TS are controlled according to the control signals written by SW to Bypass Control register see para. ‎11.3sts_single_mode      [2]           ts_single run modes                                                 1'b0 - the TS run in contineous mode -  run command is active until disabled - effective only in bypass modes                                                 1'b1 - the TS run in single mode - run command per measurementsts_master                 [3]           Selects which Temperature Sensor is read when the temperature read register is accesseds                                                  1’b0 – TS0 sampled value will be read when the temperature read register is accesseds                                                  1’b1 – TS1 sampled value will be read when the temperature read register is accessedsts_operation moode    [4]          selects the operarion mode s                                                  1'b0 - the temperature works in operation mode 1 - using coefficients A & Bs                                                  1'b1 - the temperature works in operation mode 2 - using coefficients G & HsReserved           [23:4]ssMagic_number  [27:24]   Default value – identical for all registerssParity                 [31:28]   Parity calculation on bits[27:0] 
csi_tadp_tx_0_STATE_DCO_CHSTX = hc0017248 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_STATE_DCO_CHSTX controls the TSC functionalitysfield descriptionsts_pd                       [0]                    Power down –s                                                   1’b0 – both TS are actives                                                   1’b1 – both TS are forced to power-downsts_bypass mode     [1]           Selects bypass modes                                                  1’b0 – the TS is activated in automatic mode. The TS are controlled according to predefined sequencess                                                  1’b1 – the TS is activated in bypass modes                                                  The TS are controlled according to the control signals written by SW to Bypass Control register see para. ‎11.3sts_single_mode      [2]           ts_single run modes                                                 1'b0 - the TS run in contineous mode -  run command is active until disabled - effective only in bypass modes                                                 1'b1 - the TS run in single mode - run command per measurementsts_master                 [3]           Selects which Temperature Sensor is read when the temperature read register is accesseds                                                  1’b0 – TS0 sampled value will be read when the temperature read register is accesseds                                                  1’b1 – TS1 sampled value will be read when the temperature read register is accessedsts_operation moode    [4]          selects the operarion mode s                                                  1'b0 - the temperature works in operation mode 1 - using coefficients A & Bs                                                  1'b1 - the temperature works in operation mode 2 - using coefficients G & HsReserved           [23:4]ssMagic_number  [27:24]   Default value – identical for all registerssParity                 [31:28]   Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_8 = hc0017248 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 controls the TSC functionalitysfield descriptionsts_pd                       [0]                    Power down –s                                                   1’b0 – both TS are actives                                                   1’b1 – both TS are forced to power-downsts_bypass mode     [1]           Selects bypass modes                                                  1’b0 – the TS is activated in automatic mode. The TS are controlled according to predefined sequencess                                                  1’b1 – the TS is activated in bypass modes                                                  The TS are controlled according to the control signals written by SW to Bypass Control register see para. ‎11.3sts_single_mode      [2]           ts_single run modes                                                 1'b0 - the TS run in contineous mode -  run command is active until disabled - effective only in bypass modes                                                 1'b1 - the TS run in single mode - run command per measurementsts_master                 [3]           Selects which Temperature Sensor is read when the temperature read register is accesseds                                                  1’b0 – TS0 sampled value will be read when the temperature read register is accesseds                                                  1’b1 – TS1 sampled value will be read when the temperature read register is accessedsts_operation moode    [4]          selects the operarion mode s                                                  1'b0 - the temperature works in operation mode 1 - using coefficients A & Bs                                                  1'b1 - the temperature works in operation mode 2 - using coefficients G & HsReserved           [23:4]ssMagic_number  [27:24]   Default value – identical for all registerssParity                 [31:28]   Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_R_RX_2_reg Address hc001724c
_csi_tadp_tx_0_CORE_DIG_CLANE_0_R_RX_2_reg = 3221320268 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_CR_COARSE_VALUE_OBS = hc001724c 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_CR_COARSE_VALUE_OBS controls theTS activation while in bypass modesTs0_pd                       [0]                     ts0 power down control bit while in bypass modesTs0_rstn                    [1]                     ts0 reset control bit while in bypass mode sTs0_run                     [2]                     ts0 run control bit while in bypass modesTs0_cload                 [3]                     ts0 sgn_en control bit while in bypass modests0_an_en                 [4]sTs0_an_sel             [8:5]                     ts0 cal control bit while in bypass modesreserve   d              [11:9]                  reservedsTs1_pd                     [12]                    ts1 power down control bit while in bypass modesTs1_rstn                  [13]                    ts1 reset control bit while in bypass mode sTs1_run                   [14]                    ts1 run control bit while in bypass modesTs1_cload              [15]                    ts1 sgn_en control bit while in bypass modests1_an_en               [16]sTs1_an_sel            [20:17]                    ts1 cal control bit while in bypass modesreserved                [23:21]            sMagic_numbers  [27:24]              Default value – identical for all registerssParity                      [31:28]              Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_R_RX_3_reg Address hc0017250
_csi_tadp_tx_0_CORE_DIG_CLANE_0_R_RX_3_reg = 3221320272 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_CR_CDR_STATUS_OBS = hc0017250 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_CR_CDR_STATUS_OBS defines the configuration register1 of the voltage monitor sts_cfg_sec_mode      [1:0]          secondary_mode s                                                               for pri_mode = 2'b00 should be set to 2'b00s                                                               for pri_mode = 2'b01 should be set to 2'b00s                                                               for pri_mode = 2'b10s                                                                        2'b00 - signature direct mode                                      = 12'hB32s                                                                        2'b01 - signature inverted direct mode                   = 12'h4CDs                                                                        2'b10 - signature conversion mode                           = 12'hB32s                                                                        2'b10 - signature inverted conversion mode         = 12'h4CDsts_cfg_pri_mode      [3:2]          primary_modes                                                               2'b00 - temperature measurement modes                                                               2'b01 - read status modes                                                               2'b10 - read signature modes                                                               2'b11 - undefinedsts_cfg_ser_mode     [4]               defines the output formats                                                                1'b0 - parallel mode s                                                                1'b1 - serial mode - MSb firststs_cfg_resolution  [7:5]            defines the voltage monitor data out resolutions                                                                3'b000 - 12-bit resolutions                                                                3'b001 - 10-bit resolutions                                                                3'b010 - 8-bit resolutions                                                                3'b011 - not alloweds                                                                3'b1xx - not allowedsreserved                         [23:8]sMagic_number             [27:24]              Default value – identical for all registerssParity                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_1 = hc0017250 1 15 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_1 defines the configuration register1 of the voltage monitor sts_cfg_sec_mode      [1:0]          secondary_mode s                                                               for pri_mode = 2'b00 should be set to 2'b00s                                                               for pri_mode = 2'b01 should be set to 2'b00s                                                               for pri_mode = 2'b10s                                                                        2'b00 - signature direct mode                                      = 12'hB32s                                                                        2'b01 - signature inverted direct mode                   = 12'h4CDs                                                                        2'b10 - signature conversion mode                           = 12'hB32s                                                                        2'b10 - signature inverted conversion mode         = 12'h4CDsts_cfg_pri_mode      [3:2]          primary_modes                                                               2'b00 - temperature measurement modes                                                               2'b01 - read status modes                                                               2'b10 - read signature modes                                                               2'b11 - undefinedsts_cfg_ser_mode     [4]               defines the output formats                                                                1'b0 - parallel mode s                                                                1'b1 - serial mode - MSb firststs_cfg_resolution  [7:5]            defines the voltage monitor data out resolutions                                                                3'b000 - 12-bit resolutions                                                                3'b001 - 10-bit resolutions                                                                3'b010 - 8-bit resolutions                                                                3'b011 - not alloweds                                                                3'b1xx - not allowedsreserved                         [23:8]sMagic_number             [27:24]              Default value – identical for all registerssParity                             [31:28]              Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_R_LP_0_reg Address hc0017940
_csi_tadp_tx_0_CORE_DIG_CLANE_1_R_LP_0_reg = 3221322048 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LP_0_HSACTIVERX = hc0017940 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LP_0_HSACTIVERX defines the temperature_Sensor clocksts_clk_up_width        [9:0]            - defines the length off high level of ts_clksreserved                      [11:10]sts_clk_down_width   [21:12]       - defines the length off low level of ts_clksreserve                        [23:22]sMagic_number          [27:24]              Default value – identical for all registerssParity                          [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_LP_0_RXHSRQST = hc0017940 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LP_0_RXHSRQST defines the temperature_Sensor clocksts_clk_up_width        [9:0]            - defines the length off high level of ts_clksreserved                      [11:10]sts_clk_down_width   [21:12]       - defines the length off low level of ts_clksreserve                        [23:22]sMagic_number          [27:24]              Default value – identical for all registerssParity                          [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_2 = hc0017940 2 14 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_2 defines the temperature_Sensor clocksts_clk_up_width        [9:0]            - defines the length off high level of ts_clksreserved                      [11:10]sts_clk_down_width   [21:12]       - defines the length off low level of ts_clksreserve                        [23:22]sMagic_number          [27:24]              Default value – identical for all registerssParity                          [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_R_LP_1_reg Address hc0017944
_csi_tadp_tx_0_CORE_DIG_CLANE_1_R_LP_1_reg = 3221322052 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LP_1_STATE_BTA = hc0017944 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_LP_1_STATE_BTA defines the wait period for analog power-ypsts_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_LP_1_STATE_LPRX = hc0017944 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_LP_1_STATE_LPRX defines the wait period for analog power-ypsts_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_LP_1_STATE_LPTX = hc0017944 8 5 h0 RO HEX
; Desc_csi_tadp_tx_0_LP_1_STATE_LPTX defines the wait period for analog power-ypsts_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_13 = hc0017944 13 3 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 defines the wait period for analog power-ypsts_analog_pu_clock_num        [7:0]  - defines the length of the analog power-up  periodsreserve                                        [23:8]sMagic_number                          [27:24]              Default value – identical for all registerssParity                                          [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_R_RX_0_reg Address hc0017a40
_csi_tadp_tx_0_CORE_DIG_CLANE_1_R_RX_0_reg = 3221322304 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_CDR_CALDONE = hc0017a40 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_CDR_CALDONE time gap between adjacent measurementssmeasurement period     [22:0]              Defines number of clocks periods between temperature measurement – the actual period depend on the selected s                                                                          clock frequencysuse_mpr                               [23]                 Use measurement period register s                                                                          1’b0 – measurements will be done at the maximum possible rate – once one measurement is done (on both TS) and values are sampled, a new measurement will be initiateds                                                                          1’b1 – measurement will be done at the rate specified by the measurement period fields                                                                          For example - measurement period = 23’h7D00 means 32000 / 2Mhz = 16 msecsMagic_number                  [27:24]           Default value – identical for all registerssParity                                     [31:28]           Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_1 = hc0017a40 1 15 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_1 time gap between adjacent measurementssmeasurement period     [22:0]              Defines number of clocks periods between temperature measurement – the actual period depend on the selected s                                                                          clock frequencysuse_mpr                               [23]                 Use measurement period register s                                                                          1’b0 – measurements will be done at the maximum possible rate – once one measurement is done (on both TS) and values are sampled, a new measurement will be initiateds                                                                          1’b1 – measurement will be done at the rate specified by the measurement period fields                                                                          For example - measurement period = 23’h7D00 means 32000 / 2Mhz = 16 msecsMagic_number                  [27:24]           Default value – identical for all registerssParity                                     [31:28]           Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_R_RX_1_reg Address hc0017a44
_csi_tadp_tx_0_CORE_DIG_CLANE_1_R_RX_1_reg = 3221322308 0 32 b00000000000000001111111111111111 RO
csi_tadp_tx_0_COARSE_DIF_TARGET = hc0017a44 0 16 hffff RO HEX
; Desc_csi_tadp_tx_0_COARSE_DIF_TARGET measurement timeout          [15:0]            Defines the waiting time from RUN activation until RDY is received – if the timeout period expires an error flag iss                                                                                 raised.s                                                                                The timeout counter resolution is the TS lock period.sReserved                                      [23:16]sMagic_number                          [27:24]         Default value – identical for all registerssParity                                             [31:28]         Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_R_TX_0_reg Address hc0017a48
_csi_tadp_tx_0_CORE_DIG_CLANE_1_R_TX_0_reg = 3221322312 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_STATE_CHSTX = hc0017a48 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_STATE_CHSTX short_self_test_high_limit1       [11:0]                  When manual short self-test is selected this value is used as high_limit1sshort_self_test_low_limit1        [23:12]                When manual short self-test is selected this value is used as low_limit1sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 
csi_tadp_tx_0_STATE_DCO_CHSTX = hc0017a48 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_STATE_DCO_CHSTX short_self_test_high_limit1       [11:0]                  When manual short self-test is selected this value is used as high_limit1sshort_self_test_low_limit1        [23:12]                When manual short self-test is selected this value is used as low_limit1sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_8 = hc0017a48 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 short_self_test_high_limit1       [11:0]                  When manual short self-test is selected this value is used as high_limit1sshort_self_test_low_limit1        [23:12]                When manual short self-test is selected this value is used as low_limit1sMagic_number                                 [27:24]                Default value – identical for all registerssParity                                                    [31:28]                Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_R_RX_2_reg Address hc0017a4c
_csi_tadp_tx_0_CORE_DIG_CLANE_1_R_RX_2_reg = 3221322316 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_CR_COARSE_VALUE_OBS = hc0017a4c 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_CR_COARSE_VALUE_OBS ts_short_self_test_high_limit2s         [11:0]                When manual short self-test is selected this value is used as high_limit2sts_short_self_test_low_limit2           [23:12]             When manual short self-test is selected this value is used as low_limit2sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_R_RX_3_reg Address hc0017a50
_csi_tadp_tx_0_CORE_DIG_CLANE_1_R_RX_3_reg = 3221322320 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_CR_CDR_STATUS_OBS = hc0017a50 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_CR_CDR_STATUS_OBS ts_short_self_test_high_limit3s         [11:0]                When manual short self-test is selected this value is used as high_limit3sts_short_self_test_low_limit3           [23:12]             When manual short self-test is selected this value is used as low_limit3sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_1 = hc0017a50 1 15 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_1 ts_short_self_test_high_limit3s         [11:0]                When manual short self-test is selected this value is used as high_limit3sts_short_self_test_low_limit3           [23:12]             When manual short self-test is selected this value is used as low_limit3sMagic_number                           [27:24]             Default value – identical for all registerssParity                                             [31:28]              Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_R_LP_0_reg Address hc0018140
_csi_tadp_tx_0_CORE_DIG_CLANE_2_R_LP_0_reg = 3221324096 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LP_0_HSACTIVERX = hc0018140 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LP_0_HSACTIVERX ts_short_self_test_forced_ts0_value1             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssts_short_self_test_forced_ts1_value1             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
csi_tadp_tx_0_LP_0_RXHSRQST = hc0018140 1 1 h0 RO BIN
; Desc_csi_tadp_tx_0_LP_0_RXHSRQST ts_short_self_test_forced_ts0_value1             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssts_short_self_test_forced_ts1_value1             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_2 = hc0018140 2 14 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_2 ts_short_self_test_forced_ts0_value1             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssts_short_self_test_forced_ts1_value1             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_R_LP_1_reg Address hc0018144
_csi_tadp_tx_0_CORE_DIG_CLANE_2_R_LP_1_reg = 3221324100 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_LP_1_STATE_BTA = hc0018144 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_LP_1_STATE_BTA ts_short_self_test_forced_ts0_value2             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssts_short_self_test_forced_ts1_value2             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
csi_tadp_tx_0_LP_1_STATE_LPRX = hc0018144 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_LP_1_STATE_LPRX ts_short_self_test_forced_ts0_value2             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssts_short_self_test_forced_ts1_value2             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
csi_tadp_tx_0_LP_1_STATE_LPTX = hc0018144 8 5 h0 RO HEX
; Desc_csi_tadp_tx_0_LP_1_STATE_LPTX ts_short_self_test_forced_ts0_value2             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssts_short_self_test_forced_ts1_value2             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_13 = hc0018144 13 3 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 ts_short_self_test_forced_ts0_value2             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssts_short_self_test_forced_ts1_value2             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_R_RX_0_reg Address hc0018240
_csi_tadp_tx_0_CORE_DIG_CLANE_2_R_RX_0_reg = 3221324352 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_O_CDR_CALDONE = hc0018240 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_O_CDR_CALDONE ts_short_self_test_forced_ts0_value3             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssts_short_self_test_forced_ts1_value3             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_1 = hc0018240 1 15 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_1 ts_short_self_test_forced_ts0_value3             [11:0]               When manual short self-test is selected this value is used for comparison against above defined limitssts_short_self_test_forced_ts1_value3             [23:12]            When manual short self-test is selected this value is used for comparison against above defined limitssMagic_number                                    [27:24]             Default value – identical for all registerssParity                                                       [31:28]             Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_R_RX_1_reg Address hc0018244
_csi_tadp_tx_0_CORE_DIG_CLANE_2_R_RX_1_reg = 3221324356 0 32 b00000000000000001111111111111111 RO
csi_tadp_tx_0_COARSE_DIF_TARGET = hc0018244 0 16 hffff RO HEX
; Desc_csi_tadp_tx_0_COARSE_DIF_TARGET ts_short_self_test1_allowed_diff1               [11:0]                      When manual short self-test is selected this value is used for comparison against the obtained difference between the forced valuessts_short_self_test1_allowed_diff2               [23:12]                    When manual short self-test is selected this value is used for comparison against the obtained difference between the forced valuessMagic_number                                        [27:24]                   Default value – identical for all registerssParity                                                           [31:28]                  Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_R_TX_0_reg Address hc0018248
_csi_tadp_tx_0_CORE_DIG_CLANE_2_R_TX_0_reg = 3221324360 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_STATE_CHSTX = hc0018248 0 4 h0 RO HEX
; Desc_csi_tadp_tx_0_STATE_CHSTX ts_short_self_test2_allowed_diff1               [11:0]                      When manual short self-test is selected this value is used for comparison against the obtained difference between the forced valuessts_short_self_test2_allowed_diff2               [23:12]                    When manual short self-test is selected this value is used for comparison against the obtained differencesMagic_number                                        [27:24]                   Default value – identical for all registerssParity                                                           [31:28]                  Parity calculation on bits[27:0] 
csi_tadp_tx_0_STATE_DCO_CHSTX = hc0018248 4 4 h0 RO HEX
; Desc_csi_tadp_tx_0_STATE_DCO_CHSTX ts_short_self_test2_allowed_diff1               [11:0]                      When manual short self-test is selected this value is used for comparison against the obtained difference between the forced valuessts_short_self_test2_allowed_diff2               [23:12]                    When manual short self-test is selected this value is used for comparison against the obtained differencesMagic_number                                        [27:24]                   Default value – identical for all registerssParity                                                           [31:28]                  Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_8 = hc0018248 8 8 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 ts_short_self_test2_allowed_diff1               [11:0]                      When manual short self-test is selected this value is used for comparison against the obtained difference between the forced valuessts_short_self_test2_allowed_diff2               [23:12]                    When manual short self-test is selected this value is used for comparison against the obtained differencesMagic_number                                        [27:24]                   Default value – identical for all registerssParity                                                           [31:28]                  Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_R_RX_2_reg Address hc001824c
_csi_tadp_tx_0_CORE_DIG_CLANE_2_R_RX_2_reg = 3221324364 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_CR_COARSE_VALUE_OBS = hc001824c 0 16 h0 RO HEX
; Desc_csi_tadp_tx_0_CR_COARSE_VALUE_OBS ts_short_self_test_DS_low_limit_high_value                [11:0]                 When manual short self-test is selected this value is used as high_limit against the high value ofs                                                                                                                         direct signature from TS sts_short_self_test_DS_low_limit_low_value                 [23:12]              When manual short self-test is selected this value is used as low_limit against the low value ofs                                                                                                                         direct signature from TSsMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_R_RX_3_reg Address hc0018250
_csi_tadp_tx_0_CORE_DIG_CLANE_2_R_RX_3_reg = 3221324368 0 32 b00000000000000000000000000000000 RO
csi_tadp_tx_0_CR_CDR_STATUS_OBS = hc0018250 0 1 h0 RO BIN
; Desc_csi_tadp_tx_0_CR_CDR_STATUS_OBS ts_short_self_test_DS_high_limit_high_value               [11:0]                 When manual short self-test is selected this value is used as high_limit against the high value ofs                                                                                                                         direct signature from TS sts_short_self_test_DS_high_limit_low_value                [23:12]               When manual short self-test is selected this value is used as low_limit against the low value ofs                                                                                                                         direct signature from TSsMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                 [31:28]               Parity calculation on bits[27:0] 
csi_tadp_tx_0_RESERVED_15_1 = hc0018250 1 15 h0 RO HEX
; Desc_csi_tadp_tx_0_RESERVED_15_1 ts_short_self_test_DS_high_limit_high_value               [11:0]                 When manual short self-test is selected this value is used as high_limit against the high value ofs                                                                                                                         direct signature from TS sts_short_self_test_DS_high_limit_low_value                [23:12]               When manual short self-test is selected this value is used as low_limit against the low value ofs                                                                                                                         direct signature from TSsMagic_number                                                              [27:24]               Default value – identical for all registerssParity                                                                                 [31:28]               Parity calculation on bits[27:0] 



; REGISTER csi_tadp_tx_0_meron_src_csi_swreset_n_reg Address hc0000008
_csi_tadp_tx_0_meron_src_csi_swreset_n_reg = 3221225480 0 9 b00000000000000000000000000000000 RW
csi_tadp_tx_0_cfg_sys_swreset_n = hc0000008 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cfg_sys_swreset_n interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 11 to 15
csi_tadp_tx_0_cfg_host_ctrl_fpclk_swreset_n = hc0000008 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cfg_host_ctrl_fpclk_swreset_n interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 11 to 15
csi_tadp_tx_0_cfg_regclk_swreset_n = hc0000008 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cfg_regclk_swreset_n interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 11 to 15
csi_tadp_tx_0_cfg_cdphy_pclk_swreset_n = hc0000008 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cfg_cdphy_pclk_swreset_n interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 11 to 15
csi_tadp_tx_0_cfg_idi_swreset_n = hc0000008 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cfg_idi_swreset_n interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 11 to 15
csi_tadp_tx_0_cfg_smif_swreset_n = hc0000008 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cfg_smif_swreset_n interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 11 to 15
csi_tadp_tx_0_cfg_cnt_swreset_n = hc0000008 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cfg_cnt_swreset_n interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 11 to 15
csi_tadp_tx_0_cfg_postclk_logic_swreset_n = hc0000008 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cfg_postclk_logic_swreset_n interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 11 to 15
csi_tadp_tx_0_cfg_cdphy_cfgclk_swreset_n = hc0000008 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cfg_cdphy_cfgclk_swreset_n interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 11 to 15



; REGISTER csi_tadp_tx_0_meron_src_csi_clken_reg Address hc000000c
_csi_tadp_tx_0_meron_src_csi_clken_reg = 3221225484 0 17 b00000000000000001000000000111111 RW
csi_tadp_tx_0_cfg_sys_clken = hc000000c 0 1 h1 RW BIN
; Desc_csi_tadp_tx_0_cfg_sys_clken interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 36 to 40
csi_tadp_tx_0_cfg_reg_clken = hc000000c 1 1 h1 RW BIN
; Desc_csi_tadp_tx_0_cfg_reg_clken interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 36 to 40
csi_tadp_tx_0_cfg_cdphy_pclken = hc000000c 2 1 h1 RW BIN
; Desc_csi_tadp_tx_0_cfg_cdphy_pclken interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 36 to 40
csi_tadp_tx_0_cfg_idi_clken = hc000000c 3 1 h1 RW BIN
; Desc_csi_tadp_tx_0_cfg_idi_clken interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 36 to 40
csi_tadp_tx_0_cfg_cnt_clken = hc000000c 4 1 h1 RW BIN
; Desc_csi_tadp_tx_0_cfg_cnt_clken interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 36 to 40
csi_tadp_tx_0_cfg_smifclken = hc000000c 5 1 h1 RW BIN
; Desc_csi_tadp_tx_0_cfg_smifclken interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 36 to 40
csi_tadp_tx_0_cfg_host_pclk_gen_ovrwrite = hc000000c 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cfg_host_pclk_gen_ovrwrite interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 36 to 40
csi_tadp_tx_0_cfg_ppipg_sysclk_divratio = hc000000c 7 8 h0 RW HEX
; Desc_csi_tadp_tx_0_cfg_ppipg_sysclk_divratio interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 36 to 40
csi_tadp_tx_0_cfg_ppipg_sysclken = hc000000c 15 1 h1 RW BIN
; Desc_csi_tadp_tx_0_cfg_ppipg_sysclken interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 36 to 40
csi_tadp_tx_0_cfg_txclkesc_clken = hc000000c 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cfg_txclkesc_clken interrupt controller 0 - interrupts mapping: 63 inputs to 63 outputs by 63 mux of 63 to 1.sdeines mapping of interrupts in to outputs 36 to 40



; REGISTER csi_tadp_tx_0_cfg_hostctrl_reg Address hc0000104
_csi_tadp_tx_0_cfg_hostctrl_reg = 3221225732 0 2 b00000000000000000000000000000010 RW
csi_tadp_tx_0_cfg_vcx_legacy = hc0000104 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cfg_vcx_legacy 
csi_tadp_tx_0_cfg_crcerr = hc0000104 1 1 h1 RW BIN
; Desc_csi_tadp_tx_0_cfg_crcerr 



; REGISTER csi_tadp_tx_0_cfg_csipkt_typ Address hc0000108
_csi_tadp_tx_0_cfg_csipkt_typ = 3221225736 0 17 b00000000000000000000111010011010 RW
csi_tadp_tx_0_cfg_csipkt_type = hc0000108 1 4 hd RW HEX
; Desc_csi_tadp_tx_0_cfg_csipkt_type 
csi_tadp_tx_0_cfg_csipkt_qos = hc0000108 5 2 h0 RW HEX
; Desc_csi_tadp_tx_0_cfg_csipkt_qos 
csi_tadp_tx_0_cfg_csipkt_prio = hc0000108 7 2 h1 RW HEX
; Desc_csi_tadp_tx_0_cfg_csipkt_prio 
csi_tadp_tx_0_cfg_csipkt_tadd = hc0000108 9 8 h7 RW HEX
; Desc_csi_tadp_tx_0_cfg_csipkt_tadd 



; REGISTER csi_tadp_tx_0_cfg_csi_eph0 Address hc000010c
_csi_tadp_tx_0_cfg_csi_eph0 = 3221225740 0 16 b00000000000000000101000000000001 RW
csi_tadp_tx_0_cfg_eph0 = hc000010c 0 16 h5001 RW HEX
; Desc_csi_tadp_tx_0_cfg_eph0 
csi_tadp_tx_0_cfg_eph0_mc = hc000010c 0 1 h1 RW BIN
csi_tadp_tx_0_cfg_eph0_resv = hc000010c 1 11 h0 RW HEX
csi_tadp_tx_0_cfg_eph0_sepid = hc000010c 12 1 h1 RW BIN
csi_tadp_tx_0_cfg_eph0_crc32 = hc000010c 13 2 h2 RW HEX
csi_tadp_tx_0_cfg_eph0_ephfn = hc000010c 15 1 h0 RW BIN



; REGISTER csi_tadp_tx_0_cfg_idi2apkt_flush Address hc0000110
_csi_tadp_tx_0_cfg_idi2apkt_flush = 3221225744 0 1 b00000000000000000000000000000000 RW
csi_tadp_tx_0_idipkt_fifo_flush = hc0000110 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_idipkt_fifo_flush 



; REGISTER csi_tadp_tx_0_cfg_apktgen_en Address hc0000114
_csi_tadp_tx_0_cfg_apktgen_en = 3221225748 0 1 b00000000000000000000000000000000 RW
csi_tadp_tx_0_apktgen_enable = hc0000114 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_apktgen_enable 



; REGISTER csi_tadp_tx_0_idipkt_fifo_mem Address hc0000118
_csi_tadp_tx_0_idipkt_fifo_mem = 3221225752 0 3 b00000000000000000000000000000000 RW
csi_tadp_tx_0_idipkt_SLP = hc0000118 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_idipkt_SLP 
csi_tadp_tx_0_idipkt_DSLP = hc0000118 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_idipkt_DSLP 
csi_tadp_tx_0_idipkt_SD = hc0000118 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_idipkt_SD 



; REGISTER csi_tadp_tx_0_tb_sel_reg Address hc000011c
_csi_tadp_tx_0_tb_sel_reg = 3221225756 0 25 b00000000000000000000000000000000 RW
csi_tadp_tx_0_tb_sys_32lsb_sel = hc000011c 0 4 h0 RW HEX
; Desc_csi_tadp_tx_0_tb_sys_32lsb_sel 
csi_tadp_tx_0_tb_sys_32mid_sel = hc000011c 4 4 h0 RW HEX
; Desc_csi_tadp_tx_0_tb_sys_32mid_sel 
csi_tadp_tx_0_tb_sys_32msb_sel = hc000011c 8 4 h0 RW HEX
; Desc_csi_tadp_tx_0_tb_sys_32msb_sel 
csi_tadp_tx_0_tb_idi_32lsb_sel = hc000011c 12 4 h0 RW HEX
; Desc_csi_tadp_tx_0_tb_idi_32lsb_sel 
csi_tadp_tx_0_tb_idi_32mid_sel = hc000011c 16 4 h0 RW HEX
; Desc_csi_tadp_tx_0_tb_idi_32mid_sel 
csi_tadp_tx_0_tb_idi_32msb_sel = hc000011c 20 4 h0 RW HEX
; Desc_csi_tadp_tx_0_tb_idi_32msb_sel 
csi_tadp_tx_0_tb_dtb_sel = hc000011c 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_tb_dtb_sel 



; REGISTER csi_tadp_tx_0_tb_apb_sel_reg Address hc0000120
_csi_tadp_tx_0_tb_apb_sel_reg = 3221225760 0 6 b00000000000000000000000000000000 RW
csi_tadp_tx_0_tb_apb_32lsb_sel = hc0000120 0 2 h0 RW HEX
; Desc_csi_tadp_tx_0_tb_apb_32lsb_sel 
csi_tadp_tx_0_tb_apb_32mid_sel = hc0000120 2 2 h0 RW HEX
; Desc_csi_tadp_tx_0_tb_apb_32mid_sel 
csi_tadp_tx_0_tb_apb_32msb_sel = hc0000120 4 2 h0 RW HEX
; Desc_csi_tadp_tx_0_tb_apb_32msb_sel 



; REGISTER csi_tadp_tx_0_int_src_csi_adp_mask_reg Address hc0000140
_csi_tadp_tx_0_int_src_csi_adp_mask_reg = 3221225792 0 20 b00000000000000000000000000000000 RW
csi_tadp_tx_0_int_src_csi_adp_mask = hc0000140 0 20 h0 RW HEX
; Desc_csi_tadp_tx_0_int_src_csi_adp_mask Enable TX lane



; REGISTER csi_tadp_tx_0_cfg_gnr_clk_mux_sel_reg Address hc0000154
_csi_tadp_tx_0_cfg_gnr_clk_mux_sel_reg = 3221225812 0 4 b00000000000000000000000000000000 RW
csi_tadp_tx_0_cfg_gnr_clk_mux_sel = hc0000154 0 4 h0 RW HEX
; Desc_csi_tadp_tx_0_cfg_gnr_clk_mux_sel select tswsoc output in the tswsoc chain



; REGISTER csi_tadp_tx_0_cfg_gnr_smif_wait_reg Address hc0000170
_csi_tadp_tx_0_cfg_gnr_smif_wait_reg = 3221225840 0 32 b11110101000000000000000000001010 RW
csi_tadp_tx_0_cfg_gnr_smif_wait = hc0000170 0 32 hf500000a RW HEX
; Desc_csi_tadp_tx_0_cfg_gnr_smif_wait HLIC Maximum length of Rx data Buffer in octets.sAll Rx buffers are filled up to this value, unless End of packet or Rx error condition occurred. All Rx buffers should be at least as large as this value. This value cannot be changed on line while the DMA is operating. sThe value should be between 64 to 2048 and an integral power of 2.
csi_tadp_tx_0_cfg_gnr_smif_wait_dat = hc0000170 0 24 ha RW HEX
csi_tadp_tx_0_smif_wait_magic_num = hc0000170 24 4 h5 RW HEX
csi_tadp_tx_0_smif_wait_parity = hc0000170 28 4 hf RW HEX



; REGISTER csi_tadp_tx_0_cfg_fusa_en_reg Address hc0000174
_csi_tadp_tx_0_cfg_fusa_en_reg = 3221225844 0 32 b11010101000000000000000001111111 RW
csi_tadp_tx_0_cfg_fusa_en = hc0000174 0 32 hd500007f RW HEX
; Desc_csi_tadp_tx_0_cfg_fusa_en EMAC Maximum length of Rx data Buffer in octets.sAll Rx buffers are filled up to this value, unless End of packet or Rx error condition occurred. All Rx buffers should be at least as large as this value. This value cannot be changed on line while the DMA is operating. sThe value should be between 64 to 2048 and an integral power of 2.
csi_tadp_tx_0_cfg_fusa_idiparity_en = hc0000174 0 1 h1 RW BIN
csi_tadp_tx_0_cfg_fusa_idiasyncfifo_en = hc0000174 1 1 h1 RW BIN
csi_tadp_tx_0_hostctrldiag_en = hc0000174 2 1 h1 RW BIN
csi_tadp_tx_0_cdphy_rx_parity_error = hc0000174 3 1 h1 RW BIN
csi_tadp_tx_0_cfg_fusa_crc16_en = hc0000174 4 1 h1 RW BIN
csi_tadp_tx_0_cfg_fusa_shortpld_en = hc0000174 5 1 h1 RW BIN
csi_tadp_tx_0_cfg_fusa_safetyreg_en = hc0000174 6 1 h1 RW BIN
csi_tadp_tx_0_cfg_fusa_reserve = hc0000174 7 17 h0 RW HEX
csi_tadp_tx_0_fusa_en_magic_num = hc0000174 24 4 h5 RW HEX
csi_tadp_tx_0_fusa_en_parity = hc0000174 28 4 hd RW HEX



; REGISTER csi_tadp_tx_0_cfg_fusa_conv_dt_en0_reg Address hc0000178
_csi_tadp_tx_0_cfg_fusa_conv_dt_en0_reg = 3221225848 0 32 b01010101000000000000000000000000 RW
csi_tadp_tx_0_cfg_fusa_conv_dt_en0 = hc0000178 0 32 h55000000 RW HEX
; Desc_csi_tadp_tx_0_cfg_fusa_conv_dt_en0 Pointer to the base address of port's  Tx BD ring
csi_tadp_tx_0_cfg_fusa_conv_dt_en_23_0 = hc0000178 0 24 h0 RW HEX
csi_tadp_tx_0_fusa_conv_dt_en0_magic_num = hc0000178 24 4 h5 RW HEX
csi_tadp_tx_0_fusa_conv_dt_en0_parity = hc0000178 28 4 h5 RW HEX



; REGISTER csi_tadp_tx_0_cfg_fusa_conv_dt_en1_reg Address hc000017c
_csi_tadp_tx_0_cfg_fusa_conv_dt_en1_reg = 3221225852 0 32 b01010101000000000000000000000000 RW
csi_tadp_tx_0_cfg_fusa_conv_dt_en1 = hc000017c 0 32 h55000000 RW HEX
; Desc_csi_tadp_tx_0_cfg_fusa_conv_dt_en1 Port enable for Tx direction (scratchpad to port)
csi_tadp_tx_0_cfg_fusa_conv_dt_en_47_24 = hc000017c 0 24 h0 RW HEX
csi_tadp_tx_0_fusa_conv_dt_en0_magic_num = hc000017c 24 4 h5 RW HEX
csi_tadp_tx_0_fusa_conv_dt_en0_parity = hc000017c 28 4 h5 RW HEX



; REGISTER csi_tadp_tx_0_cfg_fusa_conv_dt_en2_reg Address hc0000180
_csi_tadp_tx_0_cfg_fusa_conv_dt_en2_reg = 3221225856 0 32 b01010101000000000000000000000000 RW
csi_tadp_tx_0_cfg_fusa_conv_dt_en2 = hc0000180 0 32 h55000000 RW HEX
; Desc_csi_tadp_tx_0_cfg_fusa_conv_dt_en2 status register of port 0s[0] tx_err events[1] rxbd events[2] txbd events[3] rx_ove events[4] brif_timeout events[5] rx_timeout_cnt events[6] rx_pkt_cnt events[7] rx_oct_cnt events[10:8] tx_err_type info
csi_tadp_tx_0_cfg_fusa_conv_dt_en_63_48 = hc0000180 0 16 h0 RW HEX
csi_tadp_tx_0_fusa_conv_dt_en2_magic_num = hc0000180 24 4 h5 RW HEX
csi_tadp_tx_0_fusa_conv_dt_en2_parity = hc0000180 28 4 h5 RW HEX



; REGISTER csi_tadp_tx_0_cfg_fusa_conv_dt_map0_reg Address hc0000184
_csi_tadp_tx_0_cfg_fusa_conv_dt_map0_reg = 3221225860 0 32 b01010101000000000000000000000000 RW
csi_tadp_tx_0_cfg_fusa_conv_dt_map0 = hc0000184 0 32 h55000000 RW HEX
; Desc_csi_tadp_tx_0_cfg_fusa_conv_dt_map0 Pointer to the base address of port's Rx BD ring
csi_tadp_tx_0_cfg_fusa_conv_dt_map0_3_0 = hc0000184 0 24 h0 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map0_magic_num = hc0000184 24 4 h5 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map0_parity = hc0000184 28 4 h5 RW HEX



; REGISTER csi_tadp_tx_0_cfg_fusa_conv_dt_map1_reg Address hc0000188
_csi_tadp_tx_0_cfg_fusa_conv_dt_map1_reg = 3221225864 0 32 b01010101000000000000000000000000 RW
csi_tadp_tx_0_cfg_fusa_conv_dt_map1 = hc0000188 0 32 h55000000 RW HEX
; Desc_csi_tadp_tx_0_cfg_fusa_conv_dt_map1 Port enable for Tx direction (scratchpad to port)
csi_tadp_tx_0_cfg_fusa_conv_dt_map1_7_4 = hc0000188 0 24 h0 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map1_magic_num = hc0000188 24 4 h5 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map1_parity = hc0000188 28 4 h5 RW HEX



; REGISTER csi_tadp_tx_0_cfg_fusa_conv_dt_map2_reg Address hc000018c
_csi_tadp_tx_0_cfg_fusa_conv_dt_map2_reg = 3221225868 0 32 b01010101000000000000000000000000 RW
csi_tadp_tx_0_cfg_fusa_conv_dt_map2 = hc000018c 0 32 h55000000 RW HEX
; Desc_csi_tadp_tx_0_cfg_fusa_conv_dt_map2 Pointer to the base address of port's Rx BD ring
csi_tadp_tx_0_cfg_fusa_conv_dt_map2_11_8 = hc000018c 0 24 h0 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map2_magic_num = hc000018c 24 4 h5 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map2_parity = hc000018c 28 4 h5 RW HEX



; REGISTER csi_tadp_tx_0_cfg_fusa_conv_dt_map3_reg Address hc0000190
_csi_tadp_tx_0_cfg_fusa_conv_dt_map3_reg = 3221225872 0 32 b01010101000000000000000000000000 RW
csi_tadp_tx_0_cfg_fusa_conv_dt_map3 = hc0000190 0 32 h55000000 RW HEX
; Desc_csi_tadp_tx_0_cfg_fusa_conv_dt_map3 
csi_tadp_tx_0_cfg_fusa_conv_dt_map3_15_12 = hc0000190 0 24 h0 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map3_magic_num = hc0000190 24 4 h5 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map3_parity = hc0000190 28 4 h5 RW HEX



; REGISTER csi_tadp_tx_0_cfg_fusa_conv_dt_map4_reg Address hc0000194
_csi_tadp_tx_0_cfg_fusa_conv_dt_map4_reg = 3221225876 0 32 b01010101000000000000000000000000 RW
csi_tadp_tx_0_cfg_fusa_conv_dt_map4 = hc0000194 0 32 h55000000 RW HEX
; Desc_csi_tadp_tx_0_cfg_fusa_conv_dt_map4 (former Active Low Program Enable, will be driven from pads)
csi_tadp_tx_0_cfg_fusa_conv_dt_map4_19_16 = hc0000194 0 24 h0 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map4_magic_num = hc0000194 24 4 h5 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map4_parity = hc0000194 28 4 h5 RW HEX



; REGISTER csi_tadp_tx_0_cfg_fusa_conv_dt_map5_reg Address hc0000198
_csi_tadp_tx_0_cfg_fusa_conv_dt_map5_reg = 3221225880 0 32 b01010101000000000000000000000000 RW
csi_tadp_tx_0_cfg_fusa_conv_dt_map5 = hc0000198 0 32 h55000000 RW HEX
; Desc_csi_tadp_tx_0_cfg_fusa_conv_dt_map5 0 = disable clock to SBPI bus
csi_tadp_tx_0_cfg_fusa_conv_dt_map5_23_20 = hc0000198 0 24 h0 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map5_magic_num = hc0000198 24 4 h5 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map5_parity = hc0000198 28 4 h5 RW HEX



; REGISTER csi_tadp_tx_0_cfg_fusa_conv_dt_map6_reg Address hc000019c
_csi_tadp_tx_0_cfg_fusa_conv_dt_map6_reg = 3221225884 0 32 b01010101000000000000000000000000 RW
csi_tadp_tx_0_cfg_fusa_conv_dt_map6 = hc000019c 0 32 h55000000 RW HEX
; Desc_csi_tadp_tx_0_cfg_fusa_conv_dt_map6 QRR output
csi_tadp_tx_0_cfg_fusa_conv_dt_map6_27_24 = hc000019c 0 24 h0 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map6_magic_num = hc000019c 24 4 h5 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map6_parity = hc000019c 28 4 h5 RW HEX



; REGISTER csi_tadp_tx_0_cfg_fusa_conv_dt_map7_reg Address hc00001a0
_csi_tadp_tx_0_cfg_fusa_conv_dt_map7_reg = 3221225888 0 32 b01010101000000000000000000000000 RW
csi_tadp_tx_0_cfg_fusa_conv_dt_map7 = hc00001a0 0 32 h55000000 RW HEX
; Desc_csi_tadp_tx_0_cfg_fusa_conv_dt_map7 width of CK in cycles (tRP - READ pulse width).  11.7ns - 1clk@50Mhz
csi_tadp_tx_0_cfg_fusa_conv_dt_map7_31_28 = hc00001a0 0 24 h0 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map_magic7_num = hc00001a0 24 4 h5 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map7_parity = hc00001a0 28 4 h5 RW HEX



; REGISTER csi_tadp_tx_0_cfg_fusa_conv_dt_map8_reg Address hc00001a4
_csi_tadp_tx_0_cfg_fusa_conv_dt_map8_reg = 3221225892 0 32 b01010101000000000000000000000000 RW
csi_tadp_tx_0_cfg_fusa_conv_dt_map8 = hc00001a4 0 32 h55000000 RW HEX
; Desc_csi_tadp_tx_0_cfg_fusa_conv_dt_map8 
csi_tadp_tx_0_cfg_fusa_conv_dt_map8_35_32 = hc00001a4 0 24 h0 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map8_magic_num = hc00001a4 24 4 h5 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map8_parity = hc00001a4 28 4 h5 RW HEX



; REGISTER csi_tadp_tx_0_cfg_fusa_conv_dt_map9_reg Address hc00001a8
_csi_tadp_tx_0_cfg_fusa_conv_dt_map9_reg = 3221225896 0 32 b01010101000000000000000000000000 RW
csi_tadp_tx_0_cfg_fusa_conv_dt_map9 = hc00001a8 0 32 h55000000 RW HEX
; Desc_csi_tadp_tx_0_cfg_fusa_conv_dt_map9 
csi_tadp_tx_0_cfg_fusa_conv_dt_map9_39_36 = hc00001a8 0 24 h0 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map9_magic_num = hc00001a8 24 4 h5 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map9_parity = hc00001a8 28 4 h5 RW HEX



; REGISTER csi_tadp_tx_0_cfg_fusa_conv_dt_map10_reg Address hc00001ac
_csi_tadp_tx_0_cfg_fusa_conv_dt_map10_reg = 3221225900 0 32 b01010101000000000000000000000000 RW
csi_tadp_tx_0_cfg_fusa_conv_dt_map10 = hc00001ac 0 32 h55000000 RW HEX
; Desc_csi_tadp_tx_0_cfg_fusa_conv_dt_map10 Indicates reference clock freq: 1 - 25Mhz, 0 - 125Mhz
csi_tadp_tx_0_cfg_fusa_conv_dt_map10_43_40 = hc00001ac 0 24 h0 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map10_magic_num = hc00001ac 24 4 h5 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map10_parity = hc00001ac 28 4 h5 RW HEX



; REGISTER csi_tadp_tx_0_cfg_fusa_conv_dt_map11_reg Address hc00001b0
_csi_tadp_tx_0_cfg_fusa_conv_dt_map11_reg = 3221225904 0 32 b01010101000000000000000000000000 RW
csi_tadp_tx_0_cfg_fusa_conv_dt_map11 = hc00001b0 0 32 h55000000 RW HEX
; Desc_csi_tadp_tx_0_cfg_fusa_conv_dt_map11 read timer 1 value, write set the value and start the timer 1
csi_tadp_tx_0_cfg_fusa_conv_dt_map11_44_41 = hc00001b0 0 24 h0 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map11_magic_num = hc00001b0 24 4 h5 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map11_parity = hc00001b0 28 4 h5 RW HEX



; REGISTER csi_tadp_tx_0_cfg_fusa_conv_dt_map12_reg Address hc00001b4
_csi_tadp_tx_0_cfg_fusa_conv_dt_map12_reg = 3221225908 0 32 b01010101000000000000000000000000 RW
csi_tadp_tx_0_cfg_fusa_conv_dt_map12 = hc00001b4 0 32 h55000000 RW HEX
; Desc_csi_tadp_tx_0_cfg_fusa_conv_dt_map12 read timer 3 value, write set the value and start the timer 3
csi_tadp_tx_0_cfg_fusa_conv_dt_map12_49_45 = hc00001b4 0 24 h0 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map12_magic_num = hc00001b4 24 4 h5 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map12_parity = hc00001b4 28 4 h5 RW HEX



; REGISTER csi_tadp_tx_0_cfg_fusa_conv_dt_map13_reg Address hc00001b8
_csi_tadp_tx_0_cfg_fusa_conv_dt_map13_reg = 3221225912 0 32 b01010101000000000000000000000000 RW
csi_tadp_tx_0_cfg_fusa_conv_dt_map13 = hc00001b8 0 32 h55000000 RW HEX
; Desc_csi_tadp_tx_0_cfg_fusa_conv_dt_map13 read timer 5 value, write set the value and start the timer 5
csi_tadp_tx_0_cfg_fusa_conv_dt_map13_53_50 = hc00001b8 0 24 h0 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map13_magic_num = hc00001b8 24 4 h5 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map13_parity = hc00001b8 28 4 h5 RW HEX



; REGISTER csi_tadp_tx_0_cfg_fusa_conv_dt_map14_reg Address hc00001bc
_csi_tadp_tx_0_cfg_fusa_conv_dt_map14_reg = 3221225916 0 32 b01010101000000000000000000000000 RW
csi_tadp_tx_0_cfg_fusa_conv_dt_map14 = hc00001bc 0 32 h55000000 RW HEX
; Desc_csi_tadp_tx_0_cfg_fusa_conv_dt_map14 read timer 6 value, write set the value and start the timer 6
csi_tadp_tx_0_cfg_fusa_conv_dt_map14_59_54 = hc00001bc 0 24 h0 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map14_magic_num = hc00001bc 24 4 h5 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map14_parity = hc00001bc 28 4 h5 RW HEX



; REGISTER csi_tadp_tx_0_cfg_fusa_conv_dt_map15_reg Address hc00001c0
_csi_tadp_tx_0_cfg_fusa_conv_dt_map15_reg = 3221225920 0 32 b01010101000000000000000000000000 RW
csi_tadp_tx_0_cfg_fusa_conv_dt_map15 = hc00001c0 0 32 h55000000 RW HEX
; Desc_csi_tadp_tx_0_cfg_fusa_conv_dt_map15 read timer 8 value, write set the value and start the timer 8
csi_tadp_tx_0_cfg_fusa_conv_dt_map15_63_60 = hc00001c0 0 24 h0 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map15_magic_num = hc00001c0 24 4 h5 RW HEX
csi_tadp_tx_0_fusa_conv_dt_map15_parity = hc00001c0 28 4 h5 RW HEX



; REGISTER csi_tadp_tx_0_cfg_fusa_apb_split_dis_reg Address hc00001c4
_csi_tadp_tx_0_cfg_fusa_apb_split_dis_reg = 3221225924 0 32 b01010101000000000000000000000000 RW
csi_tadp_tx_0_cfg_fusa_apb_split_dis = hc00001c4 0 32 h55000000 RW HEX
; Desc_csi_tadp_tx_0_cfg_fusa_apb_split_dis read timer 10 value, write set the value and start the timer 10
csi_tadp_tx_0_cfg_fusa_apb_split_dis_0 = hc00001c4 0 1 h0 RW BIN
csi_tadp_tx_0_fusa_apb_safereg_resrv = hc00001c4 1 23 h0 RW HEX
csi_tadp_tx_0_cfg_fusa_apb_split_dis_magic_num = hc00001c4 24 4 h5 RW HEX
csi_tadp_tx_0_cfg_fusa_apb_split_dis_parity = hc00001c4 28 4 h5 RW HEX



; REGISTER csi_tadp_tx_0_cfg_cdphy_rx_reg Address hc00001dc
_csi_tadp_tx_0_cfg_cdphy_rx_reg = 3221225948 0 20 b00000000000001010101000001111110 RW
csi_tadp_tx_0_cdphy_rx_cont_en = hc00001dc 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_cont_en read timer 12 value, write set the value and start the timer 12
csi_tadp_tx_0_cdphy_rx_enable_dck = hc00001dc 1 1 h1 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_enable_dck read timer 12 value, write set the value and start the timer 12
csi_tadp_tx_0_cdphy_rx_forcerxmode_0 = hc00001dc 2 1 h1 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_forcerxmode_0 read timer 12 value, write set the value and start the timer 12
csi_tadp_tx_0_cdphy_rx_forcerxmode_1 = hc00001dc 3 1 h1 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_forcerxmode_1 read timer 12 value, write set the value and start the timer 12
csi_tadp_tx_0_cdphy_rx_forcerxmode_2 = hc00001dc 4 1 h1 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_forcerxmode_2 read timer 12 value, write set the value and start the timer 12
csi_tadp_tx_0_cdphy_rx_forcerxmode_3 = hc00001dc 5 1 h1 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_forcerxmode_3 read timer 12 value, write set the value and start the timer 12
csi_tadp_tx_0_cdphy_rx_forcerxmode_dck = hc00001dc 6 1 h1 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_forcerxmode_dck read timer 12 value, write set the value and start the timer 12
csi_tadp_tx_0_cdphy_rx_forcetxstopmode_0 = hc00001dc 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_forcetxstopmode_0 read timer 12 value, write set the value and start the timer 12
csi_tadp_tx_0_cdphy_rx_forcetxstopmode_1 = hc00001dc 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_forcetxstopmode_1 read timer 12 value, write set the value and start the timer 12
csi_tadp_tx_0_cdphy_rx_forcetxstopmode_2 = hc00001dc 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_forcetxstopmode_2 read timer 12 value, write set the value and start the timer 12
csi_tadp_tx_0_cdphy_rx_forcetxstopmode_3 = hc00001dc 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_forcetxstopmode_3 read timer 12 value, write set the value and start the timer 12
csi_tadp_tx_0_cdphy_rx_forcetxstopmode_dck = hc00001dc 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_forcetxstopmode_dck read timer 12 value, write set the value and start the timer 12
csi_tadp_tx_0_cdphy_rx_rxdatawidthhs_0 = hc00001dc 12 2 h1 RW HEX
; Desc_csi_tadp_tx_0_cdphy_rx_rxdatawidthhs_0 read timer 12 value, write set the value and start the timer 12
csi_tadp_tx_0_cdphy_rx_rxdatawidthhs_1 = hc00001dc 14 2 h1 RW HEX
; Desc_csi_tadp_tx_0_cdphy_rx_rxdatawidthhs_1 read timer 12 value, write set the value and start the timer 12
csi_tadp_tx_0_cdphy_rx_rxdatawidthhs_2 = hc00001dc 16 2 h1 RW HEX
; Desc_csi_tadp_tx_0_cdphy_rx_rxdatawidthhs_2 read timer 12 value, write set the value and start the timer 12
csi_tadp_tx_0_cdphy_rx_rxdatawidthhs_3 = hc00001dc 18 2 h1 RW HEX
; Desc_csi_tadp_tx_0_cdphy_rx_rxdatawidthhs_3 read timer 12 value, write set the value and start the timer 12



; REGISTER csi_tadp_tx_0_cnt_freeze_vccnt_en_reg Address hc0000350
_csi_tadp_tx_0_cnt_freeze_vccnt_en_reg = 3221226320 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_cnt_freeze_vcx_shortcnt_en = hc0000350 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_cnt_freeze_vcx_shortcnt_en 
csi_tadp_tx_0_cnt_freeze_vcx_longcnt_en = hc0000350 16 16 h0 RW HEX
; Desc_csi_tadp_tx_0_cnt_freeze_vcx_longcnt_en 



; REGISTER csi_tadp_tx_0_cnt_freeze_statcnt_en_reg Address hc0000354
_csi_tadp_tx_0_cnt_freeze_statcnt_en_reg = 3221226324 0 8 b00000000000000000000000000000000 RW
csi_tadp_tx_0_cnt_freeze_asyncmem_errcnt_en = hc0000354 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cnt_freeze_asyncmem_errcnt_en 
csi_tadp_tx_0_cnt_freeze_idipar_errcnt_en = hc0000354 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cnt_freeze_idipar_errcnt_en 
csi_tadp_tx_0_cnt_freeze_crc16_errcnt_en = hc0000354 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cnt_freeze_crc16_errcnt_en 
csi_tadp_tx_0_cnt_freeze_ovf_errcnt_en = hc0000354 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cnt_freeze_ovf_errcnt_en 
csi_tadp_tx_0_cnt_freeze_apkt_tok_en = hc0000354 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cnt_freeze_apkt_tok_en 
csi_tadp_tx_0_cnt_freeze_pktgen_nordy_en = hc0000354 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cnt_freeze_pktgen_nordy_en 
csi_tadp_tx_0_cnt_freeze_max_pktsize_en = hc0000354 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cnt_freeze_max_pktsize_en 
csi_tadp_tx_0_cnt_freeze_short_pld_en = hc0000354 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cnt_freeze_short_pld_en 



; REGISTER csi_tadp_tx_0_post_counter_min_intergap_reg Address hc00004c4
_csi_tadp_tx_0_post_counter_min_intergap_reg = 3221226692 0 20 b00000000000000000010010000100001 RW
csi_tadp_tx_0_post_counter_min = hc00004c4 0 10 h21 RW HEX
; Desc_csi_tadp_tx_0_post_counter_min masks the mem_protection_int, this interrupt is masked by defalut
csi_tadp_tx_0_intergap_pkt_min = hc00004c4 10 10 h9 RW HEX
; Desc_csi_tadp_tx_0_intergap_pkt_min masks the mem_protection_int, this interrupt is masked by defalut



; REGISTER csi_tadp_tx_0_max_pkt_size_cnt_limit_reg Address hc00004dc
_csi_tadp_tx_0_max_pkt_size_cnt_limit_reg = 3221226716 0 16 b00000000000000001111000000000000 RW
csi_tadp_tx_0_max_pkt_size_cnt_limit = hc00004dc 0 16 hf000 RW HEX
; Desc_csi_tadp_tx_0_max_pkt_size_cnt_limit each bit represents the corresponding instance  of ROM that got an accsess while in sleep mode



; REGISTER csi_tadp_tx_0_cdphy_rx_ctrl_input0_reg Address hc0000510
_csi_tadp_tx_0_cdphy_rx_ctrl_input0_reg = 3221226768 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_cdphy_rx_txtriggeresc_0 = hc0000510 0 4 h0 RW HEX
; Desc_csi_tadp_tx_0_cdphy_rx_txtriggeresc_0 mips access to read from OTP
csi_tadp_tx_0_cdphy_rx_txtriggeresc_1 = hc0000510 4 4 h0 RW HEX
; Desc_csi_tadp_tx_0_cdphy_rx_txtriggeresc_1 mips access to read from OTP
csi_tadp_tx_0_cdphy_rx_txtriggeresc_2 = hc0000510 8 4 h0 RW HEX
; Desc_csi_tadp_tx_0_cdphy_rx_txtriggeresc_2 mips access to read from OTP
csi_tadp_tx_0_cdphy_rx_txtriggeresc_3 = hc0000510 12 4 h0 RW HEX
; Desc_csi_tadp_tx_0_cdphy_rx_txtriggeresc_3 mips access to read from OTP
csi_tadp_tx_0_cdphy_rx_txulpsesc_0 = hc0000510 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_txulpsesc_0 mips access to read from OTP
csi_tadp_tx_0_cdphy_rx_txulpsesc_1 = hc0000510 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_txulpsesc_1 mips access to read from OTP
csi_tadp_tx_0_cdphy_rx_txulpsesc_2 = hc0000510 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_txulpsesc_2 mips access to read from OTP
csi_tadp_tx_0_cdphy_rx_txulpsesc_3 = hc0000510 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_txulpsesc_3 mips access to read from OTP
csi_tadp_tx_0_cdphy_rx_txvalidesc_0 = hc0000510 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_txvalidesc_0 mips access to read from OTP
csi_tadp_tx_0_cdphy_rx_txvalidesc_1 = hc0000510 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_txvalidesc_1 mips access to read from OTP
csi_tadp_tx_0_cdphy_rx_txvalidesc_2 = hc0000510 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_txvalidesc_2 mips access to read from OTP
csi_tadp_tx_0_cdphy_rx_txvalidesc_3 = hc0000510 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_txvalidesc_3 mips access to read from OTP
csi_tadp_tx_0_cdphy_rx_txdataesc_0 = hc0000510 24 8 h0 RW HEX
; Desc_csi_tadp_tx_0_cdphy_rx_txdataesc_0 mips access to read from OTP



; REGISTER csi_tadp_tx_0_cdphy_rx_ctrl_input1_reg Address hc0000518
_csi_tadp_tx_0_cdphy_rx_ctrl_input1_reg = 3221226776 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_cdphy_rx_txdataesc_1 = hc0000518 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_cdphy_rx_txdataesc_1 QRR output
csi_tadp_tx_0_cdphy_rx_txdataesc_2 = hc0000518 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_cdphy_rx_txdataesc_2 QRR output
csi_tadp_tx_0_cdphy_rx_txdataesc_3 = hc0000518 16 8 h0 RW HEX
; Desc_csi_tadp_tx_0_cdphy_rx_txdataesc_3 QRR output
csi_tadp_tx_0_cdphy_rx_txlpdtesc_0 = hc0000518 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_txlpdtesc_0 QRR output
csi_tadp_tx_0_cdphy_rx_txlpdtesc_1 = hc0000518 25 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_txlpdtesc_1 QRR output
csi_tadp_tx_0_cdphy_rx_txlpdtesc_2 = hc0000518 26 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_txlpdtesc_2 QRR output
csi_tadp_tx_0_cdphy_rx_txlpdtesc_3 = hc0000518 27 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_txlpdtesc_3 QRR output
csi_tadp_tx_0_cdphy_rx_txrequestesc_0 = hc0000518 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_txrequestesc_0 QRR output
csi_tadp_tx_0_cdphy_rx_txrequestesc_1 = hc0000518 29 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_txrequestesc_1 QRR output
csi_tadp_tx_0_cdphy_rx_txrequestesc_2 = hc0000518 30 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_txrequestesc_2 QRR output
csi_tadp_tx_0_cdphy_rx_txrequestesc_3 = hc0000518 31 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_txrequestesc_3 QRR output



; REGISTER csi_tadp_tx_0_cdphy_rx_ctrl_input2_reg Address hc0000520
_csi_tadp_tx_0_cdphy_rx_ctrl_input2_reg = 3221226784 0 14 b00000000000000000000000011110000 RW
csi_tadp_tx_0_cdphy_rx_txulpsexit_0 = hc0000520 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_txulpsexit_0 data write to the OTP
csi_tadp_tx_0_cdphy_rx_txulpsexit_1 = hc0000520 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_txulpsexit_1 data write to the OTP
csi_tadp_tx_0_cdphy_rx_txulpsexit_2 = hc0000520 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_txulpsexit_2 data write to the OTP
csi_tadp_tx_0_cdphy_rx_txulpsexit_3 = hc0000520 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_txulpsexit_3 data write to the OTP
csi_tadp_tx_0_cdphy_rx_turndisable_0 = hc0000520 4 1 h1 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_turndisable_0 data write to the OTP
csi_tadp_tx_0_cdphy_rx_turndisable_1 = hc0000520 5 1 h1 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_turndisable_1 data write to the OTP
csi_tadp_tx_0_cdphy_rx_turndisable_2 = hc0000520 6 1 h1 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_turndisable_2 data write to the OTP
csi_tadp_tx_0_cdphy_rx_turndisable_3 = hc0000520 7 1 h1 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_turndisable_3 data write to the OTP
csi_tadp_tx_0_cdphy_rx_turnrequest_0 = hc0000520 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_turnrequest_0 data write to the OTP
csi_tadp_tx_0_cdphy_rx_turnrequest_1 = hc0000520 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_turnrequest_1 data write to the OTP
csi_tadp_tx_0_cdphy_rx_turnrequest_2 = hc0000520 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_turnrequest_2 data write to the OTP
csi_tadp_tx_0_cdphy_rx_turnrequest_3 = hc0000520 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_turnrequest_3 data write to the OTP
csi_tadp_tx_0_cdphy_rx_test_stop_clk_en = hc0000520 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_test_stop_clk_en data write to the OTP
csi_tadp_tx_0_cdphy_rx_bist_en = hc0000520 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cdphy_rx_bist_en data write to the OTP



; REGISTER csi_tadp_tx_0_meron_src_csi_spare0_reg Address hc0000530
_csi_tadp_tx_0_meron_src_csi_spare0_reg = 3221226800 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_meron_src_csi_spare0 = hc0000530 0 32 h0 RW HEX
; Desc_csi_tadp_tx_0_meron_src_csi_spare0 0 = disable clock to SBPI bus



; REGISTER csi_tadp_tx_0_meron_src_csi_spare1_reg Address hc0000534
_csi_tadp_tx_0_meron_src_csi_spare1_reg = 3221226804 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_meron_src_csi_spare1 = hc0000534 0 32 h0 RW HEX
; Desc_csi_tadp_tx_0_meron_src_csi_spare1 data write to the OTP



; REGISTER csi_tadp_tx_0_cfg_cdphy_test_prod_reg Address hc0000538
_csi_tadp_tx_0_cfg_cdphy_test_prod_reg = 3221226808 0 32 b00000000000000000000000000011110 RW
csi_tadp_tx_0_cfg_cdphy_rx_phy_mode = hc0000538 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cfg_cdphy_rx_phy_mode store last o_MISO when FLAG was negated
csi_tadp_tx_0_cfg_cdphy_rx_enable_3 = hc0000538 1 1 h1 RW BIN
; Desc_csi_tadp_tx_0_cfg_cdphy_rx_enable_3 store last o_MISO when FLAG was negated
csi_tadp_tx_0_cfg_cdphy_rx_enable_2 = hc0000538 2 1 h1 RW BIN
; Desc_csi_tadp_tx_0_cfg_cdphy_rx_enable_2 store last o_MISO when FLAG was negated
csi_tadp_tx_0_cfg_cdphy_rx_enable_1 = hc0000538 3 1 h1 RW BIN
; Desc_csi_tadp_tx_0_cfg_cdphy_rx_enable_1 store last o_MISO when FLAG was negated
csi_tadp_tx_0_cfg_cdphy_rx_enable_0 = hc0000538 4 1 h1 RW BIN
; Desc_csi_tadp_tx_0_cfg_cdphy_rx_enable_0 store last o_MISO when FLAG was negated
csi_tadp_tx_0_cfg_cdphy_rx_shutdown_n = hc0000538 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cfg_cdphy_rx_shutdown_n store last o_MISO when FLAG was negated
csi_tadp_tx_0_cfg_cdphy_only_prodtest = hc0000538 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_cfg_cdphy_only_prodtest store last o_MISO when FLAG was negated



; REGISTER csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_DPHY_0_reg Address hc0006000
_csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_DPHY_0_reg = 3221250048 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_PWR_DWN_addr = hc0006000 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_PWR_DWN_addr Enable the detection of the sCMax response by the RTS
csi_tadp_tx_0_RESERVED_15_8 = hc0006000 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 Enable the detection of the sCMax response by the RTS



; REGISTER csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_DPHY_1_reg Address hc0006004
_csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_DPHY_1_reg = 3221250052 0 16 b00000000000000000000000000100010 RW
csi_tadp_tx_0_BG_ON_addr = hc0006004 0 8 h22 RW HEX
; Desc_csi_tadp_tx_0_BG_ON_addr configurable TX delay thresholdscalculated as 2^TxDelayThreshold cycles
csi_tadp_tx_0_RESERVED_15_8 = hc0006004 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 configurable TX delay thresholdscalculated as 2^TxDelayThreshold cycles



; REGISTER csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_DPHY_2_reg Address hc0006008
_csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_DPHY_2_reg = 3221250056 0 16 b00000000000000000000000000000100 RW
csi_tadp_tx_0_RCAL_addr = hc0006008 0 8 h4 RW HEX
; Desc_csi_tadp_tx_0_RCAL_addr Set the Drift Value by the CPU
csi_tadp_tx_0_RESERVED_15_8 = hc0006008 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 Set the Drift Value by the CPU



; REGISTER csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_DPHY_3_reg Address hc000600c
_csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_DPHY_3_reg = 3221250060 0 16 b00000000000000000000000001000101 RW
csi_tadp_tx_0_PLL_START_addr = hc000600c 0 8 h45 RW HEX
; Desc_csi_tadp_tx_0_PLL_START_addr Invert Drift Addition to Substraction, Useful at the Tx side
csi_tadp_tx_0_RESERVED_15_8 = hc000600c 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 Invert Drift Addition to Substraction, Useful at the Tx side



; REGISTER csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_DPHY_4_reg Address hc0006010
_csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_DPHY_4_reg = 3221250064 0 16 b00000000000000000000000000000101 RW
csi_tadp_tx_0_HS_DCO_CAL_addr = hc0006010 0 8 h5 RW HEX
; Desc_csi_tadp_tx_0_HS_DCO_CAL_addr The Drift Window size
csi_tadp_tx_0_RESERVED_15_8 = hc0006010 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 The Drift Window size



; REGISTER csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_DPHY_5_reg Address hc0006014
_csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_DPHY_5_reg = 3221250068 0 16 b00000000000000000000000000000110 RW
csi_tadp_tx_0_OFFSET_CAL_addr = hc0006014 0 8 h6 RW HEX
; Desc_csi_tadp_tx_0_OFFSET_CAL_addr TestBus Select
csi_tadp_tx_0_RESERVED_15_8 = hc0006014 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 TestBus Select



; REGISTER csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_DPHY_6_reg Address hc0006018
_csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_DPHY_6_reg = 3221250072 0 16 b00000000000000000000000000000111 RW
csi_tadp_tx_0_LP_DCO_CAL_addr = hc0006018 0 8 h7 RW HEX
; Desc_csi_tadp_tx_0_LP_DCO_CAL_addr Drift estemation outcome
csi_tadp_tx_0_RESERVED_15_8 = hc0006018 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 Drift estemation outcome



; REGISTER csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_DPHY_7_reg Address hc000601c
_csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_DPHY_7_reg = 3221250076 0 16 b00000000000000000000000000110000 RW
csi_tadp_tx_0_DPHY_DDL_CAL_addr = hc000601c 0 8 h30 RW HEX
; Desc_csi_tadp_tx_0_DPHY_DDL_CAL_addr Total Delivered Packets Window Size Configuration
csi_tadp_tx_0_RESERVED_15_8 = hc000601c 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 Total Delivered Packets Window Size Configuration



; REGISTER csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_DPHY_8_reg Address hc0006020
_csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_DPHY_8_reg = 3221250080 0 16 b00000000000000000000000000010000 RW
csi_tadp_tx_0_CPHY_DDL_CAL_addr = hc0006020 0 8 h10 RW HEX
; Desc_csi_tadp_tx_0_CPHY_DDL_CAL_addr Link Quality FIFO used status
csi_tadp_tx_0_RESERVED_15_8 = hc0006020 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 Link Quality FIFO used status



; REGISTER csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_DPHY_9_reg Address hc0006024
_csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_DPHY_9_reg = 3221250084 0 16 b00000000000000000000000001010000 RW
csi_tadp_tx_0_DESKEW_1P1_addr = hc0006024 0 8 h50 RW HEX
; Desc_csi_tadp_tx_0_DESKEW_1P1_addr Good Delivered Packets in Total Delivered Window
csi_tadp_tx_0_RESERVED_15_8 = hc0006024 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 Good Delivered Packets in Total Delivered Window



; REGISTER csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_DPHY_A_reg Address hc0006028
_csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_DPHY_A_reg = 3221250088 0 16 b00000000000000000000000000100001 RW
csi_tadp_tx_0_HIBERNATE_addr = hc0006028 0 8 h21 RW HEX
; Desc_csi_tadp_tx_0_HIBERNATE_addr Good Delivered Retransmitted Packets in Total Delivered Window
csi_tadp_tx_0_RESERVED_15_8 = hc0006028 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 Good Delivered Retransmitted Packets in Total Delivered Window



; REGISTER csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_DPHY_10_reg Address hc0006040
_csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_DPHY_10_reg = 3221250112 0 16 b00000000000000000000000000101111 RW
csi_tadp_tx_0_PHY_READY_addr = hc0006040 0 8 h2f RW HEX
; Desc_csi_tadp_tx_0_PHY_READY_addr Number of cycles with no packets at the RxBuffer threshold to trigger the NoRxKA interrupt – Should be multiplication of Keep Alive Timeout configuration
csi_tadp_tx_0_RESERVED_15_8 = hc0006040 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 Number of cycles with no packets at the RxBuffer threshold to trigger the NoRxKA interrupt – Should be multiplication of Keep Alive Timeout configuration



; REGISTER csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_STARTUP_1_1_reg Address hc0006044
_csi_tadp_tx_0_PPI_STARTUP_RW_COMMON_STARTUP_1_1_reg = 3221250116 0 16 b00000000000000000000000010010110 RW
csi_tadp_tx_0_PHY_READY_DLY = hc0006044 0 12 h96 RW HEX
; Desc_csi_tadp_tx_0_PHY_READY_DLY Number of cycles with no packets at the RxBuffer threshold to trigger the NoRx interrupt
csi_tadp_tx_0_RESERVED_15_12 = hc0006044 12 4 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_12 Number of cycles with no packets at the RxBuffer threshold to trigger the NoRx interrupt



; REGISTER csi_tadp_tx_0_PPI_CALIBCTRL_RW_COMMON_CALIBCTRL_2_0_reg Address hc0006080
_csi_tadp_tx_0_PPI_CALIBCTRL_RW_COMMON_CALIBCTRL_2_0_reg = 3221250176 0 16 b00000000000000000000001111110000 RW
csi_tadp_tx_0_LANE_CALIB_OFFSETCAL_LAST = hc0006080 0 5 h10 RW HEX
; Desc_csi_tadp_tx_0_LANE_CALIB_OFFSETCAL_LAST PCS RX FIFO Max Usage, Clear on write
csi_tadp_tx_0_LANE_CALIB_OFFSETCAL_EN = hc0006080 5 5 h1f RW HEX
; Desc_csi_tadp_tx_0_LANE_CALIB_OFFSETCAL_EN PCS RX FIFO Max Usage, Clear on write
csi_tadp_tx_0_OFFSETCAL_RECALIBRATION_EN = hc0006080 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OFFSETCAL_RECALIBRATION_EN PCS RX FIFO Max Usage, Clear on write
csi_tadp_tx_0_TERMCAL_RECALIBRATION_EN = hc0006080 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_TERMCAL_RECALIBRATION_EN PCS RX FIFO Max Usage, Clear on write
csi_tadp_tx_0_RESERVED_15_12 = hc0006080 12 4 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_12 PCS RX FIFO Max Usage, Clear on write



; REGISTER csi_tadp_tx_0_PPI_CALIBCTRL_RW_COMMON_BG_0_reg Address hc0006098
_csi_tadp_tx_0_PPI_CALIBCTRL_RW_COMMON_BG_0_reg = 3221250200 0 16 b00000000000000000000000010001111 RW
csi_tadp_tx_0_BG_MAX_COUNTER = hc0006098 0 9 h8f RW HEX
; Desc_csi_tadp_tx_0_BG_MAX_COUNTER RxBuffer error indication - sticky bit register
csi_tadp_tx_0_RESERVED_15_9 = hc0006098 9 7 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_9 RxBuffer error indication - sticky bit register



; REGISTER csi_tadp_tx_0_PPI_CALIBCTRL_RW_COMMON_CALIBCTRL_2_7_reg Address hc000609c
_csi_tadp_tx_0_PPI_CALIBCTRL_RW_COMMON_CALIBCTRL_2_7_reg = 3221250204 0 16 b00000000000000000000000000001000 RW
csi_tadp_tx_0_STATE_DONE_TIMER_THRES = hc000609c 0 5 h8 RW HEX
; Desc_csi_tadp_tx_0_STATE_DONE_TIMER_THRES Total Number of delivered Good Packets at RxBuffer
csi_tadp_tx_0_RESERVED_15_5 = hc000609c 5 11 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_5 Total Number of delivered Good Packets at RxBuffer



; REGISTER csi_tadp_tx_0_PPI_CALIBCTRL_RW_ADC_CFG_0_reg Address hc00060a0
_csi_tadp_tx_0_PPI_CALIBCTRL_RW_ADC_CFG_0_reg = 3221250208 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_ADC_ENB = hc00060a0 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_ADC_ENB Total Number of delivered Bad Packets at RxBuffer
csi_tadp_tx_0_RESERVED_15_1 = hc00060a0 1 15 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_1 Total Number of delivered Bad Packets at RxBuffer



; REGISTER csi_tadp_tx_0_PPI_CALIBCTRL_RW_ADC_CFG_1_reg Address hc00060a4
_csi_tadp_tx_0_PPI_CALIBCTRL_RW_ADC_CFG_1_reg = 3221250212 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_ADC_WAIT_THRESH_T1 = hc00060a4 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_ADC_WAIT_THRESH_T1 Total Number of delivered Good MinRD Packets at RxBuffer
csi_tadp_tx_0_ADC_WAIT_THRESH_T2 = hc00060a4 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_ADC_WAIT_THRESH_T2 Total Number of delivered Good MinRD Packets at RxBuffer



; REGISTER csi_tadp_tx_0_PPI_RW_LPDCOCAL_TOP_OVERRIDE_reg Address hc0006800
_csi_tadp_tx_0_PPI_RW_LPDCOCAL_TOP_OVERRIDE_reg = 3221252096 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LPCDCOCAL_I_MAN_LPDCO_CLKEN = hc0006800 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LPCDCOCAL_I_MAN_LPDCO_CLKEN Total Number of delivered Good FixRD Packets at RxBuffer
csi_tadp_tx_0_LPCDCOCAL_I_MAN_LPDCO_CLKEN_EN = hc0006800 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LPCDCOCAL_I_MAN_LPDCO_CLKEN_EN Total Number of delivered Good FixRD Packets at RxBuffer
csi_tadp_tx_0_LPCDCOCAL_I_MAN_LPDCOEN = hc0006800 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LPCDCOCAL_I_MAN_LPDCOEN Total Number of delivered Good FixRD Packets at RxBuffer
csi_tadp_tx_0_LPCDCOCAL_I_MAN_LPDCOEN_EN = hc0006800 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LPCDCOCAL_I_MAN_LPDCOEN_EN Total Number of delivered Good FixRD Packets at RxBuffer
csi_tadp_tx_0_LPCDCOCAL_I_MAN_LPDCO_PON = hc0006800 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LPCDCOCAL_I_MAN_LPDCO_PON Total Number of delivered Good FixRD Packets at RxBuffer
csi_tadp_tx_0_LPCDCOCAL_I_MAN_LPDCO_PON_EN = hc0006800 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LPCDCOCAL_I_MAN_LPDCO_PON_EN Total Number of delivered Good FixRD Packets at RxBuffer
csi_tadp_tx_0_LPCDCOCAL_I_MAN_FWORD_LATCH = hc0006800 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LPCDCOCAL_I_MAN_FWORD_LATCH Total Number of delivered Good FixRD Packets at RxBuffer
csi_tadp_tx_0_LPCDCOCAL_I_MAN_FWORD = hc0006800 7 7 h0 RW HEX
; Desc_csi_tadp_tx_0_LPCDCOCAL_I_MAN_FWORD Total Number of delivered Good FixRD Packets at RxBuffer
csi_tadp_tx_0_LPCDCOCAL_I_MAN_CAL_EN = hc0006800 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LPCDCOCAL_I_MAN_CAL_EN Total Number of delivered Good FixRD Packets at RxBuffer
csi_tadp_tx_0_LPCDCOCAL_I_MAN_TRIGGER = hc0006800 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LPCDCOCAL_I_MAN_TRIGGER Total Number of delivered Good FixRD Packets at RxBuffer



; REGISTER csi_tadp_tx_0_PPI_RW_LPDCOCAL_TIMEBASE_reg Address hc0006804
_csi_tadp_tx_0_PPI_RW_LPDCOCAL_TIMEBASE_reg = 3221252100 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LPCDCOCAL_TIMEBASE = hc0006804 0 10 h0 RW HEX
; Desc_csi_tadp_tx_0_LPCDCOCAL_TIMEBASE Total Number of delivered Good Original Packets at RxBuffer
csi_tadp_tx_0_RESERVED_15_10 = hc0006804 10 6 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 Total Number of delivered Good Original Packets at RxBuffer



; REGISTER csi_tadp_tx_0_PPI_RW_LPDCOCAL_NREF_reg Address hc0006808
_csi_tadp_tx_0_PPI_RW_LPDCOCAL_NREF_reg = 3221252104 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LPCDCOCAL_NREF = hc0006808 0 11 h0 RW HEX
; Desc_csi_tadp_tx_0_LPCDCOCAL_NREF Total Number of received keep_alive Packets at RxBuffer
csi_tadp_tx_0_RESERVED_15_11 = hc0006808 11 5 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_11 Total Number of received keep_alive Packets at RxBuffer



; REGISTER csi_tadp_tx_0_PPI_RW_LPDCOCAL_NREF_RANGE_reg Address hc000680c
_csi_tadp_tx_0_PPI_RW_LPDCOCAL_NREF_RANGE_reg = 3221252108 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LPCDCOCAL_NREF_RANGE = hc000680c 0 5 h0 RW HEX
; Desc_csi_tadp_tx_0_LPCDCOCAL_NREF_RANGE Max consecutive number of Keep Alive packets RxBuffer
csi_tadp_tx_0_RESERVED_15_5 = hc000680c 5 11 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_5 Max consecutive number of Keep Alive packets RxBuffer



; REGISTER csi_tadp_tx_0_PPI_RW_LPDCOCAL_NREF_TRIGGER_MAN_reg Address hc0006810
_csi_tadp_tx_0_PPI_RW_LPDCOCAL_NREF_TRIGGER_MAN_reg = 3221252112 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LPDCOCAL_CMU_REF_TRIGGER_OVR_VAL = hc0006810 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LPDCOCAL_CMU_REF_TRIGGER_OVR_VAL Total Number of Uncorrected GAP Packets delivered at RxBuffer
csi_tadp_tx_0_LPDCOCAL_CMU_REF_TRIGGER_OVR_EN = hc0006810 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LPDCOCAL_CMU_REF_TRIGGER_OVR_EN Total Number of Uncorrected GAP Packets delivered at RxBuffer
csi_tadp_tx_0_RESERVED_15_2 = hc0006810 2 14 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_2 Total Number of Uncorrected GAP Packets delivered at RxBuffer



; REGISTER csi_tadp_tx_0_PPI_RW_LPDCOCAL_TWAIT_CONFIG_reg Address hc0006814
_csi_tadp_tx_0_PPI_RW_LPDCOCAL_TWAIT_CONFIG_reg = 3221252116 0 16 b00000000000000000000000011001000 RW
csi_tadp_tx_0_LPCDCOCAL_TWAIT_COARSE = hc0006814 0 9 hc8 RW HEX
; Desc_csi_tadp_tx_0_LPCDCOCAL_TWAIT_COARSE Total Number of ReTx packet scheduled by RxBuffer
csi_tadp_tx_0_LPCDCOCAL_TWAIT_PON = hc0006814 9 7 h0 RW HEX
; Desc_csi_tadp_tx_0_LPCDCOCAL_TWAIT_PON Total Number of ReTx packet scheduled by RxBuffer



; REGISTER csi_tadp_tx_0_PPI_RW_LPDCOCAL_VT_CONFIG_reg Address hc0006818
_csi_tadp_tx_0_PPI_RW_LPDCOCAL_VT_CONFIG_reg = 3221252120 0 16 b00000000000000000110010000000010 RW
csi_tadp_tx_0_LPCDCOCAL_VT_TRACKING_EN = hc0006818 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LPCDCOCAL_VT_TRACKING_EN Total Number of Gap packet scheduled by RxBuffer
csi_tadp_tx_0_LPCDCOCAL_USE_IDEAL_NREF = hc0006818 1 1 h1 RW BIN
; Desc_csi_tadp_tx_0_LPCDCOCAL_USE_IDEAL_NREF Total Number of Gap packet scheduled by RxBuffer
csi_tadp_tx_0_LPCDCOCAL_VT_NREF_RANGE = hc0006818 2 5 h0 RW HEX
; Desc_csi_tadp_tx_0_LPCDCOCAL_VT_NREF_RANGE Total Number of Gap packet scheduled by RxBuffer
csi_tadp_tx_0_LPCDCOCAL_TWAIT_FINE = hc0006818 7 9 hc8 RW HEX
; Desc_csi_tadp_tx_0_LPCDCOCAL_TWAIT_FINE Total Number of Gap packet scheduled by RxBuffer



; REGISTER csi_tadp_tx_0_PPI_RW_LPDCOCAL_COARSE_CFG_reg Address hc0006820
_csi_tadp_tx_0_PPI_RW_LPDCOCAL_COARSE_CFG_reg = 3221252128 0 16 b00000000000000000000000100000101 RW
csi_tadp_tx_0_NCOARSE_START = hc0006820 0 2 h1 RW HEX
; Desc_csi_tadp_tx_0_NCOARSE_START Total Number of MCs requested by ReTx/Gap packet scheduled by RxBuffer
csi_tadp_tx_0_NCOARSE_DIAG = hc0006820 2 2 h1 RW HEX
; Desc_csi_tadp_tx_0_NCOARSE_DIAG Total Number of MCs requested by ReTx/Gap packet scheduled by RxBuffer
csi_tadp_tx_0_SCALE_REF = hc0006820 4 5 h10 RW HEX
; Desc_csi_tadp_tx_0_SCALE_REF Total Number of MCs requested by ReTx/Gap packet scheduled by RxBuffer
csi_tadp_tx_0_RESERVED_15_9 = hc0006820 9 7 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_9 Total Number of MCs requested by ReTx/Gap packet scheduled by RxBuffer



; REGISTER csi_tadp_tx_0_PPI_RW_LB_TIMEBASE_CONFIG_reg Address hc0006840
_csi_tadp_tx_0_PPI_RW_LB_TIMEBASE_CONFIG_reg = 3221252160 0 16 b00000000000000000000000110000000 RW
csi_tadp_tx_0_LOOPBACK_TIMEBASE = hc0006840 0 16 h180 RW HEX
; Desc_csi_tadp_tx_0_LOOPBACK_TIMEBASE Total Number of First ReTx A-Packets scheduled by RxBuffer



; REGISTER csi_tadp_tx_0_PPI_RW_LB_STARTCMU_CONFIG_reg Address hc0006844
_csi_tadp_tx_0_PPI_RW_LB_STARTCMU_CONFIG_reg = 3221252164 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LB_START_CMU = hc0006844 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LB_START_CMU Total Number of Non First ReTx A-Packets scheduled by RxBuffer
csi_tadp_tx_0_RESERVED_15_1 = hc0006844 1 15 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_1 Total Number of Non First ReTx A-Packets scheduled by RxBuffer



; REGISTER csi_tadp_tx_0_PPI_RW_LB_DPHY_BURST_START_reg Address hc0006850
_csi_tadp_tx_0_PPI_RW_LB_DPHY_BURST_START_reg = 3221252176 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LBERT_DPHY_TXREQUESTHS_CLK = hc0006850 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_DPHY_TXREQUESTHS_CLK Total Number of Non First ReTx A-Packets scheduled by RxBuffer
csi_tadp_tx_0_LBERT_DPHY_TXREQUESTHS_DATA = hc0006850 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_DPHY_TXREQUESTHS_DATA Total Number of Non First ReTx A-Packets scheduled by RxBuffer
csi_tadp_tx_0_LBERT_DPHY_TXDATATRANSFERENHS_DATA = hc0006850 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_DPHY_TXDATATRANSFERENHS_DATA Total Number of Non First ReTx A-Packets scheduled by RxBuffer
csi_tadp_tx_0_LBERT_DPHY_TXSKEWCALHS_DATA = hc0006850 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_DPHY_TXSKEWCALHS_DATA Total Number of Non First ReTx A-Packets scheduled by RxBuffer
csi_tadp_tx_0_LBERT_DPHY_TXALTERNATECALHS_DATA = hc0006850 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_DPHY_TXALTERNATECALHS_DATA Total Number of Non First ReTx A-Packets scheduled by RxBuffer
csi_tadp_tx_0_RESERVED_15_5 = hc0006850 5 11 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_5 Total Number of Non First ReTx A-Packets scheduled by RxBuffer



; REGISTER csi_tadp_tx_0_PPI_RW_LB_CPHY_BURST_START_reg Address hc0006854
_csi_tadp_tx_0_PPI_RW_LB_CPHY_BURST_START_reg = 3221252180 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LBERT_CPHY_TXREQUESTHS_DATA = hc0006854 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_CPHY_TXREQUESTHS_DATA Total Number of received Good Packets at RxBuffer
csi_tadp_tx_0_LBERT_CPHY_TXDATATRANSFERENHS_DATA = hc0006854 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_CPHY_TXDATATRANSFERENHS_DATA Total Number of received Good Packets at RxBuffer
csi_tadp_tx_0_RESERVED_15_2 = hc0006854 2 14 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_2 Total Number of received Good Packets at RxBuffer



; REGISTER csi_tadp_tx_0_PPI_RW_DDLCAL_CFG_0_reg Address hc0006880
_csi_tadp_tx_0_PPI_RW_DDLCAL_CFG_0_reg = 3221252224 0 16 b00000000000000000000000000010100 RW
csi_tadp_tx_0_DDLCAL_TIMEBASE_TARGET = hc0006880 0 10 h14 RW HEX
; Desc_csi_tadp_tx_0_DDLCAL_TIMEBASE_TARGET Total Number of received Bad Packets at RxBuffer
csi_tadp_tx_0_RESERVED_15_10 = hc0006880 10 6 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 Total Number of received Bad Packets at RxBuffer



; REGISTER csi_tadp_tx_0_PPI_RW_DDLCAL_CFG_1_reg Address hc0006884
_csi_tadp_tx_0_PPI_RW_DDLCAL_CFG_1_reg = 3221252228 0 16 b00000000000000000000000001000000 RW
csi_tadp_tx_0_DDLCAL_MAX_PHASE = hc0006884 0 8 h40 RW HEX
; Desc_csi_tadp_tx_0_DDLCAL_MAX_PHASE Total Number of received Good ReTx Packets at RxBuffer
csi_tadp_tx_0_DDLCAL_DISABLE_TIME = hc0006884 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_DDLCAL_DISABLE_TIME Total Number of received Good ReTx Packets at RxBuffer



; REGISTER csi_tadp_tx_0_PPI_RW_DDLCAL_CFG_2_reg Address hc0006888
_csi_tadp_tx_0_PPI_RW_DDLCAL_CFG_2_reg = 3221252232 0 16 b00000000000000000100101100010100 RW
csi_tadp_tx_0_DDLCAL_ENABLE_WAIT = hc0006888 0 8 h14 RW HEX
; Desc_csi_tadp_tx_0_DDLCAL_ENABLE_WAIT Total Number of received Bad ReTx Packets at RxBuffer
csi_tadp_tx_0_DDLCAL_DDL_DLL = hc0006888 8 1 h1 RW BIN
; Desc_csi_tadp_tx_0_DDLCAL_DDL_DLL Total Number of received Bad ReTx Packets at RxBuffer
csi_tadp_tx_0_DDLCAL_UPDATE_SETTINGS = hc0006888 9 1 h1 RW BIN
; Desc_csi_tadp_tx_0_DDLCAL_UPDATE_SETTINGS Total Number of received Bad ReTx Packets at RxBuffer
csi_tadp_tx_0_DDLCAL_TUNE_MODE = hc0006888 10 2 h2 RW HEX
; Desc_csi_tadp_tx_0_DDLCAL_TUNE_MODE Total Number of received Bad ReTx Packets at RxBuffer
csi_tadp_tx_0_DDLCAL_WAIT = hc0006888 12 4 h4 RW HEX
; Desc_csi_tadp_tx_0_DDLCAL_WAIT Total Number of received Bad ReTx Packets at RxBuffer



; REGISTER csi_tadp_tx_0_PPI_RW_DDLCAL_CFG_3_reg Address hc000688c
_csi_tadp_tx_0_PPI_RW_DDLCAL_CFG_3_reg = 3221252236 0 16 b00000000000000000000000001000111 RW
csi_tadp_tx_0_DDLCAL_COUNTER_REF = hc000688c 0 10 h47 RW HEX
; Desc_csi_tadp_tx_0_DDLCAL_COUNTER_REF Total Number of received Good CRC Original Packets at RxBuffer
csi_tadp_tx_0_RESERVED_15_10 = hc000688c 10 6 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 Total Number of received Good CRC Original Packets at RxBuffer



; REGISTER csi_tadp_tx_0_PPI_RW_DDLCAL_CFG_4_reg Address hc0006890
_csi_tadp_tx_0_PPI_RW_DDLCAL_CFG_4_reg = 3221252240 0 16 b00000000000000000000000000000010 RW
csi_tadp_tx_0_DDLCAL_STUCK_THRESH = hc0006890 0 10 h2 RW HEX
; Desc_csi_tadp_tx_0_DDLCAL_STUCK_THRESH Total Number of received Bad CRC Original Packets at RxBuffer
csi_tadp_tx_0_RESERVED_15_10 = hc0006890 10 6 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 Total Number of received Bad CRC Original Packets at RxBuffer



; REGISTER csi_tadp_tx_0_PPI_RW_DDLCAL_CFG_5_reg Address hc0006894
_csi_tadp_tx_0_PPI_RW_DDLCAL_CFG_5_reg = 3221252244 0 16 b00000000000000000000000001110000 RW
csi_tadp_tx_0_DDLCAL_DDL_COARSE_BANK = hc0006894 0 4 h0 RW HEX
; Desc_csi_tadp_tx_0_DDLCAL_DDL_COARSE_BANK Total Number of Missing Original Packets at RxBuffer
csi_tadp_tx_0_DDLCAL_DLL_FBK = hc0006894 4 6 h7 RW HEX
; Desc_csi_tadp_tx_0_DDLCAL_DLL_FBK Total Number of Missing Original Packets at RxBuffer
csi_tadp_tx_0_RESERVED_15_10 = hc0006894 10 6 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 Total Number of Missing Original Packets at RxBuffer



; REGISTER csi_tadp_tx_0_PPI_RW_DDLCAL_CFG_6_reg Address hc0006898
_csi_tadp_tx_0_PPI_RW_DDLCAL_CFG_6_reg = 3221252248 0 16 b00000000000000001000000001100100 RW
csi_tadp_tx_0_DDLCAL_MAX_DIFF = hc0006898 0 10 h64 RW HEX
; Desc_csi_tadp_tx_0_DDLCAL_MAX_DIFF Maximal RT time
csi_tadp_tx_0_DDLCAL_CLEAR_COUNT_THRESH = hc0006898 10 6 h20 RW HEX
; Desc_csi_tadp_tx_0_DDLCAL_CLEAR_COUNT_THRESH Maximal RT time



; REGISTER csi_tadp_tx_0_PPI_RW_DDLCAL_CFG_7_reg Address hc000689c
_csi_tadp_tx_0_PPI_RW_DDLCAL_CFG_7_reg = 3221252252 0 16 b00000000000000000000010100110010 RW
csi_tadp_tx_0_DDLCAL_START_DELAY = hc000689c 0 7 h32 RW HEX
; Desc_csi_tadp_tx_0_DDLCAL_START_DELAY Sum of ReTx time for Avg calculation
csi_tadp_tx_0_DDLCAL_DECR_WAIT = hc000689c 7 6 ha RW HEX
; Desc_csi_tadp_tx_0_DDLCAL_DECR_WAIT Sum of ReTx time for Avg calculation
csi_tadp_tx_0_RESERVED_15_13 = hc000689c 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 Sum of ReTx time for Avg calculation



; REGISTER csi_tadp_tx_0_PPI_RW_PARITY_TEST_reg Address hc00068c0
_csi_tadp_tx_0_PPI_RW_PARITY_TEST_reg = 3221252288 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_CR_PARITY_TESTCLEAR = hc00068c0 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CR_PARITY_TESTCLEAR Total Number of ReTx for Avg calculation
csi_tadp_tx_0_CR_PARITY_TESTSET = hc00068c0 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CR_PARITY_TESTSET Total Number of ReTx for Avg calculation
csi_tadp_tx_0_RESERVED_15_2 = hc00068c0 2 14 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_2 Total Number of ReTx for Avg calculation



; REGISTER csi_tadp_tx_0_PPI_RW_STARTUP_OVR_0_reg Address hc00068c4
_csi_tadp_tx_0_PPI_RW_STARTUP_OVR_0_reg = 3221252292 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_STARTUP_STATE_OVR_VAL = hc00068c4 0 5 h0 RW HEX
; Desc_csi_tadp_tx_0_STARTUP_STATE_OVR_VAL Maximal MCW size
csi_tadp_tx_0_RESERVED_15_5 = hc00068c4 5 11 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_5 Maximal MCW size



; REGISTER csi_tadp_tx_0_PPI_RW_STARTUP_STATE_OVR_1_reg Address hc00068c8
_csi_tadp_tx_0_PPI_RW_STARTUP_STATE_OVR_1_reg = 3221252296 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_STARTUP_STATE_OVR_EN = hc00068c8 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_STARTUP_STATE_OVR_EN HCRC Errors Counter
csi_tadp_tx_0_TXCLKESC_BYPASS = hc00068c8 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_TXCLKESC_BYPASS HCRC Errors Counter
csi_tadp_tx_0_RESERVED_15_2 = hc00068c8 2 14 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_2 HCRC Errors Counter



; REGISTER csi_tadp_tx_0_PPI_RW_DTB_SELECTOR_reg Address hc00068cc
_csi_tadp_tx_0_PPI_RW_DTB_SELECTOR_reg = 3221252300 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_DTB_SELECT_ADDR = hc00068cc 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_DTB_SELECT_ADDR Total CRC32 Errors Counter
csi_tadp_tx_0_DTB_SOURCE_SELECT = hc00068cc 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_DTB_SOURCE_SELECT Total CRC32 Errors Counter
csi_tadp_tx_0_RESERVED_15_9 = hc00068cc 9 7 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_9 Total CRC32 Errors Counter



; REGISTER csi_tadp_tx_0_PPI_RW_DPHY_CLK_SPARE_reg Address hc00068d4
_csi_tadp_tx_0_PPI_RW_DPHY_CLK_SPARE_reg = 3221252308 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_DPHY_CLK_LANE_SPARE = hc00068d4 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_DPHY_CLK_LANE_SPARE 



; REGISTER csi_tadp_tx_0_PPI_RW_COMMON_CFG_reg Address hc00068d8
_csi_tadp_tx_0_PPI_RW_COMMON_CFG_reg = 3221252312 0 16 b00000000000000000000000000000010 RW
csi_tadp_tx_0_CFG_CLK_DIV_FACTOR = hc00068d8 0 2 h2 RW HEX
; Desc_csi_tadp_tx_0_CFG_CLK_DIV_FACTOR 
csi_tadp_tx_0_RESERVED_15_2 = hc00068d8 2 14 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_2 



; REGISTER csi_tadp_tx_0_PPI_RW_TERMCAL_CFG_0_reg Address hc0006900
_csi_tadp_tx_0_PPI_RW_TERMCAL_CFG_0_reg = 3221252352 0 16 b00000000000000000000000000010011 RW
csi_tadp_tx_0_TERMCAL_TIMER = hc0006900 0 7 h13 RW HEX
; Desc_csi_tadp_tx_0_TERMCAL_TIMER 
csi_tadp_tx_0_RESERVED_15_7 = hc0006900 7 9 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_7 



; REGISTER csi_tadp_tx_0_PPI_RW_OFFSETCAL_CFG_0_reg Address hc0006940
_csi_tadp_tx_0_PPI_RW_OFFSETCAL_CFG_0_reg = 3221252416 0 16 b00000000000000000000000000000100 RW
csi_tadp_tx_0_OFFSETCAL_WAIT_THRESH = hc0006940 0 5 h4 RW HEX
; Desc_csi_tadp_tx_0_OFFSETCAL_WAIT_THRESH 
csi_tadp_tx_0_OFFSETCAL_CALIB_MODE = hc0006940 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OFFSETCAL_CALIB_MODE 
csi_tadp_tx_0_RESERVED_15_6 = hc0006940 6 10 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_6 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE0_OVR_0_0_reg Address hc0007000
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE0_OVR_0_0_reg = 3221254144 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXACTIVEHS_D0_OVR_VAL = hc0007000 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXACTIVEHS_D0_OVR_VAL 
csi_tadp_tx_0_O_RXSYNCHS_D0_OVR_VAL = hc0007000 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXSYNCHS_D0_OVR_VAL 
csi_tadp_tx_0_O_RXVALIDHS_D0_OVR_VAL = hc0007000 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDHS_D0_OVR_VAL 
csi_tadp_tx_0_O_RXSKEWCALHS_D0_OVR_VAL = hc0007000 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXSKEWCALHS_D0_OVR_VAL 
csi_tadp_tx_0_O_RXWORDCLKHS_D0_OVR_VAL = hc0007000 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXWORDCLKHS_D0_OVR_VAL 
csi_tadp_tx_0_O_RXDATAHS_D0_OVR_VAL = hc0007000 5 8 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXDATAHS_D0_OVR_VAL 
csi_tadp_tx_0_O_RXALTERNATECALHS_D0_OVR_VAL = hc0007000 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXALTERNATECALHS_D0_OVR_VAL 
csi_tadp_tx_0_RESERVED_15_14 = hc0007000 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE0_OVR_0_1_reg Address hc0007004
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE0_OVR_0_1_reg = 3221254148 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXACTIVEHS_D0_OVR_EN = hc0007004 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXACTIVEHS_D0_OVR_EN 
csi_tadp_tx_0_O_RXSYNCHS_D0_OVR_EN = hc0007004 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXSYNCHS_D0_OVR_EN 
csi_tadp_tx_0_O_RXVALIDHS_D0_OVR_EN = hc0007004 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDHS_D0_OVR_EN 
csi_tadp_tx_0_O_RXSKEWCALHS_D0_OVR_EN = hc0007004 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXSKEWCALHS_D0_OVR_EN 
csi_tadp_tx_0_O_RXWORDCLKHS_D0_OVR_EN = hc0007004 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXWORDCLKHS_D0_OVR_EN 
csi_tadp_tx_0_O_RXDATAHS_D0_OVR_EN = hc0007004 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXDATAHS_D0_OVR_EN 
csi_tadp_tx_0_I_TXREQUESTHS_D0_OVR_EN = hc0007004 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTHS_D0_OVR_EN 
csi_tadp_tx_0_I_TXDATATRANSFERENHS_D0_OVR_EN = hc0007004 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATATRANSFERENHS_D0_OVR_EN 
csi_tadp_tx_0_O_TXREADYHS_D0_OVR_EN = hc0007004 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYHS_D0_OVR_EN 
csi_tadp_tx_0_O_TXWORDCLKHS_D0_OVR_EN = hc0007004 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXWORDCLKHS_D0_OVR_EN 
csi_tadp_tx_0_I_TXDATAHS_D0_OVR_EN = hc0007004 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATAHS_D0_OVR_EN 
csi_tadp_tx_0_O_RXALTERNATECALHS_D0_OVR_EN = hc0007004 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXALTERNATECALHS_D0_OVR_EN 
csi_tadp_tx_0_RESERVED_15_12 = hc0007004 12 4 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_12 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE0_OVR_0_2_reg Address hc0007008
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE0_OVR_0_2_reg = 3221254152 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXREQUESTHS_D0_OVR_VAL = hc0007008 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTHS_D0_OVR_VAL All types CRC32 Errors Counter, Clear on write
csi_tadp_tx_0_I_TXDATATRANSFERENHS_D0_OVR_VAL = hc0007008 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATATRANSFERENHS_D0_OVR_VAL All types CRC32 Errors Counter, Clear on write
csi_tadp_tx_0_O_TXREADYHS_D0_OVR_VAL = hc0007008 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYHS_D0_OVR_VAL All types CRC32 Errors Counter, Clear on write
csi_tadp_tx_0_O_TXWORDCLKHS_D0_OVR_VAL = hc0007008 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXWORDCLKHS_D0_OVR_VAL All types CRC32 Errors Counter, Clear on write
csi_tadp_tx_0_I_TXDATAHS_D0_OVR_VAL = hc0007008 4 8 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXDATAHS_D0_OVR_VAL All types CRC32 Errors Counter, Clear on write
csi_tadp_tx_0_I_TXSKEWCALHS_D0_OVR_VAL = hc0007008 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXSKEWCALHS_D0_OVR_VAL All types CRC32 Errors Counter, Clear on write
csi_tadp_tx_0_RESERVED_15_13 = hc0007008 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 All types CRC32 Errors Counter, Clear on write



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE0_OVR_0_3_reg Address hc000700c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE0_OVR_0_3_reg = 3221254156 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXREQUESTESC_D0_OVR_VAL = hc000700c 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTESC_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXLPDTESC_D0_OVR_VAL = hc000700c 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXLPDTESC_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXULPSEXIT_D0_OVR_VAL = hc000700c 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSEXIT_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXULPSESC_D0_OVR_VAL = hc000700c 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSESC_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXVALIDESC_D0_OVR_VAL = hc000700c 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXVALIDESC_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_TXREADYESC_D0_OVR_VAL = hc000700c 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYESC_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXTRIGGERESC_D0_OVR_VAL = hc000700c 6 4 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXTRIGGERESC_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXDATAESC_D0_OVR_EN = hc000700c 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATAESC_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXALTERNATECALHS_D0_OVR_EN = hc000700c 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXALTERNATECALHS_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXSKEWCALHS_D0_OVR_EN = hc000700c 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXSKEWCALHS_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_RESERVED_15_13 = hc000700c 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE0_OVR_0_4_reg Address hc0007010
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE0_OVR_0_4_reg = 3221254160 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXREQUESTESC_D0_OVR_EN = hc0007010 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTESC_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXLPDTESC_D0_OVR_EN = hc0007010 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXLPDTESC_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXULPSEXIT_D0_OVR_EN = hc0007010 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSEXIT_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXULPSESC_D0_OVR_EN = hc0007010 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSESC_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXVALIDESC_D0_OVR_EN = hc0007010 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXVALIDESC_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_TXREADYESC_D0_OVR_EN = hc0007010 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYESC_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXTRIGGERESC_D0_OVR_EN = hc0007010 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXTRIGGERESC_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXDATAESC_D0_OVR_VAL = hc0007010 7 8 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXDATAESC_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXALTERNATECALHS_D0_OVR_VAL = hc0007010 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXALTERNATECALHS_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE0_OVR_0_5_reg Address hc0007014
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE0_OVR_0_5_reg = 3221254164 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXCLKESC_D0_OVR_VAL = hc0007014 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXCLKESC_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXLPDTESC_D0_OVR_VAL = hc0007014 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXLPDTESC_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXULPSESC_D0_OVR_VAL = hc0007014 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXULPSESC_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXVALIDESC_D0_OVR_VAL = hc0007014 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDESC_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXTRIGGERESC_D0_OVR_VAL = hc0007014 4 4 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXTRIGGERESC_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXDATAESC_D0_OVR_VAL = hc0007014 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXDATAESC_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE0_OVR_0_6_reg Address hc0007018
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE0_OVR_0_6_reg = 3221254168 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXCLKESC_D0_OVR_EN = hc0007018 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXCLKESC_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXLPDTESC_D0_OVR_EN = hc0007018 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXLPDTESC_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXULPSESC_D0_OVR_EN = hc0007018 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXULPSESC_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXVALIDESC_D0_OVR_EN = hc0007018 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDESC_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXTRIGGERESC_D0_OVR_EN = hc0007018 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXTRIGGERESC_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXDATAESC_D0_OVR_EN = hc0007018 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXDATAESC_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_RESERVED_15_6 = hc0007018 6 10 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_6 Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE0_OVR_0_7_reg Address hc000701c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE0_OVR_0_7_reg = 3221254172 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_ENABLE_D0_OVR_VAL = hc000701c 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_ENABLE_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_STOPSTATE_D0_OVR_VAL = hc000701c 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_STOPSTATE_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ULPSACTIVENOT_D0_OVR_VAL = hc000701c 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ULPSACTIVENOT_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TURNREQUEST_D0_OVR_VAL = hc000701c 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNREQUEST_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TURNDISABLE_D0_OVR_VAL = hc000701c 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNDISABLE_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_DIRECTION_D0_OVR_VAL = hc000701c 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_DIRECTION_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_FORCERXMODE_D0_OVR_VAL = hc000701c 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCERXMODE_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_FORCETXSTOPMODE_D0_OVR_VAL = hc000701c 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCETXSTOPMODE_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRESC_D0_OVR_VAL = hc000701c 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRESC_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRSYNCESC_D0_OVR_VAL = hc000701c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSYNCESC_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRCONTROL_D0_OVR_VAL = hc000701c 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTROL_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRCONTENTIONLP0_D0_OVR_VAL = hc000701c 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP0_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRCONTENTIONLP1_D0_OVR_VAL = hc000701c 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP1_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRSOTHS_D0_OVR_VAL = hc000701c 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSOTHS_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRSOTSYNCHS_D0_OVR_VAL = hc000701c 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSOTSYNCHS_D0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_RESERVED_15_15 = hc000701c 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE0_OVR_0_8_reg Address hc0007020
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE0_OVR_0_8_reg = 3221254176 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_ENABLE_D0_OVR_EN = hc0007020 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_ENABLE_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_STOPSTATE_D0_OVR_EN = hc0007020 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_STOPSTATE_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ULPSACTIVENOT_D0_OVR_EN = hc0007020 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ULPSACTIVENOT_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TURNREQUEST_D0_OVR_EN = hc0007020 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNREQUEST_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TURNDISABLE_D0_OVR_EN = hc0007020 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNDISABLE_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_DIRECTION_D0_OVR_EN = hc0007020 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_DIRECTION_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_FORCERXMODE_D0_OVR_EN = hc0007020 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCERXMODE_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_FORCETXSTOPMODE_D0_OVR_EN = hc0007020 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCETXSTOPMODE_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRESC_D0_OVR_EN = hc0007020 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRESC_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRSYNCESC_D0_OVR_EN = hc0007020 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSYNCESC_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRCONTROL_D0_OVR_EN = hc0007020 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTROL_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRCONTENTIONLP0_D0_OVR_EN = hc0007020 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP0_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRCONTENTIONLP1_D0_OVR_EN = hc0007020 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP1_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRSOTHS_D0_OVR_EN = hc0007020 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSOTHS_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRSOTSYNCHS_D0_OVR_EN = hc0007020 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSOTSYNCHS_D0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_RESERVED_15_15 = hc0007020 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE0_OVR_1_0_reg Address hc0007040
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE0_OVR_1_0_reg = 3221254208 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXDATAHS_C0_OVR_VAL = hc0007040 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXDATAHS_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE0_OVR_1_1_reg Address hc0007044
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE0_OVR_1_1_reg = 3221254212 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXACTIVEHS_C0_OVR_VAL = hc0007044 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXACTIVEHS_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXSYNCHS_C0_OVR_VAL = hc0007044 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXSYNCHS_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXVALIDHS_C0_OVR_VAL = hc0007044 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDHS_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXINVALIDCODEHS_C0_OVR_VAL = hc0007044 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXINVALIDCODEHS_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXWORDCLKHS_C0_OVR_VAL = hc0007044 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXWORDCLKHS_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXSYNCTYPEHS_C0_OVR_VAL = hc0007044 5 3 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXSYNCTYPEHS_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXALPVALIDHS_C0_OVR_EN = hc0007044 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXALPVALIDHS_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXALPCODE_C0_OVR_VAL = hc0007044 9 4 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXALPCODE_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXALPNIBBLE_C0_OVR_EN = hc0007044 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXALPNIBBLE_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_RESERVED_15_14 = hc0007044 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE0_OVR_1_2_reg Address hc0007048
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE0_OVR_1_2_reg = 3221254216 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXACTIVEHS_C0_OVR_EN = hc0007048 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXACTIVEHS_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXSYNCHS_C0_OVR_EN = hc0007048 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXSYNCHS_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXVALIDHS_C0_OVR_EN = hc0007048 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDHS_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXINVALIDCODEHS_C0_OVR_EN = hc0007048 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXINVALIDCODEHS_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXWORDCLKHS_C0_OVR_EN = hc0007048 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXWORDCLKHS_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXSYNCTYPEHS_C0_OVR_EN = hc0007048 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXSYNCTYPEHS_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXDATAHS_C0_OVR_EN = hc0007048 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXDATAHS_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXALPVALIDHS_C0_OVR_VAL = hc0007048 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXALPVALIDHS_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXALPNIBBLE_C0_OVR_VAL = hc0007048 8 4 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXALPNIBBLE_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXALPCODE_C0_OVR_EN = hc0007048 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXALPCODE_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXSYNCTYPEHS_C0_OVR_VAL = hc0007048 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXSYNCTYPEHS_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE0_OVR_1_3_reg Address hc000704c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE0_OVR_1_3_reg = 3221254220 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXDATAHS_C0_OVR_VAL = hc000704c 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXDATAHS_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE0_OVR_1_4_reg Address hc0007050
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE0_OVR_1_4_reg = 3221254224 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXREQUESTESC_C0_OVR_VAL = hc0007050 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTESC_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXLPDTESC_C0_OVR_VAL = hc0007050 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXLPDTESC_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXULPSEXIT_C0_OVR_VAL = hc0007050 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSEXIT_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXULPSESC_C0_OVR_VAL = hc0007050 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSESC_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXVALIDESC_C0_OVR_VAL = hc0007050 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXVALIDESC_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_TXREADYESC_C0_OVR_VAL = hc0007050 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYESC_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXTRIGGERESC_C0_OVR_VAL = hc0007050 6 4 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXTRIGGERESC_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXDATAESC_C0_OVR_EN = hc0007050 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATAESC_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXREQUESTHS_C0_OVR_VAL = hc0007050 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTHS_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXDATATRANSFERENHS_C0_OVR_VAL = hc0007050 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATATRANSFERENHS_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_TXREADYHS_C0_OVR_VAL = hc0007050 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYHS_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_TXWORDCLKHS_C0_OVR_VAL = hc0007050 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXWORDCLKHS_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_RESERVED_15_15 = hc0007050 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE0_OVR_1_5_reg Address hc0007054
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE0_OVR_1_5_reg = 3221254228 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXREQUESTESC_C0_OVR_EN = hc0007054 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTESC_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXLPDTESC_C0_OVR_EN = hc0007054 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXLPDTESC_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXULPSEXIT_C0_OVR_EN = hc0007054 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSEXIT_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXULPSESC_C0_OVR_EN = hc0007054 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSESC_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXVALIDESC_C0_OVR_EN = hc0007054 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXVALIDESC_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_TXREADYESC_C0_OVR_EN = hc0007054 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYESC_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXTRIGGERESC_C0_OVR_EN = hc0007054 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXTRIGGERESC_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXDATAESC_C0_OVR_VAL = hc0007054 7 8 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXDATAESC_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_RESERVED_15_15 = hc0007054 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE0_OVR_1_6_reg Address hc0007058
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE0_OVR_1_6_reg = 3221254232 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXCLKESC_C0_OVR_VAL = hc0007058 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXCLKESC_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXLPDTESC_C0_OVR_VAL = hc0007058 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXLPDTESC_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXULPSESC_C0_OVR_VAL = hc0007058 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXULPSESC_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXVALIDESC_C0_OVR_VAL = hc0007058 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDESC_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXTRIGGERESC_C0_OVR_VAL = hc0007058 4 4 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXTRIGGERESC_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXDATAESC_C0_OVR_VAL = hc0007058 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXDATAESC_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE0_OVR_1_7_reg Address hc000705c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE0_OVR_1_7_reg = 3221254236 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXCLKESC_C0_OVR_EN = hc000705c 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXCLKESC_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXLPDTESC_C0_OVR_EN = hc000705c 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXLPDTESC_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXULPSESC_C0_OVR_EN = hc000705c 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXULPSESC_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXVALIDESC_C0_OVR_EN = hc000705c 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDESC_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXTRIGGERESC_C0_OVR_EN = hc000705c 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXTRIGGERESC_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_RXDATAESC_C0_OVR_EN = hc000705c 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXDATAESC_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXREQUESTHS_C0_OVR_EN = hc000705c 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTHS_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXDATATRANSFERENHS_C0_OVR_EN = hc000705c 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATATRANSFERENHS_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_TXREADYHS_C0_OVR_EN = hc000705c 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYHS_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_TXWORDCLKHS_C0_OVR_EN = hc000705c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXWORDCLKHS_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXDATAHS_C0_OVR_EN = hc000705c 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATAHS_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXSENDSYNCHS_C0_OVR_EN = hc000705c 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXSENDSYNCHS_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXSYNCTYPEHS_C0_OVR_EN = hc000705c 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXSYNCTYPEHS_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_RESERVED_15_13 = hc000705c 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE0_OVR_1_8_reg Address hc0007060
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE0_OVR_1_8_reg = 3221254240 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_ENABLE_C0_OVR_VAL = hc0007060 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_ENABLE_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_STOPSTATE_C0_OVR_VAL = hc0007060 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_STOPSTATE_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ULPSACTIVENOT_C0_OVR_VAL = hc0007060 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ULPSACTIVENOT_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TURNREQUEST_C0_OVR_VAL = hc0007060 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNREQUEST_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TURNDISABLE_C0_OVR_VAL = hc0007060 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNDISABLE_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_DIRECTION_C0_OVR_VAL = hc0007060 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_DIRECTION_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_FORCERXMODE_C0_OVR_VAL = hc0007060 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCERXMODE_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_FORCETXSTOPMODE_C0_OVR_VAL = hc0007060 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCETXSTOPMODE_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRESC_C0_OVR_VAL = hc0007060 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRESC_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRSYNCESC_C0_OVR_VAL = hc0007060 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSYNCESC_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRCONTROL_C0_OVR_VAL = hc0007060 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTROL_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRCONTENTIONLP0_C0_OVR_VAL = hc0007060 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP0_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRCONTENTIONLP1_C0_OVR_VAL = hc0007060 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP1_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRSOTHS_C0_OVR_VAL = hc0007060 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSOTHS_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TXSENDSYNCHS_C0_OVR_VAL = hc0007060 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXSENDSYNCHS_C0_OVR_VAL Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_RESERVED_15_15 = hc0007060 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE0_OVR_1_9_reg Address hc0007064
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE0_OVR_1_9_reg = 3221254244 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_ENABLE_C0_OVR_EN = hc0007064 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_ENABLE_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_STOPSTATE_C0_OVR_EN = hc0007064 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_STOPSTATE_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ULPSACTIVENOT_C0_OVR_EN = hc0007064 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ULPSACTIVENOT_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TURNREQUEST_C0_OVR_EN = hc0007064 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNREQUEST_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_TURNDISABLE_C0_OVR_EN = hc0007064 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNDISABLE_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_DIRECTION_C0_OVR_EN = hc0007064 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_DIRECTION_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_FORCERXMODE_C0_OVR_EN = hc0007064 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCERXMODE_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_I_FORCETXSTOPMODE_C0_OVR_EN = hc0007064 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCETXSTOPMODE_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRESC_C0_OVR_EN = hc0007064 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRESC_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRSYNCESC_C0_OVR_EN = hc0007064 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSYNCESC_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRCONTROL_C0_OVR_EN = hc0007064 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTROL_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRCONTENTIONLP0_C0_OVR_EN = hc0007064 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP0_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRCONTENTIONLP1_C0_OVR_EN = hc0007064 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP1_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_O_ERRSOTHS_C0_OVR_EN = hc0007064 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSOTHS_C0_OVR_EN Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_RESERVED_15_14 = hc0007064 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 Delivered Packets with Crc Error Counters for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_0_reg Address hc0007080
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_0_reg = 3221254272 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE0_SPARE_IN = hc0007080 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_SPARE_IN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_1_reg Address hc0007084
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_1_reg = 3221254276 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE0_SPARE_IN = hc0007084 0 9 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_SPARE_IN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSTX_LOWCAP_EN_OVR_EN = hc0007084 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_LOWCAP_EN_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_RESERVED_15_10 = hc0007084 10 6 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_2_reg Address hc0007088
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_2_reg = 3221254280 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE0_SEL_LANE_CFG = hc0007088 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_SEL_LANE_CFG Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_OVR_EN = hc0007088 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_TERM_EN200OHMS = hc0007088 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_TERM_EN200OHMS Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PON_OVR_VAL = hc0007088 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PON_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSTX_LOWCAP_EN_OVR_VAL = hc0007088 4 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_LOWCAP_EN_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSTX_DIV_EN_OVR_VAL = hc0007088 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_DIV_EN_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_RESERVED_15_7 = hc0007088 7 9 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_7 Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_3_reg Address hc000708c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_3_reg = 3221254284 0 16 b00000000000000000000000100010000 RW
csi_tadp_tx_0_OA_LANE0_HSTX_PON_OVR_VAL = hc000708c 0 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_PON_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSTX_BOOST_EN_OVR_VAL = hc000708c 2 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_BOOST_EN_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSTX_SEL_PHASE0 = hc000708c 4 1 h1 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_SEL_PHASE0 Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSTX_EQA = hc000708c 5 3 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_EQA Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSTX_SEL_CLKLB = hc000708c 8 1 h1 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_SEL_CLKLB Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_LPTX_DIN_DN_OVR_VAL = hc000708c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_LPTX_DIN_DN_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_LPTX_DIN_DP_OVR_VAL = hc000708c 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_LPTX_DIN_DP_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_DCC_EN_OVR_VAL = hc000708c 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_DCC_EN_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_EN_OVR_VAL = hc000708c 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_EN_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_OVR_VAL = hc000708c 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_RESERVED_15_14 = hc000708c 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_4_reg Address hc0007090
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_4_reg = 3221254288 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE0_HSTX_PON_OVR_EN = hc0007090 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_PON_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSTX_BOOST_EN_OVR_EN = hc0007090 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_BOOST_EN_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSTX_EQB = hc0007090 2 3 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_EQB Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSTX_CLK_OBS_EN = hc0007090 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_CLK_OBS_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_LPTX_DIN_DN_OVR_EN = hc0007090 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_LPTX_DIN_DN_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_LPTX_DIN_DP_OVR_EN = hc0007090 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_LPTX_DIN_DP_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_LPTX_SR_BYPASS_EN = hc0007090 8 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_LPTX_SR_BYPASS_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSTX_TERM_EN_OVR_EN = hc0007090 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_TERM_EN_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_DCC_EN_OVR_EN = hc0007090 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_DCC_EN_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_RESERVED_15_12 = hc0007090 12 4 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_12 Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_5_reg Address hc0007094
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_5_reg = 3221254292 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE0_HSTX_DATA_AB_DPHY_OVR_VAL = hc0007094 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_DATA_AB_DPHY_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSTX_DATA_BC_OVR_EN = hc0007094 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_DATA_BC_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSTX_DATA_CA_OVR_EN = hc0007094 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_DATA_CA_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSTX_TERM_EN_OVR_VAL = hc0007094 10 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_TERM_EN_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_EN_OVR_EN = hc0007094 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_EN_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_RESERVED_15_13 = hc0007094 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_6_reg Address hc0007098
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_6_reg = 3221254296 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE0_HSTX_DATA_BC_OVR_VAL = hc0007098 0 7 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_DATA_BC_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSTX_DATA_CA_OVR_VAL = hc0007098 7 7 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_DATA_CA_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSTX_DATA_AB_DPHY_OVR_EN = hc0007098 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_DATA_AB_DPHY_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PON_OVR_EN = hc0007098 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PON_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_7_reg Address hc000709c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_7_reg = 3221254300 0 16 b00000000000000000001110000000000 RW
csi_tadp_tx_0_OA_LANE0_LPTX_EN_OVR_VAL = hc000709c 0 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_LPTX_EN_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_LPTX_PON_OVR_VAL = hc000709c 2 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_LPTX_PON_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_LPTX_PULLDWN_EN_OVR_VAL = hc000709c 4 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_LPTX_PULLDWN_EN_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_LPRX_LP_PON_OVR_EN = hc000709c 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_LPRX_LP_PON_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_LPRX_CD_PON_OVR_EN = hc000709c 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_LPRX_CD_PON_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_LPRX_ULP_PON_OVR_EN = hc000709c 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_LPRX_ULP_PON_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_CDR_FBK_EN_OVR_VAL = hc000709c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_CDR_FBK_EN_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_CDR_FBK_CAP_PROG = hc000709c 10 3 h7 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_CDR_FBK_CAP_PROG Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_VCM_DET_SYNC_BYPASS = hc000709c 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_VCM_DET_SYNC_BYPASS Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_RESERVED_15_14 = hc000709c 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_8_reg Address hc00070a0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_8_reg = 3221254304 0 16 b00000000000000000001000000000000 RW
csi_tadp_tx_0_OA_LANE0_LPRX_LP_PON_OVR_VAL = hc00070a0 0 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_LPRX_LP_PON_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_LPRX_CD_PON_OVR_VAL = hc00070a0 2 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_LPRX_CD_PON_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_LPRX_ULP_PON_OVR_VAL = hc00070a0 4 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_LPRX_ULP_PON_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_LPTX_EN_OVR_EN = hc00070a0 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_LPTX_EN_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_LPTX_PON_OVR_EN = hc00070a0 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_LPTX_PON_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_LPTX_PULLDWN_EN_OVR_EN = hc00070a0 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_LPTX_PULLDWN_EN_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_CDR_FBK_EN_OVR_EN = hc00070a0 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_CDR_FBK_EN_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_MASK_CHANGE_OVR_VAL = hc00070a0 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_MASK_CHANGE_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_DELAY_OVR_EN = hc00070a0 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_DELAY_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_CDPHY_SEL_FAST = hc00070a0 12 1 h1 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_CDPHY_SEL_FAST Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_RESERVED_15_13 = hc00070a0 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_9_reg Address hc00070a4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_9_reg = 3221254308 0 16 b00000000000000000000101011110000 RW
csi_tadp_tx_0_OA_LANE0_HSRX_EQUALIZER = hc00070a4 0 3 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_EQUALIZER Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_GMODE = hc00070a4 3 2 h2 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_GMODE Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_HS_CLK_DIV = hc00070a4 5 3 h7 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_HS_CLK_DIV Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_SEL_GATED_POLARITY = hc00070a4 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_SEL_GATED_POLARITY Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_CDR_DIV = hc00070a4 9 3 h5 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_CDR_DIV Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_DELAY_OVR_VAL = hc00070a4 12 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_DELAY_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_10_reg Address hc00070a8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_10_reg = 3221254312 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE0_HSRX_TERM_RIGHT_EN_OVR_VAL = hc00070a8 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_TERM_RIGHT_EN_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_TERM_LEFT_EN_OVR_VAL = hc00070a8 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_TERM_LEFT_EN_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_CLK_CHANNEL_PULL_EN = hc00070a8 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_CLK_CHANNEL_PULL_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_HS_CLK_DIV_EN_OVR_VAL = hc00070a8 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_HS_CLK_DIV_EN_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DESERIALIZER_EN_OVR_VAL = hc00070a8 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DESERIALIZER_EN_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DESERIALIZER_DATA_EN_OVR_VAL = hc00070a8 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DESERIALIZER_DATA_EN_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DESERIALIZER_DIV_EN_OVR_VAL = hc00070a8 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DESERIALIZER_DIV_EN_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_OFFCAL_OBS_EN_OVR_VAL = hc00070a8 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_OFFCAL_OBS_EN_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_VCM_DET_PON_OVR_VAL = hc00070a8 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_VCM_DET_PON_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_VCM_DET_OUT_EN_OVR_VAL = hc00070a8 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_VCM_DET_OUT_EN_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_ALP_DET_RIGHT_PON_OVR_VAL = hc00070a8 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_ALP_DET_RIGHT_PON_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_ALP_DET_LEFT_PON_OVR_VAL = hc00070a8 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_ALP_DET_LEFT_PON_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_MASK_CHANGE_OVR_EN = hc00070a8 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_MASK_CHANGE_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_PON_OVR_EN = hc00070a8 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_PON_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_EN_OVR_EN = hc00070a8 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_EN_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSTX_DIV_EN_OVR_EN = hc00070a8 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSTX_DIV_EN_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_11_reg Address hc00070ac
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_11_reg = 3221254316 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE0_HSRX_TERM_RIGHT_EN_OVR_EN = hc00070ac 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_TERM_RIGHT_EN_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_TERM_LEFT_EN_OVR_EN = hc00070ac 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_TERM_LEFT_EN_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_HS_CLK_DIV_EN_OVR_EN = hc00070ac 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_HS_CLK_DIV_EN_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DESERIALIZER_EN_OVR_EN = hc00070ac 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DESERIALIZER_EN_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DESERIALIZER_DATA_EN_OVR_EN = hc00070ac 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DESERIALIZER_DATA_EN_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DESERIALIZER_DIV_EN_OVR_EN = hc00070ac 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DESERIALIZER_DIV_EN_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_OFFCAL_OBS_EN_OVR_EN = hc00070ac 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_OFFCAL_OBS_EN_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_VCM_DET_PON_OVR_EN = hc00070ac 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_VCM_DET_PON_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_VCM_DET_OUT_EN_OVR_EN = hc00070ac 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_VCM_DET_OUT_EN_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_ALP_DET_RIGHT_PON_OVR_EN = hc00070ac 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_ALP_DET_RIGHT_PON_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_ALP_DET_LEFT_PON_OVR_EN = hc00070ac 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_ALP_DET_LEFT_PON_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_PON_OVR_VAL = hc00070ac 11 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_PON_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_EN_OVR_VAL = hc00070ac 13 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_EN_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_RESERVED_15_15 = hc00070ac 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_12_reg Address hc00070b0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_12_reg = 3221254320 0 16 b00000000000000000000100000000000 RW
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_BIAS_BYPASS_EN_OVR_VAL = hc00070b0 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_BIAS_BYPASS_EN_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_BYPASS_EN_OVR_VAL = hc00070b0 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_BYPASS_EN_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_CHANGE_OVR_VAL = hc00070b0 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_CHANGE_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DLL_EN_OVR_VAL = hc00070b0 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DLL_EN_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_PREAMBLE_CAL_EN_OVR_VAL = hc00070b0 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_PREAMBLE_CAL_EN_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_VT_COMP_BIAS = hc00070b0 5 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_VT_COMP_BIAS Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DATA_DELAY_OVR_EN = hc00070b0 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DATA_DELAY_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_DIV = hc00070b0 10 3 h2 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_DIV Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_FINE_RANGE = hc00070b0 13 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_FINE_RANGE Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_SR_BYPASS_Z = hc00070b0 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_CPHY_SR_BYPASS_Z Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_13_reg Address hc00070b4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_13_reg = 3221254324 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_BIAS_BYPASS_EN_OVR_EN = hc00070b4 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_BIAS_BYPASS_EN_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_BYPASS_EN_OVR_EN = hc00070b4 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_BYPASS_EN_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_CHANGE_OVR_EN = hc00070b4 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_CHANGE_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DLL_EN_OVR_EN = hc00070b4 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DLL_EN_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_PREAMBLE_CAL_EN_OVR_EN = hc00070b4 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_PREAMBLE_CAL_EN_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_VT_COMP_EN = hc00070b4 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_VT_COMP_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DATA_DELAY_OVR_VAL = hc00070b4 6 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DATA_DELAY_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_BIAS_OVR_EN = hc00070b4 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_BIAS_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_COARSE_BANK_OVR_EN = hc00070b4 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_COARSE_BANK_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_TUNE_MODE_OVR_EN = hc00070b4 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_TUNE_MODE_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DLL_FBK_OVR_EN = hc00070b4 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DLL_FBK_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_RESERVED_15_14 = hc00070b4 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_14_reg Address hc00070b8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_14_reg = 3221254328 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_BIAS_OVR_VAL = hc00070b8 0 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_BIAS_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_COARSE_BANK_OVR_VAL = hc00070b8 4 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_COARSE_BANK_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_TUNE_MODE_OVR_VAL = hc00070b8 8 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_TUNE_MODE_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DLL_FBK_OVR_VAL = hc00070b8 10 6 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DLL_FBK_OVR_VAL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_15_reg Address hc00070bc
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_2_15_reg = 3221254332 0 16 b00000000000000000000000000000100 RW
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DLL_CP_PROG = hc00070bc 0 3 h4 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DLL_CP_PROG Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_CLK_CHANNEL = hc00070bc 3 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_CLK_CHANNEL Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_OFFCAL_RIGHT_OVR_EN = hc00070bc 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_OFFCAL_RIGHT_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_OFFCAL_LEFT_OVR_EN = hc00070bc 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_OFFCAL_LEFT_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_EN = hc00070bc 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_MID_OVR_EN = hc00070bc 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_MID_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_LEFT_OVR_EN = hc00070bc 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_LEFT_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_HSRX_MODE_OVR_EN = hc00070bc 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_MODE_OVR_EN Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 
csi_tadp_tx_0_OA_LANE0_ATB_SW = hc00070bc 11 5 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_ATB_SW Delivered Good Packets for each type. Controled with DeliveredCtrl_clear/latch/en 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_3_0_reg Address hc00070c0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_3_0_reg = 3221254336 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE0_HSRX_OFFCAL_RIGHT_OVR_VAL = hc00070c0 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_OFFCAL_RIGHT_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_OA_LANE0_HSRX_OFFCAL_LEFT_OVR_VAL = hc00070c0 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_OFFCAL_LEFT_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_3_1_reg Address hc00070c4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_3_1_reg = 3221254340 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_VAL = hc00070c4 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_MID_OVR_VAL = hc00070c4 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_MID_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_3_2_reg Address hc00070c8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_3_2_reg = 3221254344 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_LEFT_OVR_VAL = hc00070c8 0 9 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_LEFT_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_MID_OVR_VAL = hc00070c8 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_MID_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_VAL = hc00070c8 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_OA_LANE0_HSRX_MODE_OVR_VAL = hc00070c8 11 3 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE0_HSRX_MODE_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_RESERVED_15_14 = hc00070c8 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_3_3_reg Address hc00070cc
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_3_3_reg = 3221254348 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_LANE0_HSRX_DATA_AB_LEFT_OVR_VAL = hc00070cc 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_DATA_AB_LEFT_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSRX_DATA_BC_MID_OVR_VAL = hc00070cc 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_DATA_BC_MID_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_3_4_reg Address hc00070d0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_3_4_reg = 3221254352 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_LANE0_HSRX_DATA_CA_RIGHT_OVR_VAL = hc00070d0 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_DATA_CA_RIGHT_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSRX_WORD_CLK_OVR_VAL = hc00070d0 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_WORD_CLK_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSRX_HS_CLK_DIV_OUT_OVR_VAL = hc00070d0 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_HS_CLK_DIV_OUT_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSTX_WORD_CLK_OVR_VAL = hc00070d0 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSTX_WORD_CLK_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSRX_VCM_DET_OUT_OVR_VAL = hc00070d0 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_VCM_DET_OUT_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSRX_OUT_CAL_LEFT_N_OVR_VAL = hc00070d0 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_OUT_CAL_LEFT_N_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSRX_OUT_CAL_LEFT_P_OVR_VAL = hc00070d0 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_OUT_CAL_LEFT_P_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSRX_OUT_CAL_RIGHT_N_OVR_VAL = hc00070d0 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_OUT_CAL_RIGHT_N_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSRX_OUT_CAL_RIGHT_P_OVR_VAL = hc00070d0 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_OUT_CAL_RIGHT_P_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_3_5_reg Address hc00070d4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_3_5_reg = 3221254356 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_LANE0_HSRX_DATA_AB_LEFT_OVR_EN = hc00070d4 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_DATA_AB_LEFT_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSRX_DATA_BC_MID_OVR_EN = hc00070d4 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_DATA_BC_MID_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSRX_DATA_CA_RIGHT_OVR_EN = hc00070d4 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_DATA_CA_RIGHT_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSRX_WORD_CLK_OVR_EN = hc00070d4 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_WORD_CLK_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSRX_HS_CLK_DIV_OUT_OVR_EN = hc00070d4 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_HS_CLK_DIV_OUT_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSTX_WORD_CLK_OVR_EN = hc00070d4 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSTX_WORD_CLK_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSRX_VCM_DET_OUT_OVR_EN = hc00070d4 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_VCM_DET_OUT_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSRX_OUT_CAL_LEFT_N_OVR_EN = hc00070d4 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_OUT_CAL_LEFT_N_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSRX_OUT_CAL_LEFT_P_OVR_EN = hc00070d4 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_OUT_CAL_LEFT_P_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSRX_OUT_CAL_RIGHT_N_OVR_EN = hc00070d4 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_OUT_CAL_RIGHT_N_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSRX_OUT_CAL_RIGHT_P_OVR_EN = hc00070d4 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_OUT_CAL_RIGHT_P_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSRX_DPHY_DDL_OSC_CLK_OVR_EN = hc00070d4 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_DPHY_DDL_OSC_CLK_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSRX_CPHY_ALP_DET_LEFT_OUT_OVR_EN = hc00070d4 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_CPHY_ALP_DET_LEFT_OUT_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSRX_CPHY_ALP_DET_RIGHT_OUT_OVR_EN = hc00070d4 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_CPHY_ALP_DET_RIGHT_OUT_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSRX_CPHY_CDR_OSC_CLK_OVR_EN = hc00070d4 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_CPHY_CDR_OSC_CLK_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_RESERVED_15_15 = hc00070d4 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_3_6_reg Address hc00070d8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_3_6_reg = 3221254360 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_LANE0_HSRX_DPHY_DDL_OSC_CLK_OVR_VAL = hc00070d8 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_DPHY_DDL_OSC_CLK_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSRX_CPHY_ALP_DET_LEFT_OUT_OVR_VAL = hc00070d8 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_CPHY_ALP_DET_LEFT_OUT_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSRX_CPHY_ALP_DET_RIGHT_OUT_OVR_VAL = hc00070d8 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_CPHY_ALP_DET_RIGHT_OUT_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_HSRX_CPHY_CDR_OSC_CLK_OVR_VAL = hc00070d8 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_HSRX_CPHY_CDR_OSC_CLK_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_LPRX_DOUTCD_OVR_VAL = hc00070d8 4 2 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE0_LPRX_DOUTCD_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_LPRX_DOUTLP_OVR_VAL = hc00070d8 6 2 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE0_LPRX_DOUTLP_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_LPRX_DOUTULP_OVR_VAL = hc00070d8 8 2 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE0_LPRX_DOUTULP_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_SPARE_OUT_OVR_VAL = hc00070d8 10 4 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE0_SPARE_OUT_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_RESERVED_15_14 = hc00070d8 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_3_7_reg Address hc00070dc
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE0_CTRL_3_7_reg = 3221254364 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_LANE0_LPRX_DOUTCD_OVR_EN = hc00070dc 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_LPRX_DOUTCD_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_LPRX_DOUTLP_OVR_EN = hc00070dc 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_LPRX_DOUTLP_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_LPRX_DOUTULP_OVR_EN = hc00070dc 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_LPRX_DOUTULP_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_IA_LANE0_SPARE_OUT_OVR_EN = hc00070dc 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE0_SPARE_OUT_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_RESERVED_15_4 = hc00070dc 4 12 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_4 Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE0_OVR_5_2_reg Address hc0007148
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE0_OVR_5_2_reg = 3221254472 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXSENDALPHS_C0_OVR_VAL = hc0007148 0 2 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXSENDALPHS_C0_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXALPCODE_C0_OVR_VAL = hc0007148 2 4 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXALPCODE_C0_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXALPNIBBLE_C0_OVR_VAL = hc0007148 6 4 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXALPNIBBLE_C0_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_ALPWAKESTATE_C0_OVR_VAL = hc0007148 10 3 h0 RW HEX
; Desc_csi_tadp_tx_0_I_ALPWAKESTATE_C0_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_RESERVED_15_13 = hc0007148 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE0_OVR_5_3_reg Address hc000714c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE0_OVR_5_3_reg = 3221254476 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXSENDALPHS_C0_OVR_EN = hc000714c 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXSENDALPHS_C0_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXALPCODE_C0_OVR_EN = hc000714c 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXALPCODE_C0_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXALPNIBBLE_C0_OVR_EN = hc000714c 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXALPNIBBLE_C0_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_ALPWAKESTATE_C0_OVR_EN = hc000714c 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_ALPWAKESTATE_C0_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_RESERVED_15_4 = hc000714c 4 12 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_4 Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_RW_TRIO0_0_reg Address hc0007200
_csi_tadp_tx_0_CORE_DIG_RW_TRIO0_0_reg = 3221254656 0 16 b00000000000000000000010001001010 RW
csi_tadp_tx_0_DESERIALIZER_DATA_EN_DELAY_THRESH = hc0007200 0 3 h2 RW HEX
; Desc_csi_tadp_tx_0_DESERIALIZER_DATA_EN_DELAY_THRESH Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_DESERIALIZER_DIV_EN_DELAY_THRESH = hc0007200 3 3 h1 RW HEX
; Desc_csi_tadp_tx_0_DESERIALIZER_DIV_EN_DELAY_THRESH Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_DESERIALIZER_DIV_EN_DELAY_DEASS_THRESH = hc0007200 6 3 h1 RW HEX
; Desc_csi_tadp_tx_0_DESERIALIZER_DIV_EN_DELAY_DEASS_THRESH Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_POST_RECEIVED_RESET_THRESH = hc0007200 9 3 h2 RW HEX
; Desc_csi_tadp_tx_0_POST_RECEIVED_RESET_THRESH Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_RESERVED_15_12 = hc0007200 12 4 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_12 Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_RW_TRIO0_1_reg Address hc0007204
_csi_tadp_tx_0_CORE_DIG_RW_TRIO0_1_reg = 3221254660 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_POST_DET_DELAY_THRESH = hc0007204 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_POST_DET_DELAY_THRESH Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_RW_TRIO0_2_reg Address hc0007208
_csi_tadp_tx_0_CORE_DIG_RW_TRIO0_2_reg = 3221254664 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_DESERIALIZER_EN_DELAY_DEASS_THRESH = hc0007208 0 8 ha RW HEX
; Desc_csi_tadp_tx_0_DESERIALIZER_EN_DELAY_DEASS_THRESH Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_RESERVED_15_8 = hc0007208 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE1_OVR_0_0_reg Address hc0007800
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE1_OVR_0_0_reg = 3221256192 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXACTIVEHS_D1_OVR_VAL = hc0007800 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXACTIVEHS_D1_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXSYNCHS_D1_OVR_VAL = hc0007800 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXSYNCHS_D1_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXVALIDHS_D1_OVR_VAL = hc0007800 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDHS_D1_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXSKEWCALHS_D1_OVR_VAL = hc0007800 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXSKEWCALHS_D1_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXWORDCLKHS_D1_OVR_VAL = hc0007800 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXWORDCLKHS_D1_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXDATAHS_D1_OVR_VAL = hc0007800 5 8 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXDATAHS_D1_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXALTERNATECALHS_D1_OVR_VAL = hc0007800 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXALTERNATECALHS_D1_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_RESERVED_15_14 = hc0007800 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE1_OVR_0_1_reg Address hc0007804
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE1_OVR_0_1_reg = 3221256196 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXACTIVEHS_D1_OVR_EN = hc0007804 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXACTIVEHS_D1_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXSYNCHS_D1_OVR_EN = hc0007804 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXSYNCHS_D1_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXVALIDHS_D1_OVR_EN = hc0007804 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDHS_D1_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXSKEWCALHS_D1_OVR_EN = hc0007804 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXSKEWCALHS_D1_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXWORDCLKHS_D1_OVR_EN = hc0007804 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXWORDCLKHS_D1_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXDATAHS_D1_OVR_EN = hc0007804 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXDATAHS_D1_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXREQUESTHS_D1_OVR_EN = hc0007804 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTHS_D1_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXDATATRANSFERENHS_D1_OVR_EN = hc0007804 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATATRANSFERENHS_D1_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_TXREADYHS_D1_OVR_EN = hc0007804 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYHS_D1_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_TXWORDCLKHS_D1_OVR_EN = hc0007804 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXWORDCLKHS_D1_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXDATAHS_D1_OVR_EN = hc0007804 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATAHS_D1_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXALTERNATECALHS_D1_OVR_EN = hc0007804 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXALTERNATECALHS_D1_OVR_EN Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_RESERVED_15_12 = hc0007804 12 4 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_12 Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE1_OVR_0_2_reg Address hc0007808
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE1_OVR_0_2_reg = 3221256200 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXREQUESTHS_D1_OVR_VAL = hc0007808 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTHS_D1_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXDATATRANSFERENHS_D1_OVR_VAL = hc0007808 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATATRANSFERENHS_D1_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_TXREADYHS_D1_OVR_VAL = hc0007808 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYHS_D1_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_TXWORDCLKHS_D1_OVR_VAL = hc0007808 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXWORDCLKHS_D1_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXDATAHS_D1_OVR_VAL = hc0007808 4 8 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXDATAHS_D1_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXSKEWCALHS_D1_OVR_VAL = hc0007808 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXSKEWCALHS_D1_OVR_VAL Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_RESERVED_15_13 = hc0007808 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 Rceived Packets with Crc Error Counters for each type . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE1_OVR_0_3_reg Address hc000780c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE1_OVR_0_3_reg = 3221256204 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXREQUESTESC_D1_OVR_VAL = hc000780c 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTESC_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXLPDTESC_D1_OVR_VAL = hc000780c 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXLPDTESC_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXULPSEXIT_D1_OVR_VAL = hc000780c 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSEXIT_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXULPSESC_D1_OVR_VAL = hc000780c 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSESC_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXVALIDESC_D1_OVR_VAL = hc000780c 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXVALIDESC_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_TXREADYESC_D1_OVR_VAL = hc000780c 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYESC_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXTRIGGERESC_D1_OVR_VAL = hc000780c 6 4 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXTRIGGERESC_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXDATAESC_D1_OVR_EN = hc000780c 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATAESC_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXALTERNATECALHS_D1_OVR_EN = hc000780c 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXALTERNATECALHS_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXSKEWCALHS_D1_OVR_EN = hc000780c 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXSKEWCALHS_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_RESERVED_15_13 = hc000780c 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE1_OVR_0_4_reg Address hc0007810
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE1_OVR_0_4_reg = 3221256208 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXREQUESTESC_D1_OVR_EN = hc0007810 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTESC_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXLPDTESC_D1_OVR_EN = hc0007810 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXLPDTESC_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXULPSEXIT_D1_OVR_EN = hc0007810 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSEXIT_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXULPSESC_D1_OVR_EN = hc0007810 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSESC_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXVALIDESC_D1_OVR_EN = hc0007810 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXVALIDESC_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_TXREADYESC_D1_OVR_EN = hc0007810 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYESC_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXTRIGGERESC_D1_OVR_EN = hc0007810 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXTRIGGERESC_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXDATAESC_D1_OVR_VAL = hc0007810 7 8 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXDATAESC_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXALTERNATECALHS_D1_OVR_VAL = hc0007810 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXALTERNATECALHS_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE1_OVR_0_5_reg Address hc0007814
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE1_OVR_0_5_reg = 3221256212 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXCLKESC_D1_OVR_VAL = hc0007814 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXCLKESC_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXLPDTESC_D1_OVR_VAL = hc0007814 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXLPDTESC_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXULPSESC_D1_OVR_VAL = hc0007814 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXULPSESC_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXVALIDESC_D1_OVR_VAL = hc0007814 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDESC_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXTRIGGERESC_D1_OVR_VAL = hc0007814 4 4 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXTRIGGERESC_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXDATAESC_D1_OVR_VAL = hc0007814 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXDATAESC_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE1_OVR_0_6_reg Address hc0007818
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE1_OVR_0_6_reg = 3221256216 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXCLKESC_D1_OVR_EN = hc0007818 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXCLKESC_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXLPDTESC_D1_OVR_EN = hc0007818 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXLPDTESC_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXULPSESC_D1_OVR_EN = hc0007818 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXULPSESC_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXVALIDESC_D1_OVR_EN = hc0007818 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDESC_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXTRIGGERESC_D1_OVR_EN = hc0007818 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXTRIGGERESC_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXDATAESC_D1_OVR_EN = hc0007818 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXDATAESC_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_RESERVED_15_6 = hc0007818 6 10 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_6 Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE1_OVR_0_7_reg Address hc000781c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE1_OVR_0_7_reg = 3221256220 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_ENABLE_D1_OVR_VAL = hc000781c 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_ENABLE_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_STOPSTATE_D1_OVR_VAL = hc000781c 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_STOPSTATE_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ULPSACTIVENOT_D1_OVR_VAL = hc000781c 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ULPSACTIVENOT_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TURNREQUEST_D1_OVR_VAL = hc000781c 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNREQUEST_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TURNDISABLE_D1_OVR_VAL = hc000781c 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNDISABLE_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_DIRECTION_D1_OVR_VAL = hc000781c 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_DIRECTION_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_FORCERXMODE_D1_OVR_VAL = hc000781c 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCERXMODE_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_FORCETXSTOPMODE_D1_OVR_VAL = hc000781c 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCETXSTOPMODE_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRESC_D1_OVR_VAL = hc000781c 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRESC_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRSYNCESC_D1_OVR_VAL = hc000781c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSYNCESC_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRCONTROL_D1_OVR_VAL = hc000781c 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTROL_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRCONTENTIONLP0_D1_OVR_VAL = hc000781c 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP0_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRCONTENTIONLP1_D1_OVR_VAL = hc000781c 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP1_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRSOTHS_D1_OVR_VAL = hc000781c 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSOTHS_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRSOTSYNCHS_D1_OVR_VAL = hc000781c 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSOTSYNCHS_D1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_RESERVED_15_15 = hc000781c 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE1_OVR_0_8_reg Address hc0007820
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE1_OVR_0_8_reg = 3221256224 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_ENABLE_D1_OVR_EN = hc0007820 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_ENABLE_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_STOPSTATE_D1_OVR_EN = hc0007820 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_STOPSTATE_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ULPSACTIVENOT_D1_OVR_EN = hc0007820 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ULPSACTIVENOT_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TURNREQUEST_D1_OVR_EN = hc0007820 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNREQUEST_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TURNDISABLE_D1_OVR_EN = hc0007820 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNDISABLE_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_DIRECTION_D1_OVR_EN = hc0007820 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_DIRECTION_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_FORCERXMODE_D1_OVR_EN = hc0007820 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCERXMODE_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_FORCETXSTOPMODE_D1_OVR_EN = hc0007820 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCETXSTOPMODE_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRESC_D1_OVR_EN = hc0007820 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRESC_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRSYNCESC_D1_OVR_EN = hc0007820 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSYNCESC_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRCONTROL_D1_OVR_EN = hc0007820 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTROL_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRCONTENTIONLP0_D1_OVR_EN = hc0007820 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP0_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRCONTENTIONLP1_D1_OVR_EN = hc0007820 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP1_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRSOTHS_D1_OVR_EN = hc0007820 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSOTHS_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRSOTSYNCHS_D1_OVR_EN = hc0007820 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSOTSYNCHS_D1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_RESERVED_15_15 = hc0007820 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE1_OVR_1_0_reg Address hc0007840
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE1_OVR_1_0_reg = 3221256256 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXDATAHS_C1_OVR_VAL = hc0007840 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXDATAHS_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE1_OVR_1_1_reg Address hc0007844
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE1_OVR_1_1_reg = 3221256260 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXACTIVEHS_C1_OVR_VAL = hc0007844 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXACTIVEHS_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXSYNCHS_C1_OVR_VAL = hc0007844 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXSYNCHS_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXVALIDHS_C1_OVR_VAL = hc0007844 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDHS_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXINVALIDCODEHS_C1_OVR_VAL = hc0007844 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXINVALIDCODEHS_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXWORDCLKHS_C1_OVR_VAL = hc0007844 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXWORDCLKHS_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXSYNCTYPEHS_C1_OVR_VAL = hc0007844 5 3 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXSYNCTYPEHS_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXALPVALIDHS_C1_OVR_EN = hc0007844 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXALPVALIDHS_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXALPCODE_C1_OVR_VAL = hc0007844 9 4 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXALPCODE_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXALPNIBBLE_C1_OVR_EN = hc0007844 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXALPNIBBLE_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_RESERVED_15_14 = hc0007844 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE1_OVR_1_2_reg Address hc0007848
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE1_OVR_1_2_reg = 3221256264 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXACTIVEHS_C1_OVR_EN = hc0007848 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXACTIVEHS_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXSYNCHS_C1_OVR_EN = hc0007848 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXSYNCHS_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXVALIDHS_C1_OVR_EN = hc0007848 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDHS_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXINVALIDCODEHS_C1_OVR_EN = hc0007848 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXINVALIDCODEHS_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXWORDCLKHS_C1_OVR_EN = hc0007848 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXWORDCLKHS_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXSYNCTYPEHS_C1_OVR_EN = hc0007848 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXSYNCTYPEHS_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXDATAHS_C1_OVR_EN = hc0007848 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXDATAHS_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXALPVALIDHS_C1_OVR_VAL = hc0007848 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXALPVALIDHS_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXALPNIBBLE_C1_OVR_VAL = hc0007848 8 4 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXALPNIBBLE_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXALPCODE_C1_OVR_EN = hc0007848 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXALPCODE_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXSYNCTYPEHS_C1_OVR_VAL = hc0007848 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXSYNCTYPEHS_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE1_OVR_1_3_reg Address hc000784c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE1_OVR_1_3_reg = 3221256268 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXDATAHS_C1_OVR_VAL = hc000784c 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXDATAHS_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE1_OVR_1_4_reg Address hc0007850
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE1_OVR_1_4_reg = 3221256272 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXREQUESTESC_C1_OVR_VAL = hc0007850 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTESC_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXLPDTESC_C1_OVR_VAL = hc0007850 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXLPDTESC_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXULPSEXIT_C1_OVR_VAL = hc0007850 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSEXIT_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXULPSESC_C1_OVR_VAL = hc0007850 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSESC_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXVALIDESC_C1_OVR_VAL = hc0007850 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXVALIDESC_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_TXREADYESC_C1_OVR_VAL = hc0007850 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYESC_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXTRIGGERESC_C1_OVR_VAL = hc0007850 6 4 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXTRIGGERESC_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXDATAESC_C1_OVR_EN = hc0007850 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATAESC_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXREQUESTHS_C1_OVR_VAL = hc0007850 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTHS_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXDATATRANSFERENHS_C1_OVR_VAL = hc0007850 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATATRANSFERENHS_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_TXREADYHS_C1_OVR_VAL = hc0007850 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYHS_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_TXWORDCLKHS_C1_OVR_VAL = hc0007850 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXWORDCLKHS_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_RESERVED_15_15 = hc0007850 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE1_OVR_1_5_reg Address hc0007854
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE1_OVR_1_5_reg = 3221256276 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXREQUESTESC_C1_OVR_EN = hc0007854 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTESC_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXLPDTESC_C1_OVR_EN = hc0007854 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXLPDTESC_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXULPSEXIT_C1_OVR_EN = hc0007854 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSEXIT_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXULPSESC_C1_OVR_EN = hc0007854 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSESC_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXVALIDESC_C1_OVR_EN = hc0007854 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXVALIDESC_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_TXREADYESC_C1_OVR_EN = hc0007854 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYESC_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXTRIGGERESC_C1_OVR_EN = hc0007854 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXTRIGGERESC_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXDATAESC_C1_OVR_VAL = hc0007854 7 8 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXDATAESC_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_RESERVED_15_15 = hc0007854 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE1_OVR_1_6_reg Address hc0007858
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE1_OVR_1_6_reg = 3221256280 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXCLKESC_C1_OVR_VAL = hc0007858 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXCLKESC_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXLPDTESC_C1_OVR_VAL = hc0007858 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXLPDTESC_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXULPSESC_C1_OVR_VAL = hc0007858 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXULPSESC_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXVALIDESC_C1_OVR_VAL = hc0007858 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDESC_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXTRIGGERESC_C1_OVR_VAL = hc0007858 4 4 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXTRIGGERESC_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXDATAESC_C1_OVR_VAL = hc0007858 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXDATAESC_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE1_OVR_1_7_reg Address hc000785c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE1_OVR_1_7_reg = 3221256284 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXCLKESC_C1_OVR_EN = hc000785c 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXCLKESC_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXLPDTESC_C1_OVR_EN = hc000785c 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXLPDTESC_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXULPSESC_C1_OVR_EN = hc000785c 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXULPSESC_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXVALIDESC_C1_OVR_EN = hc000785c 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDESC_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXTRIGGERESC_C1_OVR_EN = hc000785c 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXTRIGGERESC_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_RXDATAESC_C1_OVR_EN = hc000785c 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXDATAESC_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXREQUESTHS_C1_OVR_EN = hc000785c 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTHS_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXDATATRANSFERENHS_C1_OVR_EN = hc000785c 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATATRANSFERENHS_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_TXREADYHS_C1_OVR_EN = hc000785c 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYHS_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_TXWORDCLKHS_C1_OVR_EN = hc000785c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXWORDCLKHS_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXDATAHS_C1_OVR_EN = hc000785c 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATAHS_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXSENDSYNCHS_C1_OVR_EN = hc000785c 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXSENDSYNCHS_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXSYNCTYPEHS_C1_OVR_EN = hc000785c 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXSYNCTYPEHS_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_RESERVED_15_13 = hc000785c 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE1_OVR_1_8_reg Address hc0007860
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE1_OVR_1_8_reg = 3221256288 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_ENABLE_C1_OVR_VAL = hc0007860 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_ENABLE_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_STOPSTATE_C1_OVR_VAL = hc0007860 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_STOPSTATE_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ULPSACTIVENOT_C1_OVR_VAL = hc0007860 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ULPSACTIVENOT_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TURNREQUEST_C1_OVR_VAL = hc0007860 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNREQUEST_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TURNDISABLE_C1_OVR_VAL = hc0007860 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNDISABLE_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_DIRECTION_C1_OVR_VAL = hc0007860 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_DIRECTION_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_FORCERXMODE_C1_OVR_VAL = hc0007860 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCERXMODE_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_FORCETXSTOPMODE_C1_OVR_VAL = hc0007860 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCETXSTOPMODE_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRESC_C1_OVR_VAL = hc0007860 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRESC_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRSYNCESC_C1_OVR_VAL = hc0007860 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSYNCESC_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRCONTROL_C1_OVR_VAL = hc0007860 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTROL_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRCONTENTIONLP0_C1_OVR_VAL = hc0007860 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP0_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRCONTENTIONLP1_C1_OVR_VAL = hc0007860 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP1_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRSOTHS_C1_OVR_VAL = hc0007860 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSOTHS_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TXSENDSYNCHS_C1_OVR_VAL = hc0007860 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXSENDSYNCHS_C1_OVR_VAL Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_RESERVED_15_15 = hc0007860 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE1_OVR_1_9_reg Address hc0007864
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE1_OVR_1_9_reg = 3221256292 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_ENABLE_C1_OVR_EN = hc0007864 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_ENABLE_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_STOPSTATE_C1_OVR_EN = hc0007864 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_STOPSTATE_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ULPSACTIVENOT_C1_OVR_EN = hc0007864 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ULPSACTIVENOT_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TURNREQUEST_C1_OVR_EN = hc0007864 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNREQUEST_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_TURNDISABLE_C1_OVR_EN = hc0007864 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNDISABLE_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_DIRECTION_C1_OVR_EN = hc0007864 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_DIRECTION_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_FORCERXMODE_C1_OVR_EN = hc0007864 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCERXMODE_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_I_FORCETXSTOPMODE_C1_OVR_EN = hc0007864 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCETXSTOPMODE_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRESC_C1_OVR_EN = hc0007864 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRESC_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRSYNCESC_C1_OVR_EN = hc0007864 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSYNCESC_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRCONTROL_C1_OVR_EN = hc0007864 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTROL_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRCONTENTIONLP0_C1_OVR_EN = hc0007864 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP0_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRCONTENTIONLP1_C1_OVR_EN = hc0007864 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP1_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_O_ERRSOTHS_C1_OVR_EN = hc0007864 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSOTHS_C1_OVR_EN Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en
csi_tadp_tx_0_RESERVED_15_14 = hc0007864 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 Rceived Good Packets for each type  . Controled with ReceivedCtrl_clear/latch/en



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_0_reg Address hc0007880
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_0_reg = 3221256320 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE1_SPARE_IN = hc0007880 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_SPARE_IN Total Rceived Good Packets



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_1_reg Address hc0007884
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_1_reg = 3221256324 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE1_SPARE_IN = hc0007884 0 9 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_SPARE_IN Total Delivered Good Packets
csi_tadp_tx_0_OA_LANE1_HSTX_LOWCAP_EN_OVR_EN = hc0007884 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_LOWCAP_EN_OVR_EN Total Delivered Good Packets
csi_tadp_tx_0_RESERVED_15_10 = hc0007884 10 6 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 Total Delivered Good Packets



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_2_reg Address hc0007888
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_2_reg = 3221256328 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE1_SEL_LANE_CFG = hc0007888 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_SEL_LANE_CFG Matching Atype to Taddress, Unmached packets are dropped
csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_OVR_EN = hc0007888 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_OVR_EN Matching Atype to Taddress, Unmached packets are dropped
csi_tadp_tx_0_OA_LANE1_HSRX_TERM_EN200OHMS = hc0007888 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_TERM_EN200OHMS Matching Atype to Taddress, Unmached packets are dropped
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PON_OVR_VAL = hc0007888 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PON_OVR_VAL Matching Atype to Taddress, Unmached packets are dropped
csi_tadp_tx_0_OA_LANE1_HSTX_LOWCAP_EN_OVR_VAL = hc0007888 4 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_LOWCAP_EN_OVR_VAL Matching Atype to Taddress, Unmached packets are dropped
csi_tadp_tx_0_OA_LANE1_HSTX_DIV_EN_OVR_VAL = hc0007888 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_DIV_EN_OVR_VAL Matching Atype to Taddress, Unmached packets are dropped
csi_tadp_tx_0_RESERVED_15_7 = hc0007888 7 9 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_7 Matching Atype to Taddress, Unmached packets are dropped



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_3_reg Address hc000788c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_3_reg = 3221256332 0 16 b00000000000000000000000100010000 RW
csi_tadp_tx_0_OA_LANE1_HSTX_PON_OVR_VAL = hc000788c 0 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE1_HSTX_BOOST_EN_OVR_VAL = hc000788c 2 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_BOOST_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE1_HSTX_SEL_PHASE0 = hc000788c 4 1 h1 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_SEL_PHASE0 
csi_tadp_tx_0_OA_LANE1_HSTX_EQA = hc000788c 5 3 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_EQA 
csi_tadp_tx_0_OA_LANE1_HSTX_SEL_CLKLB = hc000788c 8 1 h1 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_SEL_CLKLB 
csi_tadp_tx_0_OA_LANE1_LPTX_DIN_DN_OVR_VAL = hc000788c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_LPTX_DIN_DN_OVR_VAL 
csi_tadp_tx_0_OA_LANE1_LPTX_DIN_DP_OVR_VAL = hc000788c 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_LPTX_DIN_DP_OVR_VAL 
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_DCC_EN_OVR_VAL = hc000788c 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_DCC_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_EN_OVR_VAL = hc000788c 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_OVR_VAL = hc000788c 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_OVR_VAL 
csi_tadp_tx_0_RESERVED_15_14 = hc000788c 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_4_reg Address hc0007890
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_4_reg = 3221256336 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE1_HSTX_PON_OVR_EN = hc0007890 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE1_HSTX_BOOST_EN_OVR_EN = hc0007890 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_BOOST_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE1_HSTX_EQB = hc0007890 2 3 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_EQB 
csi_tadp_tx_0_OA_LANE1_HSTX_CLK_OBS_EN = hc0007890 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_CLK_OBS_EN 
csi_tadp_tx_0_OA_LANE1_LPTX_DIN_DN_OVR_EN = hc0007890 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_LPTX_DIN_DN_OVR_EN 
csi_tadp_tx_0_OA_LANE1_LPTX_DIN_DP_OVR_EN = hc0007890 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_LPTX_DIN_DP_OVR_EN 
csi_tadp_tx_0_OA_LANE1_LPTX_SR_BYPASS_EN = hc0007890 8 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_LPTX_SR_BYPASS_EN 
csi_tadp_tx_0_OA_LANE1_HSTX_TERM_EN_OVR_EN = hc0007890 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_TERM_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_DCC_EN_OVR_EN = hc0007890 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_DCC_EN_OVR_EN 
csi_tadp_tx_0_RESERVED_15_12 = hc0007890 12 4 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_12 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_5_reg Address hc0007894
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_5_reg = 3221256340 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE1_HSTX_DATA_AB_DPHY_OVR_VAL = hc0007894 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_DATA_AB_DPHY_OVR_VAL 
csi_tadp_tx_0_OA_LANE1_HSTX_DATA_BC_OVR_EN = hc0007894 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_DATA_BC_OVR_EN 
csi_tadp_tx_0_OA_LANE1_HSTX_DATA_CA_OVR_EN = hc0007894 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_DATA_CA_OVR_EN 
csi_tadp_tx_0_OA_LANE1_HSTX_TERM_EN_OVR_VAL = hc0007894 10 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_TERM_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_EN_OVR_EN = hc0007894 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_EN_OVR_EN 
csi_tadp_tx_0_RESERVED_15_13 = hc0007894 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_6_reg Address hc0007898
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_6_reg = 3221256344 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE1_HSTX_DATA_BC_OVR_VAL = hc0007898 0 7 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_DATA_BC_OVR_VAL Check Enable per Atype, when disabled bypasses the block
csi_tadp_tx_0_OA_LANE1_HSTX_DATA_CA_OVR_VAL = hc0007898 7 7 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_DATA_CA_OVR_VAL Check Enable per Atype, when disabled bypasses the block
csi_tadp_tx_0_OA_LANE1_HSTX_DATA_AB_DPHY_OVR_EN = hc0007898 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_DATA_AB_DPHY_OVR_EN Check Enable per Atype, when disabled bypasses the block
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PON_OVR_EN = hc0007898 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PON_OVR_EN Check Enable per Atype, when disabled bypasses the block



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_7_reg Address hc000789c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_7_reg = 3221256348 0 16 b00000000000000000001110000000000 RW
csi_tadp_tx_0_OA_LANE1_LPTX_EN_OVR_VAL = hc000789c 0 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_LPTX_EN_OVR_VAL RD Type check per Atype  MinRD - "0".  FixRD  - "1"
csi_tadp_tx_0_OA_LANE1_LPTX_PON_OVR_VAL = hc000789c 2 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_LPTX_PON_OVR_VAL RD Type check per Atype  MinRD - "0".  FixRD  - "1"
csi_tadp_tx_0_OA_LANE1_LPTX_PULLDWN_EN_OVR_VAL = hc000789c 4 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_LPTX_PULLDWN_EN_OVR_VAL RD Type check per Atype  MinRD - "0".  FixRD  - "1"
csi_tadp_tx_0_OA_LANE1_LPRX_LP_PON_OVR_EN = hc000789c 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_LPRX_LP_PON_OVR_EN RD Type check per Atype  MinRD - "0".  FixRD  - "1"
csi_tadp_tx_0_OA_LANE1_LPRX_CD_PON_OVR_EN = hc000789c 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_LPRX_CD_PON_OVR_EN RD Type check per Atype  MinRD - "0".  FixRD  - "1"
csi_tadp_tx_0_OA_LANE1_LPRX_ULP_PON_OVR_EN = hc000789c 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_LPRX_ULP_PON_OVR_EN RD Type check per Atype  MinRD - "0".  FixRD  - "1"
csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_CDR_FBK_EN_OVR_VAL = hc000789c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_CDR_FBK_EN_OVR_VAL RD Type check per Atype  MinRD - "0".  FixRD  - "1"
csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_CDR_FBK_CAP_PROG = hc000789c 10 3 h7 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_CDR_FBK_CAP_PROG RD Type check per Atype  MinRD - "0".  FixRD  - "1"
csi_tadp_tx_0_OA_LANE1_HSRX_VCM_DET_SYNC_BYPASS = hc000789c 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_VCM_DET_SYNC_BYPASS RD Type check per Atype  MinRD - "0".  FixRD  - "1"
csi_tadp_tx_0_RESERVED_15_14 = hc000789c 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 RD Type check per Atype  MinRD - "0".  FixRD  - "1"



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_8_reg Address hc00078a0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_8_reg = 3221256352 0 16 b00000000000000000001000000000000 RW
csi_tadp_tx_0_OA_LANE1_LPRX_LP_PON_OVR_VAL = hc00078a0 0 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_LPRX_LP_PON_OVR_VAL Statistics counters control
csi_tadp_tx_0_OA_LANE1_LPRX_CD_PON_OVR_VAL = hc00078a0 2 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_LPRX_CD_PON_OVR_VAL Statistics counters control
csi_tadp_tx_0_OA_LANE1_LPRX_ULP_PON_OVR_VAL = hc00078a0 4 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_LPRX_ULP_PON_OVR_VAL Statistics counters control
csi_tadp_tx_0_OA_LANE1_LPTX_EN_OVR_EN = hc00078a0 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_LPTX_EN_OVR_EN Statistics counters control
csi_tadp_tx_0_OA_LANE1_LPTX_PON_OVR_EN = hc00078a0 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_LPTX_PON_OVR_EN Statistics counters control
csi_tadp_tx_0_OA_LANE1_LPTX_PULLDWN_EN_OVR_EN = hc00078a0 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_LPTX_PULLDWN_EN_OVR_EN Statistics counters control
csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_CDR_FBK_EN_OVR_EN = hc00078a0 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_CDR_FBK_EN_OVR_EN Statistics counters control
csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_MASK_CHANGE_OVR_VAL = hc00078a0 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_MASK_CHANGE_OVR_VAL Statistics counters control
csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_DELAY_OVR_EN = hc00078a0 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_DELAY_OVR_EN Statistics counters control
csi_tadp_tx_0_OA_LANE1_HSRX_CDPHY_SEL_FAST = hc00078a0 12 1 h1 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_CDPHY_SEL_FAST Statistics counters control
csi_tadp_tx_0_RESERVED_15_13 = hc00078a0 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 Statistics counters control



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_9_reg Address hc00078a4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_9_reg = 3221256356 0 16 b00000000000000000000101011110000 RW
csi_tadp_tx_0_OA_LANE1_HSRX_EQUALIZER = hc00078a4 0 3 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_EQUALIZER Number of A-Packets dropped due to FIFO Overflow is above threshold and triggers interrupt
csi_tadp_tx_0_OA_LANE1_HSRX_GMODE = hc00078a4 3 2 h2 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_GMODE Number of A-Packets dropped due to FIFO Overflow is above threshold and triggers interrupt
csi_tadp_tx_0_OA_LANE1_HSRX_HS_CLK_DIV = hc00078a4 5 3 h7 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_HS_CLK_DIV Number of A-Packets dropped due to FIFO Overflow is above threshold and triggers interrupt
csi_tadp_tx_0_OA_LANE1_HSRX_SEL_GATED_POLARITY = hc00078a4 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_SEL_GATED_POLARITY Number of A-Packets dropped due to FIFO Overflow is above threshold and triggers interrupt
csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_CDR_DIV = hc00078a4 9 3 h5 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_CDR_DIV Number of A-Packets dropped due to FIFO Overflow is above threshold and triggers interrupt
csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_DELAY_OVR_VAL = hc00078a4 12 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_DELAY_OVR_VAL Number of A-Packets dropped due to FIFO Overflow is above threshold and triggers interrupt



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_10_reg Address hc00078a8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_10_reg = 3221256360 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE1_HSRX_TERM_RIGHT_EN_OVR_VAL = hc00078a8 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_TERM_RIGHT_EN_OVR_VAL Number of A-Packets with bad CRC32 is above threshold and triggers interrupt
csi_tadp_tx_0_OA_LANE1_HSRX_TERM_LEFT_EN_OVR_VAL = hc00078a8 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_TERM_LEFT_EN_OVR_VAL Number of A-Packets with bad CRC32 is above threshold and triggers interrupt
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_CLK_CHANNEL_PULL_EN = hc00078a8 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_CLK_CHANNEL_PULL_EN Number of A-Packets with bad CRC32 is above threshold and triggers interrupt
csi_tadp_tx_0_OA_LANE1_HSRX_HS_CLK_DIV_EN_OVR_VAL = hc00078a8 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_HS_CLK_DIV_EN_OVR_VAL Number of A-Packets with bad CRC32 is above threshold and triggers interrupt
csi_tadp_tx_0_OA_LANE1_HSRX_DESERIALIZER_EN_OVR_VAL = hc00078a8 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DESERIALIZER_EN_OVR_VAL Number of A-Packets with bad CRC32 is above threshold and triggers interrupt
csi_tadp_tx_0_OA_LANE1_HSRX_DESERIALIZER_DATA_EN_OVR_VAL = hc00078a8 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DESERIALIZER_DATA_EN_OVR_VAL Number of A-Packets with bad CRC32 is above threshold and triggers interrupt
csi_tadp_tx_0_OA_LANE1_HSRX_DESERIALIZER_DIV_EN_OVR_VAL = hc00078a8 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DESERIALIZER_DIV_EN_OVR_VAL Number of A-Packets with bad CRC32 is above threshold and triggers interrupt
csi_tadp_tx_0_OA_LANE1_HSRX_OFFCAL_OBS_EN_OVR_VAL = hc00078a8 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_OFFCAL_OBS_EN_OVR_VAL Number of A-Packets with bad CRC32 is above threshold and triggers interrupt
csi_tadp_tx_0_OA_LANE1_HSRX_VCM_DET_PON_OVR_VAL = hc00078a8 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_VCM_DET_PON_OVR_VAL Number of A-Packets with bad CRC32 is above threshold and triggers interrupt
csi_tadp_tx_0_OA_LANE1_HSRX_VCM_DET_OUT_EN_OVR_VAL = hc00078a8 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_VCM_DET_OUT_EN_OVR_VAL Number of A-Packets with bad CRC32 is above threshold and triggers interrupt
csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_ALP_DET_RIGHT_PON_OVR_VAL = hc00078a8 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_ALP_DET_RIGHT_PON_OVR_VAL Number of A-Packets with bad CRC32 is above threshold and triggers interrupt
csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_ALP_DET_LEFT_PON_OVR_VAL = hc00078a8 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_ALP_DET_LEFT_PON_OVR_VAL Number of A-Packets with bad CRC32 is above threshold and triggers interrupt
csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_MASK_CHANGE_OVR_EN = hc00078a8 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_MASK_CHANGE_OVR_EN Number of A-Packets with bad CRC32 is above threshold and triggers interrupt
csi_tadp_tx_0_OA_LANE1_HSRX_PON_OVR_EN = hc00078a8 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_PON_OVR_EN Number of A-Packets with bad CRC32 is above threshold and triggers interrupt
csi_tadp_tx_0_OA_LANE1_HSRX_EN_OVR_EN = hc00078a8 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_EN_OVR_EN Number of A-Packets with bad CRC32 is above threshold and triggers interrupt
csi_tadp_tx_0_OA_LANE1_HSTX_DIV_EN_OVR_EN = hc00078a8 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSTX_DIV_EN_OVR_EN Number of A-Packets with bad CRC32 is above threshold and triggers interrupt



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_11_reg Address hc00078ac
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_11_reg = 3221256364 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE1_HSRX_TERM_RIGHT_EN_OVR_EN = hc00078ac 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_TERM_RIGHT_EN_OVR_EN ApktRTS main modules reset control
csi_tadp_tx_0_OA_LANE1_HSRX_TERM_LEFT_EN_OVR_EN = hc00078ac 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_TERM_LEFT_EN_OVR_EN ApktRTS main modules reset control
csi_tadp_tx_0_OA_LANE1_HSRX_HS_CLK_DIV_EN_OVR_EN = hc00078ac 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_HS_CLK_DIV_EN_OVR_EN ApktRTS main modules reset control
csi_tadp_tx_0_OA_LANE1_HSRX_DESERIALIZER_EN_OVR_EN = hc00078ac 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DESERIALIZER_EN_OVR_EN ApktRTS main modules reset control
csi_tadp_tx_0_OA_LANE1_HSRX_DESERIALIZER_DATA_EN_OVR_EN = hc00078ac 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DESERIALIZER_DATA_EN_OVR_EN ApktRTS main modules reset control
csi_tadp_tx_0_OA_LANE1_HSRX_DESERIALIZER_DIV_EN_OVR_EN = hc00078ac 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DESERIALIZER_DIV_EN_OVR_EN ApktRTS main modules reset control
csi_tadp_tx_0_OA_LANE1_HSRX_OFFCAL_OBS_EN_OVR_EN = hc00078ac 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_OFFCAL_OBS_EN_OVR_EN ApktRTS main modules reset control
csi_tadp_tx_0_OA_LANE1_HSRX_VCM_DET_PON_OVR_EN = hc00078ac 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_VCM_DET_PON_OVR_EN ApktRTS main modules reset control
csi_tadp_tx_0_OA_LANE1_HSRX_VCM_DET_OUT_EN_OVR_EN = hc00078ac 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_VCM_DET_OUT_EN_OVR_EN ApktRTS main modules reset control
csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_ALP_DET_RIGHT_PON_OVR_EN = hc00078ac 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_ALP_DET_RIGHT_PON_OVR_EN ApktRTS main modules reset control
csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_ALP_DET_LEFT_PON_OVR_EN = hc00078ac 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_ALP_DET_LEFT_PON_OVR_EN ApktRTS main modules reset control
csi_tadp_tx_0_OA_LANE1_HSRX_PON_OVR_VAL = hc00078ac 11 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_PON_OVR_VAL ApktRTS main modules reset control
csi_tadp_tx_0_OA_LANE1_HSRX_EN_OVR_VAL = hc00078ac 13 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_EN_OVR_VAL ApktRTS main modules reset control
csi_tadp_tx_0_RESERVED_15_15 = hc00078ac 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 ApktRTS main modules reset control



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_12_reg Address hc00078b0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_12_reg = 3221256368 0 16 b00000000000000000000100000000000 RW
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_BIAS_BYPASS_EN_OVR_VAL = hc00078b0 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_BIAS_BYPASS_EN_OVR_VAL ApktRTS main modules reset control
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_BYPASS_EN_OVR_VAL = hc00078b0 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_BYPASS_EN_OVR_VAL ApktRTS main modules reset control
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_CHANGE_OVR_VAL = hc00078b0 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_CHANGE_OVR_VAL ApktRTS main modules reset control
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DLL_EN_OVR_VAL = hc00078b0 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DLL_EN_OVR_VAL ApktRTS main modules reset control
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_PREAMBLE_CAL_EN_OVR_VAL = hc00078b0 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_PREAMBLE_CAL_EN_OVR_VAL ApktRTS main modules reset control
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_VT_COMP_BIAS = hc00078b0 5 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_VT_COMP_BIAS ApktRTS main modules reset control
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DATA_DELAY_OVR_EN = hc00078b0 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DATA_DELAY_OVR_EN ApktRTS main modules reset control
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_DIV = hc00078b0 10 3 h2 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_DIV ApktRTS main modules reset control
csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_FINE_RANGE = hc00078b0 13 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_FINE_RANGE ApktRTS main modules reset control
csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_SR_BYPASS_Z = hc00078b0 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_CPHY_SR_BYPASS_Z ApktRTS main modules reset control



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_13_reg Address hc00078b4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_13_reg = 3221256372 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_BIAS_BYPASS_EN_OVR_EN = hc00078b4 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_BIAS_BYPASS_EN_OVR_EN each bit masks the corresponding ApktRTS_int_stat
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_BYPASS_EN_OVR_EN = hc00078b4 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_BYPASS_EN_OVR_EN each bit masks the corresponding ApktRTS_int_stat
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_CHANGE_OVR_EN = hc00078b4 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_CHANGE_OVR_EN each bit masks the corresponding ApktRTS_int_stat
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DLL_EN_OVR_EN = hc00078b4 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DLL_EN_OVR_EN each bit masks the corresponding ApktRTS_int_stat
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_PREAMBLE_CAL_EN_OVR_EN = hc00078b4 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_PREAMBLE_CAL_EN_OVR_EN each bit masks the corresponding ApktRTS_int_stat
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_VT_COMP_EN = hc00078b4 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_VT_COMP_EN each bit masks the corresponding ApktRTS_int_stat
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DATA_DELAY_OVR_VAL = hc00078b4 6 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DATA_DELAY_OVR_VAL each bit masks the corresponding ApktRTS_int_stat
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_BIAS_OVR_EN = hc00078b4 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_BIAS_OVR_EN each bit masks the corresponding ApktRTS_int_stat
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_COARSE_BANK_OVR_EN = hc00078b4 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_COARSE_BANK_OVR_EN each bit masks the corresponding ApktRTS_int_stat
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_TUNE_MODE_OVR_EN = hc00078b4 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_TUNE_MODE_OVR_EN each bit masks the corresponding ApktRTS_int_stat
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DLL_FBK_OVR_EN = hc00078b4 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DLL_FBK_OVR_EN each bit masks the corresponding ApktRTS_int_stat
csi_tadp_tx_0_RESERVED_15_14 = hc00078b4 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 each bit masks the corresponding ApktRTS_int_stat



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_14_reg Address hc00078b8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_14_reg = 3221256376 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_BIAS_OVR_VAL = hc00078b8 0 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_BIAS_OVR_VAL each bit indicates for interrupt status on the corresponding ApktRTS_int bit
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_COARSE_BANK_OVR_VAL = hc00078b8 4 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_COARSE_BANK_OVR_VAL each bit indicates for interrupt status on the corresponding ApktRTS_int bit
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_TUNE_MODE_OVR_VAL = hc00078b8 8 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_TUNE_MODE_OVR_VAL each bit indicates for interrupt status on the corresponding ApktRTS_int bit
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DLL_FBK_OVR_VAL = hc00078b8 10 6 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DLL_FBK_OVR_VAL each bit indicates for interrupt status on the corresponding ApktRTS_int bit



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_15_reg Address hc00078bc
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_2_15_reg = 3221256380 0 16 b00000000000000000000000000000100 RW
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DLL_CP_PROG = hc00078bc 0 3 h4 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DLL_CP_PROG System clock Testbus select s[0] ApktTxRTS_testbuss[1] ApktRxRTS_testbus
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_CLK_CHANNEL = hc00078bc 3 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_CLK_CHANNEL System clock Testbus select s[0] ApktTxRTS_testbuss[1] ApktRxRTS_testbus
csi_tadp_tx_0_OA_LANE1_HSRX_OFFCAL_RIGHT_OVR_EN = hc00078bc 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_OFFCAL_RIGHT_OVR_EN System clock Testbus select s[0] ApktTxRTS_testbuss[1] ApktRxRTS_testbus
csi_tadp_tx_0_OA_LANE1_HSRX_OFFCAL_LEFT_OVR_EN = hc00078bc 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_OFFCAL_LEFT_OVR_EN System clock Testbus select s[0] ApktTxRTS_testbuss[1] ApktRxRTS_testbus
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_EN = hc00078bc 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_EN System clock Testbus select s[0] ApktTxRTS_testbuss[1] ApktRxRTS_testbus
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_MID_OVR_EN = hc00078bc 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_MID_OVR_EN System clock Testbus select s[0] ApktTxRTS_testbuss[1] ApktRxRTS_testbus
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_LEFT_OVR_EN = hc00078bc 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_LEFT_OVR_EN System clock Testbus select s[0] ApktTxRTS_testbuss[1] ApktRxRTS_testbus
csi_tadp_tx_0_OA_LANE1_HSRX_MODE_OVR_EN = hc00078bc 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_MODE_OVR_EN System clock Testbus select s[0] ApktTxRTS_testbuss[1] ApktRxRTS_testbus
csi_tadp_tx_0_OA_LANE1_ATB_SW = hc00078bc 11 5 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_ATB_SW System clock Testbus select s[0] ApktTxRTS_testbuss[1] ApktRxRTS_testbus



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_3_0_reg Address hc00078c0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_3_0_reg = 3221256384 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE1_HSRX_OFFCAL_RIGHT_OVR_VAL = hc00078c0 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_OFFCAL_RIGHT_OVR_VAL TxBuffer Light Sleep
csi_tadp_tx_0_OA_LANE1_HSRX_OFFCAL_LEFT_OVR_VAL = hc00078c0 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_OFFCAL_LEFT_OVR_VAL TxBuffer Light Sleep



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_3_1_reg Address hc00078c4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_3_1_reg = 3221256388 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_VAL = hc00078c4 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_VAL status bit for each src bit
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_MID_OVR_VAL = hc00078c4 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_MID_OVR_VAL status bit for each src bit



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_3_2_reg Address hc00078c8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_3_2_reg = 3221256392 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_LEFT_OVR_VAL = hc00078c8 0 9 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_LEFT_OVR_VAL status bit for each src bit
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_MID_OVR_VAL = hc00078c8 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_MID_OVR_VAL status bit for each src bit
csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_VAL = hc00078c8 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_VAL status bit for each src bit
csi_tadp_tx_0_OA_LANE1_HSRX_MODE_OVR_VAL = hc00078c8 11 3 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE1_HSRX_MODE_OVR_VAL status bit for each src bit
csi_tadp_tx_0_RESERVED_15_14 = hc00078c8 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 status bit for each src bit



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_3_3_reg Address hc00078cc
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_3_3_reg = 3221256396 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_LANE1_HSRX_DATA_AB_LEFT_OVR_VAL = hc00078cc 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_DATA_AB_LEFT_OVR_VAL status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSRX_DATA_BC_MID_OVR_VAL = hc00078cc 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_DATA_BC_MID_OVR_VAL status bit for each src bit



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_3_4_reg Address hc00078d0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_3_4_reg = 3221256400 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_LANE1_HSRX_DATA_CA_RIGHT_OVR_VAL = hc00078d0 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_DATA_CA_RIGHT_OVR_VAL status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSRX_WORD_CLK_OVR_VAL = hc00078d0 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_WORD_CLK_OVR_VAL status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSRX_HS_CLK_DIV_OUT_OVR_VAL = hc00078d0 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_HS_CLK_DIV_OUT_OVR_VAL status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSTX_WORD_CLK_OVR_VAL = hc00078d0 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSTX_WORD_CLK_OVR_VAL status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSRX_VCM_DET_OUT_OVR_VAL = hc00078d0 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_VCM_DET_OUT_OVR_VAL status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSRX_OUT_CAL_LEFT_N_OVR_VAL = hc00078d0 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_OUT_CAL_LEFT_N_OVR_VAL status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSRX_OUT_CAL_LEFT_P_OVR_VAL = hc00078d0 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_OUT_CAL_LEFT_P_OVR_VAL status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSRX_OUT_CAL_RIGHT_N_OVR_VAL = hc00078d0 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_OUT_CAL_RIGHT_N_OVR_VAL status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSRX_OUT_CAL_RIGHT_P_OVR_VAL = hc00078d0 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_OUT_CAL_RIGHT_P_OVR_VAL status bit for each src bit



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_3_5_reg Address hc00078d4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_3_5_reg = 3221256404 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_LANE1_HSRX_DATA_AB_LEFT_OVR_EN = hc00078d4 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_DATA_AB_LEFT_OVR_EN status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSRX_DATA_BC_MID_OVR_EN = hc00078d4 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_DATA_BC_MID_OVR_EN status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSRX_DATA_CA_RIGHT_OVR_EN = hc00078d4 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_DATA_CA_RIGHT_OVR_EN status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSRX_WORD_CLK_OVR_EN = hc00078d4 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_WORD_CLK_OVR_EN status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSRX_HS_CLK_DIV_OUT_OVR_EN = hc00078d4 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_HS_CLK_DIV_OUT_OVR_EN status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSTX_WORD_CLK_OVR_EN = hc00078d4 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSTX_WORD_CLK_OVR_EN status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSRX_VCM_DET_OUT_OVR_EN = hc00078d4 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_VCM_DET_OUT_OVR_EN status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSRX_OUT_CAL_LEFT_N_OVR_EN = hc00078d4 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_OUT_CAL_LEFT_N_OVR_EN status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSRX_OUT_CAL_LEFT_P_OVR_EN = hc00078d4 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_OUT_CAL_LEFT_P_OVR_EN status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSRX_OUT_CAL_RIGHT_N_OVR_EN = hc00078d4 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_OUT_CAL_RIGHT_N_OVR_EN status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSRX_OUT_CAL_RIGHT_P_OVR_EN = hc00078d4 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_OUT_CAL_RIGHT_P_OVR_EN status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSRX_DPHY_DDL_OSC_CLK_OVR_EN = hc00078d4 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_DPHY_DDL_OSC_CLK_OVR_EN status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSRX_CPHY_ALP_DET_LEFT_OUT_OVR_EN = hc00078d4 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_CPHY_ALP_DET_LEFT_OUT_OVR_EN status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSRX_CPHY_ALP_DET_RIGHT_OUT_OVR_EN = hc00078d4 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_CPHY_ALP_DET_RIGHT_OUT_OVR_EN status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSRX_CPHY_CDR_OSC_CLK_OVR_EN = hc00078d4 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_CPHY_CDR_OSC_CLK_OVR_EN status bit for each src bit
csi_tadp_tx_0_RESERVED_15_15 = hc00078d4 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 status bit for each src bit



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_3_6_reg Address hc00078d8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_3_6_reg = 3221256408 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_LANE1_HSRX_DPHY_DDL_OSC_CLK_OVR_VAL = hc00078d8 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_DPHY_DDL_OSC_CLK_OVR_VAL status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSRX_CPHY_ALP_DET_LEFT_OUT_OVR_VAL = hc00078d8 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_CPHY_ALP_DET_LEFT_OUT_OVR_VAL status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSRX_CPHY_ALP_DET_RIGHT_OUT_OVR_VAL = hc00078d8 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_CPHY_ALP_DET_RIGHT_OUT_OVR_VAL status bit for each src bit
csi_tadp_tx_0_IA_LANE1_HSRX_CPHY_CDR_OSC_CLK_OVR_VAL = hc00078d8 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_HSRX_CPHY_CDR_OSC_CLK_OVR_VAL status bit for each src bit
csi_tadp_tx_0_IA_LANE1_LPRX_DOUTCD_OVR_VAL = hc00078d8 4 2 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE1_LPRX_DOUTCD_OVR_VAL status bit for each src bit
csi_tadp_tx_0_IA_LANE1_LPRX_DOUTLP_OVR_VAL = hc00078d8 6 2 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE1_LPRX_DOUTLP_OVR_VAL status bit for each src bit
csi_tadp_tx_0_IA_LANE1_LPRX_DOUTULP_OVR_VAL = hc00078d8 8 2 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE1_LPRX_DOUTULP_OVR_VAL status bit for each src bit
csi_tadp_tx_0_IA_LANE1_SPARE_OUT_OVR_VAL = hc00078d8 10 4 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE1_SPARE_OUT_OVR_VAL status bit for each src bit
csi_tadp_tx_0_RESERVED_15_14 = hc00078d8 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 status bit for each src bit



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_3_7_reg Address hc00078dc
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE1_CTRL_3_7_reg = 3221256412 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_LANE1_LPRX_DOUTCD_OVR_EN = hc00078dc 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_LPRX_DOUTCD_OVR_EN status bit for each src bit
csi_tadp_tx_0_IA_LANE1_LPRX_DOUTLP_OVR_EN = hc00078dc 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_LPRX_DOUTLP_OVR_EN status bit for each src bit
csi_tadp_tx_0_IA_LANE1_LPRX_DOUTULP_OVR_EN = hc00078dc 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_LPRX_DOUTULP_OVR_EN status bit for each src bit
csi_tadp_tx_0_IA_LANE1_SPARE_OUT_OVR_EN = hc00078dc 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE1_SPARE_OUT_OVR_EN status bit for each src bit
csi_tadp_tx_0_RESERVED_15_4 = hc00078dc 4 12 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_4 status bit for each src bit



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE1_OVR_5_2_reg Address hc0007948
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE1_OVR_5_2_reg = 3221256520 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXSENDALPHS_C1_OVR_VAL = hc0007948 0 2 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXSENDALPHS_C1_OVR_VAL status bit for each src bit
csi_tadp_tx_0_I_TXALPCODE_C1_OVR_VAL = hc0007948 2 4 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXALPCODE_C1_OVR_VAL status bit for each src bit
csi_tadp_tx_0_I_TXALPNIBBLE_C1_OVR_VAL = hc0007948 6 4 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXALPNIBBLE_C1_OVR_VAL status bit for each src bit
csi_tadp_tx_0_I_ALPWAKESTATE_C1_OVR_VAL = hc0007948 10 3 h0 RW HEX
; Desc_csi_tadp_tx_0_I_ALPWAKESTATE_C1_OVR_VAL status bit for each src bit
csi_tadp_tx_0_RESERVED_15_13 = hc0007948 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 status bit for each src bit



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE1_OVR_5_3_reg Address hc000794c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE1_OVR_5_3_reg = 3221256524 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXSENDALPHS_C1_OVR_EN = hc000794c 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXSENDALPHS_C1_OVR_EN mask bit for each src bit
csi_tadp_tx_0_I_TXALPCODE_C1_OVR_EN = hc000794c 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXALPCODE_C1_OVR_EN mask bit for each src bit
csi_tadp_tx_0_I_TXALPNIBBLE_C1_OVR_EN = hc000794c 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXALPNIBBLE_C1_OVR_EN mask bit for each src bit
csi_tadp_tx_0_I_ALPWAKESTATE_C1_OVR_EN = hc000794c 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_ALPWAKESTATE_C1_OVR_EN mask bit for each src bit
csi_tadp_tx_0_RESERVED_15_4 = hc000794c 4 12 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_4 mask bit for each src bit



; REGISTER csi_tadp_tx_0_CORE_DIG_RW_TRIO1_0_reg Address hc0007a00
_csi_tadp_tx_0_CORE_DIG_RW_TRIO1_0_reg = 3221256704 0 16 b00000000000000000000010001001010 RW
csi_tadp_tx_0_DESERIALIZER_DATA_EN_DELAY_THRESH = hc0007a00 0 3 h2 RW HEX
; Desc_csi_tadp_tx_0_DESERIALIZER_DATA_EN_DELAY_THRESH mask bit for each src bit
csi_tadp_tx_0_DESERIALIZER_DIV_EN_DELAY_THRESH = hc0007a00 3 3 h1 RW HEX
; Desc_csi_tadp_tx_0_DESERIALIZER_DIV_EN_DELAY_THRESH mask bit for each src bit
csi_tadp_tx_0_DESERIALIZER_DIV_EN_DELAY_DEASS_THRESH = hc0007a00 6 3 h1 RW HEX
; Desc_csi_tadp_tx_0_DESERIALIZER_DIV_EN_DELAY_DEASS_THRESH mask bit for each src bit
csi_tadp_tx_0_POST_RECEIVED_RESET_THRESH = hc0007a00 9 3 h2 RW HEX
; Desc_csi_tadp_tx_0_POST_RECEIVED_RESET_THRESH mask bit for each src bit
csi_tadp_tx_0_RESERVED_15_12 = hc0007a00 12 4 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_12 mask bit for each src bit



; REGISTER csi_tadp_tx_0_CORE_DIG_RW_TRIO1_1_reg Address hc0007a04
_csi_tadp_tx_0_CORE_DIG_RW_TRIO1_1_reg = 3221256708 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_POST_DET_DELAY_THRESH = hc0007a04 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_POST_DET_DELAY_THRESH mask bit for each src bit



; REGISTER csi_tadp_tx_0_CORE_DIG_RW_TRIO1_2_reg Address hc0007a08
_csi_tadp_tx_0_CORE_DIG_RW_TRIO1_2_reg = 3221256712 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_DESERIALIZER_EN_DELAY_DEASS_THRESH = hc0007a08 0 8 ha RW HEX
; Desc_csi_tadp_tx_0_DESERIALIZER_EN_DELAY_DEASS_THRESH mask bit for each src bit
csi_tadp_tx_0_RESERVED_15_8 = hc0007a08 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 mask bit for each src bit



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE2_OVR_0_0_reg Address hc0008000
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE2_OVR_0_0_reg = 3221258240 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXACTIVEHS_D2_OVR_VAL = hc0008000 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXACTIVEHS_D2_OVR_VAL mask bit for each src bit
csi_tadp_tx_0_O_RXSYNCHS_D2_OVR_VAL = hc0008000 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXSYNCHS_D2_OVR_VAL mask bit for each src bit
csi_tadp_tx_0_O_RXVALIDHS_D2_OVR_VAL = hc0008000 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDHS_D2_OVR_VAL mask bit for each src bit
csi_tadp_tx_0_O_RXSKEWCALHS_D2_OVR_VAL = hc0008000 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXSKEWCALHS_D2_OVR_VAL mask bit for each src bit
csi_tadp_tx_0_O_RXWORDCLKHS_D2_OVR_VAL = hc0008000 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXWORDCLKHS_D2_OVR_VAL mask bit for each src bit
csi_tadp_tx_0_O_RXDATAHS_D2_OVR_VAL = hc0008000 5 8 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXDATAHS_D2_OVR_VAL mask bit for each src bit
csi_tadp_tx_0_O_RXALTERNATECALHS_D2_OVR_VAL = hc0008000 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXALTERNATECALHS_D2_OVR_VAL mask bit for each src bit
csi_tadp_tx_0_RESERVED_15_14 = hc0008000 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 mask bit for each src bit



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE2_OVR_0_1_reg Address hc0008004
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE2_OVR_0_1_reg = 3221258244 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXACTIVEHS_D2_OVR_EN = hc0008004 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXACTIVEHS_D2_OVR_EN mask bit for each src bit
csi_tadp_tx_0_O_RXSYNCHS_D2_OVR_EN = hc0008004 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXSYNCHS_D2_OVR_EN mask bit for each src bit
csi_tadp_tx_0_O_RXVALIDHS_D2_OVR_EN = hc0008004 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDHS_D2_OVR_EN mask bit for each src bit
csi_tadp_tx_0_O_RXSKEWCALHS_D2_OVR_EN = hc0008004 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXSKEWCALHS_D2_OVR_EN mask bit for each src bit
csi_tadp_tx_0_O_RXWORDCLKHS_D2_OVR_EN = hc0008004 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXWORDCLKHS_D2_OVR_EN mask bit for each src bit
csi_tadp_tx_0_O_RXDATAHS_D2_OVR_EN = hc0008004 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXDATAHS_D2_OVR_EN mask bit for each src bit
csi_tadp_tx_0_I_TXREQUESTHS_D2_OVR_EN = hc0008004 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTHS_D2_OVR_EN mask bit for each src bit
csi_tadp_tx_0_I_TXDATATRANSFERENHS_D2_OVR_EN = hc0008004 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATATRANSFERENHS_D2_OVR_EN mask bit for each src bit
csi_tadp_tx_0_O_TXREADYHS_D2_OVR_EN = hc0008004 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYHS_D2_OVR_EN mask bit for each src bit
csi_tadp_tx_0_O_TXWORDCLKHS_D2_OVR_EN = hc0008004 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXWORDCLKHS_D2_OVR_EN mask bit for each src bit
csi_tadp_tx_0_I_TXDATAHS_D2_OVR_EN = hc0008004 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATAHS_D2_OVR_EN mask bit for each src bit
csi_tadp_tx_0_O_RXALTERNATECALHS_D2_OVR_EN = hc0008004 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXALTERNATECALHS_D2_OVR_EN mask bit for each src bit
csi_tadp_tx_0_RESERVED_15_12 = hc0008004 12 4 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_12 mask bit for each src bit



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE2_OVR_0_2_reg Address hc0008008
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE2_OVR_0_2_reg = 3221258248 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXREQUESTHS_D2_OVR_VAL = hc0008008 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTHS_D2_OVR_VAL Override register for straps values
csi_tadp_tx_0_I_TXDATATRANSFERENHS_D2_OVR_VAL = hc0008008 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATATRANSFERENHS_D2_OVR_VAL Override register for straps values
csi_tadp_tx_0_O_TXREADYHS_D2_OVR_VAL = hc0008008 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYHS_D2_OVR_VAL Override register for straps values
csi_tadp_tx_0_O_TXWORDCLKHS_D2_OVR_VAL = hc0008008 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXWORDCLKHS_D2_OVR_VAL Override register for straps values
csi_tadp_tx_0_I_TXDATAHS_D2_OVR_VAL = hc0008008 4 8 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXDATAHS_D2_OVR_VAL Override register for straps values
csi_tadp_tx_0_I_TXSKEWCALHS_D2_OVR_VAL = hc0008008 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXSKEWCALHS_D2_OVR_VAL Override register for straps values
csi_tadp_tx_0_RESERVED_15_13 = hc0008008 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 Override register for straps values



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE2_OVR_0_3_reg Address hc000800c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE2_OVR_0_3_reg = 3221258252 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXREQUESTESC_D2_OVR_VAL = hc000800c 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTESC_D2_OVR_VAL Reset the MeronSrc_top_regssSoft reset will be done upon writing ‘1’ to RW register. sSW restriction - in order to initiate another register block clearance,sone needs to first clear the RW register by writing ‘0’, and then ‘1’ once more. 
csi_tadp_tx_0_I_TXLPDTESC_D2_OVR_VAL = hc000800c 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXLPDTESC_D2_OVR_VAL Reset the MeronSrc_top_regssSoft reset will be done upon writing ‘1’ to RW register. sSW restriction - in order to initiate another register block clearance,sone needs to first clear the RW register by writing ‘0’, and then ‘1’ once more. 
csi_tadp_tx_0_I_TXULPSEXIT_D2_OVR_VAL = hc000800c 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSEXIT_D2_OVR_VAL Reset the MeronSrc_top_regssSoft reset will be done upon writing ‘1’ to RW register. sSW restriction - in order to initiate another register block clearance,sone needs to first clear the RW register by writing ‘0’, and then ‘1’ once more. 
csi_tadp_tx_0_I_TXULPSESC_D2_OVR_VAL = hc000800c 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSESC_D2_OVR_VAL Reset the MeronSrc_top_regssSoft reset will be done upon writing ‘1’ to RW register. sSW restriction - in order to initiate another register block clearance,sone needs to first clear the RW register by writing ‘0’, and then ‘1’ once more. 
csi_tadp_tx_0_I_TXVALIDESC_D2_OVR_VAL = hc000800c 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXVALIDESC_D2_OVR_VAL Reset the MeronSrc_top_regssSoft reset will be done upon writing ‘1’ to RW register. sSW restriction - in order to initiate another register block clearance,sone needs to first clear the RW register by writing ‘0’, and then ‘1’ once more. 
csi_tadp_tx_0_O_TXREADYESC_D2_OVR_VAL = hc000800c 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYESC_D2_OVR_VAL Reset the MeronSrc_top_regssSoft reset will be done upon writing ‘1’ to RW register. sSW restriction - in order to initiate another register block clearance,sone needs to first clear the RW register by writing ‘0’, and then ‘1’ once more. 
csi_tadp_tx_0_I_TXTRIGGERESC_D2_OVR_VAL = hc000800c 6 4 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXTRIGGERESC_D2_OVR_VAL Reset the MeronSrc_top_regssSoft reset will be done upon writing ‘1’ to RW register. sSW restriction - in order to initiate another register block clearance,sone needs to first clear the RW register by writing ‘0’, and then ‘1’ once more. 
csi_tadp_tx_0_I_TXDATAESC_D2_OVR_EN = hc000800c 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATAESC_D2_OVR_EN Reset the MeronSrc_top_regssSoft reset will be done upon writing ‘1’ to RW register. sSW restriction - in order to initiate another register block clearance,sone needs to first clear the RW register by writing ‘0’, and then ‘1’ once more. 
csi_tadp_tx_0_I_TXALTERNATECALHS_D2_OVR_EN = hc000800c 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXALTERNATECALHS_D2_OVR_EN Reset the MeronSrc_top_regssSoft reset will be done upon writing ‘1’ to RW register. sSW restriction - in order to initiate another register block clearance,sone needs to first clear the RW register by writing ‘0’, and then ‘1’ once more. 
csi_tadp_tx_0_I_TXSKEWCALHS_D2_OVR_EN = hc000800c 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXSKEWCALHS_D2_OVR_EN Reset the MeronSrc_top_regssSoft reset will be done upon writing ‘1’ to RW register. sSW restriction - in order to initiate another register block clearance,sone needs to first clear the RW register by writing ‘0’, and then ‘1’ once more. 
csi_tadp_tx_0_RESERVED_15_13 = hc000800c 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 Reset the MeronSrc_top_regssSoft reset will be done upon writing ‘1’ to RW register. sSW restriction - in order to initiate another register block clearance,sone needs to first clear the RW register by writing ‘0’, and then ‘1’ once more. 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE2_OVR_0_4_reg Address hc0008010
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE2_OVR_0_4_reg = 3221258256 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXREQUESTESC_D2_OVR_EN = hc0008010 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTESC_D2_OVR_EN 0-chip was reset using RESET_IN (external), 1-Chip was RESET by SW.sClear this indication by writing to this register.
csi_tadp_tx_0_I_TXLPDTESC_D2_OVR_EN = hc0008010 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXLPDTESC_D2_OVR_EN 0-chip was reset using RESET_IN (external), 1-Chip was RESET by SW.sClear this indication by writing to this register.
csi_tadp_tx_0_I_TXULPSEXIT_D2_OVR_EN = hc0008010 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSEXIT_D2_OVR_EN 0-chip was reset using RESET_IN (external), 1-Chip was RESET by SW.sClear this indication by writing to this register.
csi_tadp_tx_0_I_TXULPSESC_D2_OVR_EN = hc0008010 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSESC_D2_OVR_EN 0-chip was reset using RESET_IN (external), 1-Chip was RESET by SW.sClear this indication by writing to this register.
csi_tadp_tx_0_I_TXVALIDESC_D2_OVR_EN = hc0008010 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXVALIDESC_D2_OVR_EN 0-chip was reset using RESET_IN (external), 1-Chip was RESET by SW.sClear this indication by writing to this register.
csi_tadp_tx_0_O_TXREADYESC_D2_OVR_EN = hc0008010 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYESC_D2_OVR_EN 0-chip was reset using RESET_IN (external), 1-Chip was RESET by SW.sClear this indication by writing to this register.
csi_tadp_tx_0_I_TXTRIGGERESC_D2_OVR_EN = hc0008010 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXTRIGGERESC_D2_OVR_EN 0-chip was reset using RESET_IN (external), 1-Chip was RESET by SW.sClear this indication by writing to this register.
csi_tadp_tx_0_I_TXDATAESC_D2_OVR_VAL = hc0008010 7 8 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXDATAESC_D2_OVR_VAL 0-chip was reset using RESET_IN (external), 1-Chip was RESET by SW.sClear this indication by writing to this register.
csi_tadp_tx_0_I_TXALTERNATECALHS_D2_OVR_VAL = hc0008010 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXALTERNATECALHS_D2_OVR_VAL 0-chip was reset using RESET_IN (external), 1-Chip was RESET by SW.sClear this indication by writing to this register.



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE2_OVR_0_5_reg Address hc0008014
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE2_OVR_0_5_reg = 3221258260 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXCLKESC_D2_OVR_VAL = hc0008014 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXCLKESC_D2_OVR_VAL 0-chip was reset using RESET_IN (external), 1-Chip was RESET by WD.sClear this indication by writing to this register.
csi_tadp_tx_0_O_RXLPDTESC_D2_OVR_VAL = hc0008014 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXLPDTESC_D2_OVR_VAL 0-chip was reset using RESET_IN (external), 1-Chip was RESET by WD.sClear this indication by writing to this register.
csi_tadp_tx_0_O_RXULPSESC_D2_OVR_VAL = hc0008014 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXULPSESC_D2_OVR_VAL 0-chip was reset using RESET_IN (external), 1-Chip was RESET by WD.sClear this indication by writing to this register.
csi_tadp_tx_0_O_RXVALIDESC_D2_OVR_VAL = hc0008014 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDESC_D2_OVR_VAL 0-chip was reset using RESET_IN (external), 1-Chip was RESET by WD.sClear this indication by writing to this register.
csi_tadp_tx_0_O_RXTRIGGERESC_D2_OVR_VAL = hc0008014 4 4 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXTRIGGERESC_D2_OVR_VAL 0-chip was reset using RESET_IN (external), 1-Chip was RESET by WD.sClear this indication by writing to this register.
csi_tadp_tx_0_O_RXDATAESC_D2_OVR_VAL = hc0008014 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXDATAESC_D2_OVR_VAL 0-chip was reset using RESET_IN (external), 1-Chip was RESET by WD.sClear this indication by writing to this register.



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE2_OVR_0_6_reg Address hc0008018
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE2_OVR_0_6_reg = 3221258264 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXCLKESC_D2_OVR_EN = hc0008018 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXCLKESC_D2_OVR_EN FW register
csi_tadp_tx_0_O_RXLPDTESC_D2_OVR_EN = hc0008018 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXLPDTESC_D2_OVR_EN FW register
csi_tadp_tx_0_O_RXULPSESC_D2_OVR_EN = hc0008018 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXULPSESC_D2_OVR_EN FW register
csi_tadp_tx_0_O_RXVALIDESC_D2_OVR_EN = hc0008018 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDESC_D2_OVR_EN FW register
csi_tadp_tx_0_O_RXTRIGGERESC_D2_OVR_EN = hc0008018 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXTRIGGERESC_D2_OVR_EN FW register
csi_tadp_tx_0_O_RXDATAESC_D2_OVR_EN = hc0008018 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXDATAESC_D2_OVR_EN FW register
csi_tadp_tx_0_RESERVED_15_6 = hc0008018 6 10 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_6 FW register



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE2_OVR_0_7_reg Address hc000801c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE2_OVR_0_7_reg = 3221258268 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_ENABLE_D2_OVR_VAL = hc000801c 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_ENABLE_D2_OVR_VAL FW register
csi_tadp_tx_0_O_STOPSTATE_D2_OVR_VAL = hc000801c 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_STOPSTATE_D2_OVR_VAL FW register
csi_tadp_tx_0_O_ULPSACTIVENOT_D2_OVR_VAL = hc000801c 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ULPSACTIVENOT_D2_OVR_VAL FW register
csi_tadp_tx_0_I_TURNREQUEST_D2_OVR_VAL = hc000801c 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNREQUEST_D2_OVR_VAL FW register
csi_tadp_tx_0_I_TURNDISABLE_D2_OVR_VAL = hc000801c 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNDISABLE_D2_OVR_VAL FW register
csi_tadp_tx_0_O_DIRECTION_D2_OVR_VAL = hc000801c 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_DIRECTION_D2_OVR_VAL FW register
csi_tadp_tx_0_I_FORCERXMODE_D2_OVR_VAL = hc000801c 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCERXMODE_D2_OVR_VAL FW register
csi_tadp_tx_0_I_FORCETXSTOPMODE_D2_OVR_VAL = hc000801c 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCETXSTOPMODE_D2_OVR_VAL FW register
csi_tadp_tx_0_O_ERRESC_D2_OVR_VAL = hc000801c 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRESC_D2_OVR_VAL FW register
csi_tadp_tx_0_O_ERRSYNCESC_D2_OVR_VAL = hc000801c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSYNCESC_D2_OVR_VAL FW register
csi_tadp_tx_0_O_ERRCONTROL_D2_OVR_VAL = hc000801c 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTROL_D2_OVR_VAL FW register
csi_tadp_tx_0_O_ERRCONTENTIONLP0_D2_OVR_VAL = hc000801c 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP0_D2_OVR_VAL FW register
csi_tadp_tx_0_O_ERRCONTENTIONLP1_D2_OVR_VAL = hc000801c 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP1_D2_OVR_VAL FW register
csi_tadp_tx_0_O_ERRSOTHS_D2_OVR_VAL = hc000801c 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSOTHS_D2_OVR_VAL FW register
csi_tadp_tx_0_O_ERRSOTSYNCHS_D2_OVR_VAL = hc000801c 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSOTSYNCHS_D2_OVR_VAL FW register
csi_tadp_tx_0_RESERVED_15_15 = hc000801c 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 FW register



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE2_OVR_0_8_reg Address hc0008020
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE2_OVR_0_8_reg = 3221258272 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_ENABLE_D2_OVR_EN = hc0008020 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_ENABLE_D2_OVR_EN FW register
csi_tadp_tx_0_O_STOPSTATE_D2_OVR_EN = hc0008020 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_STOPSTATE_D2_OVR_EN FW register
csi_tadp_tx_0_O_ULPSACTIVENOT_D2_OVR_EN = hc0008020 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ULPSACTIVENOT_D2_OVR_EN FW register
csi_tadp_tx_0_I_TURNREQUEST_D2_OVR_EN = hc0008020 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNREQUEST_D2_OVR_EN FW register
csi_tadp_tx_0_I_TURNDISABLE_D2_OVR_EN = hc0008020 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNDISABLE_D2_OVR_EN FW register
csi_tadp_tx_0_O_DIRECTION_D2_OVR_EN = hc0008020 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_DIRECTION_D2_OVR_EN FW register
csi_tadp_tx_0_I_FORCERXMODE_D2_OVR_EN = hc0008020 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCERXMODE_D2_OVR_EN FW register
csi_tadp_tx_0_I_FORCETXSTOPMODE_D2_OVR_EN = hc0008020 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCETXSTOPMODE_D2_OVR_EN FW register
csi_tadp_tx_0_O_ERRESC_D2_OVR_EN = hc0008020 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRESC_D2_OVR_EN FW register
csi_tadp_tx_0_O_ERRSYNCESC_D2_OVR_EN = hc0008020 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSYNCESC_D2_OVR_EN FW register
csi_tadp_tx_0_O_ERRCONTROL_D2_OVR_EN = hc0008020 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTROL_D2_OVR_EN FW register
csi_tadp_tx_0_O_ERRCONTENTIONLP0_D2_OVR_EN = hc0008020 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP0_D2_OVR_EN FW register
csi_tadp_tx_0_O_ERRCONTENTIONLP1_D2_OVR_EN = hc0008020 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP1_D2_OVR_EN FW register
csi_tadp_tx_0_O_ERRSOTHS_D2_OVR_EN = hc0008020 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSOTHS_D2_OVR_EN FW register
csi_tadp_tx_0_O_ERRSOTSYNCHS_D2_OVR_EN = hc0008020 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSOTSYNCHS_D2_OVR_EN FW register
csi_tadp_tx_0_RESERVED_15_15 = hc0008020 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 FW register



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE2_OVR_1_0_reg Address hc0008040
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE2_OVR_1_0_reg = 3221258304 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXDATAHS_C2_OVR_VAL = hc0008040 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXDATAHS_C2_OVR_VAL FW register



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE2_OVR_1_1_reg Address hc0008044
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE2_OVR_1_1_reg = 3221258308 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXACTIVEHS_C2_OVR_VAL = hc0008044 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXACTIVEHS_C2_OVR_VAL FW register
csi_tadp_tx_0_O_RXSYNCHS_C2_OVR_VAL = hc0008044 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXSYNCHS_C2_OVR_VAL FW register
csi_tadp_tx_0_O_RXVALIDHS_C2_OVR_VAL = hc0008044 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDHS_C2_OVR_VAL FW register
csi_tadp_tx_0_O_RXINVALIDCODEHS_C2_OVR_VAL = hc0008044 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXINVALIDCODEHS_C2_OVR_VAL FW register
csi_tadp_tx_0_O_RXWORDCLKHS_C2_OVR_VAL = hc0008044 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXWORDCLKHS_C2_OVR_VAL FW register
csi_tadp_tx_0_O_RXSYNCTYPEHS_C2_OVR_VAL = hc0008044 5 3 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXSYNCTYPEHS_C2_OVR_VAL FW register
csi_tadp_tx_0_O_RXALPVALIDHS_C2_OVR_EN = hc0008044 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXALPVALIDHS_C2_OVR_EN FW register
csi_tadp_tx_0_O_RXALPCODE_C2_OVR_VAL = hc0008044 9 4 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXALPCODE_C2_OVR_VAL FW register
csi_tadp_tx_0_O_RXALPNIBBLE_C2_OVR_EN = hc0008044 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXALPNIBBLE_C2_OVR_EN FW register
csi_tadp_tx_0_RESERVED_15_14 = hc0008044 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 FW register



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE2_OVR_1_2_reg Address hc0008048
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE2_OVR_1_2_reg = 3221258312 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXACTIVEHS_C2_OVR_EN = hc0008048 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXACTIVEHS_C2_OVR_EN FW register
csi_tadp_tx_0_O_RXSYNCHS_C2_OVR_EN = hc0008048 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXSYNCHS_C2_OVR_EN FW register
csi_tadp_tx_0_O_RXVALIDHS_C2_OVR_EN = hc0008048 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDHS_C2_OVR_EN FW register
csi_tadp_tx_0_O_RXINVALIDCODEHS_C2_OVR_EN = hc0008048 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXINVALIDCODEHS_C2_OVR_EN FW register
csi_tadp_tx_0_O_RXWORDCLKHS_C2_OVR_EN = hc0008048 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXWORDCLKHS_C2_OVR_EN FW register
csi_tadp_tx_0_O_RXSYNCTYPEHS_C2_OVR_EN = hc0008048 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXSYNCTYPEHS_C2_OVR_EN FW register
csi_tadp_tx_0_O_RXDATAHS_C2_OVR_EN = hc0008048 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXDATAHS_C2_OVR_EN FW register
csi_tadp_tx_0_O_RXALPVALIDHS_C2_OVR_VAL = hc0008048 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXALPVALIDHS_C2_OVR_VAL FW register
csi_tadp_tx_0_O_RXALPNIBBLE_C2_OVR_VAL = hc0008048 8 4 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXALPNIBBLE_C2_OVR_VAL FW register
csi_tadp_tx_0_O_RXALPCODE_C2_OVR_EN = hc0008048 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXALPCODE_C2_OVR_EN FW register
csi_tadp_tx_0_I_TXSYNCTYPEHS_C2_OVR_VAL = hc0008048 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXSYNCTYPEHS_C2_OVR_VAL FW register



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE2_OVR_1_3_reg Address hc000804c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE2_OVR_1_3_reg = 3221258316 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXDATAHS_C2_OVR_VAL = hc000804c 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXDATAHS_C2_OVR_VAL FW register



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE2_OVR_1_4_reg Address hc0008050
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE2_OVR_1_4_reg = 3221258320 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXREQUESTESC_C2_OVR_VAL = hc0008050 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTESC_C2_OVR_VAL FW register
csi_tadp_tx_0_I_TXLPDTESC_C2_OVR_VAL = hc0008050 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXLPDTESC_C2_OVR_VAL FW register
csi_tadp_tx_0_I_TXULPSEXIT_C2_OVR_VAL = hc0008050 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSEXIT_C2_OVR_VAL FW register
csi_tadp_tx_0_I_TXULPSESC_C2_OVR_VAL = hc0008050 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSESC_C2_OVR_VAL FW register
csi_tadp_tx_0_I_TXVALIDESC_C2_OVR_VAL = hc0008050 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXVALIDESC_C2_OVR_VAL FW register
csi_tadp_tx_0_O_TXREADYESC_C2_OVR_VAL = hc0008050 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYESC_C2_OVR_VAL FW register
csi_tadp_tx_0_I_TXTRIGGERESC_C2_OVR_VAL = hc0008050 6 4 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXTRIGGERESC_C2_OVR_VAL FW register
csi_tadp_tx_0_I_TXDATAESC_C2_OVR_EN = hc0008050 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATAESC_C2_OVR_EN FW register
csi_tadp_tx_0_I_TXREQUESTHS_C2_OVR_VAL = hc0008050 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTHS_C2_OVR_VAL FW register
csi_tadp_tx_0_I_TXDATATRANSFERENHS_C2_OVR_VAL = hc0008050 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATATRANSFERENHS_C2_OVR_VAL FW register
csi_tadp_tx_0_O_TXREADYHS_C2_OVR_VAL = hc0008050 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYHS_C2_OVR_VAL FW register
csi_tadp_tx_0_O_TXWORDCLKHS_C2_OVR_VAL = hc0008050 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXWORDCLKHS_C2_OVR_VAL FW register
csi_tadp_tx_0_RESERVED_15_15 = hc0008050 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 FW register



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE2_OVR_1_5_reg Address hc0008054
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE2_OVR_1_5_reg = 3221258324 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXREQUESTESC_C2_OVR_EN = hc0008054 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTESC_C2_OVR_EN FW register
csi_tadp_tx_0_I_TXLPDTESC_C2_OVR_EN = hc0008054 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXLPDTESC_C2_OVR_EN FW register
csi_tadp_tx_0_I_TXULPSEXIT_C2_OVR_EN = hc0008054 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSEXIT_C2_OVR_EN FW register
csi_tadp_tx_0_I_TXULPSESC_C2_OVR_EN = hc0008054 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSESC_C2_OVR_EN FW register
csi_tadp_tx_0_I_TXVALIDESC_C2_OVR_EN = hc0008054 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXVALIDESC_C2_OVR_EN FW register
csi_tadp_tx_0_O_TXREADYESC_C2_OVR_EN = hc0008054 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYESC_C2_OVR_EN FW register
csi_tadp_tx_0_I_TXTRIGGERESC_C2_OVR_EN = hc0008054 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXTRIGGERESC_C2_OVR_EN FW register
csi_tadp_tx_0_I_TXDATAESC_C2_OVR_VAL = hc0008054 7 8 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXDATAESC_C2_OVR_VAL FW register
csi_tadp_tx_0_RESERVED_15_15 = hc0008054 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 FW register



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE2_OVR_1_6_reg Address hc0008058
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE2_OVR_1_6_reg = 3221258328 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXCLKESC_C2_OVR_VAL = hc0008058 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXCLKESC_C2_OVR_VAL 
csi_tadp_tx_0_O_RXLPDTESC_C2_OVR_VAL = hc0008058 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXLPDTESC_C2_OVR_VAL 
csi_tadp_tx_0_O_RXULPSESC_C2_OVR_VAL = hc0008058 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXULPSESC_C2_OVR_VAL 
csi_tadp_tx_0_O_RXVALIDESC_C2_OVR_VAL = hc0008058 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDESC_C2_OVR_VAL 
csi_tadp_tx_0_O_RXTRIGGERESC_C2_OVR_VAL = hc0008058 4 4 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXTRIGGERESC_C2_OVR_VAL 
csi_tadp_tx_0_O_RXDATAESC_C2_OVR_VAL = hc0008058 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXDATAESC_C2_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE2_OVR_1_7_reg Address hc000805c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE2_OVR_1_7_reg = 3221258332 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXCLKESC_C2_OVR_EN = hc000805c 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXCLKESC_C2_OVR_EN 
csi_tadp_tx_0_O_RXLPDTESC_C2_OVR_EN = hc000805c 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXLPDTESC_C2_OVR_EN 
csi_tadp_tx_0_O_RXULPSESC_C2_OVR_EN = hc000805c 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXULPSESC_C2_OVR_EN 
csi_tadp_tx_0_O_RXVALIDESC_C2_OVR_EN = hc000805c 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDESC_C2_OVR_EN 
csi_tadp_tx_0_O_RXTRIGGERESC_C2_OVR_EN = hc000805c 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXTRIGGERESC_C2_OVR_EN 
csi_tadp_tx_0_O_RXDATAESC_C2_OVR_EN = hc000805c 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXDATAESC_C2_OVR_EN 
csi_tadp_tx_0_I_TXREQUESTHS_C2_OVR_EN = hc000805c 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTHS_C2_OVR_EN 
csi_tadp_tx_0_I_TXDATATRANSFERENHS_C2_OVR_EN = hc000805c 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATATRANSFERENHS_C2_OVR_EN 
csi_tadp_tx_0_O_TXREADYHS_C2_OVR_EN = hc000805c 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYHS_C2_OVR_EN 
csi_tadp_tx_0_O_TXWORDCLKHS_C2_OVR_EN = hc000805c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXWORDCLKHS_C2_OVR_EN 
csi_tadp_tx_0_I_TXDATAHS_C2_OVR_EN = hc000805c 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATAHS_C2_OVR_EN 
csi_tadp_tx_0_I_TXSENDSYNCHS_C2_OVR_EN = hc000805c 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXSENDSYNCHS_C2_OVR_EN 
csi_tadp_tx_0_I_TXSYNCTYPEHS_C2_OVR_EN = hc000805c 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXSYNCTYPEHS_C2_OVR_EN 
csi_tadp_tx_0_RESERVED_15_13 = hc000805c 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE2_OVR_1_8_reg Address hc0008060
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE2_OVR_1_8_reg = 3221258336 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_ENABLE_C2_OVR_VAL = hc0008060 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_ENABLE_C2_OVR_VAL dsp interrupt status
csi_tadp_tx_0_O_STOPSTATE_C2_OVR_VAL = hc0008060 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_STOPSTATE_C2_OVR_VAL dsp interrupt status
csi_tadp_tx_0_O_ULPSACTIVENOT_C2_OVR_VAL = hc0008060 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ULPSACTIVENOT_C2_OVR_VAL dsp interrupt status
csi_tadp_tx_0_I_TURNREQUEST_C2_OVR_VAL = hc0008060 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNREQUEST_C2_OVR_VAL dsp interrupt status
csi_tadp_tx_0_I_TURNDISABLE_C2_OVR_VAL = hc0008060 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNDISABLE_C2_OVR_VAL dsp interrupt status
csi_tadp_tx_0_O_DIRECTION_C2_OVR_VAL = hc0008060 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_DIRECTION_C2_OVR_VAL dsp interrupt status
csi_tadp_tx_0_I_FORCERXMODE_C2_OVR_VAL = hc0008060 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCERXMODE_C2_OVR_VAL dsp interrupt status
csi_tadp_tx_0_I_FORCETXSTOPMODE_C2_OVR_VAL = hc0008060 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCETXSTOPMODE_C2_OVR_VAL dsp interrupt status
csi_tadp_tx_0_O_ERRESC_C2_OVR_VAL = hc0008060 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRESC_C2_OVR_VAL dsp interrupt status
csi_tadp_tx_0_O_ERRSYNCESC_C2_OVR_VAL = hc0008060 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSYNCESC_C2_OVR_VAL dsp interrupt status
csi_tadp_tx_0_O_ERRCONTROL_C2_OVR_VAL = hc0008060 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTROL_C2_OVR_VAL dsp interrupt status
csi_tadp_tx_0_O_ERRCONTENTIONLP0_C2_OVR_VAL = hc0008060 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP0_C2_OVR_VAL dsp interrupt status
csi_tadp_tx_0_O_ERRCONTENTIONLP1_C2_OVR_VAL = hc0008060 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP1_C2_OVR_VAL dsp interrupt status
csi_tadp_tx_0_O_ERRSOTHS_C2_OVR_VAL = hc0008060 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSOTHS_C2_OVR_VAL dsp interrupt status
csi_tadp_tx_0_I_TXSENDSYNCHS_C2_OVR_VAL = hc0008060 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXSENDSYNCHS_C2_OVR_VAL dsp interrupt status
csi_tadp_tx_0_RESERVED_15_15 = hc0008060 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 dsp interrupt status



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE2_OVR_1_9_reg Address hc0008064
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE2_OVR_1_9_reg = 3221258340 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_ENABLE_C2_OVR_EN = hc0008064 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_ENABLE_C2_OVR_EN dsp interrupt mask
csi_tadp_tx_0_O_STOPSTATE_C2_OVR_EN = hc0008064 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_STOPSTATE_C2_OVR_EN dsp interrupt mask
csi_tadp_tx_0_O_ULPSACTIVENOT_C2_OVR_EN = hc0008064 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ULPSACTIVENOT_C2_OVR_EN dsp interrupt mask
csi_tadp_tx_0_I_TURNREQUEST_C2_OVR_EN = hc0008064 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNREQUEST_C2_OVR_EN dsp interrupt mask
csi_tadp_tx_0_I_TURNDISABLE_C2_OVR_EN = hc0008064 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNDISABLE_C2_OVR_EN dsp interrupt mask
csi_tadp_tx_0_O_DIRECTION_C2_OVR_EN = hc0008064 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_DIRECTION_C2_OVR_EN dsp interrupt mask
csi_tadp_tx_0_I_FORCERXMODE_C2_OVR_EN = hc0008064 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCERXMODE_C2_OVR_EN dsp interrupt mask
csi_tadp_tx_0_I_FORCETXSTOPMODE_C2_OVR_EN = hc0008064 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCETXSTOPMODE_C2_OVR_EN dsp interrupt mask
csi_tadp_tx_0_O_ERRESC_C2_OVR_EN = hc0008064 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRESC_C2_OVR_EN dsp interrupt mask
csi_tadp_tx_0_O_ERRSYNCESC_C2_OVR_EN = hc0008064 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSYNCESC_C2_OVR_EN dsp interrupt mask
csi_tadp_tx_0_O_ERRCONTROL_C2_OVR_EN = hc0008064 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTROL_C2_OVR_EN dsp interrupt mask
csi_tadp_tx_0_O_ERRCONTENTIONLP0_C2_OVR_EN = hc0008064 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP0_C2_OVR_EN dsp interrupt mask
csi_tadp_tx_0_O_ERRCONTENTIONLP1_C2_OVR_EN = hc0008064 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP1_C2_OVR_EN dsp interrupt mask
csi_tadp_tx_0_O_ERRSOTHS_C2_OVR_EN = hc0008064 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSOTHS_C2_OVR_EN dsp interrupt mask
csi_tadp_tx_0_RESERVED_15_14 = hc0008064 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 dsp interrupt mask



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_0_reg Address hc0008080
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_0_reg = 3221258368 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE2_SPARE_IN = hc0008080 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_SPARE_IN 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_1_reg Address hc0008084
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_1_reg = 3221258372 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE2_SPARE_IN = hc0008084 0 9 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_SPARE_IN 
csi_tadp_tx_0_OA_LANE2_HSTX_LOWCAP_EN_OVR_EN = hc0008084 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_LOWCAP_EN_OVR_EN 
csi_tadp_tx_0_RESERVED_15_10 = hc0008084 10 6 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_2_reg Address hc0008088
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_2_reg = 3221258376 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE2_SEL_LANE_CFG = hc0008088 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_SEL_LANE_CFG 
csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_OVR_EN = hc0008088 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_TERM_EN200OHMS = hc0008088 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_TERM_EN200OHMS 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PON_OVR_VAL = hc0008088 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSTX_LOWCAP_EN_OVR_VAL = hc0008088 4 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_LOWCAP_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSTX_DIV_EN_OVR_VAL = hc0008088 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_DIV_EN_OVR_VAL 
csi_tadp_tx_0_RESERVED_15_7 = hc0008088 7 9 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_7 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_3_reg Address hc000808c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_3_reg = 3221258380 0 16 b00000000000000000000000100010000 RW
csi_tadp_tx_0_OA_LANE2_HSTX_PON_OVR_VAL = hc000808c 0 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSTX_BOOST_EN_OVR_VAL = hc000808c 2 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_BOOST_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSTX_SEL_PHASE0 = hc000808c 4 1 h1 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_SEL_PHASE0 
csi_tadp_tx_0_OA_LANE2_HSTX_EQA = hc000808c 5 3 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_EQA 
csi_tadp_tx_0_OA_LANE2_HSTX_SEL_CLKLB = hc000808c 8 1 h1 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_SEL_CLKLB 
csi_tadp_tx_0_OA_LANE2_LPTX_DIN_DN_OVR_VAL = hc000808c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_LPTX_DIN_DN_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_LPTX_DIN_DP_OVR_VAL = hc000808c 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_LPTX_DIN_DP_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_DCC_EN_OVR_VAL = hc000808c 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_DCC_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_EN_OVR_VAL = hc000808c 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_OVR_VAL = hc000808c 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_OVR_VAL 
csi_tadp_tx_0_RESERVED_15_14 = hc000808c 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_4_reg Address hc0008090
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_4_reg = 3221258384 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE2_HSTX_PON_OVR_EN = hc0008090 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSTX_BOOST_EN_OVR_EN = hc0008090 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_BOOST_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSTX_EQB = hc0008090 2 3 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_EQB 
csi_tadp_tx_0_OA_LANE2_HSTX_CLK_OBS_EN = hc0008090 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_CLK_OBS_EN 
csi_tadp_tx_0_OA_LANE2_LPTX_DIN_DN_OVR_EN = hc0008090 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_LPTX_DIN_DN_OVR_EN 
csi_tadp_tx_0_OA_LANE2_LPTX_DIN_DP_OVR_EN = hc0008090 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_LPTX_DIN_DP_OVR_EN 
csi_tadp_tx_0_OA_LANE2_LPTX_SR_BYPASS_EN = hc0008090 8 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_LPTX_SR_BYPASS_EN 
csi_tadp_tx_0_OA_LANE2_HSTX_TERM_EN_OVR_EN = hc0008090 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_TERM_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_DCC_EN_OVR_EN = hc0008090 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_DCC_EN_OVR_EN 
csi_tadp_tx_0_RESERVED_15_12 = hc0008090 12 4 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_12 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_5_reg Address hc0008094
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_5_reg = 3221258388 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE2_HSTX_DATA_AB_DPHY_OVR_VAL = hc0008094 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_DATA_AB_DPHY_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSTX_DATA_BC_OVR_EN = hc0008094 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_DATA_BC_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSTX_DATA_CA_OVR_EN = hc0008094 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_DATA_CA_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSTX_TERM_EN_OVR_VAL = hc0008094 10 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_TERM_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_EN_OVR_EN = hc0008094 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_EN_OVR_EN 
csi_tadp_tx_0_RESERVED_15_13 = hc0008094 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_6_reg Address hc0008098
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_6_reg = 3221258392 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE2_HSTX_DATA_BC_OVR_VAL = hc0008098 0 7 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_DATA_BC_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSTX_DATA_CA_OVR_VAL = hc0008098 7 7 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_DATA_CA_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSTX_DATA_AB_DPHY_OVR_EN = hc0008098 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_DATA_AB_DPHY_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PON_OVR_EN = hc0008098 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PON_OVR_EN 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_7_reg Address hc000809c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_7_reg = 3221258396 0 16 b00000000000000000001110000000000 RW
csi_tadp_tx_0_OA_LANE2_LPTX_EN_OVR_VAL = hc000809c 0 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_LPTX_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_LPTX_PON_OVR_VAL = hc000809c 2 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_LPTX_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_LPTX_PULLDWN_EN_OVR_VAL = hc000809c 4 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_LPTX_PULLDWN_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_LPRX_LP_PON_OVR_EN = hc000809c 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_LPRX_LP_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE2_LPRX_CD_PON_OVR_EN = hc000809c 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_LPRX_CD_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE2_LPRX_ULP_PON_OVR_EN = hc000809c 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_LPRX_ULP_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_CDR_FBK_EN_OVR_VAL = hc000809c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_CDR_FBK_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_CDR_FBK_CAP_PROG = hc000809c 10 3 h7 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_CDR_FBK_CAP_PROG 
csi_tadp_tx_0_OA_LANE2_HSRX_VCM_DET_SYNC_BYPASS = hc000809c 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_VCM_DET_SYNC_BYPASS 
csi_tadp_tx_0_RESERVED_15_14 = hc000809c 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_8_reg Address hc00080a0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_8_reg = 3221258400 0 16 b00000000000000000001000000000000 RW
csi_tadp_tx_0_OA_LANE2_LPRX_LP_PON_OVR_VAL = hc00080a0 0 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_LPRX_LP_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_LPRX_CD_PON_OVR_VAL = hc00080a0 2 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_LPRX_CD_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_LPRX_ULP_PON_OVR_VAL = hc00080a0 4 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_LPRX_ULP_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_LPTX_EN_OVR_EN = hc00080a0 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_LPTX_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE2_LPTX_PON_OVR_EN = hc00080a0 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_LPTX_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE2_LPTX_PULLDWN_EN_OVR_EN = hc00080a0 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_LPTX_PULLDWN_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_CDR_FBK_EN_OVR_EN = hc00080a0 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_CDR_FBK_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_MASK_CHANGE_OVR_VAL = hc00080a0 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_MASK_CHANGE_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_DELAY_OVR_EN = hc00080a0 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_DELAY_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_CDPHY_SEL_FAST = hc00080a0 12 1 h1 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_CDPHY_SEL_FAST 
csi_tadp_tx_0_RESERVED_15_13 = hc00080a0 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_9_reg Address hc00080a4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_9_reg = 3221258404 0 16 b00000000000000000000101011110000 RW
csi_tadp_tx_0_OA_LANE2_HSRX_EQUALIZER = hc00080a4 0 3 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_EQUALIZER 
csi_tadp_tx_0_OA_LANE2_HSRX_GMODE = hc00080a4 3 2 h2 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_GMODE 
csi_tadp_tx_0_OA_LANE2_HSRX_HS_CLK_DIV = hc00080a4 5 3 h7 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_HS_CLK_DIV 
csi_tadp_tx_0_OA_LANE2_HSRX_SEL_GATED_POLARITY = hc00080a4 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_SEL_GATED_POLARITY 
csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_CDR_DIV = hc00080a4 9 3 h5 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_CDR_DIV 
csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_DELAY_OVR_VAL = hc00080a4 12 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_DELAY_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_10_reg Address hc00080a8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_10_reg = 3221258408 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE2_HSRX_TERM_RIGHT_EN_OVR_VAL = hc00080a8 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_TERM_RIGHT_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_TERM_LEFT_EN_OVR_VAL = hc00080a8 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_TERM_LEFT_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_CLK_CHANNEL_PULL_EN = hc00080a8 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_CLK_CHANNEL_PULL_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_HS_CLK_DIV_EN_OVR_VAL = hc00080a8 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_HS_CLK_DIV_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_DESERIALIZER_EN_OVR_VAL = hc00080a8 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DESERIALIZER_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_DESERIALIZER_DATA_EN_OVR_VAL = hc00080a8 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DESERIALIZER_DATA_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_DESERIALIZER_DIV_EN_OVR_VAL = hc00080a8 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DESERIALIZER_DIV_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_OFFCAL_OBS_EN_OVR_VAL = hc00080a8 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_OFFCAL_OBS_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_VCM_DET_PON_OVR_VAL = hc00080a8 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_VCM_DET_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_VCM_DET_OUT_EN_OVR_VAL = hc00080a8 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_VCM_DET_OUT_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_ALP_DET_RIGHT_PON_OVR_VAL = hc00080a8 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_ALP_DET_RIGHT_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_ALP_DET_LEFT_PON_OVR_VAL = hc00080a8 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_ALP_DET_LEFT_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_MASK_CHANGE_OVR_EN = hc00080a8 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_MASK_CHANGE_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_PON_OVR_EN = hc00080a8 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_EN_OVR_EN = hc00080a8 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSTX_DIV_EN_OVR_EN = hc00080a8 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSTX_DIV_EN_OVR_EN 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_11_reg Address hc00080ac
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_11_reg = 3221258412 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE2_HSRX_TERM_RIGHT_EN_OVR_EN = hc00080ac 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_TERM_RIGHT_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_TERM_LEFT_EN_OVR_EN = hc00080ac 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_TERM_LEFT_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_HS_CLK_DIV_EN_OVR_EN = hc00080ac 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_HS_CLK_DIV_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_DESERIALIZER_EN_OVR_EN = hc00080ac 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DESERIALIZER_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_DESERIALIZER_DATA_EN_OVR_EN = hc00080ac 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DESERIALIZER_DATA_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_DESERIALIZER_DIV_EN_OVR_EN = hc00080ac 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DESERIALIZER_DIV_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_OFFCAL_OBS_EN_OVR_EN = hc00080ac 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_OFFCAL_OBS_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_VCM_DET_PON_OVR_EN = hc00080ac 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_VCM_DET_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_VCM_DET_OUT_EN_OVR_EN = hc00080ac 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_VCM_DET_OUT_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_ALP_DET_RIGHT_PON_OVR_EN = hc00080ac 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_ALP_DET_RIGHT_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_ALP_DET_LEFT_PON_OVR_EN = hc00080ac 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_ALP_DET_LEFT_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_PON_OVR_VAL = hc00080ac 11 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_EN_OVR_VAL = hc00080ac 13 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_EN_OVR_VAL 
csi_tadp_tx_0_RESERVED_15_15 = hc00080ac 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_12_reg Address hc00080b0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_12_reg = 3221258416 0 16 b00000000000000000000100000000000 RW
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_BIAS_BYPASS_EN_OVR_VAL = hc00080b0 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_BIAS_BYPASS_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_BYPASS_EN_OVR_VAL = hc00080b0 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_BYPASS_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_CHANGE_OVR_VAL = hc00080b0 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_CHANGE_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DLL_EN_OVR_VAL = hc00080b0 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DLL_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_PREAMBLE_CAL_EN_OVR_VAL = hc00080b0 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_PREAMBLE_CAL_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_VT_COMP_BIAS = hc00080b0 5 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_VT_COMP_BIAS 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DATA_DELAY_OVR_EN = hc00080b0 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DATA_DELAY_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_DIV = hc00080b0 10 3 h2 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_DIV 
csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_FINE_RANGE = hc00080b0 13 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_FINE_RANGE 
csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_SR_BYPASS_Z = hc00080b0 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_CPHY_SR_BYPASS_Z 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_13_reg Address hc00080b4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_13_reg = 3221258420 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_BIAS_BYPASS_EN_OVR_EN = hc00080b4 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_BIAS_BYPASS_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_BYPASS_EN_OVR_EN = hc00080b4 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_BYPASS_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_CHANGE_OVR_EN = hc00080b4 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_CHANGE_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DLL_EN_OVR_EN = hc00080b4 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DLL_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_PREAMBLE_CAL_EN_OVR_EN = hc00080b4 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_PREAMBLE_CAL_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_VT_COMP_EN = hc00080b4 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_VT_COMP_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DATA_DELAY_OVR_VAL = hc00080b4 6 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DATA_DELAY_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_BIAS_OVR_EN = hc00080b4 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_BIAS_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_COARSE_BANK_OVR_EN = hc00080b4 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_COARSE_BANK_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_TUNE_MODE_OVR_EN = hc00080b4 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_TUNE_MODE_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DLL_FBK_OVR_EN = hc00080b4 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DLL_FBK_OVR_EN 
csi_tadp_tx_0_RESERVED_15_14 = hc00080b4 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_14_reg Address hc00080b8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_14_reg = 3221258424 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_BIAS_OVR_VAL = hc00080b8 0 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_BIAS_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_COARSE_BANK_OVR_VAL = hc00080b8 4 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_COARSE_BANK_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_TUNE_MODE_OVR_VAL = hc00080b8 8 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_TUNE_MODE_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DLL_FBK_OVR_VAL = hc00080b8 10 6 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DLL_FBK_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_15_reg Address hc00080bc
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_2_15_reg = 3221258428 0 16 b00000000000000000000000000000100 RW
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DLL_CP_PROG = hc00080bc 0 3 h4 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DLL_CP_PROG 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_CLK_CHANNEL = hc00080bc 3 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_CLK_CHANNEL 
csi_tadp_tx_0_OA_LANE2_HSRX_OFFCAL_RIGHT_OVR_EN = hc00080bc 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_OFFCAL_RIGHT_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_OFFCAL_LEFT_OVR_EN = hc00080bc 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_OFFCAL_LEFT_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_EN = hc00080bc 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_MID_OVR_EN = hc00080bc 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_MID_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_LEFT_OVR_EN = hc00080bc 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_LEFT_OVR_EN 
csi_tadp_tx_0_OA_LANE2_HSRX_MODE_OVR_EN = hc00080bc 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_MODE_OVR_EN 
csi_tadp_tx_0_OA_LANE2_ATB_SW = hc00080bc 11 5 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_ATB_SW 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_3_0_reg Address hc00080c0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_3_0_reg = 3221258432 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE2_HSRX_OFFCAL_RIGHT_OVR_VAL = hc00080c0 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_OFFCAL_RIGHT_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_OFFCAL_LEFT_OVR_VAL = hc00080c0 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_OFFCAL_LEFT_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_3_1_reg Address hc00080c4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_3_1_reg = 3221258436 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_VAL = hc00080c4 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_MID_OVR_VAL = hc00080c4 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_MID_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_3_2_reg Address hc00080c8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_3_2_reg = 3221258440 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_LEFT_OVR_VAL = hc00080c8 0 9 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_LEFT_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_MID_OVR_VAL = hc00080c8 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_MID_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_VAL = hc00080c8 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_VAL 
csi_tadp_tx_0_OA_LANE2_HSRX_MODE_OVR_VAL = hc00080c8 11 3 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE2_HSRX_MODE_OVR_VAL 
csi_tadp_tx_0_RESERVED_15_14 = hc00080c8 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_3_3_reg Address hc00080cc
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_3_3_reg = 3221258444 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_LANE2_HSRX_DATA_AB_LEFT_OVR_VAL = hc00080cc 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_DATA_AB_LEFT_OVR_VAL 
csi_tadp_tx_0_IA_LANE2_HSRX_DATA_BC_MID_OVR_VAL = hc00080cc 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_DATA_BC_MID_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_3_4_reg Address hc00080d0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_3_4_reg = 3221258448 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_LANE2_HSRX_DATA_CA_RIGHT_OVR_VAL = hc00080d0 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_DATA_CA_RIGHT_OVR_VAL 
csi_tadp_tx_0_IA_LANE2_HSRX_WORD_CLK_OVR_VAL = hc00080d0 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_WORD_CLK_OVR_VAL 
csi_tadp_tx_0_IA_LANE2_HSRX_HS_CLK_DIV_OUT_OVR_VAL = hc00080d0 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_HS_CLK_DIV_OUT_OVR_VAL 
csi_tadp_tx_0_IA_LANE2_HSTX_WORD_CLK_OVR_VAL = hc00080d0 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSTX_WORD_CLK_OVR_VAL 
csi_tadp_tx_0_IA_LANE2_HSRX_VCM_DET_OUT_OVR_VAL = hc00080d0 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_VCM_DET_OUT_OVR_VAL 
csi_tadp_tx_0_IA_LANE2_HSRX_OUT_CAL_LEFT_N_OVR_VAL = hc00080d0 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_OUT_CAL_LEFT_N_OVR_VAL 
csi_tadp_tx_0_IA_LANE2_HSRX_OUT_CAL_LEFT_P_OVR_VAL = hc00080d0 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_OUT_CAL_LEFT_P_OVR_VAL 
csi_tadp_tx_0_IA_LANE2_HSRX_OUT_CAL_RIGHT_N_OVR_VAL = hc00080d0 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_OUT_CAL_RIGHT_N_OVR_VAL 
csi_tadp_tx_0_IA_LANE2_HSRX_OUT_CAL_RIGHT_P_OVR_VAL = hc00080d0 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_OUT_CAL_RIGHT_P_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_3_5_reg Address hc00080d4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_3_5_reg = 3221258452 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_LANE2_HSRX_DATA_AB_LEFT_OVR_EN = hc00080d4 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_DATA_AB_LEFT_OVR_EN 
csi_tadp_tx_0_IA_LANE2_HSRX_DATA_BC_MID_OVR_EN = hc00080d4 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_DATA_BC_MID_OVR_EN 
csi_tadp_tx_0_IA_LANE2_HSRX_DATA_CA_RIGHT_OVR_EN = hc00080d4 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_DATA_CA_RIGHT_OVR_EN 
csi_tadp_tx_0_IA_LANE2_HSRX_WORD_CLK_OVR_EN = hc00080d4 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_WORD_CLK_OVR_EN 
csi_tadp_tx_0_IA_LANE2_HSRX_HS_CLK_DIV_OUT_OVR_EN = hc00080d4 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_HS_CLK_DIV_OUT_OVR_EN 
csi_tadp_tx_0_IA_LANE2_HSTX_WORD_CLK_OVR_EN = hc00080d4 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSTX_WORD_CLK_OVR_EN 
csi_tadp_tx_0_IA_LANE2_HSRX_VCM_DET_OUT_OVR_EN = hc00080d4 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_VCM_DET_OUT_OVR_EN 
csi_tadp_tx_0_IA_LANE2_HSRX_OUT_CAL_LEFT_N_OVR_EN = hc00080d4 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_OUT_CAL_LEFT_N_OVR_EN 
csi_tadp_tx_0_IA_LANE2_HSRX_OUT_CAL_LEFT_P_OVR_EN = hc00080d4 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_OUT_CAL_LEFT_P_OVR_EN 
csi_tadp_tx_0_IA_LANE2_HSRX_OUT_CAL_RIGHT_N_OVR_EN = hc00080d4 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_OUT_CAL_RIGHT_N_OVR_EN 
csi_tadp_tx_0_IA_LANE2_HSRX_OUT_CAL_RIGHT_P_OVR_EN = hc00080d4 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_OUT_CAL_RIGHT_P_OVR_EN 
csi_tadp_tx_0_IA_LANE2_HSRX_DPHY_DDL_OSC_CLK_OVR_EN = hc00080d4 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_DPHY_DDL_OSC_CLK_OVR_EN 
csi_tadp_tx_0_IA_LANE2_HSRX_CPHY_ALP_DET_LEFT_OUT_OVR_EN = hc00080d4 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_CPHY_ALP_DET_LEFT_OUT_OVR_EN 
csi_tadp_tx_0_IA_LANE2_HSRX_CPHY_ALP_DET_RIGHT_OUT_OVR_EN = hc00080d4 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_CPHY_ALP_DET_RIGHT_OUT_OVR_EN 
csi_tadp_tx_0_IA_LANE2_HSRX_CPHY_CDR_OSC_CLK_OVR_EN = hc00080d4 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_CPHY_CDR_OSC_CLK_OVR_EN 
csi_tadp_tx_0_RESERVED_15_15 = hc00080d4 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_3_6_reg Address hc00080d8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_3_6_reg = 3221258456 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_LANE2_HSRX_DPHY_DDL_OSC_CLK_OVR_VAL = hc00080d8 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_DPHY_DDL_OSC_CLK_OVR_VAL 
csi_tadp_tx_0_IA_LANE2_HSRX_CPHY_ALP_DET_LEFT_OUT_OVR_VAL = hc00080d8 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_CPHY_ALP_DET_LEFT_OUT_OVR_VAL 
csi_tadp_tx_0_IA_LANE2_HSRX_CPHY_ALP_DET_RIGHT_OUT_OVR_VAL = hc00080d8 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_CPHY_ALP_DET_RIGHT_OUT_OVR_VAL 
csi_tadp_tx_0_IA_LANE2_HSRX_CPHY_CDR_OSC_CLK_OVR_VAL = hc00080d8 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_HSRX_CPHY_CDR_OSC_CLK_OVR_VAL 
csi_tadp_tx_0_IA_LANE2_LPRX_DOUTCD_OVR_VAL = hc00080d8 4 2 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE2_LPRX_DOUTCD_OVR_VAL 
csi_tadp_tx_0_IA_LANE2_LPRX_DOUTLP_OVR_VAL = hc00080d8 6 2 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE2_LPRX_DOUTLP_OVR_VAL 
csi_tadp_tx_0_IA_LANE2_LPRX_DOUTULP_OVR_VAL = hc00080d8 8 2 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE2_LPRX_DOUTULP_OVR_VAL 
csi_tadp_tx_0_IA_LANE2_SPARE_OUT_OVR_VAL = hc00080d8 10 4 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE2_SPARE_OUT_OVR_VAL 
csi_tadp_tx_0_RESERVED_15_14 = hc00080d8 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_3_7_reg Address hc00080dc
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE2_CTRL_3_7_reg = 3221258460 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_LANE2_LPRX_DOUTCD_OVR_EN = hc00080dc 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_LPRX_DOUTCD_OVR_EN 
csi_tadp_tx_0_IA_LANE2_LPRX_DOUTLP_OVR_EN = hc00080dc 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_LPRX_DOUTLP_OVR_EN 
csi_tadp_tx_0_IA_LANE2_LPRX_DOUTULP_OVR_EN = hc00080dc 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_LPRX_DOUTULP_OVR_EN 
csi_tadp_tx_0_IA_LANE2_SPARE_OUT_OVR_EN = hc00080dc 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE2_SPARE_OUT_OVR_EN 
csi_tadp_tx_0_RESERVED_15_4 = hc00080dc 4 12 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_4 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE2_OVR_5_2_reg Address hc0008148
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE2_OVR_5_2_reg = 3221258568 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXSENDALPHS_C2_OVR_VAL = hc0008148 0 2 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXSENDALPHS_C2_OVR_VAL 
csi_tadp_tx_0_I_TXALPCODE_C2_OVR_VAL = hc0008148 2 4 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXALPCODE_C2_OVR_VAL 
csi_tadp_tx_0_I_TXALPNIBBLE_C2_OVR_VAL = hc0008148 6 4 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXALPNIBBLE_C2_OVR_VAL 
csi_tadp_tx_0_I_ALPWAKESTATE_C2_OVR_VAL = hc0008148 10 3 h0 RW HEX
; Desc_csi_tadp_tx_0_I_ALPWAKESTATE_C2_OVR_VAL 
csi_tadp_tx_0_RESERVED_15_13 = hc0008148 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE2_OVR_5_3_reg Address hc000814c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_CPHY_PPI_LANE2_OVR_5_3_reg = 3221258572 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXSENDALPHS_C2_OVR_EN = hc000814c 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXSENDALPHS_C2_OVR_EN 
csi_tadp_tx_0_I_TXALPCODE_C2_OVR_EN = hc000814c 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXALPCODE_C2_OVR_EN 
csi_tadp_tx_0_I_TXALPNIBBLE_C2_OVR_EN = hc000814c 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXALPNIBBLE_C2_OVR_EN 
csi_tadp_tx_0_I_ALPWAKESTATE_C2_OVR_EN = hc000814c 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_ALPWAKESTATE_C2_OVR_EN 
csi_tadp_tx_0_RESERVED_15_4 = hc000814c 4 12 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_4 



; REGISTER csi_tadp_tx_0_CORE_DIG_RW_TRIO2_0_reg Address hc0008200
_csi_tadp_tx_0_CORE_DIG_RW_TRIO2_0_reg = 3221258752 0 16 b00000000000000000000010001001010 RW
csi_tadp_tx_0_DESERIALIZER_DATA_EN_DELAY_THRESH = hc0008200 0 3 h2 RW HEX
; Desc_csi_tadp_tx_0_DESERIALIZER_DATA_EN_DELAY_THRESH 
csi_tadp_tx_0_DESERIALIZER_DIV_EN_DELAY_THRESH = hc0008200 3 3 h1 RW HEX
; Desc_csi_tadp_tx_0_DESERIALIZER_DIV_EN_DELAY_THRESH 
csi_tadp_tx_0_DESERIALIZER_DIV_EN_DELAY_DEASS_THRESH = hc0008200 6 3 h1 RW HEX
; Desc_csi_tadp_tx_0_DESERIALIZER_DIV_EN_DELAY_DEASS_THRESH 
csi_tadp_tx_0_POST_RECEIVED_RESET_THRESH = hc0008200 9 3 h2 RW HEX
; Desc_csi_tadp_tx_0_POST_RECEIVED_RESET_THRESH 
csi_tadp_tx_0_RESERVED_15_12 = hc0008200 12 4 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_12 



; REGISTER csi_tadp_tx_0_CORE_DIG_RW_TRIO2_1_reg Address hc0008204
_csi_tadp_tx_0_CORE_DIG_RW_TRIO2_1_reg = 3221258756 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_POST_DET_DELAY_THRESH = hc0008204 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_POST_DET_DELAY_THRESH 



; REGISTER csi_tadp_tx_0_CORE_DIG_RW_TRIO2_2_reg Address hc0008208
_csi_tadp_tx_0_CORE_DIG_RW_TRIO2_2_reg = 3221258760 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_DESERIALIZER_EN_DELAY_DEASS_THRESH = hc0008208 0 8 ha RW HEX
; Desc_csi_tadp_tx_0_DESERIALIZER_EN_DELAY_DEASS_THRESH 
csi_tadp_tx_0_RESERVED_15_8 = hc0008208 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE3_OVR_0_0_reg Address hc0008800
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE3_OVR_0_0_reg = 3221260288 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXACTIVEHS_D3_OVR_VAL = hc0008800 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXACTIVEHS_D3_OVR_VAL 
csi_tadp_tx_0_O_RXSYNCHS_D3_OVR_VAL = hc0008800 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXSYNCHS_D3_OVR_VAL 
csi_tadp_tx_0_O_RXVALIDHS_D3_OVR_VAL = hc0008800 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDHS_D3_OVR_VAL 
csi_tadp_tx_0_O_RXSKEWCALHS_D3_OVR_VAL = hc0008800 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXSKEWCALHS_D3_OVR_VAL 
csi_tadp_tx_0_O_RXWORDCLKHS_D3_OVR_VAL = hc0008800 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXWORDCLKHS_D3_OVR_VAL 
csi_tadp_tx_0_O_RXDATAHS_D3_OVR_VAL = hc0008800 5 8 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXDATAHS_D3_OVR_VAL 
csi_tadp_tx_0_O_RXALTERNATECALHS_D3_OVR_VAL = hc0008800 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXALTERNATECALHS_D3_OVR_VAL 
csi_tadp_tx_0_RESERVED_15_14 = hc0008800 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE3_OVR_0_1_reg Address hc0008804
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE3_OVR_0_1_reg = 3221260292 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXACTIVEHS_D3_OVR_EN = hc0008804 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXACTIVEHS_D3_OVR_EN 
csi_tadp_tx_0_O_RXSYNCHS_D3_OVR_EN = hc0008804 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXSYNCHS_D3_OVR_EN 
csi_tadp_tx_0_O_RXVALIDHS_D3_OVR_EN = hc0008804 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDHS_D3_OVR_EN 
csi_tadp_tx_0_O_RXSKEWCALHS_D3_OVR_EN = hc0008804 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXSKEWCALHS_D3_OVR_EN 
csi_tadp_tx_0_O_RXWORDCLKHS_D3_OVR_EN = hc0008804 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXWORDCLKHS_D3_OVR_EN 
csi_tadp_tx_0_O_RXDATAHS_D3_OVR_EN = hc0008804 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXDATAHS_D3_OVR_EN 
csi_tadp_tx_0_I_TXREQUESTHS_D3_OVR_EN = hc0008804 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTHS_D3_OVR_EN 
csi_tadp_tx_0_I_TXDATATRANSFERENHS_D3_OVR_EN = hc0008804 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATATRANSFERENHS_D3_OVR_EN 
csi_tadp_tx_0_O_TXREADYHS_D3_OVR_EN = hc0008804 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYHS_D3_OVR_EN 
csi_tadp_tx_0_O_TXWORDCLKHS_D3_OVR_EN = hc0008804 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXWORDCLKHS_D3_OVR_EN 
csi_tadp_tx_0_I_TXDATAHS_D3_OVR_EN = hc0008804 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATAHS_D3_OVR_EN 
csi_tadp_tx_0_O_RXALTERNATECALHS_D3_OVR_EN = hc0008804 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXALTERNATECALHS_D3_OVR_EN 
csi_tadp_tx_0_RESERVED_15_12 = hc0008804 12 4 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_12 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE3_OVR_0_2_reg Address hc0008808
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE3_OVR_0_2_reg = 3221260296 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXREQUESTHS_D3_OVR_VAL = hc0008808 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTHS_D3_OVR_VAL 
csi_tadp_tx_0_I_TXDATATRANSFERENHS_D3_OVR_VAL = hc0008808 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATATRANSFERENHS_D3_OVR_VAL 
csi_tadp_tx_0_O_TXREADYHS_D3_OVR_VAL = hc0008808 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYHS_D3_OVR_VAL 
csi_tadp_tx_0_O_TXWORDCLKHS_D3_OVR_VAL = hc0008808 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXWORDCLKHS_D3_OVR_VAL 
csi_tadp_tx_0_I_TXDATAHS_D3_OVR_VAL = hc0008808 4 8 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXDATAHS_D3_OVR_VAL 
csi_tadp_tx_0_I_TXSKEWCALHS_D3_OVR_VAL = hc0008808 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXSKEWCALHS_D3_OVR_VAL 
csi_tadp_tx_0_RESERVED_15_13 = hc0008808 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE3_OVR_0_3_reg Address hc000880c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE3_OVR_0_3_reg = 3221260300 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXREQUESTESC_D3_OVR_VAL = hc000880c 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTESC_D3_OVR_VAL 
csi_tadp_tx_0_I_TXLPDTESC_D3_OVR_VAL = hc000880c 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXLPDTESC_D3_OVR_VAL 
csi_tadp_tx_0_I_TXULPSEXIT_D3_OVR_VAL = hc000880c 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSEXIT_D3_OVR_VAL 
csi_tadp_tx_0_I_TXULPSESC_D3_OVR_VAL = hc000880c 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSESC_D3_OVR_VAL 
csi_tadp_tx_0_I_TXVALIDESC_D3_OVR_VAL = hc000880c 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXVALIDESC_D3_OVR_VAL 
csi_tadp_tx_0_O_TXREADYESC_D3_OVR_VAL = hc000880c 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYESC_D3_OVR_VAL 
csi_tadp_tx_0_I_TXTRIGGERESC_D3_OVR_VAL = hc000880c 6 4 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXTRIGGERESC_D3_OVR_VAL 
csi_tadp_tx_0_I_TXDATAESC_D3_OVR_EN = hc000880c 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXDATAESC_D3_OVR_EN 
csi_tadp_tx_0_I_TXALTERNATECALHS_D3_OVR_EN = hc000880c 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXALTERNATECALHS_D3_OVR_EN 
csi_tadp_tx_0_I_TXSKEWCALHS_D3_OVR_EN = hc000880c 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXSKEWCALHS_D3_OVR_EN 
csi_tadp_tx_0_RESERVED_15_13 = hc000880c 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE3_OVR_0_4_reg Address hc0008810
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE3_OVR_0_4_reg = 3221260304 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_TXREQUESTESC_D3_OVR_EN = hc0008810 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTESC_D3_OVR_EN 
csi_tadp_tx_0_I_TXLPDTESC_D3_OVR_EN = hc0008810 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXLPDTESC_D3_OVR_EN 
csi_tadp_tx_0_I_TXULPSEXIT_D3_OVR_EN = hc0008810 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSEXIT_D3_OVR_EN 
csi_tadp_tx_0_I_TXULPSESC_D3_OVR_EN = hc0008810 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSESC_D3_OVR_EN 
csi_tadp_tx_0_I_TXVALIDESC_D3_OVR_EN = hc0008810 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXVALIDESC_D3_OVR_EN 
csi_tadp_tx_0_O_TXREADYESC_D3_OVR_EN = hc0008810 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXREADYESC_D3_OVR_EN 
csi_tadp_tx_0_I_TXTRIGGERESC_D3_OVR_EN = hc0008810 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXTRIGGERESC_D3_OVR_EN 
csi_tadp_tx_0_I_TXDATAESC_D3_OVR_VAL = hc0008810 7 8 h0 RW HEX
; Desc_csi_tadp_tx_0_I_TXDATAESC_D3_OVR_VAL 
csi_tadp_tx_0_I_TXALTERNATECALHS_D3_OVR_VAL = hc0008810 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXALTERNATECALHS_D3_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE3_OVR_0_5_reg Address hc0008814
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE3_OVR_0_5_reg = 3221260308 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXCLKESC_D3_OVR_VAL = hc0008814 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXCLKESC_D3_OVR_VAL 
csi_tadp_tx_0_O_RXLPDTESC_D3_OVR_VAL = hc0008814 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXLPDTESC_D3_OVR_VAL 
csi_tadp_tx_0_O_RXULPSESC_D3_OVR_VAL = hc0008814 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXULPSESC_D3_OVR_VAL 
csi_tadp_tx_0_O_RXVALIDESC_D3_OVR_VAL = hc0008814 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDESC_D3_OVR_VAL 
csi_tadp_tx_0_O_RXTRIGGERESC_D3_OVR_VAL = hc0008814 4 4 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXTRIGGERESC_D3_OVR_VAL 
csi_tadp_tx_0_O_RXDATAESC_D3_OVR_VAL = hc0008814 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_O_RXDATAESC_D3_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE3_OVR_0_6_reg Address hc0008818
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE3_OVR_0_6_reg = 3221260312 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_RXCLKESC_D3_OVR_EN = hc0008818 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXCLKESC_D3_OVR_EN 
csi_tadp_tx_0_O_RXLPDTESC_D3_OVR_EN = hc0008818 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXLPDTESC_D3_OVR_EN 
csi_tadp_tx_0_O_RXULPSESC_D3_OVR_EN = hc0008818 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXULPSESC_D3_OVR_EN 
csi_tadp_tx_0_O_RXVALIDESC_D3_OVR_EN = hc0008818 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXVALIDESC_D3_OVR_EN 
csi_tadp_tx_0_O_RXTRIGGERESC_D3_OVR_EN = hc0008818 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXTRIGGERESC_D3_OVR_EN 
csi_tadp_tx_0_O_RXDATAESC_D3_OVR_EN = hc0008818 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXDATAESC_D3_OVR_EN 
csi_tadp_tx_0_RESERVED_15_6 = hc0008818 6 10 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_6 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE3_OVR_0_7_reg Address hc000881c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE3_OVR_0_7_reg = 3221260316 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_ENABLE_D3_OVR_VAL = hc000881c 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_ENABLE_D3_OVR_VAL 
csi_tadp_tx_0_O_STOPSTATE_D3_OVR_VAL = hc000881c 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_STOPSTATE_D3_OVR_VAL 
csi_tadp_tx_0_O_ULPSACTIVENOT_D3_OVR_VAL = hc000881c 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ULPSACTIVENOT_D3_OVR_VAL 
csi_tadp_tx_0_I_TURNREQUEST_D3_OVR_VAL = hc000881c 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNREQUEST_D3_OVR_VAL 
csi_tadp_tx_0_I_TURNDISABLE_D3_OVR_VAL = hc000881c 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNDISABLE_D3_OVR_VAL 
csi_tadp_tx_0_O_DIRECTION_D3_OVR_VAL = hc000881c 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_DIRECTION_D3_OVR_VAL 
csi_tadp_tx_0_I_FORCERXMODE_D3_OVR_VAL = hc000881c 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCERXMODE_D3_OVR_VAL 
csi_tadp_tx_0_I_FORCETXSTOPMODE_D3_OVR_VAL = hc000881c 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCETXSTOPMODE_D3_OVR_VAL 
csi_tadp_tx_0_O_ERRESC_D3_OVR_VAL = hc000881c 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRESC_D3_OVR_VAL 
csi_tadp_tx_0_O_ERRSYNCESC_D3_OVR_VAL = hc000881c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSYNCESC_D3_OVR_VAL 
csi_tadp_tx_0_O_ERRCONTROL_D3_OVR_VAL = hc000881c 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTROL_D3_OVR_VAL 
csi_tadp_tx_0_O_ERRCONTENTIONLP0_D3_OVR_VAL = hc000881c 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP0_D3_OVR_VAL 
csi_tadp_tx_0_O_ERRCONTENTIONLP1_D3_OVR_VAL = hc000881c 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP1_D3_OVR_VAL 
csi_tadp_tx_0_O_ERRSOTHS_D3_OVR_VAL = hc000881c 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSOTHS_D3_OVR_VAL 
csi_tadp_tx_0_O_ERRSOTSYNCHS_D3_OVR_VAL = hc000881c 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSOTSYNCHS_D3_OVR_VAL 
csi_tadp_tx_0_RESERVED_15_15 = hc000881c 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE3_OVR_0_8_reg Address hc0008820
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_LANE3_OVR_0_8_reg = 3221260320 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_ENABLE_D3_OVR_EN = hc0008820 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_ENABLE_D3_OVR_EN 
csi_tadp_tx_0_O_STOPSTATE_D3_OVR_EN = hc0008820 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_STOPSTATE_D3_OVR_EN 
csi_tadp_tx_0_O_ULPSACTIVENOT_D3_OVR_EN = hc0008820 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ULPSACTIVENOT_D3_OVR_EN 
csi_tadp_tx_0_I_TURNREQUEST_D3_OVR_EN = hc0008820 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNREQUEST_D3_OVR_EN 
csi_tadp_tx_0_I_TURNDISABLE_D3_OVR_EN = hc0008820 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TURNDISABLE_D3_OVR_EN 
csi_tadp_tx_0_O_DIRECTION_D3_OVR_EN = hc0008820 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_DIRECTION_D3_OVR_EN 
csi_tadp_tx_0_I_FORCERXMODE_D3_OVR_EN = hc0008820 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCERXMODE_D3_OVR_EN 
csi_tadp_tx_0_I_FORCETXSTOPMODE_D3_OVR_EN = hc0008820 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCETXSTOPMODE_D3_OVR_EN 
csi_tadp_tx_0_O_ERRESC_D3_OVR_EN = hc0008820 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRESC_D3_OVR_EN 
csi_tadp_tx_0_O_ERRSYNCESC_D3_OVR_EN = hc0008820 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSYNCESC_D3_OVR_EN 
csi_tadp_tx_0_O_ERRCONTROL_D3_OVR_EN = hc0008820 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTROL_D3_OVR_EN 
csi_tadp_tx_0_O_ERRCONTENTIONLP0_D3_OVR_EN = hc0008820 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP0_D3_OVR_EN 
csi_tadp_tx_0_O_ERRCONTENTIONLP1_D3_OVR_EN = hc0008820 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRCONTENTIONLP1_D3_OVR_EN 
csi_tadp_tx_0_O_ERRSOTHS_D3_OVR_EN = hc0008820 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSOTHS_D3_OVR_EN 
csi_tadp_tx_0_O_ERRSOTSYNCHS_D3_OVR_EN = hc0008820 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ERRSOTSYNCHS_D3_OVR_EN 
csi_tadp_tx_0_RESERVED_15_15 = hc0008820 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_0_reg Address hc0008880
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_0_reg = 3221260416 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE3_SPARE_IN = hc0008880 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_SPARE_IN 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_1_reg Address hc0008884
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_1_reg = 3221260420 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE3_SPARE_IN = hc0008884 0 9 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_SPARE_IN 
csi_tadp_tx_0_OA_LANE3_HSTX_LOWCAP_EN_OVR_EN = hc0008884 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_LOWCAP_EN_OVR_EN 
csi_tadp_tx_0_RESERVED_15_10 = hc0008884 10 6 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_2_reg Address hc0008888
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_2_reg = 3221260424 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE3_SEL_LANE_CFG = hc0008888 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_SEL_LANE_CFG 
csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_OVR_EN = hc0008888 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_TERM_EN200OHMS = hc0008888 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_TERM_EN200OHMS 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PON_OVR_VAL = hc0008888 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSTX_LOWCAP_EN_OVR_VAL = hc0008888 4 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_LOWCAP_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSTX_DIV_EN_OVR_VAL = hc0008888 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_DIV_EN_OVR_VAL 
csi_tadp_tx_0_RESERVED_15_7 = hc0008888 7 9 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_7 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_3_reg Address hc000888c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_3_reg = 3221260428 0 16 b00000000000000000000000100010000 RW
csi_tadp_tx_0_OA_LANE3_HSTX_PON_OVR_VAL = hc000888c 0 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSTX_BOOST_EN_OVR_VAL = hc000888c 2 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_BOOST_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSTX_SEL_PHASE0 = hc000888c 4 1 h1 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_SEL_PHASE0 
csi_tadp_tx_0_OA_LANE3_HSTX_EQA = hc000888c 5 3 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_EQA 
csi_tadp_tx_0_OA_LANE3_HSTX_SEL_CLKLB = hc000888c 8 1 h1 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_SEL_CLKLB 
csi_tadp_tx_0_OA_LANE3_LPTX_DIN_DN_OVR_VAL = hc000888c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_LPTX_DIN_DN_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_LPTX_DIN_DP_OVR_VAL = hc000888c 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_LPTX_DIN_DP_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_DCC_EN_OVR_VAL = hc000888c 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_DCC_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_EN_OVR_VAL = hc000888c 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_OVR_VAL = hc000888c 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_OVR_VAL 
csi_tadp_tx_0_RESERVED_15_14 = hc000888c 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_4_reg Address hc0008890
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_4_reg = 3221260432 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE3_HSTX_PON_OVR_EN = hc0008890 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSTX_BOOST_EN_OVR_EN = hc0008890 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_BOOST_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSTX_EQB = hc0008890 2 3 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_EQB 
csi_tadp_tx_0_OA_LANE3_HSTX_CLK_OBS_EN = hc0008890 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_CLK_OBS_EN 
csi_tadp_tx_0_OA_LANE3_LPTX_DIN_DN_OVR_EN = hc0008890 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_LPTX_DIN_DN_OVR_EN 
csi_tadp_tx_0_OA_LANE3_LPTX_DIN_DP_OVR_EN = hc0008890 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_LPTX_DIN_DP_OVR_EN 
csi_tadp_tx_0_OA_LANE3_LPTX_SR_BYPASS_EN = hc0008890 8 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_LPTX_SR_BYPASS_EN 
csi_tadp_tx_0_OA_LANE3_HSTX_TERM_EN_OVR_EN = hc0008890 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_TERM_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_DCC_EN_OVR_EN = hc0008890 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_DCC_EN_OVR_EN 
csi_tadp_tx_0_RESERVED_15_12 = hc0008890 12 4 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_12 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_5_reg Address hc0008894
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_5_reg = 3221260436 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE3_HSTX_DATA_AB_DPHY_OVR_VAL = hc0008894 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_DATA_AB_DPHY_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSTX_DATA_BC_OVR_EN = hc0008894 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_DATA_BC_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSTX_DATA_CA_OVR_EN = hc0008894 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_DATA_CA_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSTX_TERM_EN_OVR_VAL = hc0008894 10 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_TERM_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_EN_OVR_EN = hc0008894 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_EN_OVR_EN 
csi_tadp_tx_0_RESERVED_15_13 = hc0008894 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_6_reg Address hc0008898
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_6_reg = 3221260440 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE3_HSTX_DATA_BC_OVR_VAL = hc0008898 0 7 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_DATA_BC_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSTX_DATA_CA_OVR_VAL = hc0008898 7 7 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_DATA_CA_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSTX_DATA_AB_DPHY_OVR_EN = hc0008898 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_DATA_AB_DPHY_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PON_OVR_EN = hc0008898 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PON_OVR_EN 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_7_reg Address hc000889c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_7_reg = 3221260444 0 16 b00000000000000000001110000000000 RW
csi_tadp_tx_0_OA_LANE3_LPTX_EN_OVR_VAL = hc000889c 0 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_LPTX_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_LPTX_PON_OVR_VAL = hc000889c 2 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_LPTX_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_LPTX_PULLDWN_EN_OVR_VAL = hc000889c 4 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_LPTX_PULLDWN_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_LPRX_LP_PON_OVR_EN = hc000889c 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_LPRX_LP_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE3_LPRX_CD_PON_OVR_EN = hc000889c 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_LPRX_CD_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE3_LPRX_ULP_PON_OVR_EN = hc000889c 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_LPRX_ULP_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_CDR_FBK_EN_OVR_VAL = hc000889c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_CDR_FBK_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_CDR_FBK_CAP_PROG = hc000889c 10 3 h7 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_CDR_FBK_CAP_PROG 
csi_tadp_tx_0_OA_LANE3_HSRX_VCM_DET_SYNC_BYPASS = hc000889c 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_VCM_DET_SYNC_BYPASS 
csi_tadp_tx_0_RESERVED_15_14 = hc000889c 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_8_reg Address hc00088a0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_8_reg = 3221260448 0 16 b00000000000000000001000000000000 RW
csi_tadp_tx_0_OA_LANE3_LPRX_LP_PON_OVR_VAL = hc00088a0 0 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_LPRX_LP_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_LPRX_CD_PON_OVR_VAL = hc00088a0 2 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_LPRX_CD_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_LPRX_ULP_PON_OVR_VAL = hc00088a0 4 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_LPRX_ULP_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_LPTX_EN_OVR_EN = hc00088a0 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_LPTX_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE3_LPTX_PON_OVR_EN = hc00088a0 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_LPTX_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE3_LPTX_PULLDWN_EN_OVR_EN = hc00088a0 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_LPTX_PULLDWN_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_CDR_FBK_EN_OVR_EN = hc00088a0 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_CDR_FBK_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_MASK_CHANGE_OVR_VAL = hc00088a0 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_MASK_CHANGE_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_DELAY_OVR_EN = hc00088a0 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_DELAY_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_CDPHY_SEL_FAST = hc00088a0 12 1 h1 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_CDPHY_SEL_FAST 
csi_tadp_tx_0_RESERVED_15_13 = hc00088a0 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_9_reg Address hc00088a4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_9_reg = 3221260452 0 16 b00000000000000000000101011110000 RW
csi_tadp_tx_0_OA_LANE3_HSRX_EQUALIZER = hc00088a4 0 3 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_EQUALIZER 
csi_tadp_tx_0_OA_LANE3_HSRX_GMODE = hc00088a4 3 2 h2 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_GMODE 
csi_tadp_tx_0_OA_LANE3_HSRX_HS_CLK_DIV = hc00088a4 5 3 h7 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_HS_CLK_DIV 
csi_tadp_tx_0_OA_LANE3_HSRX_SEL_GATED_POLARITY = hc00088a4 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_SEL_GATED_POLARITY 
csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_CDR_DIV = hc00088a4 9 3 h5 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_CDR_DIV 
csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_DELAY_OVR_VAL = hc00088a4 12 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_DELAY_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_10_reg Address hc00088a8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_10_reg = 3221260456 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE3_HSRX_TERM_RIGHT_EN_OVR_VAL = hc00088a8 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_TERM_RIGHT_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_TERM_LEFT_EN_OVR_VAL = hc00088a8 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_TERM_LEFT_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_CLK_CHANNEL_PULL_EN = hc00088a8 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_CLK_CHANNEL_PULL_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_HS_CLK_DIV_EN_OVR_VAL = hc00088a8 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_HS_CLK_DIV_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_DESERIALIZER_EN_OVR_VAL = hc00088a8 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DESERIALIZER_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_DESERIALIZER_DATA_EN_OVR_VAL = hc00088a8 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DESERIALIZER_DATA_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_DESERIALIZER_DIV_EN_OVR_VAL = hc00088a8 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DESERIALIZER_DIV_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_OFFCAL_OBS_EN_OVR_VAL = hc00088a8 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_OFFCAL_OBS_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_VCM_DET_PON_OVR_VAL = hc00088a8 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_VCM_DET_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_VCM_DET_OUT_EN_OVR_VAL = hc00088a8 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_VCM_DET_OUT_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_ALP_DET_RIGHT_PON_OVR_VAL = hc00088a8 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_ALP_DET_RIGHT_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_ALP_DET_LEFT_PON_OVR_VAL = hc00088a8 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_ALP_DET_LEFT_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_MASK_CHANGE_OVR_EN = hc00088a8 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_MASK_CHANGE_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_PON_OVR_EN = hc00088a8 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_EN_OVR_EN = hc00088a8 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSTX_DIV_EN_OVR_EN = hc00088a8 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSTX_DIV_EN_OVR_EN 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_11_reg Address hc00088ac
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_11_reg = 3221260460 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE3_HSRX_TERM_RIGHT_EN_OVR_EN = hc00088ac 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_TERM_RIGHT_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_TERM_LEFT_EN_OVR_EN = hc00088ac 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_TERM_LEFT_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_HS_CLK_DIV_EN_OVR_EN = hc00088ac 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_HS_CLK_DIV_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_DESERIALIZER_EN_OVR_EN = hc00088ac 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DESERIALIZER_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_DESERIALIZER_DATA_EN_OVR_EN = hc00088ac 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DESERIALIZER_DATA_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_DESERIALIZER_DIV_EN_OVR_EN = hc00088ac 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DESERIALIZER_DIV_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_OFFCAL_OBS_EN_OVR_EN = hc00088ac 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_OFFCAL_OBS_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_VCM_DET_PON_OVR_EN = hc00088ac 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_VCM_DET_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_VCM_DET_OUT_EN_OVR_EN = hc00088ac 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_VCM_DET_OUT_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_ALP_DET_RIGHT_PON_OVR_EN = hc00088ac 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_ALP_DET_RIGHT_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_ALP_DET_LEFT_PON_OVR_EN = hc00088ac 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_ALP_DET_LEFT_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_PON_OVR_VAL = hc00088ac 11 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_EN_OVR_VAL = hc00088ac 13 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_EN_OVR_VAL 
csi_tadp_tx_0_RESERVED_15_15 = hc00088ac 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_12_reg Address hc00088b0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_12_reg = 3221260464 0 16 b00000000000000000000100000000000 RW
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_BIAS_BYPASS_EN_OVR_VAL = hc00088b0 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_BIAS_BYPASS_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_BYPASS_EN_OVR_VAL = hc00088b0 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_BYPASS_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_CHANGE_OVR_VAL = hc00088b0 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_CHANGE_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DLL_EN_OVR_VAL = hc00088b0 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DLL_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_PREAMBLE_CAL_EN_OVR_VAL = hc00088b0 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_PREAMBLE_CAL_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_VT_COMP_BIAS = hc00088b0 5 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_VT_COMP_BIAS 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DATA_DELAY_OVR_EN = hc00088b0 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DATA_DELAY_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_DIV = hc00088b0 10 3 h2 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_DIV 
csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_FINE_RANGE = hc00088b0 13 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_FINE_RANGE 
csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_SR_BYPASS_Z = hc00088b0 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_CPHY_SR_BYPASS_Z 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_13_reg Address hc00088b4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_13_reg = 3221260468 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_BIAS_BYPASS_EN_OVR_EN = hc00088b4 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_BIAS_BYPASS_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_BYPASS_EN_OVR_EN = hc00088b4 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_BYPASS_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_CHANGE_OVR_EN = hc00088b4 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_CHANGE_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DLL_EN_OVR_EN = hc00088b4 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DLL_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_PREAMBLE_CAL_EN_OVR_EN = hc00088b4 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_PREAMBLE_CAL_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_VT_COMP_EN = hc00088b4 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_VT_COMP_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DATA_DELAY_OVR_VAL = hc00088b4 6 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DATA_DELAY_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_BIAS_OVR_EN = hc00088b4 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_BIAS_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_COARSE_BANK_OVR_EN = hc00088b4 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_COARSE_BANK_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_TUNE_MODE_OVR_EN = hc00088b4 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_TUNE_MODE_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DLL_FBK_OVR_EN = hc00088b4 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DLL_FBK_OVR_EN 
csi_tadp_tx_0_RESERVED_15_14 = hc00088b4 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_14_reg Address hc00088b8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_14_reg = 3221260472 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_BIAS_OVR_VAL = hc00088b8 0 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_BIAS_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_COARSE_BANK_OVR_VAL = hc00088b8 4 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_COARSE_BANK_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_TUNE_MODE_OVR_VAL = hc00088b8 8 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_TUNE_MODE_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DLL_FBK_OVR_VAL = hc00088b8 10 6 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DLL_FBK_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_15_reg Address hc00088bc
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_2_15_reg = 3221260476 0 16 b00000000000000000000000000000100 RW
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DLL_CP_PROG = hc00088bc 0 3 h4 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DLL_CP_PROG 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_CLK_CHANNEL = hc00088bc 3 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_CLK_CHANNEL 
csi_tadp_tx_0_OA_LANE3_HSRX_OFFCAL_RIGHT_OVR_EN = hc00088bc 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_OFFCAL_RIGHT_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_OFFCAL_LEFT_OVR_EN = hc00088bc 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_OFFCAL_LEFT_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_EN = hc00088bc 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_MID_OVR_EN = hc00088bc 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_MID_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_LEFT_OVR_EN = hc00088bc 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_LEFT_OVR_EN 
csi_tadp_tx_0_OA_LANE3_HSRX_MODE_OVR_EN = hc00088bc 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_MODE_OVR_EN 
csi_tadp_tx_0_OA_LANE3_ATB_SW = hc00088bc 11 5 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_ATB_SW 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_3_0_reg Address hc00088c0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_3_0_reg = 3221260480 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE3_HSRX_OFFCAL_RIGHT_OVR_VAL = hc00088c0 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_OFFCAL_RIGHT_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_OFFCAL_LEFT_OVR_VAL = hc00088c0 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_OFFCAL_LEFT_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_3_1_reg Address hc00088c4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_3_1_reg = 3221260484 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_VAL = hc00088c4 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_VAL the wanted division for the trn clk. 1. 200 -> 100M
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_MID_OVR_VAL = hc00088c4 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_MID_OVR_VAL the wanted division for the trn clk. 1. 200 -> 100M



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_3_2_reg Address hc00088c8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_3_2_reg = 3221260488 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_LEFT_OVR_VAL = hc00088c8 0 9 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_LEFT_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_MID_OVR_VAL = hc00088c8 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_MID_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_VAL = hc00088c8 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_VAL 
csi_tadp_tx_0_OA_LANE3_HSRX_MODE_OVR_VAL = hc00088c8 11 3 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE3_HSRX_MODE_OVR_VAL 
csi_tadp_tx_0_RESERVED_15_14 = hc00088c8 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_3_3_reg Address hc00088cc
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_3_3_reg = 3221260492 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_LANE3_HSRX_DATA_AB_LEFT_OVR_VAL = hc00088cc 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_DATA_AB_LEFT_OVR_VAL 
csi_tadp_tx_0_IA_LANE3_HSRX_DATA_BC_MID_OVR_VAL = hc00088cc 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_DATA_BC_MID_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_3_4_reg Address hc00088d0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_3_4_reg = 3221260496 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_LANE3_HSRX_DATA_CA_RIGHT_OVR_VAL = hc00088d0 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_DATA_CA_RIGHT_OVR_VAL 
csi_tadp_tx_0_IA_LANE3_HSRX_WORD_CLK_OVR_VAL = hc00088d0 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_WORD_CLK_OVR_VAL 
csi_tadp_tx_0_IA_LANE3_HSRX_HS_CLK_DIV_OUT_OVR_VAL = hc00088d0 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_HS_CLK_DIV_OUT_OVR_VAL 
csi_tadp_tx_0_IA_LANE3_HSTX_WORD_CLK_OVR_VAL = hc00088d0 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSTX_WORD_CLK_OVR_VAL 
csi_tadp_tx_0_IA_LANE3_HSRX_VCM_DET_OUT_OVR_VAL = hc00088d0 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_VCM_DET_OUT_OVR_VAL 
csi_tadp_tx_0_IA_LANE3_HSRX_OUT_CAL_LEFT_N_OVR_VAL = hc00088d0 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_OUT_CAL_LEFT_N_OVR_VAL 
csi_tadp_tx_0_IA_LANE3_HSRX_OUT_CAL_LEFT_P_OVR_VAL = hc00088d0 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_OUT_CAL_LEFT_P_OVR_VAL 
csi_tadp_tx_0_IA_LANE3_HSRX_OUT_CAL_RIGHT_N_OVR_VAL = hc00088d0 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_OUT_CAL_RIGHT_N_OVR_VAL 
csi_tadp_tx_0_IA_LANE3_HSRX_OUT_CAL_RIGHT_P_OVR_VAL = hc00088d0 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_OUT_CAL_RIGHT_P_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_3_5_reg Address hc00088d4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_3_5_reg = 3221260500 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_LANE3_HSRX_DATA_AB_LEFT_OVR_EN = hc00088d4 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_DATA_AB_LEFT_OVR_EN 
csi_tadp_tx_0_IA_LANE3_HSRX_DATA_BC_MID_OVR_EN = hc00088d4 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_DATA_BC_MID_OVR_EN 
csi_tadp_tx_0_IA_LANE3_HSRX_DATA_CA_RIGHT_OVR_EN = hc00088d4 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_DATA_CA_RIGHT_OVR_EN 
csi_tadp_tx_0_IA_LANE3_HSRX_WORD_CLK_OVR_EN = hc00088d4 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_WORD_CLK_OVR_EN 
csi_tadp_tx_0_IA_LANE3_HSRX_HS_CLK_DIV_OUT_OVR_EN = hc00088d4 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_HS_CLK_DIV_OUT_OVR_EN 
csi_tadp_tx_0_IA_LANE3_HSTX_WORD_CLK_OVR_EN = hc00088d4 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSTX_WORD_CLK_OVR_EN 
csi_tadp_tx_0_IA_LANE3_HSRX_VCM_DET_OUT_OVR_EN = hc00088d4 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_VCM_DET_OUT_OVR_EN 
csi_tadp_tx_0_IA_LANE3_HSRX_OUT_CAL_LEFT_N_OVR_EN = hc00088d4 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_OUT_CAL_LEFT_N_OVR_EN 
csi_tadp_tx_0_IA_LANE3_HSRX_OUT_CAL_LEFT_P_OVR_EN = hc00088d4 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_OUT_CAL_LEFT_P_OVR_EN 
csi_tadp_tx_0_IA_LANE3_HSRX_OUT_CAL_RIGHT_N_OVR_EN = hc00088d4 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_OUT_CAL_RIGHT_N_OVR_EN 
csi_tadp_tx_0_IA_LANE3_HSRX_OUT_CAL_RIGHT_P_OVR_EN = hc00088d4 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_OUT_CAL_RIGHT_P_OVR_EN 
csi_tadp_tx_0_IA_LANE3_HSRX_DPHY_DDL_OSC_CLK_OVR_EN = hc00088d4 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_DPHY_DDL_OSC_CLK_OVR_EN 
csi_tadp_tx_0_IA_LANE3_HSRX_CPHY_ALP_DET_LEFT_OUT_OVR_EN = hc00088d4 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_CPHY_ALP_DET_LEFT_OUT_OVR_EN 
csi_tadp_tx_0_IA_LANE3_HSRX_CPHY_ALP_DET_RIGHT_OUT_OVR_EN = hc00088d4 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_CPHY_ALP_DET_RIGHT_OUT_OVR_EN 
csi_tadp_tx_0_IA_LANE3_HSRX_CPHY_CDR_OSC_CLK_OVR_EN = hc00088d4 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_CPHY_CDR_OSC_CLK_OVR_EN 
csi_tadp_tx_0_RESERVED_15_15 = hc00088d4 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_3_6_reg Address hc00088d8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_3_6_reg = 3221260504 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_LANE3_HSRX_DPHY_DDL_OSC_CLK_OVR_VAL = hc00088d8 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_DPHY_DDL_OSC_CLK_OVR_VAL 
csi_tadp_tx_0_IA_LANE3_HSRX_CPHY_ALP_DET_LEFT_OUT_OVR_VAL = hc00088d8 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_CPHY_ALP_DET_LEFT_OUT_OVR_VAL 
csi_tadp_tx_0_IA_LANE3_HSRX_CPHY_ALP_DET_RIGHT_OUT_OVR_VAL = hc00088d8 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_CPHY_ALP_DET_RIGHT_OUT_OVR_VAL 
csi_tadp_tx_0_IA_LANE3_HSRX_CPHY_CDR_OSC_CLK_OVR_VAL = hc00088d8 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_HSRX_CPHY_CDR_OSC_CLK_OVR_VAL 
csi_tadp_tx_0_IA_LANE3_LPRX_DOUTCD_OVR_VAL = hc00088d8 4 2 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE3_LPRX_DOUTCD_OVR_VAL 
csi_tadp_tx_0_IA_LANE3_LPRX_DOUTLP_OVR_VAL = hc00088d8 6 2 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE3_LPRX_DOUTLP_OVR_VAL 
csi_tadp_tx_0_IA_LANE3_LPRX_DOUTULP_OVR_VAL = hc00088d8 8 2 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE3_LPRX_DOUTULP_OVR_VAL 
csi_tadp_tx_0_IA_LANE3_SPARE_OUT_OVR_VAL = hc00088d8 10 4 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE3_SPARE_OUT_OVR_VAL 
csi_tadp_tx_0_RESERVED_15_14 = hc00088d8 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_3_7_reg Address hc00088dc
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE3_CTRL_3_7_reg = 3221260508 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_LANE3_LPRX_DOUTCD_OVR_EN = hc00088dc 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_LPRX_DOUTCD_OVR_EN 
csi_tadp_tx_0_IA_LANE3_LPRX_DOUTLP_OVR_EN = hc00088dc 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_LPRX_DOUTLP_OVR_EN 
csi_tadp_tx_0_IA_LANE3_LPRX_DOUTULP_OVR_EN = hc00088dc 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_LPRX_DOUTULP_OVR_EN 
csi_tadp_tx_0_IA_LANE3_SPARE_OUT_OVR_EN = hc00088dc 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE3_SPARE_OUT_OVR_EN 
csi_tadp_tx_0_RESERVED_15_4 = hc00088dc 4 12 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_4 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_0_reg Address hc0009080
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_0_reg = 3221262464 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE4_SPARE_IN = hc0009080 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_SPARE_IN 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_1_reg Address hc0009084
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_1_reg = 3221262468 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE4_SPARE_IN = hc0009084 0 9 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_SPARE_IN 
csi_tadp_tx_0_OA_LANE4_HSTX_LOWCAP_EN_OVR_EN = hc0009084 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_LOWCAP_EN_OVR_EN 
csi_tadp_tx_0_RESERVED_15_10 = hc0009084 10 6 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_2_reg Address hc0009088
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_2_reg = 3221262472 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE4_SEL_LANE_CFG = hc0009088 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_SEL_LANE_CFG 
csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_OVR_EN = hc0009088 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_TERM_EN200OHMS = hc0009088 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_TERM_EN200OHMS 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PON_OVR_VAL = hc0009088 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSTX_LOWCAP_EN_OVR_VAL = hc0009088 4 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_LOWCAP_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSTX_DIV_EN_OVR_VAL = hc0009088 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_DIV_EN_OVR_VAL 
csi_tadp_tx_0_RESERVED_15_7 = hc0009088 7 9 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_7 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_3_reg Address hc000908c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_3_reg = 3221262476 0 16 b00000000000000000000000100010000 RW
csi_tadp_tx_0_OA_LANE4_HSTX_PON_OVR_VAL = hc000908c 0 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSTX_BOOST_EN_OVR_VAL = hc000908c 2 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_BOOST_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSTX_SEL_PHASE0 = hc000908c 4 1 h1 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_SEL_PHASE0 
csi_tadp_tx_0_OA_LANE4_HSTX_EQA = hc000908c 5 3 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_EQA 
csi_tadp_tx_0_OA_LANE4_HSTX_SEL_CLKLB = hc000908c 8 1 h1 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_SEL_CLKLB 
csi_tadp_tx_0_OA_LANE4_LPTX_DIN_DN_OVR_VAL = hc000908c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_LPTX_DIN_DN_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_LPTX_DIN_DP_OVR_VAL = hc000908c 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_LPTX_DIN_DP_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_DCC_EN_OVR_VAL = hc000908c 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_DCC_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_EN_OVR_VAL = hc000908c 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_OVR_VAL = hc000908c 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_OVR_VAL 
csi_tadp_tx_0_RESERVED_15_14 = hc000908c 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_4_reg Address hc0009090
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_4_reg = 3221262480 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE4_HSTX_PON_OVR_EN = hc0009090 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSTX_BOOST_EN_OVR_EN = hc0009090 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_BOOST_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSTX_EQB = hc0009090 2 3 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_EQB 
csi_tadp_tx_0_OA_LANE4_HSTX_CLK_OBS_EN = hc0009090 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_CLK_OBS_EN 
csi_tadp_tx_0_OA_LANE4_LPTX_DIN_DN_OVR_EN = hc0009090 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_LPTX_DIN_DN_OVR_EN 
csi_tadp_tx_0_OA_LANE4_LPTX_DIN_DP_OVR_EN = hc0009090 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_LPTX_DIN_DP_OVR_EN 
csi_tadp_tx_0_OA_LANE4_LPTX_SR_BYPASS_EN = hc0009090 8 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_LPTX_SR_BYPASS_EN 
csi_tadp_tx_0_OA_LANE4_HSTX_TERM_EN_OVR_EN = hc0009090 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_TERM_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_DCC_EN_OVR_EN = hc0009090 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_DCC_EN_OVR_EN 
csi_tadp_tx_0_RESERVED_15_12 = hc0009090 12 4 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_12 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_5_reg Address hc0009094
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_5_reg = 3221262484 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE4_HSTX_DATA_AB_DPHY_OVR_VAL = hc0009094 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_DATA_AB_DPHY_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSTX_DATA_BC_OVR_EN = hc0009094 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_DATA_BC_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSTX_DATA_CA_OVR_EN = hc0009094 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_DATA_CA_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSTX_TERM_EN_OVR_VAL = hc0009094 10 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_TERM_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_EN_OVR_EN = hc0009094 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_EN_OVR_EN 
csi_tadp_tx_0_RESERVED_15_13 = hc0009094 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_6_reg Address hc0009098
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_6_reg = 3221262488 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE4_HSTX_DATA_BC_OVR_VAL = hc0009098 0 7 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_DATA_BC_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSTX_DATA_CA_OVR_VAL = hc0009098 7 7 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_DATA_CA_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSTX_DATA_AB_DPHY_OVR_EN = hc0009098 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_DATA_AB_DPHY_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PON_OVR_EN = hc0009098 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PON_OVR_EN 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_7_reg Address hc000909c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_7_reg = 3221262492 0 16 b00000000000000000001110000000000 RW
csi_tadp_tx_0_OA_LANE4_LPTX_EN_OVR_VAL = hc000909c 0 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_LPTX_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_LPTX_PON_OVR_VAL = hc000909c 2 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_LPTX_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_LPTX_PULLDWN_EN_OVR_VAL = hc000909c 4 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_LPTX_PULLDWN_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_LPRX_LP_PON_OVR_EN = hc000909c 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_LPRX_LP_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE4_LPRX_CD_PON_OVR_EN = hc000909c 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_LPRX_CD_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE4_LPRX_ULP_PON_OVR_EN = hc000909c 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_LPRX_ULP_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_CDR_FBK_EN_OVR_VAL = hc000909c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_CDR_FBK_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_CDR_FBK_CAP_PROG = hc000909c 10 3 h7 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_CDR_FBK_CAP_PROG 
csi_tadp_tx_0_OA_LANE4_HSRX_VCM_DET_SYNC_BYPASS = hc000909c 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_VCM_DET_SYNC_BYPASS 
csi_tadp_tx_0_RESERVED_15_14 = hc000909c 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_8_reg Address hc00090a0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_8_reg = 3221262496 0 16 b00000000000000000001000000000000 RW
csi_tadp_tx_0_OA_LANE4_LPRX_LP_PON_OVR_VAL = hc00090a0 0 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_LPRX_LP_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_LPRX_CD_PON_OVR_VAL = hc00090a0 2 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_LPRX_CD_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_LPRX_ULP_PON_OVR_VAL = hc00090a0 4 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_LPRX_ULP_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_LPTX_EN_OVR_EN = hc00090a0 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_LPTX_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE4_LPTX_PON_OVR_EN = hc00090a0 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_LPTX_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE4_LPTX_PULLDWN_EN_OVR_EN = hc00090a0 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_LPTX_PULLDWN_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_CDR_FBK_EN_OVR_EN = hc00090a0 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_CDR_FBK_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_MASK_CHANGE_OVR_VAL = hc00090a0 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_MASK_CHANGE_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_DELAY_OVR_EN = hc00090a0 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_DELAY_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_CDPHY_SEL_FAST = hc00090a0 12 1 h1 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_CDPHY_SEL_FAST 
csi_tadp_tx_0_RESERVED_15_13 = hc00090a0 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_13 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_9_reg Address hc00090a4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_9_reg = 3221262500 0 16 b00000000000000000000101011110000 RW
csi_tadp_tx_0_OA_LANE4_HSRX_EQUALIZER = hc00090a4 0 3 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_EQUALIZER 
csi_tadp_tx_0_OA_LANE4_HSRX_GMODE = hc00090a4 3 2 h2 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_GMODE 
csi_tadp_tx_0_OA_LANE4_HSRX_HS_CLK_DIV = hc00090a4 5 3 h7 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_HS_CLK_DIV 
csi_tadp_tx_0_OA_LANE4_HSRX_SEL_GATED_POLARITY = hc00090a4 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_SEL_GATED_POLARITY 
csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_CDR_DIV = hc00090a4 9 3 h5 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_CDR_DIV 
csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_DELAY_OVR_VAL = hc00090a4 12 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_DELAY_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_10_reg Address hc00090a8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_10_reg = 3221262504 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE4_HSRX_TERM_RIGHT_EN_OVR_VAL = hc00090a8 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_TERM_RIGHT_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_TERM_LEFT_EN_OVR_VAL = hc00090a8 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_TERM_LEFT_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_CLK_CHANNEL_PULL_EN = hc00090a8 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_CLK_CHANNEL_PULL_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_HS_CLK_DIV_EN_OVR_VAL = hc00090a8 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_HS_CLK_DIV_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_DESERIALIZER_EN_OVR_VAL = hc00090a8 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DESERIALIZER_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_DESERIALIZER_DATA_EN_OVR_VAL = hc00090a8 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DESERIALIZER_DATA_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_DESERIALIZER_DIV_EN_OVR_VAL = hc00090a8 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DESERIALIZER_DIV_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_OFFCAL_OBS_EN_OVR_VAL = hc00090a8 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_OFFCAL_OBS_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_VCM_DET_PON_OVR_VAL = hc00090a8 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_VCM_DET_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_VCM_DET_OUT_EN_OVR_VAL = hc00090a8 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_VCM_DET_OUT_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_ALP_DET_RIGHT_PON_OVR_VAL = hc00090a8 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_ALP_DET_RIGHT_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_ALP_DET_LEFT_PON_OVR_VAL = hc00090a8 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_ALP_DET_LEFT_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_MASK_CHANGE_OVR_EN = hc00090a8 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_MASK_CHANGE_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_PON_OVR_EN = hc00090a8 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_EN_OVR_EN = hc00090a8 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSTX_DIV_EN_OVR_EN = hc00090a8 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSTX_DIV_EN_OVR_EN 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_11_reg Address hc00090ac
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_11_reg = 3221262508 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE4_HSRX_TERM_RIGHT_EN_OVR_EN = hc00090ac 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_TERM_RIGHT_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_TERM_LEFT_EN_OVR_EN = hc00090ac 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_TERM_LEFT_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_HS_CLK_DIV_EN_OVR_EN = hc00090ac 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_HS_CLK_DIV_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_DESERIALIZER_EN_OVR_EN = hc00090ac 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DESERIALIZER_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_DESERIALIZER_DATA_EN_OVR_EN = hc00090ac 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DESERIALIZER_DATA_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_DESERIALIZER_DIV_EN_OVR_EN = hc00090ac 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DESERIALIZER_DIV_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_OFFCAL_OBS_EN_OVR_EN = hc00090ac 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_OFFCAL_OBS_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_VCM_DET_PON_OVR_EN = hc00090ac 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_VCM_DET_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_VCM_DET_OUT_EN_OVR_EN = hc00090ac 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_VCM_DET_OUT_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_ALP_DET_RIGHT_PON_OVR_EN = hc00090ac 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_ALP_DET_RIGHT_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_ALP_DET_LEFT_PON_OVR_EN = hc00090ac 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_ALP_DET_LEFT_PON_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_PON_OVR_VAL = hc00090ac 11 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_PON_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_EN_OVR_VAL = hc00090ac 13 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_EN_OVR_VAL 
csi_tadp_tx_0_RESERVED_15_15 = hc00090ac 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_12_reg Address hc00090b0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_12_reg = 3221262512 0 16 b00000000000000000000100000000000 RW
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_BIAS_BYPASS_EN_OVR_VAL = hc00090b0 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_BIAS_BYPASS_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_BYPASS_EN_OVR_VAL = hc00090b0 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_BYPASS_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_CHANGE_OVR_VAL = hc00090b0 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_CHANGE_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DLL_EN_OVR_VAL = hc00090b0 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DLL_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_PREAMBLE_CAL_EN_OVR_VAL = hc00090b0 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_PREAMBLE_CAL_EN_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_VT_COMP_BIAS = hc00090b0 5 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_VT_COMP_BIAS 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DATA_DELAY_OVR_EN = hc00090b0 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DATA_DELAY_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_DIV = hc00090b0 10 3 h2 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_DIV 
csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_FINE_RANGE = hc00090b0 13 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_FINE_RANGE 
csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_SR_BYPASS_Z = hc00090b0 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_CPHY_SR_BYPASS_Z 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_13_reg Address hc00090b4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_13_reg = 3221262516 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_BIAS_BYPASS_EN_OVR_EN = hc00090b4 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_BIAS_BYPASS_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_BYPASS_EN_OVR_EN = hc00090b4 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_BYPASS_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_CHANGE_OVR_EN = hc00090b4 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_CHANGE_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DLL_EN_OVR_EN = hc00090b4 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DLL_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_PREAMBLE_CAL_EN_OVR_EN = hc00090b4 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_PREAMBLE_CAL_EN_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_VT_COMP_EN = hc00090b4 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_VT_COMP_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DATA_DELAY_OVR_VAL = hc00090b4 6 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DATA_DELAY_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_BIAS_OVR_EN = hc00090b4 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_BIAS_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_COARSE_BANK_OVR_EN = hc00090b4 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_COARSE_BANK_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_TUNE_MODE_OVR_EN = hc00090b4 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_TUNE_MODE_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DLL_FBK_OVR_EN = hc00090b4 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DLL_FBK_OVR_EN 
csi_tadp_tx_0_RESERVED_15_14 = hc00090b4 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_14_reg Address hc00090b8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_14_reg = 3221262520 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_BIAS_OVR_VAL = hc00090b8 0 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_BIAS_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_COARSE_BANK_OVR_VAL = hc00090b8 4 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_COARSE_BANK_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_TUNE_MODE_OVR_VAL = hc00090b8 8 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_TUNE_MODE_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DLL_FBK_OVR_VAL = hc00090b8 10 6 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DLL_FBK_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_15_reg Address hc00090bc
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_2_15_reg = 3221262524 0 16 b00000000000000000000000000000100 RW
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DLL_CP_PROG = hc00090bc 0 3 h4 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DLL_CP_PROG 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_CLK_CHANNEL = hc00090bc 3 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_CLK_CHANNEL 
csi_tadp_tx_0_OA_LANE4_HSRX_OFFCAL_RIGHT_OVR_EN = hc00090bc 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_OFFCAL_RIGHT_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_OFFCAL_LEFT_OVR_EN = hc00090bc 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_OFFCAL_LEFT_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_EN = hc00090bc 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_MID_OVR_EN = hc00090bc 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_MID_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_LEFT_OVR_EN = hc00090bc 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_LEFT_OVR_EN 
csi_tadp_tx_0_OA_LANE4_HSRX_MODE_OVR_EN = hc00090bc 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_MODE_OVR_EN 
csi_tadp_tx_0_OA_LANE4_ATB_SW = hc00090bc 11 5 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_ATB_SW 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_3_0_reg Address hc00090c0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_3_0_reg = 3221262528 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE4_HSRX_OFFCAL_RIGHT_OVR_VAL = hc00090c0 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_OFFCAL_RIGHT_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_OFFCAL_LEFT_OVR_VAL = hc00090c0 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_OFFCAL_LEFT_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_3_1_reg Address hc00090c4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_3_1_reg = 3221262532 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_VAL = hc00090c4 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_MID_OVR_VAL = hc00090c4 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_MID_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_3_2_reg Address hc00090c8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_3_2_reg = 3221262536 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_LEFT_OVR_VAL = hc00090c8 0 9 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_LEFT_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_MID_OVR_VAL = hc00090c8 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_MID_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_VAL = hc00090c8 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_DPHY_DDL_PHASE_RIGHT_OVR_VAL 
csi_tadp_tx_0_OA_LANE4_HSRX_MODE_OVR_VAL = hc00090c8 11 3 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_LANE4_HSRX_MODE_OVR_VAL 
csi_tadp_tx_0_RESERVED_15_14 = hc00090c8 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_3_3_reg Address hc00090cc
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_3_3_reg = 3221262540 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_LANE4_HSRX_DATA_AB_LEFT_OVR_VAL = hc00090cc 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_DATA_AB_LEFT_OVR_VAL 
csi_tadp_tx_0_IA_LANE4_HSRX_DATA_BC_MID_OVR_VAL = hc00090cc 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_DATA_BC_MID_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_3_4_reg Address hc00090d0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_3_4_reg = 3221262544 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_LANE4_HSRX_DATA_CA_RIGHT_OVR_VAL = hc00090d0 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_DATA_CA_RIGHT_OVR_VAL 
csi_tadp_tx_0_IA_LANE4_HSRX_WORD_CLK_OVR_VAL = hc00090d0 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_WORD_CLK_OVR_VAL 
csi_tadp_tx_0_IA_LANE4_HSRX_HS_CLK_DIV_OUT_OVR_VAL = hc00090d0 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_HS_CLK_DIV_OUT_OVR_VAL 
csi_tadp_tx_0_IA_LANE4_HSTX_WORD_CLK_OVR_VAL = hc00090d0 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSTX_WORD_CLK_OVR_VAL 
csi_tadp_tx_0_IA_LANE4_HSRX_VCM_DET_OUT_OVR_VAL = hc00090d0 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_VCM_DET_OUT_OVR_VAL 
csi_tadp_tx_0_IA_LANE4_HSRX_OUT_CAL_LEFT_N_OVR_VAL = hc00090d0 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_OUT_CAL_LEFT_N_OVR_VAL 
csi_tadp_tx_0_IA_LANE4_HSRX_OUT_CAL_LEFT_P_OVR_VAL = hc00090d0 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_OUT_CAL_LEFT_P_OVR_VAL 
csi_tadp_tx_0_IA_LANE4_HSRX_OUT_CAL_RIGHT_N_OVR_VAL = hc00090d0 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_OUT_CAL_RIGHT_N_OVR_VAL 
csi_tadp_tx_0_IA_LANE4_HSRX_OUT_CAL_RIGHT_P_OVR_VAL = hc00090d0 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_OUT_CAL_RIGHT_P_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_3_5_reg Address hc00090d4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_3_5_reg = 3221262548 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_LANE4_HSRX_DATA_AB_LEFT_OVR_EN = hc00090d4 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_DATA_AB_LEFT_OVR_EN 
csi_tadp_tx_0_IA_LANE4_HSRX_DATA_BC_MID_OVR_EN = hc00090d4 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_DATA_BC_MID_OVR_EN 
csi_tadp_tx_0_IA_LANE4_HSRX_DATA_CA_RIGHT_OVR_EN = hc00090d4 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_DATA_CA_RIGHT_OVR_EN 
csi_tadp_tx_0_IA_LANE4_HSRX_WORD_CLK_OVR_EN = hc00090d4 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_WORD_CLK_OVR_EN 
csi_tadp_tx_0_IA_LANE4_HSRX_HS_CLK_DIV_OUT_OVR_EN = hc00090d4 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_HS_CLK_DIV_OUT_OVR_EN 
csi_tadp_tx_0_IA_LANE4_HSTX_WORD_CLK_OVR_EN = hc00090d4 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSTX_WORD_CLK_OVR_EN 
csi_tadp_tx_0_IA_LANE4_HSRX_VCM_DET_OUT_OVR_EN = hc00090d4 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_VCM_DET_OUT_OVR_EN 
csi_tadp_tx_0_IA_LANE4_HSRX_OUT_CAL_LEFT_N_OVR_EN = hc00090d4 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_OUT_CAL_LEFT_N_OVR_EN 
csi_tadp_tx_0_IA_LANE4_HSRX_OUT_CAL_LEFT_P_OVR_EN = hc00090d4 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_OUT_CAL_LEFT_P_OVR_EN 
csi_tadp_tx_0_IA_LANE4_HSRX_OUT_CAL_RIGHT_N_OVR_EN = hc00090d4 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_OUT_CAL_RIGHT_N_OVR_EN 
csi_tadp_tx_0_IA_LANE4_HSRX_OUT_CAL_RIGHT_P_OVR_EN = hc00090d4 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_OUT_CAL_RIGHT_P_OVR_EN 
csi_tadp_tx_0_IA_LANE4_HSRX_DPHY_DDL_OSC_CLK_OVR_EN = hc00090d4 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_DPHY_DDL_OSC_CLK_OVR_EN 
csi_tadp_tx_0_IA_LANE4_HSRX_CPHY_ALP_DET_LEFT_OUT_OVR_EN = hc00090d4 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_CPHY_ALP_DET_LEFT_OUT_OVR_EN 
csi_tadp_tx_0_IA_LANE4_HSRX_CPHY_ALP_DET_RIGHT_OUT_OVR_EN = hc00090d4 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_CPHY_ALP_DET_RIGHT_OUT_OVR_EN 
csi_tadp_tx_0_IA_LANE4_HSRX_CPHY_CDR_OSC_CLK_OVR_EN = hc00090d4 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_CPHY_CDR_OSC_CLK_OVR_EN 
csi_tadp_tx_0_RESERVED_15_15 = hc00090d4 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_3_6_reg Address hc00090d8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_3_6_reg = 3221262552 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_LANE4_HSRX_DPHY_DDL_OSC_CLK_OVR_VAL = hc00090d8 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_DPHY_DDL_OSC_CLK_OVR_VAL 
csi_tadp_tx_0_IA_LANE4_HSRX_CPHY_ALP_DET_LEFT_OUT_OVR_VAL = hc00090d8 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_CPHY_ALP_DET_LEFT_OUT_OVR_VAL 
csi_tadp_tx_0_IA_LANE4_HSRX_CPHY_ALP_DET_RIGHT_OUT_OVR_VAL = hc00090d8 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_CPHY_ALP_DET_RIGHT_OUT_OVR_VAL 
csi_tadp_tx_0_IA_LANE4_HSRX_CPHY_CDR_OSC_CLK_OVR_VAL = hc00090d8 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_HSRX_CPHY_CDR_OSC_CLK_OVR_VAL 
csi_tadp_tx_0_IA_LANE4_LPRX_DOUTCD_OVR_VAL = hc00090d8 4 2 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE4_LPRX_DOUTCD_OVR_VAL 
csi_tadp_tx_0_IA_LANE4_LPRX_DOUTLP_OVR_VAL = hc00090d8 6 2 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE4_LPRX_DOUTLP_OVR_VAL 
csi_tadp_tx_0_IA_LANE4_LPRX_DOUTULP_OVR_VAL = hc00090d8 8 2 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE4_LPRX_DOUTULP_OVR_VAL 
csi_tadp_tx_0_IA_LANE4_SPARE_OUT_OVR_VAL = hc00090d8 10 4 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_LANE4_SPARE_OUT_OVR_VAL 
csi_tadp_tx_0_RESERVED_15_14 = hc00090d8 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_3_7_reg Address hc00090dc
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_LANE4_CTRL_3_7_reg = 3221262556 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_LANE4_LPRX_DOUTCD_OVR_EN = hc00090dc 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_LPRX_DOUTCD_OVR_EN 
csi_tadp_tx_0_IA_LANE4_LPRX_DOUTLP_OVR_EN = hc00090dc 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_LPRX_DOUTLP_OVR_EN 
csi_tadp_tx_0_IA_LANE4_LPRX_DOUTULP_OVR_EN = hc00090dc 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_LPRX_DOUTULP_OVR_EN 
csi_tadp_tx_0_IA_LANE4_SPARE_OUT_OVR_EN = hc00090dc 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_LANE4_SPARE_OUT_OVR_EN 
csi_tadp_tx_0_RESERVED_15_4 = hc00090dc 4 12 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_4 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_CLK_OVR_0_0_reg Address hc0009800
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_CLK_OVR_0_0_reg = 3221264384 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_ENABLE_DCK_OVR_VAL = hc0009800 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_ENABLE_DCK_OVR_VAL 
csi_tadp_tx_0_O_STOPSTATE_DCK_OVR_VAL = hc0009800 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_STOPSTATE_DCK_OVR_VAL 
csi_tadp_tx_0_O_ULPSACTIVENOT_DCK_OVR_VAL = hc0009800 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ULPSACTIVENOT_DCK_OVR_VAL 
csi_tadp_tx_0_O_RXULPSCLKNOT_DCK_OVR_VAL = hc0009800 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXULPSCLKNOT_DCK_OVR_VAL 
csi_tadp_tx_0_O_RXCLKACTIVEHS_DCK_OVR_VAL = hc0009800 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXCLKACTIVEHS_DCK_OVR_VAL 
csi_tadp_tx_0_I_TXREQUESTHS_DCK_OVR_VAL = hc0009800 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTHS_DCK_OVR_VAL 
csi_tadp_tx_0_I_FORCETXSTOPMODE_DCK_OVR_VAL = hc0009800 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCETXSTOPMODE_DCK_OVR_VAL 
csi_tadp_tx_0_I_FORCERXMODE_DCK_OVR_VAL = hc0009800 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCERXMODE_DCK_OVR_VAL 
csi_tadp_tx_0_I_TXULPSCLK_DCK_OVR_VAL = hc0009800 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSCLK_DCK_OVR_VAL 
csi_tadp_tx_0_I_TXULPSEXIT_DCK_OVR_VAL = hc0009800 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSEXIT_DCK_OVR_VAL 
csi_tadp_tx_0_I_TXHSIDLECLKHS_OVR_VAL = hc0009800 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXHSIDLECLKHS_OVR_VAL 
csi_tadp_tx_0_O_TXHSIDLECLKREADYHS_OVR_VAL = hc0009800 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXHSIDLECLKREADYHS_OVR_VAL 
csi_tadp_tx_0_RESERVED_15_12 = hc0009800 12 4 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_12 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_CLK_OVR_0_1_reg Address hc0009804
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_DPHY_PPI_CLK_OVR_0_1_reg = 3221264388 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_ENABLE_DCK_OVR_EN = hc0009804 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_ENABLE_DCK_OVR_EN 
csi_tadp_tx_0_O_STOPSTATE_DCK_OVR_EN = hc0009804 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_STOPSTATE_DCK_OVR_EN 
csi_tadp_tx_0_O_ULPSACTIVENOT_DCK_OVR_EN = hc0009804 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_ULPSACTIVENOT_DCK_OVR_EN 
csi_tadp_tx_0_O_RXULPSCLKNOT_DCK_OVR_EN = hc0009804 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXULPSCLKNOT_DCK_OVR_EN 
csi_tadp_tx_0_O_RXCLKACTIVEHS_DCK_OVR_EN = hc0009804 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_RXCLKACTIVEHS_DCK_OVR_EN 
csi_tadp_tx_0_I_TXREQUESTHS_DCK_OVR_EN = hc0009804 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXREQUESTHS_DCK_OVR_EN 
csi_tadp_tx_0_I_FORCETXSTOPMODE_DCK_OVR_EN = hc0009804 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCETXSTOPMODE_DCK_OVR_EN 
csi_tadp_tx_0_I_FORCERXMODE_DCK_OVR_EN = hc0009804 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_FORCERXMODE_DCK_OVR_EN 
csi_tadp_tx_0_I_TXULPSCLK_DCK_OVR_EN = hc0009804 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSCLK_DCK_OVR_EN 
csi_tadp_tx_0_I_TXULPSEXIT_DCK_OVR_EN = hc0009804 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXULPSEXIT_DCK_OVR_EN 
csi_tadp_tx_0_I_TXHSIDLECLKHS_OVR_EN = hc0009804 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXHSIDLECLKHS_OVR_EN 
csi_tadp_tx_0_O_TXHSIDLECLKREADYHS_OVR_EN = hc0009804 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_TXHSIDLECLKREADYHS_OVR_EN 
csi_tadp_tx_0_RESERVED_15_12 = hc0009804 12 4 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_12 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_COMMON_PPI_OVR_0_0_reg Address hc000a000
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_COMMON_PPI_OVR_0_0_reg = 3221266432 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_CFG_CLK_OVR_VAL = hc000a000 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_CFG_CLK_OVR_VAL 
csi_tadp_tx_0_I_TXCLKESC_OVR_VAL = hc000a000 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXCLKESC_OVR_VAL 
csi_tadp_tx_0_I_RST_N_OVR_VAL = hc000a000 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_RST_N_OVR_VAL 
csi_tadp_tx_0_I_PHY_MODE_OVR_VAL = hc000a000 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_PHY_MODE_OVR_VAL 
csi_tadp_tx_0_I_CONT_EN_OVR_VAL = hc000a000 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_CONT_EN_OVR_VAL 
csi_tadp_tx_0_I_TEST_STOP_CLK_EN_OVR_VAL = hc000a000 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TEST_STOP_CLK_EN_OVR_VAL 
csi_tadp_tx_0_O_OCLA_CLK_OVR_VAL = hc000a000 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_OCLA_CLK_OVR_VAL 
csi_tadp_tx_0_O_MON_OUT_VALID_OVR_VAL = hc000a000 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_MON_OUT_VALID_OVR_VAL 
csi_tadp_tx_0_I_PHY_STATE_OVR_EN = hc000a000 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_PHY_STATE_OVR_EN 
csi_tadp_tx_0_I_PHY_CALIB_IN_OVR_EN = hc000a000 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_PHY_CALIB_IN_OVR_EN 
csi_tadp_tx_0_O_PHY_CALIB_OUT_OVR_EN = hc000a000 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_PHY_CALIB_OUT_OVR_EN 
csi_tadp_tx_0_I_RX_TX_N_OVR_VAL = hc000a000 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_RX_TX_N_OVR_VAL 
csi_tadp_tx_0_RESERVED_15_12 = hc000a000 12 4 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_12 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_COMMON_PPI_OVR_0_1_reg Address hc000a004
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_COMMON_PPI_OVR_0_1_reg = 3221266436 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_CFG_CLK_OVR_EN = hc000a004 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_CFG_CLK_OVR_EN 
csi_tadp_tx_0_I_TXCLKESC_OVR_EN = hc000a004 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TXCLKESC_OVR_EN 
csi_tadp_tx_0_I_RST_N_OVR_EN = hc000a004 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_RST_N_OVR_EN 
csi_tadp_tx_0_I_PHY_MODE_OVR_EN = hc000a004 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_PHY_MODE_OVR_EN 
csi_tadp_tx_0_I_CONT_EN_OVR_EN = hc000a004 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_CONT_EN_OVR_EN 
csi_tadp_tx_0_I_TEST_STOP_CLK_EN_OVR_EN = hc000a004 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_TEST_STOP_CLK_EN_OVR_EN 
csi_tadp_tx_0_O_OCLA_CLK_OVR_EN = hc000a004 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_OCLA_CLK_OVR_EN 
csi_tadp_tx_0_O_MON_OUT_VALID_OVR_EN = hc000a004 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_MON_OUT_VALID_OVR_EN 
csi_tadp_tx_0_O_MON_OUT_OVR_EN = hc000a004 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_MON_OUT_OVR_EN 
csi_tadp_tx_0_O_CONT_DATA_OVR_EN = hc000a004 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_CONT_DATA_OVR_EN 
csi_tadp_tx_0_O_DTB_OUT_OVR_EN = hc000a004 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_O_DTB_OUT_OVR_EN 
csi_tadp_tx_0_I_RX_TX_N_OVR_EN = hc000a004 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_I_RX_TX_N_OVR_EN 
csi_tadp_tx_0_RESERVED_15_12 = hc000a004 12 4 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_12 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_COMMON_PPI_OVR_0_2_reg Address hc000a008
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_COMMON_PPI_OVR_0_2_reg = 3221266440 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_PHY_STATE_OVR_VAL = hc000a008 0 5 h0 RW HEX
; Desc_csi_tadp_tx_0_I_PHY_STATE_OVR_VAL 
csi_tadp_tx_0_O_CONT_DATA_OVR_VAL = hc000a008 5 11 h0 RW HEX
; Desc_csi_tadp_tx_0_O_CONT_DATA_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_COMMON_PPI_OVR_0_3_reg Address hc000a00c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_COMMON_PPI_OVR_0_3_reg = 3221266444 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_PHY_CALIB_IN_OVR_VAL = hc000a00c 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_I_PHY_CALIB_IN_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_COMMON_PPI_OVR_0_4_reg Address hc000a010
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_COMMON_PPI_OVR_0_4_reg = 3221266448 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_PHY_CALIB_IN_OVR_VAL = hc000a010 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_I_PHY_CALIB_IN_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_COMMON_PPI_OVR_0_5_reg Address hc000a014
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_COMMON_PPI_OVR_0_5_reg = 3221266452 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_I_PHY_CALIB_IN_OVR_VAL = hc000a014 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_I_PHY_CALIB_IN_OVR_VAL 
csi_tadp_tx_0_O_DTB_OUT_OVR_VAL = hc000a014 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_O_DTB_OUT_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_COMMON_PPI_OVR_0_6_reg Address hc000a018
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_COMMON_PPI_OVR_0_6_reg = 3221266456 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_PHY_CALIB_OUT_OVR_VAL = hc000a018 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_O_PHY_CALIB_OUT_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_COMMON_PPI_OVR_0_7_reg Address hc000a01c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_COMMON_PPI_OVR_0_7_reg = 3221266460 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_MON_OUT_OVR_VAL = hc000a01c 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_O_MON_OUT_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_COMMON_PPI_OVR_0_8_reg Address hc000a020
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_COMMON_PPI_OVR_0_8_reg = 3221266464 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_MON_OUT_OVR_VAL = hc000a020 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_O_MON_OUT_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_COMMON_PPI_OVR_0_9_reg Address hc000a024
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_COMMON_PPI_OVR_0_9_reg = 3221266468 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_MON_OUT_OVR_VAL = hc000a024 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_O_MON_OUT_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_COMMON_PPI_OVR_0_10_reg Address hc000a028
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_COMMON_PPI_OVR_0_10_reg = 3221266472 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_O_MON_OUT_OVR_VAL = hc000a028 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_O_MON_OUT_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_CB_CTRL_2_0_reg Address hc000a080
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_CB_CTRL_2_0_reg = 3221266560 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_SEL_CPHY_DPHY_OVR_VAL = hc000a080 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_SEL_CPHY_DPHY_OVR_VAL 
csi_tadp_tx_0_OA_CB_ATB_CLK_OVR_VAL = hc000a080 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_ATB_CLK_OVR_VAL 
csi_tadp_tx_0_OA_CB_CHOP_CLK_OVR_VAL = hc000a080 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_CHOP_CLK_OVR_VAL 
csi_tadp_tx_0_OA_CB_CHOP_CLK_EN_OVR_VAL = hc000a080 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_CHOP_CLK_EN_OVR_VAL 
csi_tadp_tx_0_OA_CB_PON_OVR_VAL = hc000a080 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_PON_OVR_VAL 
csi_tadp_tx_0_OA_CB_BG_PON_OVR_VAL = hc000a080 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_BG_PON_OVR_VAL 
csi_tadp_tx_0_OA_CB_CAL_PON_OVR_VAL = hc000a080 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_CAL_PON_OVR_VAL 
csi_tadp_tx_0_OA_CB_CAL_UP_EN_OVR_VAL = hc000a080 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_CAL_UP_EN_OVR_VAL 
csi_tadp_tx_0_OA_CB_CAL_DOWN_EN_OVR_VAL = hc000a080 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_CAL_DOWN_EN_OVR_VAL 
csi_tadp_tx_0_OA_CB_ATB_COMP_PON_OVR_VAL = hc000a080 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_ATB_COMP_PON_OVR_VAL 
csi_tadp_tx_0_OA_CB_HSTX_VCOMM_REG_PON_OVR_VAL = hc000a080 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_HSTX_VCOMM_REG_PON_OVR_VAL 
csi_tadp_tx_0_OA_CB_IBIAS_PON_OVR_VAL = hc000a080 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_IBIAS_PON_OVR_VAL 
csi_tadp_tx_0_OA_CB_AMP1200_PON_OVR_VAL = hc000a080 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_AMP1200_PON_OVR_VAL 
csi_tadp_tx_0_OA_CB_VPCLK_REG_PON_OVR_VAL = hc000a080 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_VPCLK_REG_PON_OVR_VAL 
csi_tadp_tx_0_OA_CB_ATB_SEL_DAC_OVR_EN = hc000a080 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_ATB_SEL_DAC_OVR_EN 
csi_tadp_tx_0_OA_CB_HSTXLB_DCO_CLK90_EN_OVR_VAL = hc000a080 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_HSTXLB_DCO_CLK90_EN_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_CB_CTRL_2_1_reg Address hc000a084
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_CB_CTRL_2_1_reg = 3221266564 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_SEL_CPHY_DPHY_OVR_EN = hc000a084 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_SEL_CPHY_DPHY_OVR_EN 
csi_tadp_tx_0_OA_CB_ATB_CLK_OVR_EN = hc000a084 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_ATB_CLK_OVR_EN 
csi_tadp_tx_0_OA_CB_CHOP_CLK_OVR_EN = hc000a084 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_CHOP_CLK_OVR_EN 
csi_tadp_tx_0_OA_CB_CHOP_CLK_EN_OVR_EN = hc000a084 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_CHOP_CLK_EN_OVR_EN 
csi_tadp_tx_0_OA_CB_PON_OVR_EN = hc000a084 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_PON_OVR_EN 
csi_tadp_tx_0_OA_CB_BG_PON_OVR_EN = hc000a084 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_BG_PON_OVR_EN 
csi_tadp_tx_0_OA_CB_CAL_PON_OVR_EN = hc000a084 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_CAL_PON_OVR_EN 
csi_tadp_tx_0_OA_CB_CAL_UP_EN_OVR_EN = hc000a084 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_CAL_UP_EN_OVR_EN 
csi_tadp_tx_0_OA_CB_CAL_DOWN_EN_OVR_EN = hc000a084 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_CAL_DOWN_EN_OVR_EN 
csi_tadp_tx_0_OA_CB_ATB_COMP_PON_OVR_EN = hc000a084 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_ATB_COMP_PON_OVR_EN 
csi_tadp_tx_0_OA_CB_HSTX_VCOMM_REG_PON_OVR_EN = hc000a084 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_HSTX_VCOMM_REG_PON_OVR_EN 
csi_tadp_tx_0_OA_CB_IBIAS_PON_OVR_EN = hc000a084 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_IBIAS_PON_OVR_EN 
csi_tadp_tx_0_OA_CB_AMP1200_PON_OVR_EN = hc000a084 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_AMP1200_PON_OVR_EN 
csi_tadp_tx_0_OA_CB_VPCLK_REG_PON_OVR_EN = hc000a084 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_VPCLK_REG_PON_OVR_EN 
csi_tadp_tx_0_OA_CB_ATB_SEL_OVR_EN = hc000a084 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_ATB_SEL_OVR_EN 
csi_tadp_tx_0_OA_CB_HSTXLB_DCO_CLK0_EN_OVR_VAL = hc000a084 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_HSTXLB_DCO_CLK0_EN_OVR_VAL 



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_CB_CTRL_2_2_reg Address hc000a088
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_CB_CTRL_2_2_reg = 3221266568 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_CB_ATB_SEL_DAC_OVR_VAL = hc000a088 0 10 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_CB_ATB_SEL_DAC_OVR_VAL clear interrupt
csi_tadp_tx_0_OA_CB_ATB_SEL_OVR_VAL = hc000a088 10 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_CB_ATB_SEL_OVR_VAL clear interrupt
csi_tadp_tx_0_OA_CB_ATB_EXT_CON = hc000a088 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_ATB_EXT_CON clear interrupt
csi_tadp_tx_0_OA_CB_ATB_PROBE_BOOST_EN = hc000a088 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_ATB_PROBE_BOOST_EN clear interrupt
csi_tadp_tx_0_OA_CB_ATB_PROBE_VBE_EN = hc000a088 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_ATB_PROBE_VBE_EN clear interrupt
csi_tadp_tx_0_OA_CB_PLL_BUSTIEZ = hc000a088 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_PLL_BUSTIEZ clear interrupt



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_CB_CTRL_2_3_reg Address hc000a08c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_CB_CTRL_2_3_reg = 3221266572 0 16 b00000000000000000100000011110110 RW
csi_tadp_tx_0_OA_CB_SEL_LPTX_VREF = hc000a08c 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_SEL_LPTX_VREF mask interrupt
csi_tadp_tx_0_OA_SEL_LPTX_PROG = hc000a08c 1 3 h3 RW HEX
; Desc_csi_tadp_tx_0_OA_SEL_LPTX_PROG mask interrupt
csi_tadp_tx_0_OA_CB_SEL_MPLL_REG_VREF = hc000a08c 4 3 h7 RW HEX
; Desc_csi_tadp_tx_0_OA_CB_SEL_MPLL_REG_VREF mask interrupt
csi_tadp_tx_0_OA_CB_SEL_HSTXLB_DCO_VREF = hc000a08c 7 1 h1 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_SEL_HSTXLB_DCO_VREF mask interrupt
csi_tadp_tx_0_OA_CB_HSTXLB_DCO_CLK0_EN_OVR_EN = hc000a08c 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_HSTXLB_DCO_CLK0_EN_OVR_EN mask interrupt
csi_tadp_tx_0_OA_CB_HSTXLB_DCO_CLK90_EN_OVR_EN = hc000a08c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_HSTXLB_DCO_CLK90_EN_OVR_EN mask interrupt
csi_tadp_tx_0_OA_CB_HSTXLB_DCO_SEL_DIV = hc000a08c 10 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_CB_HSTXLB_DCO_SEL_DIV mask interrupt
csi_tadp_tx_0_OA_CB_HSTX_BOOST_PROG = hc000a08c 12 3 h4 RW HEX
; Desc_csi_tadp_tx_0_OA_CB_HSTX_BOOST_PROG mask interrupt
csi_tadp_tx_0_OA_CB_HSTX_VCOMM_REG_STBON = hc000a08c 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_HSTX_VCOMM_REG_STBON mask interrupt



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_CB_CTRL_2_4_reg Address hc000a090
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_CB_CTRL_2_4_reg = 3221266576 0 16 b00000000000000000010001010010010 RW
csi_tadp_tx_0_OA_CB_SEL_TRIO0_ALP_VREF = hc000a090 0 3 h2 RW HEX
; Desc_csi_tadp_tx_0_OA_CB_SEL_TRIO0_ALP_VREF interrupt status
csi_tadp_tx_0_OA_CB_SEL_TRIO1_ALP_VREF = hc000a090 3 3 h2 RW HEX
; Desc_csi_tadp_tx_0_OA_CB_SEL_TRIO1_ALP_VREF interrupt status
csi_tadp_tx_0_OA_CB_SEL_TRIO2_ALP_VREF = hc000a090 6 3 h2 RW HEX
; Desc_csi_tadp_tx_0_OA_CB_SEL_TRIO2_ALP_VREF interrupt status
csi_tadp_tx_0_OA_CB_SEL_HSRX_CM_DET_VREF = hc000a090 9 2 h1 RW HEX
; Desc_csi_tadp_tx_0_OA_CB_SEL_HSRX_CM_DET_VREF interrupt status
csi_tadp_tx_0_OA_CB_SEL_VCOMM_PROG = hc000a090 11 3 h4 RW HEX
; Desc_csi_tadp_tx_0_OA_CB_SEL_VCOMM_PROG interrupt status
csi_tadp_tx_0_OA_CB_VCOMM_UNTERM_MODE = hc000a090 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_VCOMM_UNTERM_MODE interrupt status
csi_tadp_tx_0_OA_CB_CAL_SINK_EN_OVR_VAL = hc000a090 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_CAL_SINK_EN_OVR_VAL interrupt status



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_CB_CTRL_2_5_reg Address hc000a094
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_CB_CTRL_2_5_reg = 3221266580 0 16 b00000000000000000100000100000000 RW
csi_tadp_tx_0_OA_CB_SPARE_IN = hc000a094 0 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_CB_SPARE_IN when asserted module is enabled
csi_tadp_tx_0_OA_SETR_CALIB_VT = hc000a094 4 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_SETR_CALIB_VT when asserted module is enabled
csi_tadp_tx_0_OA_CB_SEL_45OHM_50OHM = hc000a094 8 1 h1 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_SEL_45OHM_50OHM when asserted module is enabled
csi_tadp_tx_0_OA_CB_REXT_IOCONT_EN_OVR_VAL = hc000a094 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_REXT_IOCONT_EN_OVR_VAL when asserted module is enabled
csi_tadp_tx_0_OA_CB_VPCLK_REG_MODE = hc000a094 10 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_CB_VPCLK_REG_MODE when asserted module is enabled
csi_tadp_tx_0_OA_CB_DSK_CLK_CHANNEL = hc000a094 12 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_CB_DSK_CLK_CHANNEL when asserted module is enabled
csi_tadp_tx_0_OA_CB_SEL_EXT_INT_CHOP_CLK = hc000a094 14 1 h1 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_SEL_EXT_INT_CHOP_CLK when asserted module is enabled
csi_tadp_tx_0_OA_CB_CAL_SINK_EN_OVR_EN = hc000a094 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_CAL_SINK_EN_OVR_EN when asserted module is enabled



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_CB_CTRL_2_6_reg Address hc000a098
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_CB_CTRL_2_6_reg = 3221266584 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_CB_LP_DCO_PON_OVR_VAL = hc000a098 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_LP_DCO_PON_OVR_VAL A-packet type
csi_tadp_tx_0_OA_CB_LP_DCO_EN_OVR_VAL = hc000a098 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_LP_DCO_EN_OVR_VAL A-packet type
csi_tadp_tx_0_OA_CB_LP_DCO_CLK_EN_OVR_VAL = hc000a098 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_LP_DCO_CLK_EN_OVR_VAL A-packet type
csi_tadp_tx_0_OA_CB_LP_DCO_FWORD_CHANGE_OVR_VAL = hc000a098 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_LP_DCO_FWORD_CHANGE_OVR_VAL A-packet type
csi_tadp_tx_0_OA_CB_LP_DCO_FWORD_OVR_VAL = hc000a098 4 7 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_CB_LP_DCO_FWORD_OVR_VAL A-packet type
csi_tadp_tx_0_OA_CB_HSTXLB_DCO_FWORD_OVR_EN = hc000a098 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_HSTXLB_DCO_FWORD_OVR_EN A-packet type
csi_tadp_tx_0_OA_CB_HSTXLB_DCO_PON_OVR_EN = hc000a098 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_HSTXLB_DCO_PON_OVR_EN A-packet type
csi_tadp_tx_0_OA_CB_HSTXLB_DCO_EN_OVR_EN = hc000a098 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_HSTXLB_DCO_EN_OVR_EN A-packet type
csi_tadp_tx_0_OA_CB_HSTXLB_DCO_TUNE_CLKDIG_EN_OVR_EN = hc000a098 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_HSTXLB_DCO_TUNE_CLKDIG_EN_OVR_EN A-packet type
csi_tadp_tx_0_OA_CB_REXT_IOCONT_EN_OVR_EN = hc000a098 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_REXT_IOCONT_EN_OVR_EN A-packet type



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_CB_CTRL_2_7_reg Address hc000a09c
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_CB_CTRL_2_7_reg = 3221266588 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_CB_LP_DCO_PON_OVR_EN = hc000a09c 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_LP_DCO_PON_OVR_EN Minimal packet length
csi_tadp_tx_0_OA_CB_LP_DCO_EN_OVR_EN = hc000a09c 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_LP_DCO_EN_OVR_EN Minimal packet length
csi_tadp_tx_0_OA_CB_LP_DCO_CLK_EN_OVR_EN = hc000a09c 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_LP_DCO_CLK_EN_OVR_EN Minimal packet length
csi_tadp_tx_0_OA_CB_LP_DCO_FWORD_CHANGE_OVR_EN = hc000a09c 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_LP_DCO_FWORD_CHANGE_OVR_EN Minimal packet length
csi_tadp_tx_0_OA_CB_LP_DCO_FWORD_OVR_EN = hc000a09c 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_LP_DCO_FWORD_OVR_EN Minimal packet length
csi_tadp_tx_0_OA_CB_HSTXLB_DCO_FWORD_OVR_VAL = hc000a09c 5 3 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_CB_HSTXLB_DCO_FWORD_OVR_VAL Minimal packet length
csi_tadp_tx_0_OA_CB_HSTXLB_DCO_PON_OVR_VAL = hc000a09c 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_HSTXLB_DCO_PON_OVR_VAL Minimal packet length
csi_tadp_tx_0_OA_CB_HSTXLB_DCO_EN_OVR_VAL = hc000a09c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_HSTXLB_DCO_EN_OVR_VAL Minimal packet length
csi_tadp_tx_0_OA_CB_HSTXLB_DCO_TUNE_CLKDIG_EN_OVR_VAL = hc000a09c 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_HSTXLB_DCO_TUNE_CLKDIG_EN_OVR_VAL Minimal packet length
csi_tadp_tx_0_OA_SETR_OVR_EN = hc000a09c 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_SETR_OVR_EN Minimal packet length
csi_tadp_tx_0_OA_SETR_CALIB_OVR_EN = hc000a09c 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_SETR_CALIB_OVR_EN Minimal packet length
csi_tadp_tx_0_OA_SETRA_OVR_EN = hc000a09c 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_SETRA_OVR_EN Minimal packet length
csi_tadp_tx_0_OA_SETRB_OVR_EN = hc000a09c 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_SETRB_OVR_EN Minimal packet length
csi_tadp_tx_0_OA_CB_DSK_CLK_MODE_OVR_EN = hc000a09c 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_OA_CB_DSK_CLK_MODE_OVR_EN Minimal packet length



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_CB_CTRL_2_8_reg Address hc000a0a0
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_CB_CTRL_2_8_reg = 3221266592 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OA_SETR_OVR_VAL = hc000a0a0 0 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_SETR_OVR_VAL Minimum delay time
csi_tadp_tx_0_OA_SETR_CALIB_OVR_VAL = hc000a0a0 4 4 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_SETR_CALIB_OVR_VAL Minimum delay time
csi_tadp_tx_0_OA_SETRA_OVR_VAL = hc000a0a0 8 3 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_SETRA_OVR_VAL Minimum delay time
csi_tadp_tx_0_OA_SETRB_OVR_VAL = hc000a0a0 11 3 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_SETRB_OVR_VAL Minimum delay time
csi_tadp_tx_0_OA_CB_DSK_CLK_MODE_OVR_VAL = hc000a0a0 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_OA_CB_DSK_CLK_MODE_OVR_VAL Minimum delay time



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_CB_CTRL_2_9_reg Address hc000a0a4
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_CB_CTRL_2_9_reg = 3221266596 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_CB_ATB_COMP_OUT_OVR_VAL = hc000a0a4 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_CB_ATB_COMP_OUT_OVR_VAL packet counter (inclueds packets that sent without packet number)
csi_tadp_tx_0_IA_CB_DET_VP_OVR_VAL = hc000a0a4 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_CB_DET_VP_OVR_VAL packet counter (inclueds packets that sent without packet number)
csi_tadp_tx_0_IA_CB_DET_VPH_OVR_VAL = hc000a0a4 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_CB_DET_VPH_OVR_VAL packet counter (inclueds packets that sent without packet number)
csi_tadp_tx_0_IA_CB_HSTXLB_CLKDIG_OVR_VAL = hc000a0a4 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_CB_HSTXLB_CLKDIG_OVR_VAL packet counter (inclueds packets that sent without packet number)
csi_tadp_tx_0_IA_CB_LP_DCO_CLK_OVR_VAL = hc000a0a4 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_CB_LP_DCO_CLK_OVR_VAL packet counter (inclueds packets that sent without packet number)
csi_tadp_tx_0_IA_CB_REXT_IOCONT_OVR_VAL = hc000a0a4 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_CB_REXT_IOCONT_OVR_VAL packet counter (inclueds packets that sent without packet number)
csi_tadp_tx_0_IA_CB_SPARE_OUT_OVR_VAL = hc000a0a4 6 4 h0 RW HEX
; Desc_csi_tadp_tx_0_IA_CB_SPARE_OUT_OVR_VAL packet counter (inclueds packets that sent without packet number)
csi_tadp_tx_0_RESERVED_15_10 = hc000a0a4 10 6 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 packet counter (inclueds packets that sent without packet number)



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_CB_CTRL_2_10_reg Address hc000a0a8
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_CB_CTRL_2_10_reg = 3221266600 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_IA_CB_ATB_COMP_OUT_OVR_EN = hc000a0a8 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_CB_ATB_COMP_OUT_OVR_EN couts the nuber of times the vlaid was down in the middle of a packet
csi_tadp_tx_0_IA_CB_DET_VP_OVR_EN = hc000a0a8 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_CB_DET_VP_OVR_EN couts the nuber of times the vlaid was down in the middle of a packet
csi_tadp_tx_0_IA_CB_DET_VPH_OVR_EN = hc000a0a8 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_CB_DET_VPH_OVR_EN couts the nuber of times the vlaid was down in the middle of a packet
csi_tadp_tx_0_IA_CB_HSTXLB_CLKDIG_OVR_EN = hc000a0a8 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_CB_HSTXLB_CLKDIG_OVR_EN couts the nuber of times the vlaid was down in the middle of a packet
csi_tadp_tx_0_IA_CB_LP_DCO_CLK_OVR_EN = hc000a0a8 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_CB_LP_DCO_CLK_OVR_EN couts the nuber of times the vlaid was down in the middle of a packet
csi_tadp_tx_0_IA_CB_REXT_IOCONT_OVR_EN = hc000a0a8 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_CB_REXT_IOCONT_OVR_EN couts the nuber of times the vlaid was down in the middle of a packet
csi_tadp_tx_0_IA_CB_SPARE_OUT_OVR_EN = hc000a0a8 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_IA_CB_SPARE_OUT_OVR_EN couts the nuber of times the vlaid was down in the middle of a packet
csi_tadp_tx_0_RESERVED_15_7 = hc000a0a8 7 9 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_7 couts the nuber of times the vlaid was down in the middle of a packet



; REGISTER csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_CB_CTRL_2_11_reg Address hc000a0ac
_csi_tadp_tx_0_CORE_DIG_IOCTRL_RW_AFE_CB_CTRL_2_11_reg = 3221266604 0 16 b00000000000000000000000000000100 RW
csi_tadp_tx_0_OA_CB_VP2_PROG = hc000a0ac 0 3 h4 RW HEX
; Desc_csi_tadp_tx_0_OA_CB_VP2_PROG couts the nuber of times the vlaid was down in the middle of a packet
csi_tadp_tx_0_RESERVED_15_3 = hc000a0ac 3 13 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_3 couts the nuber of times the vlaid was down in the middle of a packet



; REGISTER csi_tadp_tx_0_CORE_DIG_RW_COMMON_0_reg Address hc000a100
_csi_tadp_tx_0_CORE_DIG_RW_COMMON_0_reg = 3221266688 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_DPHY_PREAMBLE_EN_REG = hc000a100 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_DPHY_PREAMBLE_EN_REG slocalparam PKT_IDLEss        = 3'h0;sslocalparam PKT_CNTss        = 3'h2;sslocalparam PKT_TSss        = 3'h3;sslocalparam PKT_LOAD           s        = 3'h4;sslocalparam PKT_DEL            s= 3'h5;sslocalparam PKT_SEARCH         s= 3'h6;sslocalparam PKT_LOCK   s    s= 3'h7;
csi_tadp_tx_0_RESERVED_15_1 = hc000a100 1 15 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_1 slocalparam PKT_IDLEss        = 3'h0;sslocalparam PKT_CNTss        = 3'h2;sslocalparam PKT_TSss        = 3'h3;sslocalparam PKT_LOAD           s        = 3'h4;sslocalparam PKT_DEL            s= 3'h5;sslocalparam PKT_SEARCH         s= 3'h6;sslocalparam PKT_LOCK   s    s= 3'h7;



; REGISTER csi_tadp_tx_0_CORE_DIG_RW_COMMON_1_reg Address hc000a104
_csi_tadp_tx_0_CORE_DIG_RW_COMMON_1_reg = 3221266692 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OCLA_DATA_SEL = hc000a104 0 9 h0 RW HEX
; Desc_csi_tadp_tx_0_OCLA_DATA_SEL Resync state lost
csi_tadp_tx_0_RESERVED_15_9 = hc000a104 9 7 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_9 Resync state lost



; REGISTER csi_tadp_tx_0_CORE_DIG_RW_COMMON_2_reg Address hc000a108
_csi_tadp_tx_0_CORE_DIG_RW_COMMON_2_reg = 3221266696 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OCLA_DATA_SEL = hc000a108 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OCLA_DATA_SEL Max value for histogram registers
csi_tadp_tx_0_RESERVED_15_8 = hc000a108 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 Max value for histogram registers



; REGISTER csi_tadp_tx_0_CORE_DIG_RW_COMMON_3_reg Address hc000a10c
_csi_tadp_tx_0_CORE_DIG_RW_COMMON_3_reg = 3221266700 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OCLA_CLK_SEL = hc000a10c 0 9 h0 RW HEX
; Desc_csi_tadp_tx_0_OCLA_CLK_SEL Max value for histogram registers
csi_tadp_tx_0_RESERVED_15_9 = hc000a10c 9 7 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_9 Max value for histogram registers



; REGISTER csi_tadp_tx_0_CORE_DIG_RW_COMMON_4_reg Address hc000a110
_csi_tadp_tx_0_CORE_DIG_RW_COMMON_4_reg = 3221266704 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_OCLA_CLK_SEL = hc000a110 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_OCLA_CLK_SEL Max value for histogram registers
csi_tadp_tx_0_RESERVED_15_8 = hc000a110 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 Max value for histogram registers



; REGISTER csi_tadp_tx_0_CORE_DIG_RW_COMMON_5_reg Address hc000a114
_csi_tadp_tx_0_CORE_DIG_RW_COMMON_5_reg = 3221266708 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_INPUT_SAMPLING_REG = hc000a114 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_INPUT_SAMPLING_REG Max value for histogram registers
csi_tadp_tx_0_DTB_SELECT = hc000a114 1 8 h0 RW HEX
; Desc_csi_tadp_tx_0_DTB_SELECT Max value for histogram registers
csi_tadp_tx_0_HSRX_DPHY_DLL_EN_DRV = hc000a114 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HSRX_DPHY_DLL_EN_DRV Max value for histogram registers
csi_tadp_tx_0_WORD_CLK_SEL_DLANE = hc000a114 10 2 h0 RW HEX
; Desc_csi_tadp_tx_0_WORD_CLK_SEL_DLANE Max value for histogram registers
csi_tadp_tx_0_WORD_CLK_SEL_CLANE = hc000a114 12 2 h0 RW HEX
; Desc_csi_tadp_tx_0_WORD_CLK_SEL_CLANE Max value for histogram registers
csi_tadp_tx_0_RESERVED_15_14 = hc000a114 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 Max value for histogram registers



; REGISTER csi_tadp_tx_0_CORE_DIG_RW_COMMON_6_reg Address hc000a118
_csi_tadp_tx_0_CORE_DIG_RW_COMMON_6_reg = 3221266712 0 16 b00000000000000000000000000001001 RW
csi_tadp_tx_0_DESERIALIZER_DIV_EN_DELAY_THRESH_D = hc000a118 0 3 h1 RW HEX
; Desc_csi_tadp_tx_0_DESERIALIZER_DIV_EN_DELAY_THRESH_D Max value for histogram registers
csi_tadp_tx_0_DESERIALIZER_EN_DEASS_COUNT_THRESH_D = hc000a118 3 3 h1 RW HEX
; Desc_csi_tadp_tx_0_DESERIALIZER_EN_DEASS_COUNT_THRESH_D Max value for histogram registers
csi_tadp_tx_0_RESERVED_15_6 = hc000a118 6 10 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_6 Max value for histogram registers



; REGISTER csi_tadp_tx_0_CORE_DIG_RW_COMMON_7_reg Address hc000a11c
_csi_tadp_tx_0_CORE_DIG_RW_COMMON_7_reg = 3221266716 0 16 b00000000000000000000000101010101 RW
csi_tadp_tx_0_LANE0_HSRX_WORD_CLK_SEL_GATING_REG = hc000a11c 0 2 h1 RW HEX
; Desc_csi_tadp_tx_0_LANE0_HSRX_WORD_CLK_SEL_GATING_REG Max value for histogram registers
csi_tadp_tx_0_LANE1_HSRX_WORD_CLK_SEL_GATING_REG = hc000a11c 2 2 h1 RW HEX
; Desc_csi_tadp_tx_0_LANE1_HSRX_WORD_CLK_SEL_GATING_REG Max value for histogram registers
csi_tadp_tx_0_LANE2_HSRX_WORD_CLK_SEL_GATING_REG = hc000a11c 4 2 h1 RW HEX
; Desc_csi_tadp_tx_0_LANE2_HSRX_WORD_CLK_SEL_GATING_REG Max value for histogram registers
csi_tadp_tx_0_LANE3_HSRX_WORD_CLK_SEL_GATING_REG = hc000a11c 6 2 h1 RW HEX
; Desc_csi_tadp_tx_0_LANE3_HSRX_WORD_CLK_SEL_GATING_REG Max value for histogram registers
csi_tadp_tx_0_LANE4_HSRX_WORD_CLK_SEL_GATING_REG = hc000a11c 8 2 h1 RW HEX
; Desc_csi_tadp_tx_0_LANE4_HSRX_WORD_CLK_SEL_GATING_REG Max value for histogram registers
csi_tadp_tx_0_RESERVED_15_10 = hc000a11c 10 6 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 Max value for histogram registers



; REGISTER csi_tadp_tx_0_CORE_DIG_RW_COMMON_8_reg Address hc000a120
_csi_tadp_tx_0_CORE_DIG_RW_COMMON_8_reg = 3221266720 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LANE0_HSRX_WORD_CLK_GATING_OVR_EN = hc000a120 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE0_HSRX_WORD_CLK_GATING_OVR_EN Max value for histogram registers
csi_tadp_tx_0_LANE0_HSRX_WORD_CLK_GATING_OVR_VAL = hc000a120 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE0_HSRX_WORD_CLK_GATING_OVR_VAL Max value for histogram registers
csi_tadp_tx_0_LANE1_HSRX_WORD_CLK_GATING_OVR_EN = hc000a120 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE1_HSRX_WORD_CLK_GATING_OVR_EN Max value for histogram registers
csi_tadp_tx_0_LANE1_HSRX_WORD_CLK_GATING_OVR_VAL = hc000a120 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE1_HSRX_WORD_CLK_GATING_OVR_VAL Max value for histogram registers
csi_tadp_tx_0_LANE2_HSRX_WORD_CLK_GATING_OVR_EN = hc000a120 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE2_HSRX_WORD_CLK_GATING_OVR_EN Max value for histogram registers
csi_tadp_tx_0_LANE2_HSRX_WORD_CLK_GATING_OVR_VAL = hc000a120 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE2_HSRX_WORD_CLK_GATING_OVR_VAL Max value for histogram registers
csi_tadp_tx_0_LANE3_HSRX_WORD_CLK_GATING_OVR_EN = hc000a120 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE3_HSRX_WORD_CLK_GATING_OVR_EN Max value for histogram registers
csi_tadp_tx_0_LANE3_HSRX_WORD_CLK_GATING_OVR_VAL = hc000a120 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE3_HSRX_WORD_CLK_GATING_OVR_VAL Max value for histogram registers
csi_tadp_tx_0_LANE4_HSRX_WORD_CLK_GATING_OVR_EN = hc000a120 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE4_HSRX_WORD_CLK_GATING_OVR_EN Max value for histogram registers
csi_tadp_tx_0_LANE4_HSRX_WORD_CLK_GATING_OVR_VAL = hc000a120 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE4_HSRX_WORD_CLK_GATING_OVR_VAL Max value for histogram registers
csi_tadp_tx_0_RESERVED_15_10 = hc000a120 10 6 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 Max value for histogram registers



; REGISTER csi_tadp_tx_0_CORE_DIG_RW_COMMON_9_reg Address hc000a124
_csi_tadp_tx_0_CORE_DIG_RW_COMMON_9_reg = 3221266724 0 16 b00000000000000000000000011001100 RW
csi_tadp_tx_0_LP_DCO_CLK_GATING_OVR_EN = hc000a124 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LP_DCO_CLK_GATING_OVR_EN Max value for histogram registers
csi_tadp_tx_0_LP_DCO_CLK_GATING_OVR_VAL = hc000a124 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LP_DCO_CLK_GATING_OVR_VAL Max value for histogram registers
csi_tadp_tx_0_LP_DCO_CLK_SEL_GATING_REG = hc000a124 2 2 h3 RW HEX
; Desc_csi_tadp_tx_0_LP_DCO_CLK_SEL_GATING_REG Max value for histogram registers
csi_tadp_tx_0_HSTXLB_DCO_CLK_GATING_OVR_EN = hc000a124 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HSTXLB_DCO_CLK_GATING_OVR_EN Max value for histogram registers
csi_tadp_tx_0_HSTXLB_DCO_CLK_GATING_OVR_VAL = hc000a124 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HSTXLB_DCO_CLK_GATING_OVR_VAL Max value for histogram registers
csi_tadp_tx_0_HSTXLB_DCO_CLK_SEL_GATING_REG = hc000a124 6 2 h3 RW HEX
; Desc_csi_tadp_tx_0_HSTXLB_DCO_CLK_SEL_GATING_REG Max value for histogram registers
csi_tadp_tx_0_RESERVED_15_8 = hc000a124 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 Max value for histogram registers



; REGISTER csi_tadp_tx_0_CORE_DIG_RW_COMMON_10_reg Address hc000a128
_csi_tadp_tx_0_CORE_DIG_RW_COMMON_10_reg = 3221266728 0 16 b00000000000000000000000000111111 RW
csi_tadp_tx_0_LANE0_CDROSC_CLK_SEL_GATING_REG = hc000a128 0 2 h3 RW HEX
; Desc_csi_tadp_tx_0_LANE0_CDROSC_CLK_SEL_GATING_REG Max value for histogram registers
csi_tadp_tx_0_LANE2_CDROSC_CLK_SEL_GATING_REG = hc000a128 2 2 h3 RW HEX
; Desc_csi_tadp_tx_0_LANE2_CDROSC_CLK_SEL_GATING_REG Max value for histogram registers
csi_tadp_tx_0_LANE3_CDROSC_CLK_SEL_GATING_REG = hc000a128 4 2 h3 RW HEX
; Desc_csi_tadp_tx_0_LANE3_CDROSC_CLK_SEL_GATING_REG Max value for histogram registers
csi_tadp_tx_0_RESERVED_15_6 = hc000a128 6 10 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_6 Max value for histogram registers



; REGISTER csi_tadp_tx_0_CORE_DIG_RW_COMMON_11_reg Address hc000a12c
_csi_tadp_tx_0_CORE_DIG_RW_COMMON_11_reg = 3221266732 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LANE0_CDROSC_CLK_GATING_OVR_EN = hc000a12c 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE0_CDROSC_CLK_GATING_OVR_EN Max value for histogram registers
csi_tadp_tx_0_LANE0_CDROSC_CLK_GATING_OVR_VAL = hc000a12c 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE0_CDROSC_CLK_GATING_OVR_VAL Max value for histogram registers
csi_tadp_tx_0_LANE2_CDROSC_CLK_GATING_OVR_EN = hc000a12c 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE2_CDROSC_CLK_GATING_OVR_EN Max value for histogram registers
csi_tadp_tx_0_LANE2_CDROSC_CLK_GATING_OVR_VAL = hc000a12c 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE2_CDROSC_CLK_GATING_OVR_VAL Max value for histogram registers
csi_tadp_tx_0_LANE3_CDROSC_CLK_GATING_OVR_EN = hc000a12c 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE3_CDROSC_CLK_GATING_OVR_EN Max value for histogram registers
csi_tadp_tx_0_LANE3_CDROSC_CLK_GATING_OVR_VAL = hc000a12c 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE3_CDROSC_CLK_GATING_OVR_VAL Max value for histogram registers
csi_tadp_tx_0_RESERVED_15_6 = hc000a12c 6 10 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_6 Max value for histogram registers



; REGISTER csi_tadp_tx_0_CORE_DIG_RW_COMMON_12_reg Address hc000a130
_csi_tadp_tx_0_CORE_DIG_RW_COMMON_12_reg = 3221266736 0 16 b00000000000000000000000101010101 RW
csi_tadp_tx_0_LANE0_DDL_OSC_SEL_GATING_REG = hc000a130 0 2 h1 RW HEX
; Desc_csi_tadp_tx_0_LANE0_DDL_OSC_SEL_GATING_REG Histogram register count
csi_tadp_tx_0_LANE1_DDL_OSC_SEL_GATING_REG = hc000a130 2 2 h1 RW HEX
; Desc_csi_tadp_tx_0_LANE1_DDL_OSC_SEL_GATING_REG Histogram register count
csi_tadp_tx_0_LANE2_DDL_OSC_SEL_GATING_REG = hc000a130 4 2 h1 RW HEX
; Desc_csi_tadp_tx_0_LANE2_DDL_OSC_SEL_GATING_REG Histogram register count
csi_tadp_tx_0_LANE3_DDL_OSC_SEL_GATING_REG = hc000a130 6 2 h1 RW HEX
; Desc_csi_tadp_tx_0_LANE3_DDL_OSC_SEL_GATING_REG Histogram register count
csi_tadp_tx_0_LANE4_DDL_OSC_SEL_GATING_REG = hc000a130 8 2 h1 RW HEX
; Desc_csi_tadp_tx_0_LANE4_DDL_OSC_SEL_GATING_REG Histogram register count
csi_tadp_tx_0_RESERVED_15_10 = hc000a130 10 6 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 Histogram register count



; REGISTER csi_tadp_tx_0_CORE_DIG_RW_COMMON_13_reg Address hc000a134
_csi_tadp_tx_0_CORE_DIG_RW_COMMON_13_reg = 3221266740 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LANE0_DDL_OSC_GATING_OVR_EN = hc000a134 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE0_DDL_OSC_GATING_OVR_EN Histogram register count
csi_tadp_tx_0_LANE0_DDL_OSC_GATING_OVR_VAL = hc000a134 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE0_DDL_OSC_GATING_OVR_VAL Histogram register count
csi_tadp_tx_0_LANE1_DDL_OSC_GATING_OVR_EN = hc000a134 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE1_DDL_OSC_GATING_OVR_EN Histogram register count
csi_tadp_tx_0_LANE1_DDL_OSC_GATING_OVR_VAL = hc000a134 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE1_DDL_OSC_GATING_OVR_VAL Histogram register count
csi_tadp_tx_0_LANE2_DDL_OSC_GATING_OVR_EN = hc000a134 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE2_DDL_OSC_GATING_OVR_EN Histogram register count
csi_tadp_tx_0_LANE2_DDL_OSC_GATING_OVR_VAL = hc000a134 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE2_DDL_OSC_GATING_OVR_VAL Histogram register count
csi_tadp_tx_0_LANE3_DDL_OSC_GATING_OVR_EN = hc000a134 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE3_DDL_OSC_GATING_OVR_EN Histogram register count
csi_tadp_tx_0_LANE3_DDL_OSC_GATING_OVR_VAL = hc000a134 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE3_DDL_OSC_GATING_OVR_VAL Histogram register count
csi_tadp_tx_0_LANE4_DDL_OSC_GATING_OVR_EN = hc000a134 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE4_DDL_OSC_GATING_OVR_EN Histogram register count
csi_tadp_tx_0_LANE4_DDL_OSC_GATING_OVR_VAL = hc000a134 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE4_DDL_OSC_GATING_OVR_VAL Histogram register count
csi_tadp_tx_0_RESERVED_15_10 = hc000a134 10 6 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 Histogram register count



; REGISTER csi_tadp_tx_0_CORE_DIG_RW_COMMON_14_reg Address hc000a138
_csi_tadp_tx_0_CORE_DIG_RW_COMMON_14_reg = 3221266744 0 16 b00000000000000000000001111111111 RW
csi_tadp_tx_0_LANE0_HSTX_WORD_CLK_SEL_GATING_REG = hc000a138 0 2 h3 RW HEX
; Desc_csi_tadp_tx_0_LANE0_HSTX_WORD_CLK_SEL_GATING_REG Histogram register count
csi_tadp_tx_0_LANE1_HSTX_WORD_CLK_SEL_GATING_REG = hc000a138 2 2 h3 RW HEX
; Desc_csi_tadp_tx_0_LANE1_HSTX_WORD_CLK_SEL_GATING_REG Histogram register count
csi_tadp_tx_0_LANE2_HSTX_WORD_CLK_SEL_GATING_REG = hc000a138 4 2 h3 RW HEX
; Desc_csi_tadp_tx_0_LANE2_HSTX_WORD_CLK_SEL_GATING_REG Histogram register count
csi_tadp_tx_0_LANE3_HSTX_WORD_CLK_SEL_GATING_REG = hc000a138 6 2 h3 RW HEX
; Desc_csi_tadp_tx_0_LANE3_HSTX_WORD_CLK_SEL_GATING_REG Histogram register count
csi_tadp_tx_0_LANE4_HSTX_WORD_CLK_SEL_GATING_REG = hc000a138 8 2 h3 RW HEX
; Desc_csi_tadp_tx_0_LANE4_HSTX_WORD_CLK_SEL_GATING_REG Histogram register count
csi_tadp_tx_0_RESERVED_15_10 = hc000a138 10 6 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 Histogram register count



; REGISTER csi_tadp_tx_0_CORE_DIG_RW_COMMON_15_reg Address hc000a13c
_csi_tadp_tx_0_CORE_DIG_RW_COMMON_15_reg = 3221266748 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LANE0_HSTX_WORD_CLK_GATING_OVR_EN = hc000a13c 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE0_HSTX_WORD_CLK_GATING_OVR_EN Histogram register count
csi_tadp_tx_0_LANE0_HSTX_WORD_CLK_GATING_OVR_VAL = hc000a13c 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE0_HSTX_WORD_CLK_GATING_OVR_VAL Histogram register count
csi_tadp_tx_0_LANE1_HSTX_WORD_CLK_GATING_OVR_EN = hc000a13c 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE1_HSTX_WORD_CLK_GATING_OVR_EN Histogram register count
csi_tadp_tx_0_LANE1_HSTX_WORD_CLK_GATING_OVR_VAL = hc000a13c 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE1_HSTX_WORD_CLK_GATING_OVR_VAL Histogram register count
csi_tadp_tx_0_LANE2_HSTX_WORD_CLK_GATING_OVR_EN = hc000a13c 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE2_HSTX_WORD_CLK_GATING_OVR_EN Histogram register count
csi_tadp_tx_0_LANE2_HSTX_WORD_CLK_GATING_OVR_VAL = hc000a13c 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE2_HSTX_WORD_CLK_GATING_OVR_VAL Histogram register count
csi_tadp_tx_0_LANE3_HSTX_WORD_CLK_GATING_OVR_EN = hc000a13c 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE3_HSTX_WORD_CLK_GATING_OVR_EN Histogram register count
csi_tadp_tx_0_LANE3_HSTX_WORD_CLK_GATING_OVR_VAL = hc000a13c 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE3_HSTX_WORD_CLK_GATING_OVR_VAL Histogram register count
csi_tadp_tx_0_LANE4_HSTX_WORD_CLK_GATING_OVR_EN = hc000a13c 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE4_HSTX_WORD_CLK_GATING_OVR_EN Histogram register count
csi_tadp_tx_0_LANE4_HSTX_WORD_CLK_GATING_OVR_VAL = hc000a13c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LANE4_HSTX_WORD_CLK_GATING_OVR_VAL Histogram register count
csi_tadp_tx_0_RESERVED_15_10 = hc000a13c 10 6 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 Histogram register count



; REGISTER csi_tadp_tx_0_CORE_DIG_ANACTRL_RW_COMMON_ANACTRL_0_reg Address hc000a3c0
_csi_tadp_tx_0_CORE_DIG_ANACTRL_RW_COMMON_ANACTRL_0_reg = 3221267392 0 16 b00000000000000000001101101101101 RW
csi_tadp_tx_0_CB_DSK_CLK_MODE_CFG = hc000a3c0 0 2 h1 RW HEX
; Desc_csi_tadp_tx_0_CB_DSK_CLK_MODE_CFG Histogram register count
csi_tadp_tx_0_CB_LP_DCO_EN_DLY = hc000a3c0 2 6 h1b RW HEX
; Desc_csi_tadp_tx_0_CB_LP_DCO_EN_DLY Histogram register count
csi_tadp_tx_0_CB_LP_DCO_CLK_EN_DLY = hc000a3c0 8 6 h1b RW HEX
; Desc_csi_tadp_tx_0_CB_LP_DCO_CLK_EN_DLY Histogram register count
csi_tadp_tx_0_CB_CHOP_CLK_DIV_SEL = hc000a3c0 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_CB_CHOP_CLK_DIV_SEL Histogram register count



; REGISTER csi_tadp_tx_0_CORE_DIG_ANACTRL_RW_COMMON_ANACTRL_1_reg Address hc000a3c4
_csi_tadp_tx_0_CORE_DIG_ANACTRL_RW_COMMON_ANACTRL_1_reg = 3221267396 0 16 b00000000000000000000000010011011 RW
csi_tadp_tx_0_CB_LP_DCO_CLK_EN_DLY = hc000a3c4 0 6 h1b RW HEX
; Desc_csi_tadp_tx_0_CB_LP_DCO_CLK_EN_DLY Histogram register count
csi_tadp_tx_0_HSRX_DLY = hc000a3c4 6 3 h2 RW HEX
; Desc_csi_tadp_tx_0_HSRX_DLY Histogram register count
csi_tadp_tx_0_RESERVED_15_9 = hc000a3c4 9 7 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_9 Histogram register count



; REGISTER csi_tadp_tx_0_CORE_DIG_ANACTRL_RW_COMMON_ANACTRL_2_reg Address hc000a3c8
_csi_tadp_tx_0_CORE_DIG_ANACTRL_RW_COMMON_ANACTRL_2_reg = 3221267400 0 16 b00000000000000000000010001000100 RW
csi_tadp_tx_0_CB_HSTXLB_DCO_EN_DLY = hc000a3c8 0 4 h4 RW HEX
; Desc_csi_tadp_tx_0_CB_HSTXLB_DCO_EN_DLY Histogram register count
csi_tadp_tx_0_CB_HSTXLB_DCO_CLK_EN_DLY = hc000a3c8 4 4 h4 RW HEX
; Desc_csi_tadp_tx_0_CB_HSTXLB_DCO_CLK_EN_DLY Histogram register count
csi_tadp_tx_0_CB_HSTXLB_DCO_TUNE_CLKDIG_EN_DLY = hc000a3c8 8 4 h4 RW HEX
; Desc_csi_tadp_tx_0_CB_HSTXLB_DCO_TUNE_CLKDIG_EN_DLY Histogram register count
csi_tadp_tx_0_GLOBAL_ULPS_OVR_EN = hc000a3c8 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_GLOBAL_ULPS_OVR_EN Histogram register count
csi_tadp_tx_0_GLOBAL_ULPS_OVR_VAL = hc000a3c8 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_GLOBAL_ULPS_OVR_VAL Histogram register count
csi_tadp_tx_0_RESERVED_15_14 = hc000a3c8 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 Histogram register count



; REGISTER csi_tadp_tx_0_CORE_DIG_ANACTRL_RW_COMMON_ANACTRL_3_reg Address hc000a3cc
_csi_tadp_tx_0_CORE_DIG_ANACTRL_RW_COMMON_ANACTRL_3_reg = 3221267404 0 16 b00000000000000000000010000000100 RW
csi_tadp_tx_0_HSTX_DIV_EN_CNTR_DLY = hc000a3cc 0 8 h4 RW HEX
; Desc_csi_tadp_tx_0_HSTX_DIV_EN_CNTR_DLY Histogram register count
csi_tadp_tx_0_HIBERNATE_DLY = hc000a3cc 8 8 h4 RW HEX
; Desc_csi_tadp_tx_0_HIBERNATE_DLY Histogram register count



; REGISTER csi_tadp_tx_0_CORE_DIG_COMMON_RW_DESKEW_FINE_MEM_reg Address hc000afc0
_csi_tadp_tx_0_CORE_DIG_COMMON_RW_DESKEW_FINE_MEM_reg = 3221270464 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_DESKEW_FINE_MEM_VALUE = hc000afc0 0 3 h0 RW HEX
; Desc_csi_tadp_tx_0_DESKEW_FINE_MEM_VALUE Histogram register count
csi_tadp_tx_0_DESKEW_FINE_MEM_ADDR = hc000afc0 3 7 h0 RW HEX
; Desc_csi_tadp_tx_0_DESKEW_FINE_MEM_ADDR Histogram register count
csi_tadp_tx_0_DESKEW_FINE_MEM_WR_EN = hc000afc0 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_DESKEW_FINE_MEM_WR_EN Histogram register count
csi_tadp_tx_0_RESERVED_15_11 = hc000afc0 11 5 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_11 Histogram register count



; REGISTER csi_tadp_tx_0_PPI_RW_DPHY_LANE0_LBERT_0_reg Address hc000b000
_csi_tadp_tx_0_PPI_RW_DPHY_LANE0_LBERT_0_reg = 3221270528 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LBERT_PM_MODE = hc000b000 0 4 h0 RW HEX
; Desc_csi_tadp_tx_0_LBERT_PM_MODE Histogram register count
csi_tadp_tx_0_LBERT_PM_START_OVR_VAL = hc000b000 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_START_OVR_VAL Histogram register count
csi_tadp_tx_0_LBERT_PM_START_OVR_EN = hc000b000 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_START_OVR_EN Histogram register count
csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_VAL = hc000b000 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_VAL Histogram register count
csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_EN = hc000b000 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_EN Histogram register count
csi_tadp_tx_0_LBERT_PG_MODE = hc000b000 8 4 h0 RW HEX
; Desc_csi_tadp_tx_0_LBERT_PG_MODE Histogram register count
csi_tadp_tx_0_LBERT_PG_START_OVR_VAL = hc000b000 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PG_START_OVR_VAL Histogram register count
csi_tadp_tx_0_LBERT_PG_START_OVR_EN = hc000b000 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PG_START_OVR_EN Histogram register count
csi_tadp_tx_0_LBERT_PG_ERROR_INJECTION = hc000b000 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PG_ERROR_INJECTION Histogram register count
csi_tadp_tx_0_RESERVED_15_15 = hc000b000 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 Histogram register count



; REGISTER csi_tadp_tx_0_PPI_RW_DPHY_LANE0_LBERT_1_reg Address hc000b004
_csi_tadp_tx_0_PPI_RW_DPHY_LANE0_LBERT_1_reg = 3221270532 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LBERT_PG_USER_PATTERN = hc000b004 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_LBERT_PG_USER_PATTERN PER counter value
csi_tadp_tx_0_RESERVED_15_8 = hc000b004 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 PER counter value



; REGISTER csi_tadp_tx_0_PPI_RW_DPHY_LANE0_SPARE_reg Address hc000b010
_csi_tadp_tx_0_PPI_RW_DPHY_LANE0_SPARE_reg = 3221270544 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_DPHY_LANE_0_SPARE = hc000b010 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_DPHY_LANE_0_SPARE MSB vlue of PER counter value



; REGISTER csi_tadp_tx_0_PPI_RW_DPHY_LANE1_LBERT_0_reg Address hc000b800
_csi_tadp_tx_0_PPI_RW_DPHY_LANE1_LBERT_0_reg = 3221272576 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LBERT_PM_MODE = hc000b800 0 4 h0 RW HEX
; Desc_csi_tadp_tx_0_LBERT_PM_MODE SID counter value
csi_tadp_tx_0_LBERT_PM_START_OVR_VAL = hc000b800 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_START_OVR_VAL SID counter value
csi_tadp_tx_0_LBERT_PM_START_OVR_EN = hc000b800 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_START_OVR_EN SID counter value
csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_VAL = hc000b800 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_VAL SID counter value
csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_EN = hc000b800 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_EN SID counter value
csi_tadp_tx_0_LBERT_PG_MODE = hc000b800 8 4 h0 RW HEX
; Desc_csi_tadp_tx_0_LBERT_PG_MODE SID counter value
csi_tadp_tx_0_LBERT_PG_START_OVR_VAL = hc000b800 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PG_START_OVR_VAL SID counter value
csi_tadp_tx_0_LBERT_PG_START_OVR_EN = hc000b800 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PG_START_OVR_EN SID counter value
csi_tadp_tx_0_LBERT_PG_ERROR_INJECTION = hc000b800 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PG_ERROR_INJECTION SID counter value
csi_tadp_tx_0_RESERVED_15_15 = hc000b800 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 SID counter value



; REGISTER csi_tadp_tx_0_PPI_RW_DPHY_LANE1_LBERT_1_reg Address hc000b804
_csi_tadp_tx_0_PPI_RW_DPHY_LANE1_LBERT_1_reg = 3221272580 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LBERT_PG_USER_PATTERN = hc000b804 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_LBERT_PG_USER_PATTERN missing packets counter value
csi_tadp_tx_0_RESERVED_15_8 = hc000b804 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 missing packets counter value



; REGISTER csi_tadp_tx_0_PPI_RW_DPHY_LANE1_SPARE_reg Address hc000b810
_csi_tadp_tx_0_PPI_RW_DPHY_LANE1_SPARE_reg = 3221272592 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_DPHY_LANE_1_SPARE = hc000b810 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_DPHY_LANE_1_SPARE total packets counter value



; REGISTER csi_tadp_tx_0_PPI_RW_DPHY_LANE2_LBERT_0_reg Address hc000c000
_csi_tadp_tx_0_PPI_RW_DPHY_LANE2_LBERT_0_reg = 3221274624 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LBERT_PM_MODE = hc000c000 0 4 h0 RW HEX
; Desc_csi_tadp_tx_0_LBERT_PM_MODE packets with bad CRC counter value
csi_tadp_tx_0_LBERT_PM_START_OVR_VAL = hc000c000 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_START_OVR_VAL packets with bad CRC counter value
csi_tadp_tx_0_LBERT_PM_START_OVR_EN = hc000c000 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_START_OVR_EN packets with bad CRC counter value
csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_VAL = hc000c000 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_VAL packets with bad CRC counter value
csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_EN = hc000c000 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_EN packets with bad CRC counter value
csi_tadp_tx_0_LBERT_PG_MODE = hc000c000 8 4 h0 RW HEX
; Desc_csi_tadp_tx_0_LBERT_PG_MODE packets with bad CRC counter value
csi_tadp_tx_0_LBERT_PG_START_OVR_VAL = hc000c000 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PG_START_OVR_VAL packets with bad CRC counter value
csi_tadp_tx_0_LBERT_PG_START_OVR_EN = hc000c000 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PG_START_OVR_EN packets with bad CRC counter value
csi_tadp_tx_0_LBERT_PG_ERROR_INJECTION = hc000c000 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PG_ERROR_INJECTION packets with bad CRC counter value
csi_tadp_tx_0_RESERVED_15_15 = hc000c000 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 packets with bad CRC counter value



; REGISTER csi_tadp_tx_0_PPI_RW_DPHY_LANE2_LBERT_1_reg Address hc000c004
_csi_tadp_tx_0_PPI_RW_DPHY_LANE2_LBERT_1_reg = 3221274628 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LBERT_PG_USER_PATTERN = hc000c004 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_LBERT_PG_USER_PATTERN BER counter value
csi_tadp_tx_0_RESERVED_15_8 = hc000c004 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 BER counter value



; REGISTER csi_tadp_tx_0_PPI_RW_DPHY_LANE2_SPARE_reg Address hc000c010
_csi_tadp_tx_0_PPI_RW_DPHY_LANE2_SPARE_reg = 3221274640 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_DPHY_LANE_2_SPARE = hc000c010 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_DPHY_LANE_2_SPARE MSB value of BER coutner



; REGISTER csi_tadp_tx_0_PPI_RW_DPHY_LANE3_LBERT_0_reg Address hc000c800
_csi_tadp_tx_0_PPI_RW_DPHY_LANE3_LBERT_0_reg = 3221276672 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LBERT_PM_MODE = hc000c800 0 4 h0 RW HEX
; Desc_csi_tadp_tx_0_LBERT_PM_MODE number of total bits counter value
csi_tadp_tx_0_LBERT_PM_START_OVR_VAL = hc000c800 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_START_OVR_VAL number of total bits counter value
csi_tadp_tx_0_LBERT_PM_START_OVR_EN = hc000c800 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_START_OVR_EN number of total bits counter value
csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_VAL = hc000c800 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_VAL number of total bits counter value
csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_EN = hc000c800 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_EN number of total bits counter value
csi_tadp_tx_0_LBERT_PG_MODE = hc000c800 8 4 h0 RW HEX
; Desc_csi_tadp_tx_0_LBERT_PG_MODE number of total bits counter value
csi_tadp_tx_0_LBERT_PG_START_OVR_VAL = hc000c800 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PG_START_OVR_VAL number of total bits counter value
csi_tadp_tx_0_LBERT_PG_START_OVR_EN = hc000c800 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PG_START_OVR_EN number of total bits counter value
csi_tadp_tx_0_LBERT_PG_ERROR_INJECTION = hc000c800 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PG_ERROR_INJECTION number of total bits counter value
csi_tadp_tx_0_RESERVED_15_15 = hc000c800 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 number of total bits counter value



; REGISTER csi_tadp_tx_0_PPI_RW_DPHY_LANE3_LBERT_1_reg Address hc000c804
_csi_tadp_tx_0_PPI_RW_DPHY_LANE3_LBERT_1_reg = 3221276676 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LBERT_PG_USER_PATTERN = hc000c804 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_LBERT_PG_USER_PATTERN MSB value of number of total bits counter value
csi_tadp_tx_0_RESERVED_15_8 = hc000c804 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 MSB value of number of total bits counter value



; REGISTER csi_tadp_tx_0_PPI_RW_DPHY_LANE3_SPARE_reg Address hc000c810
_csi_tadp_tx_0_PPI_RW_DPHY_LANE3_SPARE_reg = 3221276688 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_DPHY_LANE_3_SPARE = hc000c810 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_DPHY_LANE_3_SPARE [0] - PER counter, [1] - SID error [2] - missing packets [3] - total packets [4] - bad CRC [5] - BER counter [6] - total bits [7] - histogram [8] - remote sleep counter



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_CFG_0_reg Address hc000f000
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_CFG_0_reg = 3221286912 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_CFG_0_LP_PIN_SWAP_REG = hc000f000 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_LP_PIN_SWAP_REG time to wait between remote sleep packets before asserting the TO interrupt
csi_tadp_tx_0_CFG_0_HS_PIN_SWAP_REG = hc000f000 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_HS_PIN_SWAP_REG time to wait between remote sleep packets before asserting the TO interrupt
csi_tadp_tx_0_LOOPBACK_MODE_EN = hc000f000 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LOOPBACK_MODE_EN time to wait between remote sleep packets before asserting the TO interrupt
csi_tadp_tx_0_RESERVED_15_3 = hc000f000 3 13 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_3 time to wait between remote sleep packets before asserting the TO interrupt



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_CFG_1_reg Address hc000f004
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_CFG_1_reg = 3221286916 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_CFG_1_PREAMBLE_EN_REG = hc000f004 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_1_PREAMBLE_EN_REG configuration for value to assert an intterupt when counter reaches it for PER counter
csi_tadp_tx_0_CFG_1_BACKWARDS_DESKEW_REG = hc000f004 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_1_BACKWARDS_DESKEW_REG configuration for value to assert an intterupt when counter reaches it for PER counter
csi_tadp_tx_0_CFG_1_DESKEW_SUPPORTED_REG = hc000f004 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_1_DESKEW_SUPPORTED_REG configuration for value to assert an intterupt when counter reaches it for PER counter
csi_tadp_tx_0_CFG_1_SOT_DETECTION_REG = hc000f004 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_1_SOT_DETECTION_REG configuration for value to assert an intterupt when counter reaches it for PER counter
csi_tadp_tx_0_RESERVED_15_4 = hc000f004 4 12 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_4 configuration for value to assert an intterupt when counter reaches it for PER counter



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_CFG_2_reg Address hc000f008
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_CFG_2_reg = 3221286920 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_CFG_2_SPARE = hc000f008 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_CFG_2_SPARE configuration for value to assert an intterupt when counter reaches it for PER counter



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_LP_0_reg Address hc000f100
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_LP_0_reg = 3221287168 0 16 b00000000000000000100011000111100 RW
csi_tadp_tx_0_LP_0_TTAGET_REG = hc000f100 0 4 hc RW HEX
; Desc_csi_tadp_tx_0_LP_0_TTAGET_REG configuration for value to assert an intterupt when counter reaches it for BER counter
csi_tadp_tx_0_LP_0_TTASURE_REG = hc000f100 4 4 h3 RW HEX
; Desc_csi_tadp_tx_0_LP_0_TTASURE_REG configuration for value to assert an intterupt when counter reaches it for BER counter
csi_tadp_tx_0_LP_0_TTAGO_REG = hc000f100 8 4 h6 RW HEX
; Desc_csi_tadp_tx_0_LP_0_TTAGO_REG configuration for value to assert an intterupt when counter reaches it for BER counter
csi_tadp_tx_0_LP_0_ITMINRX_REG = hc000f100 12 4 h4 RW HEX
; Desc_csi_tadp_tx_0_LP_0_ITMINRX_REG configuration for value to assert an intterupt when counter reaches it for BER counter



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_LP_1_reg Address hc000f104
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_LP_1_reg = 3221287172 0 16 b00000000000000001000000000010000 RW
csi_tadp_tx_0_LP_1_ERRCONTENTION_THRES_REG = hc000f104 0 8 h10 RW HEX
; Desc_csi_tadp_tx_0_LP_1_ERRCONTENTION_THRES_REG configuration for value to assert an intterupt when counter reaches it for BER counter
csi_tadp_tx_0_LP_1_LPTX_PON_TIMER_REG = hc000f104 8 8 h80 RW HEX
; Desc_csi_tadp_tx_0_LP_1_LPTX_PON_TIMER_REG configuration for value to assert an intterupt when counter reaches it for BER counter



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_RX_0_reg Address hc000f200
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_RX_0_reg = 3221287424 0 16 b00000000000000000000100100011101 RW
csi_tadp_tx_0_HS_RX_0_TCLKSETTLE_REG = hc000f200 0 8 h1d RW HEX
; Desc_csi_tadp_tx_0_HS_RX_0_TCLKSETTLE_REG remote sleep packet received
csi_tadp_tx_0_HS_RX_0_THSSETTLE_REG = hc000f200 8 8 h9 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_0_THSSETTLE_REG remote sleep packet received



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_RX_1_reg Address hc000f204
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_RX_1_reg = 3221287428 0 16 b00000000000000000100000000010000 RW
csi_tadp_tx_0_HS_RX_1_FILTER_SIZE_DESKEW_REG = hc000f204 0 8 h10 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_1_FILTER_SIZE_DESKEW_REG saves the first value of an exteded BIST packet with packet counter untill reset
csi_tadp_tx_0_HS_RX_1_FILTER_SIZE_SKEWCAL_REG = hc000f204 8 8 h40 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_1_FILTER_SIZE_SKEWCAL_REG saves the first value of an exteded BIST packet with packet counter untill reset



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_RX_2_reg Address hc000f208
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_RX_2_reg = 3221287432 0 16 b00000000000000000110011010011011 RW
csi_tadp_tx_0_HS_RX_2_LATENCY_DESKEW_REG = hc000f208 0 3 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_2_LATENCY_DESKEW_REG BER counter
csi_tadp_tx_0_HS_RX_2_LATENCY_SKEWCAL_REG = hc000f208 3 2 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_2_LATENCY_SKEWCAL_REG BER counter
csi_tadp_tx_0_HS_RX_2_JUMP2STEPS_SKEWCAL_REG = hc000f208 5 2 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_2_JUMP2STEPS_SKEWCAL_REG BER counter
csi_tadp_tx_0_HS_RX_2_POLARITY_SKEWCAL_REG = hc000f208 7 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_2_POLARITY_SKEWCAL_REG BER counter
csi_tadp_tx_0_HS_RX_2_RECAL_SKEWCAL_REG = hc000f208 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_2_RECAL_SKEWCAL_REG BER counter
csi_tadp_tx_0_HS_RX_2_WINDOW_SIZE_DESKEW_REG = hc000f208 9 4 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_2_WINDOW_SIZE_DESKEW_REG BER counter
csi_tadp_tx_0_HS_RX_2_UPDATE_SETTINGS_DESKEW_REG = hc000f208 13 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_2_UPDATE_SETTINGS_DESKEW_REG BER counter
csi_tadp_tx_0_HS_RX_2_UPDATE_SETTINGS_SKEWCAL_REG = hc000f208 14 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_2_UPDATE_SETTINGS_SKEWCAL_REG BER counter
csi_tadp_tx_0_HS_RX_2_IGNORE_ALTERNCAL_REG = hc000f208 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_2_IGNORE_ALTERNCAL_REG BER counter



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_RX_3_reg Address hc000f20c
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_RX_3_reg = 3221287436 0 16 b00000000000000001001001000001010 RW
csi_tadp_tx_0_HS_RX_3_STEP_SIZE_DESKEW_REG = hc000f20c 0 3 h2 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_3_STEP_SIZE_DESKEW_REG 
csi_tadp_tx_0_HS_RX_3_FJUMP_DESKEW_REG = hc000f20c 3 6 h1 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_3_FJUMP_DESKEW_REG 
csi_tadp_tx_0_HS_RX_3_SHIFT_STEP_DESKEW_REG = hc000f20c 9 3 h1 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_3_SHIFT_STEP_DESKEW_REG 
csi_tadp_tx_0_HS_RX_3_SHRINK_STEP_DESKEW_REG = hc000f20c 12 3 h1 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_3_SHRINK_STEP_DESKEW_REG 
csi_tadp_tx_0_HS_RX_3_ROUNDUP_DESKEW_REG = hc000f20c 15 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_3_ROUNDUP_DESKEW_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_RX_4_reg Address hc000f210
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_RX_4_reg = 3221287440 0 16 b00000000000000000000000010010110 RW
csi_tadp_tx_0_HS_RX_4_MAX_ITERATIONS_DESKEW_REG = hc000f210 0 16 h96 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_4_MAX_ITERATIONS_DESKEW_REG for debug



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_RX_5_reg Address hc000f214
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_RX_5_reg = 3221287444 0 16 b00000000000000000000000100000000 RW
csi_tadp_tx_0_HS_RX_5_DDL_LEFT_INIT_REG = hc000f214 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_5_DDL_LEFT_INIT_REG write to clear status of safety reg (there are [GPIO_NUM/2] +2 safety registers)
csi_tadp_tx_0_HS_RX_5_DDL_MID_INIT_REG = hc000f214 8 8 h1 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_5_DDL_MID_INIT_REG write to clear status of safety reg (there are [GPIO_NUM/2] +2 safety registers)



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_RX_6_reg Address hc000f218
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_RX_6_reg = 3221287448 0 16 b00000000000000000010110100000010 RW
csi_tadp_tx_0_HS_RX_6_DDL_RIGHT_INIT_REG = hc000f218 0 8 h2 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_6_DDL_RIGHT_INIT_REG 
csi_tadp_tx_0_HS_RX_6_MIN_EYE_OPENING_DESKEW_REG = hc000f218 8 8 h2d RW HEX
; Desc_csi_tadp_tx_0_HS_RX_6_MIN_EYE_OPENING_DESKEW_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_RX_7_reg Address hc000f21c
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_RX_7_reg = 3221287452 0 16 b00000000000000000011101100000110 RW
csi_tadp_tx_0_HS_RX_7_TCLKMISS_REG = hc000f21c 0 8 h6 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_7_TCLKMISS_REG 
csi_tadp_tx_0_HS_RX_7_INVORDER_RX_REG = hc000f21c 8 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_7_INVORDER_RX_REG 
csi_tadp_tx_0_HS_RX_7_INITIAL_CALIBRATION_REG = hc000f21c 9 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_7_INITIAL_CALIBRATION_REG 
csi_tadp_tx_0_HS_RX_7_THSEXIT_MIN_REG = hc000f21c 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_7_THSEXIT_MIN_REG 
csi_tadp_tx_0_HS_RX_7_DESKEW_CNF_REG = hc000f21c 11 2 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_7_DESKEW_CNF_REG 
csi_tadp_tx_0_HS_RX_7_DESKEW_AUTO_ALGO_SEL_REG = hc000f21c 13 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_7_DESKEW_AUTO_ALGO_SEL_REG 
csi_tadp_tx_0_HS_RX_7_DESKEW_REARM_INITIAL_REG = hc000f21c 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_7_DESKEW_REARM_INITIAL_REG 
csi_tadp_tx_0_RESERVED_15_15 = hc000f21c 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_RX_8_reg Address hc000f220
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_RX_8_reg = 3221287456 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_RX_8_FILTER_DITHERING_EN_REG = hc000f220 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_8_FILTER_DITHERING_EN_REG 
csi_tadp_tx_0_HS_RX_8_START_DELAY_REG = hc000f220 1 8 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_8_START_DELAY_REG 
csi_tadp_tx_0_RESERVED_15_9 = hc000f220 9 7 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_9 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_0_reg Address hc000f400
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_0_reg = 3221287936 0 16 b00000000000000000000000000001001 RW
csi_tadp_tx_0_HS_TX_0_THSTRAIL_REG = hc000f400 0 16 h9 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_0_THSTRAIL_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_1_reg Address hc000f404
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_1_reg = 3221287940 0 16 b00000000000000000000000000100000 RW
csi_tadp_tx_0_HS_TX_1_THSZERO_REG = hc000f404 0 16 h20 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_1_THSZERO_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_2_reg Address hc000f408
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_2_reg = 3221287944 0 16 b00000000000000000000000000000011 RW
csi_tadp_tx_0_HS_TX_2_TCLKPRE_REG = hc000f408 0 16 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_2_TCLKPRE_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_3_reg Address hc000f40c
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_3_reg = 3221287948 0 16 b00000000000000000000000000000110 RW
csi_tadp_tx_0_HS_TX_3_TLPTXOVERLAP_REG = hc000f40c 0 8 h6 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_3_TLPTXOVERLAP_REG 
csi_tadp_tx_0_HS_TX_3_INVORDER_TX_REG = hc000f40c 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_INVORDER_TX_REG 
csi_tadp_tx_0_HS_TX_3_STATE_OVR_EN_REG = hc000f40c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_STATE_OVR_EN_REG 
csi_tadp_tx_0_HS_TX_3_STATE_OVR_REG = hc000f40c 10 4 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_3_STATE_OVR_REG 
csi_tadp_tx_0_HS_TX_3_HSDIRECT_REG = hc000f40c 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_HSDIRECT_REG 
csi_tadp_tx_0_HS_TX_3_PIN_SWAP_REG = hc000f40c 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_PIN_SWAP_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_4_reg Address hc000f410
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_4_reg = 3221287952 0 16 b00000000000000000000000000000111 RW
csi_tadp_tx_0_HS_TX_4_TLPX_DCO_REG = hc000f410 0 16 h7 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_4_TLPX_DCO_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_5_reg Address hc000f414
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_5_reg = 3221287956 0 16 b00000000000000000000000000000111 RW
csi_tadp_tx_0_HS_TX_5_THSTRAIL_DCO_REG = hc000f414 0 16 h7 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_5_THSTRAIL_DCO_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_6_reg Address hc000f418
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_6_reg = 3221287960 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_HS_TX_6_TLP11END_DCO_REG = hc000f418 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_HS_TX_6_TLP11END_DCO_REG frac from CPU value



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_7_reg Address hc000f41c
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_7_reg = 3221287964 0 16 b00000000000000000000000011111111 RW
csi_tadp_tx_0_HS_TX_7_ALTCALSEED_REG = hc000f41c 0 9 hff RW HEX
; Desc_csi_tadp_tx_0_HS_TX_7_ALTCALSEED_REG clk a = native_clk / clk_a_div_ratio
csi_tadp_tx_0_HS_TX_7_STATE_DCO_OVR_EN_REG = hc000f41c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_7_STATE_DCO_OVR_EN_REG clk a = native_clk / clk_a_div_ratio
csi_tadp_tx_0_HS_TX_7_STATE_DCO_OVR_VAL_REG = hc000f41c 10 4 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_7_STATE_DCO_OVR_VAL_REG clk a = native_clk / clk_a_div_ratio
csi_tadp_tx_0_RESERVED_15_14 = hc000f41c 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 clk a = native_clk / clk_a_div_ratio



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_8_reg Address hc000f420
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_8_reg = 3221287968 0 16 b00000000000000000000000000011100 RW
csi_tadp_tx_0_HS_TX_8_TCLKPOST_REG = hc000f420 0 16 h1c RW HEX
; Desc_csi_tadp_tx_0_HS_TX_8_TCLKPOST_REG drift from CPU



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_9_reg Address hc000f424
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_9_reg = 3221287972 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_HS_TX_9_THSPRPR_DCO_REG = hc000f424 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_HS_TX_9_THSPRPR_DCO_REG Mval from CPU value , update every write.



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_10_reg Address hc000f428
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_10_reg = 3221287976 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_HS_TX_10_TLP11INIT_DCO_REG = hc000f428 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_HS_TX_10_TLP11INIT_DCO_REG FIFO write_used reference.sThe FIFO_LOOP adjusts FSControl to bring write_used to this value



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_11_reg Address hc000f42c
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_11_reg = 3221287980 0 16 b00000000000000000000000000000111 RW
csi_tadp_tx_0_HS_TX_11_TPREAMBLE_REG = hc000f42c 0 16 h7 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_11_TPREAMBLE_REG Number of different FOval samples needed to announce that fo_est has changed



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_12_reg Address hc000f430
_csi_tadp_tx_0_CORE_DIG_DLANE_0_RW_HS_TX_12_reg = 3221287984 0 16 b00000000000000000000000000010100 RW
csi_tadp_tx_0_HS_TX_12_THSEXIT_DCO_REG = hc000f430 0 16 h14 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_12_THSEXIT_DCO_REG SSC step to apply every 16 clocks.sUp to 15259Hz in 0.0582Hz steps for 250MHz clock.sUp to 7629Hz in 0.0291Hz steps for 125MHz clock.



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_CFG_0_reg Address hc000f800
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_CFG_0_reg = 3221288960 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_CFG_0_LP_PIN_SWAP_REG = hc000f800 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_LP_PIN_SWAP_REG sigma delta of synt HDSDI 
csi_tadp_tx_0_CFG_0_HS_PIN_SWAP_REG = hc000f800 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_HS_PIN_SWAP_REG sigma delta of synt HDSDI 
csi_tadp_tx_0_LOOPBACK_MODE_EN = hc000f800 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LOOPBACK_MODE_EN sigma delta of synt HDSDI 
csi_tadp_tx_0_RESERVED_15_3 = hc000f800 3 13 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_3 sigma delta of synt HDSDI 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_CFG_1_reg Address hc000f804
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_CFG_1_reg = 3221288964 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_CFG_1_PREAMBLE_EN_REG = hc000f804 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_1_PREAMBLE_EN_REG refdiv
csi_tadp_tx_0_CFG_1_BACKWARDS_DESKEW_REG = hc000f804 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_1_BACKWARDS_DESKEW_REG refdiv
csi_tadp_tx_0_CFG_1_DESKEW_SUPPORTED_REG = hc000f804 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_1_DESKEW_SUPPORTED_REG refdiv
csi_tadp_tx_0_CFG_1_SOT_DETECTION_REG = hc000f804 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_1_SOT_DETECTION_REG refdiv
csi_tadp_tx_0_RESERVED_15_4 = hc000f804 4 12 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_4 refdiv



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_CFG_2_reg Address hc000f808
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_CFG_2_reg = 3221288968 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_CFG_2_SPARE = hc000f808 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_CFG_2_SPARE 0 = MN from packet, 1 = MN from averaging window 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_LP_0_reg Address hc000f900
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_LP_0_reg = 3221289216 0 16 b00000000000000000100011000111100 RW
csi_tadp_tx_0_LP_0_TTAGET_REG = hc000f900 0 4 hc RW HEX
; Desc_csi_tadp_tx_0_LP_0_TTAGET_REG Tmds Clock Changed Indication
csi_tadp_tx_0_LP_0_TTASURE_REG = hc000f900 4 4 h3 RW HEX
; Desc_csi_tadp_tx_0_LP_0_TTASURE_REG Tmds Clock Changed Indication
csi_tadp_tx_0_LP_0_TTAGO_REG = hc000f900 8 4 h6 RW HEX
; Desc_csi_tadp_tx_0_LP_0_TTAGO_REG Tmds Clock Changed Indication
csi_tadp_tx_0_LP_0_ITMINRX_REG = hc000f900 12 4 h4 RW HEX
; Desc_csi_tadp_tx_0_LP_0_ITMINRX_REG Tmds Clock Changed Indication



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_LP_1_reg Address hc000f904
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_LP_1_reg = 3221289220 0 16 b00000000000000001000000000010000 RW
csi_tadp_tx_0_LP_1_ERRCONTENTION_THRES_REG = hc000f904 0 8 h10 RW HEX
; Desc_csi_tadp_tx_0_LP_1_ERRCONTENTION_THRES_REG Tmds Clock is zero Indication
csi_tadp_tx_0_LP_1_LPTX_PON_TIMER_REG = hc000f904 8 8 h80 RW HEX
; Desc_csi_tadp_tx_0_LP_1_LPTX_PON_TIMER_REG Tmds Clock is zero Indication



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_RX_0_reg Address hc000fa00
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_RX_0_reg = 3221289472 0 16 b00000000000000000000100100011101 RW
csi_tadp_tx_0_HS_RX_0_TCLKSETTLE_REG = hc000fa00 0 8 h1d RW HEX
; Desc_csi_tadp_tx_0_HS_RX_0_TCLKSETTLE_REG fifo loop accumulatort
csi_tadp_tx_0_HS_RX_0_THSSETTLE_REG = hc000fa00 8 8 h9 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_0_THSSETTLE_REG fifo loop accumulatort



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_RX_1_reg Address hc000fa04
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_RX_1_reg = 3221289476 0 16 b00000000000000000100000000010000 RW
csi_tadp_tx_0_HS_RX_1_FILTER_SIZE_DESKEW_REG = hc000fa04 0 8 h10 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_1_FILTER_SIZE_DESKEW_REG Estimated tmds clock in Number of clocks in 2048usec*2^14
csi_tadp_tx_0_HS_RX_1_FILTER_SIZE_SKEWCAL_REG = hc000fa04 8 8 h40 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_1_FILTER_SIZE_SKEWCAL_REG Estimated tmds clock in Number of clocks in 2048usec*2^14



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_RX_2_reg Address hc000fa08
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_RX_2_reg = 3221289480 0 16 b00000000000000000110011010011011 RW
csi_tadp_tx_0_HS_RX_2_LATENCY_DESKEW_REG = hc000fa08 0 3 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_2_LATENCY_DESKEW_REG missing clk packet (mis_clk_pkt_cnt reached mis_clk_pkt_cnt_limit)
csi_tadp_tx_0_HS_RX_2_LATENCY_SKEWCAL_REG = hc000fa08 3 2 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_2_LATENCY_SKEWCAL_REG missing clk packet (mis_clk_pkt_cnt reached mis_clk_pkt_cnt_limit)
csi_tadp_tx_0_HS_RX_2_JUMP2STEPS_SKEWCAL_REG = hc000fa08 5 2 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_2_JUMP2STEPS_SKEWCAL_REG missing clk packet (mis_clk_pkt_cnt reached mis_clk_pkt_cnt_limit)
csi_tadp_tx_0_HS_RX_2_POLARITY_SKEWCAL_REG = hc000fa08 7 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_2_POLARITY_SKEWCAL_REG missing clk packet (mis_clk_pkt_cnt reached mis_clk_pkt_cnt_limit)
csi_tadp_tx_0_HS_RX_2_RECAL_SKEWCAL_REG = hc000fa08 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_2_RECAL_SKEWCAL_REG missing clk packet (mis_clk_pkt_cnt reached mis_clk_pkt_cnt_limit)
csi_tadp_tx_0_HS_RX_2_WINDOW_SIZE_DESKEW_REG = hc000fa08 9 4 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_2_WINDOW_SIZE_DESKEW_REG missing clk packet (mis_clk_pkt_cnt reached mis_clk_pkt_cnt_limit)
csi_tadp_tx_0_HS_RX_2_UPDATE_SETTINGS_DESKEW_REG = hc000fa08 13 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_2_UPDATE_SETTINGS_DESKEW_REG missing clk packet (mis_clk_pkt_cnt reached mis_clk_pkt_cnt_limit)
csi_tadp_tx_0_HS_RX_2_UPDATE_SETTINGS_SKEWCAL_REG = hc000fa08 14 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_2_UPDATE_SETTINGS_SKEWCAL_REG missing clk packet (mis_clk_pkt_cnt reached mis_clk_pkt_cnt_limit)
csi_tadp_tx_0_HS_RX_2_IGNORE_ALTERNCAL_REG = hc000fa08 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_2_IGNORE_ALTERNCAL_REG missing clk packet (mis_clk_pkt_cnt reached mis_clk_pkt_cnt_limit)



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_RX_3_reg Address hc000fa0c
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_RX_3_reg = 3221289484 0 16 b00000000000000001001001000001010 RW
csi_tadp_tx_0_HS_RX_3_STEP_SIZE_DESKEW_REG = hc000fa0c 0 3 h2 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_3_STEP_SIZE_DESKEW_REG Tmds clock is steady indication
csi_tadp_tx_0_HS_RX_3_FJUMP_DESKEW_REG = hc000fa0c 3 6 h1 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_3_FJUMP_DESKEW_REG Tmds clock is steady indication
csi_tadp_tx_0_HS_RX_3_SHIFT_STEP_DESKEW_REG = hc000fa0c 9 3 h1 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_3_SHIFT_STEP_DESKEW_REG Tmds clock is steady indication
csi_tadp_tx_0_HS_RX_3_SHRINK_STEP_DESKEW_REG = hc000fa0c 12 3 h1 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_3_SHRINK_STEP_DESKEW_REG Tmds clock is steady indication
csi_tadp_tx_0_HS_RX_3_ROUNDUP_DESKEW_REG = hc000fa0c 15 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_3_ROUNDUP_DESKEW_REG Tmds clock is steady indication



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_RX_4_reg Address hc000fa10
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_RX_4_reg = 3221289488 0 16 b00000000000000000000000010010110 RW
csi_tadp_tx_0_HS_RX_4_MAX_ITERATIONS_DESKEW_REG = hc000fa10 0 16 h96 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_4_MAX_ITERATIONS_DESKEW_REG PLL lock



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_RX_5_reg Address hc000fa14
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_RX_5_reg = 3221289492 0 16 b00000000000000000000000100000000 RW
csi_tadp_tx_0_HS_RX_5_DDL_LEFT_INIT_REG = hc000fa14 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_5_DDL_LEFT_INIT_REG Hi threshold - if more then HI_SPEED_NUM_OF_PACKETS consecutive packets pass this threshlod - move to hi-speed mode
csi_tadp_tx_0_HS_RX_5_DDL_MID_INIT_REG = hc000fa14 8 8 h1 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_5_DDL_MID_INIT_REG Hi threshold - if more then HI_SPEED_NUM_OF_PACKETS consecutive packets pass this threshlod - move to hi-speed mode



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_RX_6_reg Address hc000fa18
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_RX_6_reg = 3221289496 0 16 b00000000000000000010110100000010 RW
csi_tadp_tx_0_HS_RX_6_DDL_RIGHT_INIT_REG = hc000fa18 0 8 h2 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_6_DDL_RIGHT_INIT_REG The Ratio Betwwn TMDS clock and system clock
csi_tadp_tx_0_HS_RX_6_MIN_EYE_OPENING_DESKEW_REG = hc000fa18 8 8 h2d RW HEX
; Desc_csi_tadp_tx_0_HS_RX_6_MIN_EYE_OPENING_DESKEW_REG The Ratio Betwwn TMDS clock and system clock



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_RX_7_reg Address hc000fa1c
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_RX_7_reg = 3221289500 0 16 b00000000000000000011101100000110 RW
csi_tadp_tx_0_HS_RX_7_TCLKMISS_REG = hc000fa1c 0 8 h6 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_7_TCLKMISS_REG Cycles with no clock packet for mn zero declaration
csi_tadp_tx_0_HS_RX_7_INVORDER_RX_REG = hc000fa1c 8 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_7_INVORDER_RX_REG Cycles with no clock packet for mn zero declaration
csi_tadp_tx_0_HS_RX_7_INITIAL_CALIBRATION_REG = hc000fa1c 9 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_7_INITIAL_CALIBRATION_REG Cycles with no clock packet for mn zero declaration
csi_tadp_tx_0_HS_RX_7_THSEXIT_MIN_REG = hc000fa1c 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_7_THSEXIT_MIN_REG Cycles with no clock packet for mn zero declaration
csi_tadp_tx_0_HS_RX_7_DESKEW_CNF_REG = hc000fa1c 11 2 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_7_DESKEW_CNF_REG Cycles with no clock packet for mn zero declaration
csi_tadp_tx_0_HS_RX_7_DESKEW_AUTO_ALGO_SEL_REG = hc000fa1c 13 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_7_DESKEW_AUTO_ALGO_SEL_REG Cycles with no clock packet for mn zero declaration
csi_tadp_tx_0_HS_RX_7_DESKEW_REARM_INITIAL_REG = hc000fa1c 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_7_DESKEW_REARM_INITIAL_REG Cycles with no clock packet for mn zero declaration
csi_tadp_tx_0_RESERVED_15_15 = hc000fa1c 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 Cycles with no clock packet for mn zero declaration



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_RX_8_reg Address hc000fa20
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_RX_8_reg = 3221289504 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_RX_8_FILTER_DITHERING_EN_REG = hc000fa20 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_8_FILTER_DITHERING_EN_REG Clock generation value
csi_tadp_tx_0_HS_RX_8_START_DELAY_REG = hc000fa20 1 8 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_8_START_DELAY_REG Clock generation value
csi_tadp_tx_0_RESERVED_15_9 = hc000fa20 9 7 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_9 Clock generation value



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_0_reg Address hc000fc00
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_0_reg = 3221289984 0 16 b00000000000000000000000000001001 RW
csi_tadp_tx_0_HS_TX_0_THSTRAIL_REG = hc000fc00 0 16 h9 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_0_THSTRAIL_REG Clock generation value



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_1_reg Address hc000fc04
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_1_reg = 3221289988 0 16 b00000000000000000000000000100000 RW
csi_tadp_tx_0_HS_TX_1_THSZERO_REG = hc000fc04 0 16 h20 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_1_THSZERO_REG Clock generation value



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_2_reg Address hc000fc08
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_2_reg = 3221289992 0 16 b00000000000000000000000000000011 RW
csi_tadp_tx_0_HS_TX_2_TCLKPRE_REG = hc000fc08 0 16 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_2_TCLKPRE_REG Clock generation value



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_3_reg Address hc000fc0c
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_3_reg = 3221289996 0 16 b00000000000000000000000000000110 RW
csi_tadp_tx_0_HS_TX_3_TLPTXOVERLAP_REG = hc000fc0c 0 8 h6 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_3_TLPTXOVERLAP_REG div ratio for FSout
csi_tadp_tx_0_HS_TX_3_INVORDER_TX_REG = hc000fc0c 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_INVORDER_TX_REG div ratio for FSout
csi_tadp_tx_0_HS_TX_3_STATE_OVR_EN_REG = hc000fc0c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_STATE_OVR_EN_REG div ratio for FSout
csi_tadp_tx_0_HS_TX_3_STATE_OVR_REG = hc000fc0c 10 4 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_3_STATE_OVR_REG div ratio for FSout
csi_tadp_tx_0_HS_TX_3_HSDIRECT_REG = hc000fc0c 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_HSDIRECT_REG div ratio for FSout
csi_tadp_tx_0_HS_TX_3_PIN_SWAP_REG = hc000fc0c 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_PIN_SWAP_REG div ratio for FSout



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_4_reg Address hc000fc10
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_4_reg = 3221290000 0 16 b00000000000000000000000000000111 RW
csi_tadp_tx_0_HS_TX_4_TLPX_DCO_REG = hc000fc10 0 16 h7 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_4_TLPX_DCO_REG postdiv*postdiv2 value



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_5_reg Address hc000fc14
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_5_reg = 3221290004 0 16 b00000000000000000000000000000111 RW
csi_tadp_tx_0_HS_TX_5_THSTRAIL_DCO_REG = hc000fc14 0 16 h7 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_5_THSTRAIL_DCO_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_6_reg Address hc000fc18
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_6_reg = 3221290008 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_HS_TX_6_TLP11END_DCO_REG = hc000fc18 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_HS_TX_6_TLP11END_DCO_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_7_reg Address hc000fc1c
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_7_reg = 3221290012 0 16 b00000000000000000000000011111111 RW
csi_tadp_tx_0_HS_TX_7_ALTCALSEED_REG = hc000fc1c 0 9 hff RW HEX
; Desc_csi_tadp_tx_0_HS_TX_7_ALTCALSEED_REG 
csi_tadp_tx_0_HS_TX_7_STATE_DCO_OVR_EN_REG = hc000fc1c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_7_STATE_DCO_OVR_EN_REG 
csi_tadp_tx_0_HS_TX_7_STATE_DCO_OVR_VAL_REG = hc000fc1c 10 4 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_7_STATE_DCO_OVR_VAL_REG 
csi_tadp_tx_0_RESERVED_15_14 = hc000fc1c 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_8_reg Address hc000fc20
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_8_reg = 3221290016 0 16 b00000000000000000000000000011100 RW
csi_tadp_tx_0_HS_TX_8_TCLKPOST_REG = hc000fc20 0 16 h1c RW HEX
; Desc_csi_tadp_tx_0_HS_TX_8_TCLKPOST_REG config mult ratio of the mn meas



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_9_reg Address hc000fc24
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_9_reg = 3221290020 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_HS_TX_9_THSPRPR_DCO_REG = hc000fc24 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_HS_TX_9_THSPRPR_DCO_REG num of tx_delay units for create const dealy



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_10_reg Address hc000fc28
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_10_reg = 3221290024 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_HS_TX_10_TLP11INIT_DCO_REG = hc000fc28 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_HS_TX_10_TLP11INIT_DCO_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_11_reg Address hc000fc2c
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_11_reg = 3221290028 0 16 b00000000000000000000000000000111 RW
csi_tadp_tx_0_HS_TX_11_TPREAMBLE_REG = hc000fc2c 0 16 h7 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_11_TPREAMBLE_REG force pll_lock value



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_12_reg Address hc000fc30
_csi_tadp_tx_0_CORE_DIG_DLANE_1_RW_HS_TX_12_reg = 3221290032 0 16 b00000000000000000000000000010100 RW
csi_tadp_tx_0_HS_TX_12_THSEXIT_DCO_REG = hc000fc30 0 16 h14 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_12_THSEXIT_DCO_REG {pll_lock_fail,apkt_bad,miss_pkt,ts_in_range,fifo_used_in_range,mn_steady,mn_change,mn_zero}



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_CFG_0_reg Address hc0010000
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_CFG_0_reg = 3221291008 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_CFG_0_LP_PIN_SWAP_REG = hc0010000 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_LP_PIN_SWAP_REG {pll_lock_fail,apkt_badmiss_pkt,ts_in_range,fifo_used_in_range,mn_steady,mn_change,mn_zero}
csi_tadp_tx_0_CFG_0_HS_PIN_SWAP_REG = hc0010000 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_HS_PIN_SWAP_REG {pll_lock_fail,apkt_badmiss_pkt,ts_in_range,fifo_used_in_range,mn_steady,mn_change,mn_zero}
csi_tadp_tx_0_LOOPBACK_MODE_EN = hc0010000 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LOOPBACK_MODE_EN {pll_lock_fail,apkt_badmiss_pkt,ts_in_range,fifo_used_in_range,mn_steady,mn_change,mn_zero}
csi_tadp_tx_0_RESERVED_15_3 = hc0010000 3 13 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_3 {pll_lock_fail,apkt_badmiss_pkt,ts_in_range,fifo_used_in_range,mn_steady,mn_change,mn_zero}



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_CFG_1_reg Address hc0010004
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_CFG_1_reg = 3221291012 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_CFG_1_PREAMBLE_EN_REG = hc0010004 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_1_PREAMBLE_EN_REG PostDiv0 status
csi_tadp_tx_0_CFG_1_BACKWARDS_DESKEW_REG = hc0010004 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_1_BACKWARDS_DESKEW_REG PostDiv0 status
csi_tadp_tx_0_CFG_1_DESKEW_SUPPORTED_REG = hc0010004 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_1_DESKEW_SUPPORTED_REG PostDiv0 status
csi_tadp_tx_0_CFG_1_SOT_DETECTION_REG = hc0010004 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_1_SOT_DETECTION_REG PostDiv0 status
csi_tadp_tx_0_RESERVED_15_4 = hc0010004 4 12 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_4 PostDiv0 status



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_CFG_2_reg Address hc0010008
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_CFG_2_reg = 3221291016 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_CFG_2_SPARE = hc0010008 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_CFG_2_SPARE mn data (num of rclk in 2048 ns) update every clk pkt



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_LP_0_reg Address hc0010100
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_LP_0_reg = 3221291264 0 16 b00000000000000000100011000111100 RW
csi_tadp_tx_0_LP_0_TTAGET_REG = hc0010100 0 4 hc RW HEX
; Desc_csi_tadp_tx_0_LP_0_TTAGET_REG 
csi_tadp_tx_0_LP_0_TTASURE_REG = hc0010100 4 4 h3 RW HEX
; Desc_csi_tadp_tx_0_LP_0_TTASURE_REG 
csi_tadp_tx_0_LP_0_TTAGO_REG = hc0010100 8 4 h6 RW HEX
; Desc_csi_tadp_tx_0_LP_0_TTAGO_REG 
csi_tadp_tx_0_LP_0_ITMINRX_REG = hc0010100 12 4 h4 RW HEX
; Desc_csi_tadp_tx_0_LP_0_ITMINRX_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_LP_1_reg Address hc0010104
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_LP_1_reg = 3221291268 0 16 b00000000000000001000000000010000 RW
csi_tadp_tx_0_LP_1_ERRCONTENTION_THRES_REG = hc0010104 0 8 h10 RW HEX
; Desc_csi_tadp_tx_0_LP_1_ERRCONTENTION_THRES_REG 
csi_tadp_tx_0_LP_1_LPTX_PON_TIMER_REG = hc0010104 8 8 h80 RW HEX
; Desc_csi_tadp_tx_0_LP_1_LPTX_PON_TIMER_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_RX_0_reg Address hc0010200
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_RX_0_reg = 3221291520 0 16 b00000000000000000000100100011101 RW
csi_tadp_tx_0_HS_RX_0_TCLKSETTLE_REG = hc0010200 0 8 h1d RW HEX
; Desc_csi_tadp_tx_0_HS_RX_0_TCLKSETTLE_REG 
csi_tadp_tx_0_HS_RX_0_THSSETTLE_REG = hc0010200 8 8 h9 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_0_THSSETTLE_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_RX_1_reg Address hc0010204
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_RX_1_reg = 3221291524 0 16 b00000000000000000100000000010000 RW
csi_tadp_tx_0_HS_RX_1_FILTER_SIZE_DESKEW_REG = hc0010204 0 8 h10 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_1_FILTER_SIZE_DESKEW_REG 
csi_tadp_tx_0_HS_RX_1_FILTER_SIZE_SKEWCAL_REG = hc0010204 8 8 h40 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_1_FILTER_SIZE_SKEWCAL_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_RX_2_reg Address hc0010208
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_RX_2_reg = 3221291528 0 16 b00000000000000000110011010011011 RW
csi_tadp_tx_0_HS_RX_2_LATENCY_DESKEW_REG = hc0010208 0 3 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_2_LATENCY_DESKEW_REG 
csi_tadp_tx_0_HS_RX_2_LATENCY_SKEWCAL_REG = hc0010208 3 2 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_2_LATENCY_SKEWCAL_REG 
csi_tadp_tx_0_HS_RX_2_JUMP2STEPS_SKEWCAL_REG = hc0010208 5 2 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_2_JUMP2STEPS_SKEWCAL_REG 
csi_tadp_tx_0_HS_RX_2_POLARITY_SKEWCAL_REG = hc0010208 7 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_2_POLARITY_SKEWCAL_REG 
csi_tadp_tx_0_HS_RX_2_RECAL_SKEWCAL_REG = hc0010208 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_2_RECAL_SKEWCAL_REG 
csi_tadp_tx_0_HS_RX_2_WINDOW_SIZE_DESKEW_REG = hc0010208 9 4 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_2_WINDOW_SIZE_DESKEW_REG 
csi_tadp_tx_0_HS_RX_2_UPDATE_SETTINGS_DESKEW_REG = hc0010208 13 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_2_UPDATE_SETTINGS_DESKEW_REG 
csi_tadp_tx_0_HS_RX_2_UPDATE_SETTINGS_SKEWCAL_REG = hc0010208 14 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_2_UPDATE_SETTINGS_SKEWCAL_REG 
csi_tadp_tx_0_HS_RX_2_IGNORE_ALTERNCAL_REG = hc0010208 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_2_IGNORE_ALTERNCAL_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_RX_3_reg Address hc001020c
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_RX_3_reg = 3221291532 0 16 b00000000000000001001001000001010 RW
csi_tadp_tx_0_HS_RX_3_STEP_SIZE_DESKEW_REG = hc001020c 0 3 h2 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_3_STEP_SIZE_DESKEW_REG status of register err check
csi_tadp_tx_0_HS_RX_3_FJUMP_DESKEW_REG = hc001020c 3 6 h1 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_3_FJUMP_DESKEW_REG status of register err check
csi_tadp_tx_0_HS_RX_3_SHIFT_STEP_DESKEW_REG = hc001020c 9 3 h1 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_3_SHIFT_STEP_DESKEW_REG status of register err check
csi_tadp_tx_0_HS_RX_3_SHRINK_STEP_DESKEW_REG = hc001020c 12 3 h1 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_3_SHRINK_STEP_DESKEW_REG status of register err check
csi_tadp_tx_0_HS_RX_3_ROUNDUP_DESKEW_REG = hc001020c 15 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_3_ROUNDUP_DESKEW_REG status of register err check



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_RX_4_reg Address hc0010210
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_RX_4_reg = 3221291536 0 16 b00000000000000000000000010010110 RW
csi_tadp_tx_0_HS_RX_4_MAX_ITERATIONS_DESKEW_REG = hc0010210 0 16 h96 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_4_MAX_ITERATIONS_DESKEW_REG 0-status of fusa fail per mecahnisem:s1-fusa_crc_chk_ens2-fusa_ka_chk_ens3-fusa_fifo_used_range_chk_ens4-fusa_ts_range_chk_ens5-safety_reg_chk_en



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_RX_5_reg Address hc0010214
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_RX_5_reg = 3221291540 0 16 b00000000000000000000000100000000 RW
csi_tadp_tx_0_HS_RX_5_DDL_LEFT_INIT_REG = hc0010214 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_5_DDL_LEFT_INIT_REG 
csi_tadp_tx_0_HS_RX_5_DDL_MID_INIT_REG = hc0010214 8 8 h1 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_5_DDL_MID_INIT_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_RX_6_reg Address hc0010218
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_RX_6_reg = 3221291544 0 16 b00000000000000000010110100000010 RW
csi_tadp_tx_0_HS_RX_6_DDL_RIGHT_INIT_REG = hc0010218 0 8 h2 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_6_DDL_RIGHT_INIT_REG the minimum number of target clocks inside the time window - 24 lsb
csi_tadp_tx_0_HS_RX_6_MIN_EYE_OPENING_DESKEW_REG = hc0010218 8 8 h2d RW HEX
; Desc_csi_tadp_tx_0_HS_RX_6_MIN_EYE_OPENING_DESKEW_REG the minimum number of target clocks inside the time window - 24 lsb



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_RX_7_reg Address hc001021c
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_RX_7_reg = 3221291548 0 16 b00000000000000000011101100000110 RW
csi_tadp_tx_0_HS_RX_7_TCLKMISS_REG = hc001021c 0 8 h6 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_7_TCLKMISS_REG the minimum number of target clocks inside the time window - 8 msb
csi_tadp_tx_0_HS_RX_7_INVORDER_RX_REG = hc001021c 8 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_7_INVORDER_RX_REG the minimum number of target clocks inside the time window - 8 msb
csi_tadp_tx_0_HS_RX_7_INITIAL_CALIBRATION_REG = hc001021c 9 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_7_INITIAL_CALIBRATION_REG the minimum number of target clocks inside the time window - 8 msb
csi_tadp_tx_0_HS_RX_7_THSEXIT_MIN_REG = hc001021c 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_7_THSEXIT_MIN_REG the minimum number of target clocks inside the time window - 8 msb
csi_tadp_tx_0_HS_RX_7_DESKEW_CNF_REG = hc001021c 11 2 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_7_DESKEW_CNF_REG the minimum number of target clocks inside the time window - 8 msb
csi_tadp_tx_0_HS_RX_7_DESKEW_AUTO_ALGO_SEL_REG = hc001021c 13 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_7_DESKEW_AUTO_ALGO_SEL_REG the minimum number of target clocks inside the time window - 8 msb
csi_tadp_tx_0_HS_RX_7_DESKEW_REARM_INITIAL_REG = hc001021c 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_7_DESKEW_REARM_INITIAL_REG the minimum number of target clocks inside the time window - 8 msb
csi_tadp_tx_0_RESERVED_15_15 = hc001021c 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 the minimum number of target clocks inside the time window - 8 msb



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_RX_8_reg Address hc0010220
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_RX_8_reg = 3221291552 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_RX_8_FILTER_DITHERING_EN_REG = hc0010220 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_8_FILTER_DITHERING_EN_REG the maximum number of target clocks inside the time window - 24 lsb
csi_tadp_tx_0_HS_RX_8_START_DELAY_REG = hc0010220 1 8 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_8_START_DELAY_REG the maximum number of target clocks inside the time window - 24 lsb
csi_tadp_tx_0_RESERVED_15_9 = hc0010220 9 7 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_9 the maximum number of target clocks inside the time window - 24 lsb



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_0_reg Address hc0010400
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_0_reg = 3221292032 0 16 b00000000000000000000000000001001 RW
csi_tadp_tx_0_HS_TX_0_THSTRAIL_REG = hc0010400 0 16 h9 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_0_THSTRAIL_REG the maximum number of target clocks inside the time window - 8 msb



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_1_reg Address hc0010404
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_1_reg = 3221292036 0 16 b00000000000000000000000000100000 RW
csi_tadp_tx_0_HS_TX_1_THSZERO_REG = hc0010404 0 16 h20 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_1_THSZERO_REG the time window size in base_clk cycles - change only when enable=0smust be configured to something other than 0 - value of 0 not valid!!!



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_2_reg Address hc0010408
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_2_reg = 3221292040 0 16 b00000000000000000000000000000011 RW
csi_tadp_tx_0_HS_TX_2_TCLKPRE_REG = hc0010408 0 16 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_2_TCLKPRE_REG the time window size in base_clk cycles - change only when enable=0smust be configured to something other than 0 - value of 0 not valid!!!



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_3_reg Address hc001040c
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_3_reg = 3221292044 0 16 b00000000000000000000000000000110 RW
csi_tadp_tx_0_HS_TX_3_TLPTXOVERLAP_REG = hc001040c 0 8 h6 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_3_TLPTXOVERLAP_REG how many cycles the clk_monitor waits before starting opernationl mode after reciving sm_en
csi_tadp_tx_0_HS_TX_3_INVORDER_TX_REG = hc001040c 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_INVORDER_TX_REG how many cycles the clk_monitor waits before starting opernationl mode after reciving sm_en
csi_tadp_tx_0_HS_TX_3_STATE_OVR_EN_REG = hc001040c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_STATE_OVR_EN_REG how many cycles the clk_monitor waits before starting opernationl mode after reciving sm_en
csi_tadp_tx_0_HS_TX_3_STATE_OVR_REG = hc001040c 10 4 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_3_STATE_OVR_REG how many cycles the clk_monitor waits before starting opernationl mode after reciving sm_en
csi_tadp_tx_0_HS_TX_3_HSDIRECT_REG = hc001040c 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_HSDIRECT_REG how many cycles the clk_monitor waits before starting opernationl mode after reciving sm_en
csi_tadp_tx_0_HS_TX_3_PIN_SWAP_REG = hc001040c 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_PIN_SWAP_REG how many cycles the clk_monitor waits before starting opernationl mode after reciving sm_en



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_4_reg Address hc0010410
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_4_reg = 3221292048 0 16 b00000000000000000000000000000111 RW
csi_tadp_tx_0_HS_TX_4_TLPX_DCO_REG = hc0010410 0 16 h7 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_4_TLPX_DCO_REG the value of the target clock counter at the end of the last time window



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_5_reg Address hc0010414
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_5_reg = 3221292052 0 16 b00000000000000000000000000000111 RW
csi_tadp_tx_0_HS_TX_5_THSTRAIL_DCO_REG = hc0010414 0 16 h7 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_5_THSTRAIL_DCO_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_6_reg Address hc0010418
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_6_reg = 3221292056 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_HS_TX_6_TLP11END_DCO_REG = hc0010418 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_HS_TX_6_TLP11END_DCO_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_7_reg Address hc001041c
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_7_reg = 3221292060 0 16 b00000000000000000000000011111111 RW
csi_tadp_tx_0_HS_TX_7_ALTCALSEED_REG = hc001041c 0 9 hff RW HEX
; Desc_csi_tadp_tx_0_HS_TX_7_ALTCALSEED_REG 
csi_tadp_tx_0_HS_TX_7_STATE_DCO_OVR_EN_REG = hc001041c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_7_STATE_DCO_OVR_EN_REG 
csi_tadp_tx_0_HS_TX_7_STATE_DCO_OVR_VAL_REG = hc001041c 10 4 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_7_STATE_DCO_OVR_VAL_REG 
csi_tadp_tx_0_RESERVED_15_14 = hc001041c 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_8_reg Address hc0010420
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_8_reg = 3221292064 0 16 b00000000000000000000000000011100 RW
csi_tadp_tx_0_HS_TX_8_TCLKPOST_REG = hc0010420 0 16 h1c RW HEX
; Desc_csi_tadp_tx_0_HS_TX_8_TCLKPOST_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_9_reg Address hc0010424
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_9_reg = 3221292068 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_HS_TX_9_THSPRPR_DCO_REG = hc0010424 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_HS_TX_9_THSPRPR_DCO_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_10_reg Address hc0010428
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_10_reg = 3221292072 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_HS_TX_10_TLP11INIT_DCO_REG = hc0010428 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_HS_TX_10_TLP11INIT_DCO_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_11_reg Address hc001042c
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_11_reg = 3221292076 0 16 b00000000000000000000000000000111 RW
csi_tadp_tx_0_HS_TX_11_TPREAMBLE_REG = hc001042c 0 16 h7 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_11_TPREAMBLE_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_12_reg Address hc0010430
_csi_tadp_tx_0_CORE_DIG_DLANE_2_RW_HS_TX_12_reg = 3221292080 0 16 b00000000000000000000000000010100 RW
csi_tadp_tx_0_HS_TX_12_THSEXIT_DCO_REG = hc0010430 0 16 h14 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_12_THSEXIT_DCO_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_CFG_0_reg Address hc0010800
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_CFG_0_reg = 3221293056 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_CFG_0_LP_PIN_SWAP_REG = hc0010800 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_LP_PIN_SWAP_REG 
csi_tadp_tx_0_CFG_0_HS_PIN_SWAP_REG = hc0010800 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_HS_PIN_SWAP_REG 
csi_tadp_tx_0_LOOPBACK_MODE_EN = hc0010800 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LOOPBACK_MODE_EN 
csi_tadp_tx_0_RESERVED_15_3 = hc0010800 3 13 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_3 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_CFG_1_reg Address hc0010804
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_CFG_1_reg = 3221293060 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_CFG_1_PREAMBLE_EN_REG = hc0010804 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_1_PREAMBLE_EN_REG 
csi_tadp_tx_0_CFG_1_BACKWARDS_DESKEW_REG = hc0010804 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_1_BACKWARDS_DESKEW_REG 
csi_tadp_tx_0_CFG_1_DESKEW_SUPPORTED_REG = hc0010804 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_1_DESKEW_SUPPORTED_REG 
csi_tadp_tx_0_CFG_1_SOT_DETECTION_REG = hc0010804 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_1_SOT_DETECTION_REG 
csi_tadp_tx_0_RESERVED_15_4 = hc0010804 4 12 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_4 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_CFG_2_reg Address hc0010808
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_CFG_2_reg = 3221293064 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_CFG_2_SPARE = hc0010808 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_CFG_2_SPARE 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_LP_0_reg Address hc0010900
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_LP_0_reg = 3221293312 0 16 b00000000000000000100011000111100 RW
csi_tadp_tx_0_LP_0_TTAGET_REG = hc0010900 0 4 hc RW HEX
; Desc_csi_tadp_tx_0_LP_0_TTAGET_REG 
csi_tadp_tx_0_LP_0_TTASURE_REG = hc0010900 4 4 h3 RW HEX
; Desc_csi_tadp_tx_0_LP_0_TTASURE_REG 
csi_tadp_tx_0_LP_0_TTAGO_REG = hc0010900 8 4 h6 RW HEX
; Desc_csi_tadp_tx_0_LP_0_TTAGO_REG 
csi_tadp_tx_0_LP_0_ITMINRX_REG = hc0010900 12 4 h4 RW HEX
; Desc_csi_tadp_tx_0_LP_0_ITMINRX_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_LP_1_reg Address hc0010904
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_LP_1_reg = 3221293316 0 16 b00000000000000001000000000010000 RW
csi_tadp_tx_0_LP_1_ERRCONTENTION_THRES_REG = hc0010904 0 8 h10 RW HEX
; Desc_csi_tadp_tx_0_LP_1_ERRCONTENTION_THRES_REG 
csi_tadp_tx_0_LP_1_LPTX_PON_TIMER_REG = hc0010904 8 8 h80 RW HEX
; Desc_csi_tadp_tx_0_LP_1_LPTX_PON_TIMER_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_RX_0_reg Address hc0010a00
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_RX_0_reg = 3221293568 0 16 b00000000000000000000100100011101 RW
csi_tadp_tx_0_HS_RX_0_TCLKSETTLE_REG = hc0010a00 0 8 h1d RW HEX
; Desc_csi_tadp_tx_0_HS_RX_0_TCLKSETTLE_REG 
csi_tadp_tx_0_HS_RX_0_THSSETTLE_REG = hc0010a00 8 8 h9 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_0_THSSETTLE_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_RX_1_reg Address hc0010a04
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_RX_1_reg = 3221293572 0 16 b00000000000000000100000000010000 RW
csi_tadp_tx_0_HS_RX_1_FILTER_SIZE_DESKEW_REG = hc0010a04 0 8 h10 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_1_FILTER_SIZE_DESKEW_REG 0 - select GPIO s1 - select SWs2 - select PWMs3 - reserved
csi_tadp_tx_0_HS_RX_1_FILTER_SIZE_SKEWCAL_REG = hc0010a04 8 8 h40 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_1_FILTER_SIZE_SKEWCAL_REG 0 - select GPIO s1 - select SWs2 - select PWMs3 - reserved



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_RX_2_reg Address hc0010a08
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_RX_2_reg = 3221293576 0 16 b00000000000000000110011010011011 RW
csi_tadp_tx_0_HS_RX_2_LATENCY_DESKEW_REG = hc0010a08 0 3 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_2_LATENCY_DESKEW_REG 
csi_tadp_tx_0_HS_RX_2_LATENCY_SKEWCAL_REG = hc0010a08 3 2 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_2_LATENCY_SKEWCAL_REG 
csi_tadp_tx_0_HS_RX_2_JUMP2STEPS_SKEWCAL_REG = hc0010a08 5 2 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_2_JUMP2STEPS_SKEWCAL_REG 
csi_tadp_tx_0_HS_RX_2_POLARITY_SKEWCAL_REG = hc0010a08 7 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_2_POLARITY_SKEWCAL_REG 
csi_tadp_tx_0_HS_RX_2_RECAL_SKEWCAL_REG = hc0010a08 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_2_RECAL_SKEWCAL_REG 
csi_tadp_tx_0_HS_RX_2_WINDOW_SIZE_DESKEW_REG = hc0010a08 9 4 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_2_WINDOW_SIZE_DESKEW_REG 
csi_tadp_tx_0_HS_RX_2_UPDATE_SETTINGS_DESKEW_REG = hc0010a08 13 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_2_UPDATE_SETTINGS_DESKEW_REG 
csi_tadp_tx_0_HS_RX_2_UPDATE_SETTINGS_SKEWCAL_REG = hc0010a08 14 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_2_UPDATE_SETTINGS_SKEWCAL_REG 
csi_tadp_tx_0_HS_RX_2_IGNORE_ALTERNCAL_REG = hc0010a08 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_2_IGNORE_ALTERNCAL_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_RX_3_reg Address hc0010a0c
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_RX_3_reg = 3221293580 0 16 b00000000000000001001001000001010 RW
csi_tadp_tx_0_HS_RX_3_STEP_SIZE_DESKEW_REG = hc0010a0c 0 3 h2 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_3_STEP_SIZE_DESKEW_REG 
csi_tadp_tx_0_HS_RX_3_FJUMP_DESKEW_REG = hc0010a0c 3 6 h1 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_3_FJUMP_DESKEW_REG 
csi_tadp_tx_0_HS_RX_3_SHIFT_STEP_DESKEW_REG = hc0010a0c 9 3 h1 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_3_SHIFT_STEP_DESKEW_REG 
csi_tadp_tx_0_HS_RX_3_SHRINK_STEP_DESKEW_REG = hc0010a0c 12 3 h1 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_3_SHRINK_STEP_DESKEW_REG 
csi_tadp_tx_0_HS_RX_3_ROUNDUP_DESKEW_REG = hc0010a0c 15 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_3_ROUNDUP_DESKEW_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_RX_4_reg Address hc0010a10
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_RX_4_reg = 3221293584 0 16 b00000000000000000000000010010110 RW
csi_tadp_tx_0_HS_RX_4_MAX_ITERATIONS_DESKEW_REG = hc0010a10 0 16 h96 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_4_MAX_ITERATIONS_DESKEW_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_RX_5_reg Address hc0010a14
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_RX_5_reg = 3221293588 0 16 b00000000000000000000000100000000 RW
csi_tadp_tx_0_HS_RX_5_DDL_LEFT_INIT_REG = hc0010a14 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_5_DDL_LEFT_INIT_REG 0 - select GPIO s1 - select SWs2 - select PWMs3 - reserved
csi_tadp_tx_0_HS_RX_5_DDL_MID_INIT_REG = hc0010a14 8 8 h1 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_5_DDL_MID_INIT_REG 0 - select GPIO s1 - select SWs2 - select PWMs3 - reserved



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_RX_6_reg Address hc0010a18
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_RX_6_reg = 3221293592 0 16 b00000000000000000010110100000010 RW
csi_tadp_tx_0_HS_RX_6_DDL_RIGHT_INIT_REG = hc0010a18 0 8 h2 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_6_DDL_RIGHT_INIT_REG 
csi_tadp_tx_0_HS_RX_6_MIN_EYE_OPENING_DESKEW_REG = hc0010a18 8 8 h2d RW HEX
; Desc_csi_tadp_tx_0_HS_RX_6_MIN_EYE_OPENING_DESKEW_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_RX_7_reg Address hc0010a1c
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_RX_7_reg = 3221293596 0 16 b00000000000000000011101100000110 RW
csi_tadp_tx_0_HS_RX_7_TCLKMISS_REG = hc0010a1c 0 8 h6 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_7_TCLKMISS_REG 
csi_tadp_tx_0_HS_RX_7_INVORDER_RX_REG = hc0010a1c 8 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_7_INVORDER_RX_REG 
csi_tadp_tx_0_HS_RX_7_INITIAL_CALIBRATION_REG = hc0010a1c 9 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_7_INITIAL_CALIBRATION_REG 
csi_tadp_tx_0_HS_RX_7_THSEXIT_MIN_REG = hc0010a1c 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_7_THSEXIT_MIN_REG 
csi_tadp_tx_0_HS_RX_7_DESKEW_CNF_REG = hc0010a1c 11 2 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_7_DESKEW_CNF_REG 
csi_tadp_tx_0_HS_RX_7_DESKEW_AUTO_ALGO_SEL_REG = hc0010a1c 13 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_7_DESKEW_AUTO_ALGO_SEL_REG 
csi_tadp_tx_0_HS_RX_7_DESKEW_REARM_INITIAL_REG = hc0010a1c 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_7_DESKEW_REARM_INITIAL_REG 
csi_tadp_tx_0_RESERVED_15_15 = hc0010a1c 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_RX_8_reg Address hc0010a20
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_RX_8_reg = 3221293600 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_RX_8_FILTER_DITHERING_EN_REG = hc0010a20 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_8_FILTER_DITHERING_EN_REG 
csi_tadp_tx_0_HS_RX_8_START_DELAY_REG = hc0010a20 1 8 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_8_START_DELAY_REG 
csi_tadp_tx_0_RESERVED_15_9 = hc0010a20 9 7 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_9 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_0_reg Address hc0010c00
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_0_reg = 3221294080 0 16 b00000000000000000000000000001001 RW
csi_tadp_tx_0_HS_TX_0_THSTRAIL_REG = hc0010c00 0 16 h9 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_0_THSTRAIL_REG 0 - select GPIO s1 - select SWs2 - select PWMs3 - reserved



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_1_reg Address hc0010c04
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_1_reg = 3221294084 0 16 b00000000000000000000000000100000 RW
csi_tadp_tx_0_HS_TX_1_THSZERO_REG = hc0010c04 0 16 h20 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_1_THSZERO_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_2_reg Address hc0010c08
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_2_reg = 3221294088 0 16 b00000000000000000000000000000011 RW
csi_tadp_tx_0_HS_TX_2_TCLKPRE_REG = hc0010c08 0 16 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_2_TCLKPRE_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_3_reg Address hc0010c0c
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_3_reg = 3221294092 0 16 b00000000000000000000000000000110 RW
csi_tadp_tx_0_HS_TX_3_TLPTXOVERLAP_REG = hc0010c0c 0 8 h6 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_3_TLPTXOVERLAP_REG 
csi_tadp_tx_0_HS_TX_3_INVORDER_TX_REG = hc0010c0c 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_INVORDER_TX_REG 
csi_tadp_tx_0_HS_TX_3_STATE_OVR_EN_REG = hc0010c0c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_STATE_OVR_EN_REG 
csi_tadp_tx_0_HS_TX_3_STATE_OVR_REG = hc0010c0c 10 4 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_3_STATE_OVR_REG 
csi_tadp_tx_0_HS_TX_3_HSDIRECT_REG = hc0010c0c 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_HSDIRECT_REG 
csi_tadp_tx_0_HS_TX_3_PIN_SWAP_REG = hc0010c0c 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_PIN_SWAP_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_4_reg Address hc0010c10
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_4_reg = 3221294096 0 16 b00000000000000000000000000000111 RW
csi_tadp_tx_0_HS_TX_4_TLPX_DCO_REG = hc0010c10 0 16 h7 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_4_TLPX_DCO_REG 0 - select GPIO s1 - select SWs2 - select PWMs3 - reserved



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_5_reg Address hc0010c14
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_5_reg = 3221294100 0 16 b00000000000000000000000000000111 RW
csi_tadp_tx_0_HS_TX_5_THSTRAIL_DCO_REG = hc0010c14 0 16 h7 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_5_THSTRAIL_DCO_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_6_reg Address hc0010c18
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_6_reg = 3221294104 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_HS_TX_6_TLP11END_DCO_REG = hc0010c18 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_HS_TX_6_TLP11END_DCO_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_7_reg Address hc0010c1c
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_7_reg = 3221294108 0 16 b00000000000000000000000011111111 RW
csi_tadp_tx_0_HS_TX_7_ALTCALSEED_REG = hc0010c1c 0 9 hff RW HEX
; Desc_csi_tadp_tx_0_HS_TX_7_ALTCALSEED_REG 
csi_tadp_tx_0_HS_TX_7_STATE_DCO_OVR_EN_REG = hc0010c1c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_7_STATE_DCO_OVR_EN_REG 
csi_tadp_tx_0_HS_TX_7_STATE_DCO_OVR_VAL_REG = hc0010c1c 10 4 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_7_STATE_DCO_OVR_VAL_REG 
csi_tadp_tx_0_RESERVED_15_14 = hc0010c1c 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_8_reg Address hc0010c20
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_8_reg = 3221294112 0 16 b00000000000000000000000000011100 RW
csi_tadp_tx_0_HS_TX_8_TCLKPOST_REG = hc0010c20 0 16 h1c RW HEX
; Desc_csi_tadp_tx_0_HS_TX_8_TCLKPOST_REG 0 - select GPIO s1 - select SWs2 - select PWMs3 - reserved



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_9_reg Address hc0010c24
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_9_reg = 3221294116 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_HS_TX_9_THSPRPR_DCO_REG = hc0010c24 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_HS_TX_9_THSPRPR_DCO_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_10_reg Address hc0010c28
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_10_reg = 3221294120 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_HS_TX_10_TLP11INIT_DCO_REG = hc0010c28 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_HS_TX_10_TLP11INIT_DCO_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_11_reg Address hc0010c2c
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_11_reg = 3221294124 0 16 b00000000000000000000000000000111 RW
csi_tadp_tx_0_HS_TX_11_TPREAMBLE_REG = hc0010c2c 0 16 h7 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_11_TPREAMBLE_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_12_reg Address hc0010c30
_csi_tadp_tx_0_CORE_DIG_DLANE_3_RW_HS_TX_12_reg = 3221294128 0 16 b00000000000000000000000000010100 RW
csi_tadp_tx_0_HS_TX_12_THSEXIT_DCO_REG = hc0010c30 0 16 h14 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_12_THSEXIT_DCO_REG 0 - select GPIO s1 - select SWs2 - select PWMs3 - reserved



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_CFG_0_reg Address hc0011000
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_CFG_0_reg = 3221295104 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_CFG_0_LP_PIN_SWAP_REG = hc0011000 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_LP_PIN_SWAP_REG 
csi_tadp_tx_0_CFG_0_HS_PIN_SWAP_REG = hc0011000 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_HS_PIN_SWAP_REG 
csi_tadp_tx_0_LOOPBACK_MODE_EN = hc0011000 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LOOPBACK_MODE_EN 
csi_tadp_tx_0_RESERVED_15_3 = hc0011000 3 13 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_3 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_CFG_1_reg Address hc0011004
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_CFG_1_reg = 3221295108 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_CFG_1_PREAMBLE_EN_REG = hc0011004 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_1_PREAMBLE_EN_REG 
csi_tadp_tx_0_CFG_1_BACKWARDS_DESKEW_REG = hc0011004 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_1_BACKWARDS_DESKEW_REG 
csi_tadp_tx_0_CFG_1_DESKEW_SUPPORTED_REG = hc0011004 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_1_DESKEW_SUPPORTED_REG 
csi_tadp_tx_0_CFG_1_SOT_DETECTION_REG = hc0011004 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_1_SOT_DETECTION_REG 
csi_tadp_tx_0_RESERVED_15_4 = hc0011004 4 12 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_4 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_CFG_2_reg Address hc0011008
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_CFG_2_reg = 3221295112 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_CFG_2_SPARE = hc0011008 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_CFG_2_SPARE 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_LP_0_reg Address hc0011100
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_LP_0_reg = 3221295360 0 16 b00000000000000000100011000111100 RW
csi_tadp_tx_0_LP_0_TTAGET_REG = hc0011100 0 4 hc RW HEX
; Desc_csi_tadp_tx_0_LP_0_TTAGET_REG 0 - select GPIO s1 - select SWs2 - select PWMs3 - reserved
csi_tadp_tx_0_LP_0_TTASURE_REG = hc0011100 4 4 h3 RW HEX
; Desc_csi_tadp_tx_0_LP_0_TTASURE_REG 0 - select GPIO s1 - select SWs2 - select PWMs3 - reserved
csi_tadp_tx_0_LP_0_TTAGO_REG = hc0011100 8 4 h6 RW HEX
; Desc_csi_tadp_tx_0_LP_0_TTAGO_REG 0 - select GPIO s1 - select SWs2 - select PWMs3 - reserved
csi_tadp_tx_0_LP_0_ITMINRX_REG = hc0011100 12 4 h4 RW HEX
; Desc_csi_tadp_tx_0_LP_0_ITMINRX_REG 0 - select GPIO s1 - select SWs2 - select PWMs3 - reserved



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_LP_1_reg Address hc0011104
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_LP_1_reg = 3221295364 0 16 b00000000000000001000000000010000 RW
csi_tadp_tx_0_LP_1_ERRCONTENTION_THRES_REG = hc0011104 0 8 h10 RW HEX
; Desc_csi_tadp_tx_0_LP_1_ERRCONTENTION_THRES_REG 
csi_tadp_tx_0_LP_1_LPTX_PON_TIMER_REG = hc0011104 8 8 h80 RW HEX
; Desc_csi_tadp_tx_0_LP_1_LPTX_PON_TIMER_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_RX_0_reg Address hc0011200
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_RX_0_reg = 3221295616 0 16 b00000000000000000000100100011101 RW
csi_tadp_tx_0_HS_RX_0_TCLKSETTLE_REG = hc0011200 0 8 h1d RW HEX
; Desc_csi_tadp_tx_0_HS_RX_0_TCLKSETTLE_REG 
csi_tadp_tx_0_HS_RX_0_THSSETTLE_REG = hc0011200 8 8 h9 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_0_THSSETTLE_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_RX_1_reg Address hc0011204
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_RX_1_reg = 3221295620 0 16 b00000000000000000100000000010000 RW
csi_tadp_tx_0_HS_RX_1_FILTER_SIZE_DESKEW_REG = hc0011204 0 8 h10 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_1_FILTER_SIZE_DESKEW_REG 
csi_tadp_tx_0_HS_RX_1_FILTER_SIZE_SKEWCAL_REG = hc0011204 8 8 h40 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_1_FILTER_SIZE_SKEWCAL_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_RX_2_reg Address hc0011208
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_RX_2_reg = 3221295624 0 16 b00000000000000000110011010011011 RW
csi_tadp_tx_0_HS_RX_2_LATENCY_DESKEW_REG = hc0011208 0 3 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_2_LATENCY_DESKEW_REG 0 - select GPIO s1 - select SWs2 - select PWMs3 - reserved
csi_tadp_tx_0_HS_RX_2_LATENCY_SKEWCAL_REG = hc0011208 3 2 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_2_LATENCY_SKEWCAL_REG 0 - select GPIO s1 - select SWs2 - select PWMs3 - reserved
csi_tadp_tx_0_HS_RX_2_JUMP2STEPS_SKEWCAL_REG = hc0011208 5 2 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_2_JUMP2STEPS_SKEWCAL_REG 0 - select GPIO s1 - select SWs2 - select PWMs3 - reserved
csi_tadp_tx_0_HS_RX_2_POLARITY_SKEWCAL_REG = hc0011208 7 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_2_POLARITY_SKEWCAL_REG 0 - select GPIO s1 - select SWs2 - select PWMs3 - reserved
csi_tadp_tx_0_HS_RX_2_RECAL_SKEWCAL_REG = hc0011208 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_2_RECAL_SKEWCAL_REG 0 - select GPIO s1 - select SWs2 - select PWMs3 - reserved
csi_tadp_tx_0_HS_RX_2_WINDOW_SIZE_DESKEW_REG = hc0011208 9 4 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_2_WINDOW_SIZE_DESKEW_REG 0 - select GPIO s1 - select SWs2 - select PWMs3 - reserved
csi_tadp_tx_0_HS_RX_2_UPDATE_SETTINGS_DESKEW_REG = hc0011208 13 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_2_UPDATE_SETTINGS_DESKEW_REG 0 - select GPIO s1 - select SWs2 - select PWMs3 - reserved
csi_tadp_tx_0_HS_RX_2_UPDATE_SETTINGS_SKEWCAL_REG = hc0011208 14 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_2_UPDATE_SETTINGS_SKEWCAL_REG 0 - select GPIO s1 - select SWs2 - select PWMs3 - reserved
csi_tadp_tx_0_HS_RX_2_IGNORE_ALTERNCAL_REG = hc0011208 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_2_IGNORE_ALTERNCAL_REG 0 - select GPIO s1 - select SWs2 - select PWMs3 - reserved



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_RX_3_reg Address hc001120c
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_RX_3_reg = 3221295628 0 16 b00000000000000001001001000001010 RW
csi_tadp_tx_0_HS_RX_3_STEP_SIZE_DESKEW_REG = hc001120c 0 3 h2 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_3_STEP_SIZE_DESKEW_REG 
csi_tadp_tx_0_HS_RX_3_FJUMP_DESKEW_REG = hc001120c 3 6 h1 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_3_FJUMP_DESKEW_REG 
csi_tadp_tx_0_HS_RX_3_SHIFT_STEP_DESKEW_REG = hc001120c 9 3 h1 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_3_SHIFT_STEP_DESKEW_REG 
csi_tadp_tx_0_HS_RX_3_SHRINK_STEP_DESKEW_REG = hc001120c 12 3 h1 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_3_SHRINK_STEP_DESKEW_REG 
csi_tadp_tx_0_HS_RX_3_ROUNDUP_DESKEW_REG = hc001120c 15 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_3_ROUNDUP_DESKEW_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_RX_4_reg Address hc0011210
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_RX_4_reg = 3221295632 0 16 b00000000000000000000000010010110 RW
csi_tadp_tx_0_HS_RX_4_MAX_ITERATIONS_DESKEW_REG = hc0011210 0 16 h96 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_4_MAX_ITERATIONS_DESKEW_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_RX_5_reg Address hc0011214
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_RX_5_reg = 3221295636 0 16 b00000000000000000000000100000000 RW
csi_tadp_tx_0_HS_RX_5_DDL_LEFT_INIT_REG = hc0011214 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_5_DDL_LEFT_INIT_REG 
csi_tadp_tx_0_HS_RX_5_DDL_MID_INIT_REG = hc0011214 8 8 h1 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_5_DDL_MID_INIT_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_RX_6_reg Address hc0011218
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_RX_6_reg = 3221295640 0 16 b00000000000000000010110100000010 RW
csi_tadp_tx_0_HS_RX_6_DDL_RIGHT_INIT_REG = hc0011218 0 8 h2 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_6_DDL_RIGHT_INIT_REG 
csi_tadp_tx_0_HS_RX_6_MIN_EYE_OPENING_DESKEW_REG = hc0011218 8 8 h2d RW HEX
; Desc_csi_tadp_tx_0_HS_RX_6_MIN_EYE_OPENING_DESKEW_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_RX_7_reg Address hc001121c
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_RX_7_reg = 3221295644 0 16 b00000000000000000011101100000110 RW
csi_tadp_tx_0_HS_RX_7_TCLKMISS_REG = hc001121c 0 8 h6 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_7_TCLKMISS_REG 
csi_tadp_tx_0_HS_RX_7_INVORDER_RX_REG = hc001121c 8 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_7_INVORDER_RX_REG 
csi_tadp_tx_0_HS_RX_7_INITIAL_CALIBRATION_REG = hc001121c 9 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_7_INITIAL_CALIBRATION_REG 
csi_tadp_tx_0_HS_RX_7_THSEXIT_MIN_REG = hc001121c 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_7_THSEXIT_MIN_REG 
csi_tadp_tx_0_HS_RX_7_DESKEW_CNF_REG = hc001121c 11 2 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_7_DESKEW_CNF_REG 
csi_tadp_tx_0_HS_RX_7_DESKEW_AUTO_ALGO_SEL_REG = hc001121c 13 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_7_DESKEW_AUTO_ALGO_SEL_REG 
csi_tadp_tx_0_HS_RX_7_DESKEW_REARM_INITIAL_REG = hc001121c 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_7_DESKEW_REARM_INITIAL_REG 
csi_tadp_tx_0_RESERVED_15_15 = hc001121c 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_RX_8_reg Address hc0011220
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_RX_8_reg = 3221295648 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_RX_8_FILTER_DITHERING_EN_REG = hc0011220 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_8_FILTER_DITHERING_EN_REG 
csi_tadp_tx_0_HS_RX_8_START_DELAY_REG = hc0011220 1 8 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_8_START_DELAY_REG 
csi_tadp_tx_0_RESERVED_15_9 = hc0011220 9 7 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_9 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_0_reg Address hc0011400
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_0_reg = 3221296128 0 16 b00000000000000000000000000001001 RW
csi_tadp_tx_0_HS_TX_0_THSTRAIL_REG = hc0011400 0 16 h9 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_0_THSTRAIL_REG number of cycle where pwm is high



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_1_reg Address hc0011404
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_1_reg = 3221296132 0 16 b00000000000000000000000000100000 RW
csi_tadp_tx_0_HS_TX_1_THSZERO_REG = hc0011404 0 16 h20 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_1_THSZERO_REG number of cycle where pwm is high



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_2_reg Address hc0011408
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_2_reg = 3221296136 0 16 b00000000000000000000000000000011 RW
csi_tadp_tx_0_HS_TX_2_TCLKPRE_REG = hc0011408 0 16 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_2_TCLKPRE_REG pwm mode:s00 - free runnings01 - gateds10 - one shot



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_3_reg Address hc001140c
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_3_reg = 3221296140 0 16 b00000000000000000000000000000110 RW
csi_tadp_tx_0_HS_TX_3_TLPTXOVERLAP_REG = hc001140c 0 8 h6 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_3_TLPTXOVERLAP_REG the pwm stm - for debug
csi_tadp_tx_0_HS_TX_3_INVORDER_TX_REG = hc001140c 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_INVORDER_TX_REG the pwm stm - for debug
csi_tadp_tx_0_HS_TX_3_STATE_OVR_EN_REG = hc001140c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_STATE_OVR_EN_REG the pwm stm - for debug
csi_tadp_tx_0_HS_TX_3_STATE_OVR_REG = hc001140c 10 4 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_3_STATE_OVR_REG the pwm stm - for debug
csi_tadp_tx_0_HS_TX_3_HSDIRECT_REG = hc001140c 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_HSDIRECT_REG the pwm stm - for debug
csi_tadp_tx_0_HS_TX_3_PIN_SWAP_REG = hc001140c 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_PIN_SWAP_REG the pwm stm - for debug



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_4_reg Address hc0011410
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_4_reg = 3221296144 0 16 b00000000000000000000000000000111 RW
csi_tadp_tx_0_HS_TX_4_TLPX_DCO_REG = hc0011410 0 16 h7 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_4_TLPX_DCO_REG number of cycle where pwm is high



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_5_reg Address hc0011414
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_5_reg = 3221296148 0 16 b00000000000000000000000000000111 RW
csi_tadp_tx_0_HS_TX_5_THSTRAIL_DCO_REG = hc0011414 0 16 h7 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_5_THSTRAIL_DCO_REG number of cycle where pwm is high



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_6_reg Address hc0011418
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_6_reg = 3221296152 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_HS_TX_6_TLP11END_DCO_REG = hc0011418 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_HS_TX_6_TLP11END_DCO_REG pwm mode:s00 - free runnings01 - gateds10 - one shot



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_7_reg Address hc001141c
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_7_reg = 3221296156 0 16 b00000000000000000000000011111111 RW
csi_tadp_tx_0_HS_TX_7_ALTCALSEED_REG = hc001141c 0 9 hff RW HEX
; Desc_csi_tadp_tx_0_HS_TX_7_ALTCALSEED_REG the pwm stm - for debug
csi_tadp_tx_0_HS_TX_7_STATE_DCO_OVR_EN_REG = hc001141c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_7_STATE_DCO_OVR_EN_REG the pwm stm - for debug
csi_tadp_tx_0_HS_TX_7_STATE_DCO_OVR_VAL_REG = hc001141c 10 4 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_7_STATE_DCO_OVR_VAL_REG the pwm stm - for debug
csi_tadp_tx_0_RESERVED_15_14 = hc001141c 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_14 the pwm stm - for debug



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_8_reg Address hc0011420
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_8_reg = 3221296160 0 16 b00000000000000000000000000011100 RW
csi_tadp_tx_0_HS_TX_8_TCLKPOST_REG = hc0011420 0 16 h1c RW HEX
; Desc_csi_tadp_tx_0_HS_TX_8_TCLKPOST_REG select pwm0 ctrl source between the data inputs



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_9_reg Address hc0011424
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_9_reg = 3221296164 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_HS_TX_9_THSPRPR_DCO_REG = hc0011424 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_HS_TX_9_THSPRPR_DCO_REG select pwm1 ctrl source between the data inputs



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_10_reg Address hc0011428
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_10_reg = 3221296168 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_HS_TX_10_TLP11INIT_DCO_REG = hc0011428 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_HS_TX_10_TLP11INIT_DCO_REG msio data out 



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_11_reg Address hc001142c
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_11_reg = 3221296172 0 16 b00000000000000000000000000000111 RW
csi_tadp_tx_0_HS_TX_11_TPREAMBLE_REG = hc001142c 0 16 h7 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_11_TPREAMBLE_REG select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2



; REGISTER csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_12_reg Address hc0011430
_csi_tadp_tx_0_CORE_DIG_DLANE_CLK_RW_HS_TX_12_reg = 3221296176 0 16 b00000000000000000000000000010100 RW
csi_tadp_tx_0_HS_TX_12_THSEXIT_DCO_REG = hc0011430 0 16 h14 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_12_THSEXIT_DCO_REG select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2



; REGISTER csi_tadp_tx_0_PPI_RW_CPHY_TRIO0_LBERT_0_reg Address hc0013000
_csi_tadp_tx_0_PPI_RW_CPHY_TRIO0_LBERT_0_reg = 3221303296 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LBERT_PM_MODE = hc0013000 0 4 h0 RW HEX
; Desc_csi_tadp_tx_0_LBERT_PM_MODE select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_LBERT_PM_START_OVR_VAL = hc0013000 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_START_OVR_VAL select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_LBERT_PM_START_OVR_EN = hc0013000 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_START_OVR_EN select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_VAL = hc0013000 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_VAL select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_EN = hc0013000 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_EN select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_LBERT_PG_MODE = hc0013000 8 4 h0 RW HEX
; Desc_csi_tadp_tx_0_LBERT_PG_MODE select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_LBERT_PG_START_OVR_VAL = hc0013000 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PG_START_OVR_VAL select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_LBERT_PG_START_OVR_EN = hc0013000 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PG_START_OVR_EN select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_LBERT_PG_ERROR_INJECTION = hc0013000 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PG_ERROR_INJECTION select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_RESERVED_15_15 = hc0013000 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2



; REGISTER csi_tadp_tx_0_PPI_RW_CPHY_TRIO0_LBERT_1_reg Address hc0013004
_csi_tadp_tx_0_PPI_RW_CPHY_TRIO0_LBERT_1_reg = 3221303300 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LBERT_PG_USER_PATTERN = hc0013004 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_LBERT_PG_USER_PATTERN select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_RESERVED_15_8 = hc0013004 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2



; REGISTER csi_tadp_tx_0_PPI_RW_CPHY_TRIO0_SPARE_reg Address hc0013010
_csi_tadp_tx_0_PPI_RW_CPHY_TRIO0_SPARE_reg = 3221303312 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_CPHY_TRIO0_SPARE = hc0013010 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_CPHY_TRIO0_SPARE select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2



; REGISTER csi_tadp_tx_0_PPI_RW_CPHY_TRIO1_LBERT_0_reg Address hc0013800
_csi_tadp_tx_0_PPI_RW_CPHY_TRIO1_LBERT_0_reg = 3221305344 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LBERT_PM_MODE = hc0013800 0 4 h0 RW HEX
; Desc_csi_tadp_tx_0_LBERT_PM_MODE select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_LBERT_PM_START_OVR_VAL = hc0013800 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_START_OVR_VAL select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_LBERT_PM_START_OVR_EN = hc0013800 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_START_OVR_EN select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_VAL = hc0013800 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_VAL select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_EN = hc0013800 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_EN select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_LBERT_PG_MODE = hc0013800 8 4 h0 RW HEX
; Desc_csi_tadp_tx_0_LBERT_PG_MODE select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_LBERT_PG_START_OVR_VAL = hc0013800 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PG_START_OVR_VAL select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_LBERT_PG_START_OVR_EN = hc0013800 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PG_START_OVR_EN select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_LBERT_PG_ERROR_INJECTION = hc0013800 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PG_ERROR_INJECTION select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_RESERVED_15_15 = hc0013800 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2



; REGISTER csi_tadp_tx_0_PPI_RW_CPHY_TRIO1_LBERT_1_reg Address hc0013804
_csi_tadp_tx_0_PPI_RW_CPHY_TRIO1_LBERT_1_reg = 3221305348 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LBERT_PG_USER_PATTERN = hc0013804 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_LBERT_PG_USER_PATTERN select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_RESERVED_15_8 = hc0013804 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2



; REGISTER csi_tadp_tx_0_PPI_RW_CPHY_TRIO1_SPARE_reg Address hc0013810
_csi_tadp_tx_0_PPI_RW_CPHY_TRIO1_SPARE_reg = 3221305360 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_CPHY_TRIO1_SPARE = hc0013810 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_CPHY_TRIO1_SPARE select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2



; REGISTER csi_tadp_tx_0_PPI_RW_CPHY_TRIO2_LBERT_0_reg Address hc0014000
_csi_tadp_tx_0_PPI_RW_CPHY_TRIO2_LBERT_0_reg = 3221307392 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LBERT_PM_MODE = hc0014000 0 4 h0 RW HEX
; Desc_csi_tadp_tx_0_LBERT_PM_MODE select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_LBERT_PM_START_OVR_VAL = hc0014000 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_START_OVR_VAL select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_LBERT_PM_START_OVR_EN = hc0014000 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_START_OVR_EN select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_VAL = hc0014000 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_VAL select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_EN = hc0014000 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PM_SAMPLE_COUNTER_OVR_EN select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_LBERT_PG_MODE = hc0014000 8 4 h0 RW HEX
; Desc_csi_tadp_tx_0_LBERT_PG_MODE select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_LBERT_PG_START_OVR_VAL = hc0014000 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PG_START_OVR_VAL select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_LBERT_PG_START_OVR_EN = hc0014000 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PG_START_OVR_EN select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_LBERT_PG_ERROR_INJECTION = hc0014000 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LBERT_PG_ERROR_INJECTION select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_RESERVED_15_15 = hc0014000 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2



; REGISTER csi_tadp_tx_0_PPI_RW_CPHY_TRIO2_LBERT_1_reg Address hc0014004
_csi_tadp_tx_0_PPI_RW_CPHY_TRIO2_LBERT_1_reg = 3221307396 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_LBERT_PG_USER_PATTERN = hc0014004 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_LBERT_PG_USER_PATTERN select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_RESERVED_15_8 = hc0014004 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2



; REGISTER csi_tadp_tx_0_PPI_RW_CPHY_TRIO2_SPARE_reg Address hc0014010
_csi_tadp_tx_0_PPI_RW_CPHY_TRIO2_SPARE_reg = 3221307408 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_CPHY_TRIO2_SPARE = hc0014010 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_CPHY_TRIO2_SPARE select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_CFG_0_reg Address hc0017000
_csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_CFG_0_reg = 3221319680 0 16 b00000000000000000000000011110000 RW
csi_tadp_tx_0_CFG_0_LP_PIN_SWAP_REG = hc0017000 0 3 h0 RW HEX
; Desc_csi_tadp_tx_0_CFG_0_LP_PIN_SWAP_REG select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_CFG_0_HS_PIN_SWAP_REG = hc0017000 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_HS_PIN_SWAP_REG select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_CFG_0_HS_ORDER_SWAP_REG = hc0017000 4 1 h1 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_HS_ORDER_SWAP_REG select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_CFG_0_HS_DECODE_SWAP_REG = hc0017000 5 1 h1 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_HS_DECODE_SWAP_REG select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_CFG_0_HS_ALIGNER_SWAP_REG = hc0017000 6 1 h1 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_HS_ALIGNER_SWAP_REG select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_CFG_0_HS_SYNC_DET_SWAP_REG = hc0017000 7 1 h1 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_HS_SYNC_DET_SWAP_REG select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_CFG_0_ALP_ENABLE_REG = hc0017000 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_ALP_ENABLE_REG select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_CFG_0_SWAP_ENCODE_REG = hc0017000 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_SWAP_ENCODE_REG select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_LOOPBACK_MODE_EN = hc0017000 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LOOPBACK_MODE_EN select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2
csi_tadp_tx_0_RESERVED_15_11 = hc0017000 11 5 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_11 select between {pwm_ctrl1, pwm_ctrl0, msio_data_tx}s0... DATA_OUT-1 : select msio_data_tx[ii] sDATA_OUT : select output pwm1sDATA_Out+1 : select output pwm2



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_CFG_2_reg Address hc0017008
_csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_CFG_2_reg = 3221319688 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_CFG_2_SPARE = hc0017008 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_CFG_2_SPARE the divider to the block. The clock to the block will be system_clock/(master_div_ratio +1).sNotice that the block supports up to 6 inputs and has an option to add internal clock division of up to 8 to specific inputs. sin simulation it is configured:s(mode_500 ? 500M : 125M)/(max_input_BW)/(over_sampling) -1sfor example to support 2 uart inputs: 115200 BPS and 57600 BPS with over_sampling of 10 in mode 250 the master_div_ratio should be 107.s



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_LP_0_reg Address hc0017100
_csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_LP_0_reg = 3221319936 0 16 b00000000000000000100011000111100 RW
csi_tadp_tx_0_LP_0_TTAGET_REG = hc0017100 0 4 hc RW HEX
; Desc_csi_tadp_tx_0_LP_0_TTAGET_REG session ID for MSIO generated packet
csi_tadp_tx_0_LP_0_TTASURE_REG = hc0017100 4 4 h3 RW HEX
; Desc_csi_tadp_tx_0_LP_0_TTASURE_REG session ID for MSIO generated packet
csi_tadp_tx_0_LP_0_TTAGO_REG = hc0017100 8 4 h6 RW HEX
; Desc_csi_tadp_tx_0_LP_0_TTAGO_REG session ID for MSIO generated packet
csi_tadp_tx_0_LP_0_ITMINRX_REG = hc0017100 12 4 h4 RW HEX
; Desc_csi_tadp_tx_0_LP_0_ITMINRX_REG session ID for MSIO generated packet



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_LP_1_reg Address hc0017104
_csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_LP_1_reg = 3221319940 0 16 b00000000000000001000000000010000 RW
csi_tadp_tx_0_LP_1_ERRCONTENTION_THRES_REG = hc0017104 0 8 h10 RW HEX
; Desc_csi_tadp_tx_0_LP_1_ERRCONTENTION_THRES_REG pack and un pack data using LSB first
csi_tadp_tx_0_LP_1_LPTX_PON_TIMER_REG = hc0017104 8 8 h80 RW HEX
; Desc_csi_tadp_tx_0_LP_1_LPTX_PON_TIMER_REG pack and un pack data using LSB first



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_RX_0_reg Address hc0017200
_csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_RX_0_reg = 3221320192 0 16 b00000000000000000000000110010111 RW
csi_tadp_tx_0_HS_RX_0_HS_CDR_UPDATE_SETTINGS_REG = hc0017200 0 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_0_HS_CDR_UPDATE_SETTINGS_REG A-packet type
csi_tadp_tx_0_HS_RX_0_HS_CDR_FEEDBACK_ENABLED_REG = hc0017200 1 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_0_HS_CDR_FEEDBACK_ENABLED_REG A-packet type
csi_tadp_tx_0_HSACTIVERX_DLY_REG = hc0017200 2 5 h5 RW HEX
; Desc_csi_tadp_tx_0_HSACTIVERX_DLY_REG A-packet type
csi_tadp_tx_0_HSRX_CPHY_CDR_FBK_EN_DLY_REG = hc0017200 7 3 h3 RW HEX
; Desc_csi_tadp_tx_0_HSRX_CPHY_CDR_FBK_EN_DLY_REG A-packet type
csi_tadp_tx_0_RESERVED_15_10 = hc0017200 10 6 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 A-packet type



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_RX_1_reg Address hc0017204
_csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_RX_1_reg = 3221320196 0 16 b00000000000000000000000000010100 RW
csi_tadp_tx_0_HS_RX_1_HS_CDR_TIMEBASE_TARGET_REG = hc0017204 0 16 h14 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_1_HS_CDR_TIMEBASE_TARGET_REG A-packet type



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_RX_2_reg Address hc0017208
_csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_RX_2_reg = 3221320200 0 16 b00000000000000000000000000010100 RW
csi_tadp_tx_0_HS_RX_2_HS_CDR_COARSE_TARGET_REG = hc0017208 0 16 h14 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_2_HS_CDR_COARSE_TARGET_REG Aphy Packet Gen valid down counter, clear on write



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_RX_3_reg Address hc001720c
_csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_RX_3_reg = 3221320204 0 16 b00000000000000000000000001111110 RW
csi_tadp_tx_0_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_REG = hc001720c 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_REG the last state of the sampling state machine 
csi_tadp_tx_0_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_DLY_REG = hc001720c 1 6 h3f RW HEX
; Desc_csi_tadp_tx_0_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_DLY_REG the last state of the sampling state machine 
csi_tadp_tx_0_RESERVED_15_7 = hc001720c 7 9 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_7 the last state of the sampling state machine 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_RX_4_reg Address hc0017210
_csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_RX_4_reg = 3221320208 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_RX_3_HS_CDR_COARSE_OBS_SEL_REG = hc0017210 0 4 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_3_HS_CDR_COARSE_OBS_SEL_REG filter signals for event mode (using filter_wait configuration)
csi_tadp_tx_0_RESERVED_15_4 = hc0017210 4 12 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_4 filter signals for event mode (using filter_wait configuration)



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_RX_5_reg Address hc0017214
_csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_RX_5_reg = 3221320212 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_RX_5_HS_CDR_INIT_WAIT_TARGET_REG = hc0017214 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_5_HS_CDR_INIT_WAIT_TARGET_REG timestamp offset, the sent timestamp is the local timestamp + ts_offset



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_RX_6_reg Address hc0017218
_csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_RX_6_reg = 3221320216 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_RX_6_HS_CDR_STUCK_THRESH_REG = hc0017218 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_6_HS_CDR_STUCK_THRESH_REG if to add synchronizer on the specific input (per IO)



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_0_reg Address hc0017400
_csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_0_reg = 3221320704 0 16 b00000000000000000000000000010100 RW
csi_tadp_tx_0_HS_TX_0_THSEXIT_DCO_REG = hc0017400 0 16 h14 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_0_THSEXIT_DCO_REG an option to invert any of the inputs (per IO)



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_1_reg Address hc0017404
_csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_1_reg = 3221320708 0 16 b00000000000000000000000000000011 RW
csi_tadp_tx_0_HS_TX_1_TPOST_REG = hc0017404 0 16 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_1_TPOST_REG bypass the wait filter for specific gpio (only in event mode)



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_2_reg Address hc0017408
_csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_2_reg = 3221320712 0 16 b00000000000000000000000000000011 RW
csi_tadp_tx_0_HS_TX_2_TCALPREAMBLE_REG = hc0017408 0 16 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_2_TCALPREAMBLE_REG these registers create a table that indicate if to sample an input in the current scycle of not. The state machine start from state 0 (sample all the inputs that are sindicated active in that state) to rx_last_state when the clock move one cycle sbetween each state



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_3_reg Address hc001740c
_csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_3_reg = 3221320716 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_TX_3_STATE_OVR_REG = hc001740c 0 4 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_3_STATE_OVR_REG 
csi_tadp_tx_0_HS_TX_3_STATE_OVR_EN_REG = hc001740c 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_STATE_OVR_EN_REG 
csi_tadp_tx_0_HS_TX_3_BURST_TYPE_REG = hc001740c 5 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_3_BURST_TYPE_REG 
csi_tadp_tx_0_HS_TX_3_HSDIRECT_REG = hc001740c 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_HSDIRECT_REG 
csi_tadp_tx_0_HS_TX_3_INVORDER_REG = hc001740c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_INVORDER_REG 
csi_tadp_tx_0_HS_TX_3_STATE_DCO_VR_EN_REG = hc001740c 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_STATE_DCO_VR_EN_REG 
csi_tadp_tx_0_HS_TX_3_STATE_DCO_OVR_VAL_REG = hc001740c 11 4 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_3_STATE_DCO_OVR_VAL_REG 
csi_tadp_tx_0_RESERVED_15_15 = hc001740c 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_4_reg Address hc0017410
_csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_4_reg = 3221320720 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB0_REG = hc0017410 0 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB0_REG 
csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB1_REG = hc0017410 3 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB1_REG 
csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB2_REG = hc0017410 6 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB2_REG 
csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB3_REG = hc0017410 9 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB3_REG 
csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB4_REG = hc0017410 12 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB4_REG 
csi_tadp_tx_0_RESERVED_15_15 = hc0017410 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_5_reg Address hc0017414
_csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_5_reg = 3221320724 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB5_REG = hc0017414 0 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB5_REG 
csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB6_REG = hc0017414 3 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB6_REG 
csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB7_REG = hc0017414 6 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB7_REG 
csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB8_REG = hc0017414 9 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB8_REG 
csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB9_REG = hc0017414 12 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB9_REG 
csi_tadp_tx_0_RESERVED_15_15 = hc0017414 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_6_reg Address hc0017418
_csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_6_reg = 3221320728 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_TX_6_PROGSEQSYMB10_REG = hc0017418 0 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_6_PROGSEQSYMB10_REG 
csi_tadp_tx_0_HS_TX_6_PROGSEQSYMB11_REG = hc0017418 3 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_6_PROGSEQSYMB11_REG 
csi_tadp_tx_0_HS_TX_6_PROGSEQSYMB12_REG = hc0017418 6 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_6_PROGSEQSYMB12_REG 
csi_tadp_tx_0_HS_TX_6_PROGSEQSYMB13_REG = hc0017418 9 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_6_PROGSEQSYMB13_REG 
csi_tadp_tx_0_HS_TX_6_PIN_SWAP_REG = hc0017418 12 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_6_PIN_SWAP_REG 
csi_tadp_tx_0_RESERVED_15_15 = hc0017418 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_7_reg Address hc001741c
_csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_7_reg = 3221320732 0 16 b00000000000000000000000000001101 RW
csi_tadp_tx_0_HS_TX_7_T3PRPR_DCO_REG = hc001741c 0 16 hd RW HEX
; Desc_csi_tadp_tx_0_HS_TX_7_T3PRPR_DCO_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_8_reg Address hc0017420
_csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_8_reg = 3221320736 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_HS_TX_8_TLP11END_DCO_REG = hc0017420 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_HS_TX_8_TLP11END_DCO_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_9_reg Address hc0017424
_csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_9_reg = 3221320740 0 16 b00000000000000000000000000000110 RW
csi_tadp_tx_0_HS_TX_9_T3POST_DCO_REG = hc0017424 0 16 h6 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_9_T3POST_DCO_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_10_reg Address hc0017428
_csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_10_reg = 3221320744 0 16 b00000000000000000000000000000010 RW
csi_tadp_tx_0_HS_TX_10_TPREBEGIN_REG = hc0017428 0 16 h2 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_10_TPREBEGIN_REG set tx memory to light sleep



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_11_reg Address hc001742c
_csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_11_reg = 3221320748 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_HS_TX_11_TLPX_DCO_REG = hc001742c 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_HS_TX_11_TLPX_DCO_REG tx fifo threshold 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_12_reg Address hc0017430
_csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_12_reg = 3221320752 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_HS_TX_12_TLP11INIT_DCO_REG = hc0017430 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_HS_TX_12_TLP11INIT_DCO_REG maximum number of enteris for Rx Fifo



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_13_reg Address hc0017434
_csi_tadp_tx_0_CORE_DIG_CLANE_0_RW_HS_TX_13_reg = 3221320756 0 16 b00000000000000000000000000000110 RW
csi_tadp_tx_0_HS_TX_13_TLPTXOVERLAP_REG = hc0017434 0 8 h6 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_13_TLPTXOVERLAP_REG an option to invert any of the inputs (per IO)
csi_tadp_tx_0_RESERVED_15_8 = hc0017434 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 an option to invert any of the inputs (per IO)



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_CFG_0_reg Address hc0017800
_csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_CFG_0_reg = 3221321728 0 16 b00000000000000000000000011110000 RW
csi_tadp_tx_0_CFG_0_LP_PIN_SWAP_REG = hc0017800 0 3 h0 RW HEX
; Desc_csi_tadp_tx_0_CFG_0_LP_PIN_SWAP_REG these registers create a table that indicate if to sample an input in the current scycle of not. The state machine start from state 0 (sample all the inputs that are sindicated active in that state) to tx_last_state when the clock move one cycle sbetween each state
csi_tadp_tx_0_CFG_0_HS_PIN_SWAP_REG = hc0017800 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_HS_PIN_SWAP_REG these registers create a table that indicate if to sample an input in the current scycle of not. The state machine start from state 0 (sample all the inputs that are sindicated active in that state) to tx_last_state when the clock move one cycle sbetween each state
csi_tadp_tx_0_CFG_0_HS_ORDER_SWAP_REG = hc0017800 4 1 h1 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_HS_ORDER_SWAP_REG these registers create a table that indicate if to sample an input in the current scycle of not. The state machine start from state 0 (sample all the inputs that are sindicated active in that state) to tx_last_state when the clock move one cycle sbetween each state
csi_tadp_tx_0_CFG_0_HS_DECODE_SWAP_REG = hc0017800 5 1 h1 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_HS_DECODE_SWAP_REG these registers create a table that indicate if to sample an input in the current scycle of not. The state machine start from state 0 (sample all the inputs that are sindicated active in that state) to tx_last_state when the clock move one cycle sbetween each state
csi_tadp_tx_0_CFG_0_HS_ALIGNER_SWAP_REG = hc0017800 6 1 h1 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_HS_ALIGNER_SWAP_REG these registers create a table that indicate if to sample an input in the current scycle of not. The state machine start from state 0 (sample all the inputs that are sindicated active in that state) to tx_last_state when the clock move one cycle sbetween each state
csi_tadp_tx_0_CFG_0_HS_SYNC_DET_SWAP_REG = hc0017800 7 1 h1 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_HS_SYNC_DET_SWAP_REG these registers create a table that indicate if to sample an input in the current scycle of not. The state machine start from state 0 (sample all the inputs that are sindicated active in that state) to tx_last_state when the clock move one cycle sbetween each state
csi_tadp_tx_0_CFG_0_ALP_ENABLE_REG = hc0017800 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_ALP_ENABLE_REG these registers create a table that indicate if to sample an input in the current scycle of not. The state machine start from state 0 (sample all the inputs that are sindicated active in that state) to tx_last_state when the clock move one cycle sbetween each state
csi_tadp_tx_0_CFG_0_SWAP_ENCODE_REG = hc0017800 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_SWAP_ENCODE_REG these registers create a table that indicate if to sample an input in the current scycle of not. The state machine start from state 0 (sample all the inputs that are sindicated active in that state) to tx_last_state when the clock move one cycle sbetween each state
csi_tadp_tx_0_LOOPBACK_MODE_EN = hc0017800 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LOOPBACK_MODE_EN these registers create a table that indicate if to sample an input in the current scycle of not. The state machine start from state 0 (sample all the inputs that are sindicated active in that state) to tx_last_state when the clock move one cycle sbetween each state
csi_tadp_tx_0_RESERVED_15_11 = hc0017800 11 5 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_11 these registers create a table that indicate if to sample an input in the current scycle of not. The state machine start from state 0 (sample all the inputs that are sindicated active in that state) to tx_last_state when the clock move one cycle sbetween each state



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_CFG_2_reg Address hc0017808
_csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_CFG_2_reg = 3221321736 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_CFG_2_SPARE = hc0017808 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_CFG_2_SPARE 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_LP_0_reg Address hc0017900
_csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_LP_0_reg = 3221321984 0 16 b00000000000000000100011000111100 RW
csi_tadp_tx_0_LP_0_TTAGET_REG = hc0017900 0 4 hc RW HEX
; Desc_csi_tadp_tx_0_LP_0_TTAGET_REG 
csi_tadp_tx_0_LP_0_TTASURE_REG = hc0017900 4 4 h3 RW HEX
; Desc_csi_tadp_tx_0_LP_0_TTASURE_REG 
csi_tadp_tx_0_LP_0_TTAGO_REG = hc0017900 8 4 h6 RW HEX
; Desc_csi_tadp_tx_0_LP_0_TTAGO_REG 
csi_tadp_tx_0_LP_0_ITMINRX_REG = hc0017900 12 4 h4 RW HEX
; Desc_csi_tadp_tx_0_LP_0_ITMINRX_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_LP_1_reg Address hc0017904
_csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_LP_1_reg = 3221321988 0 16 b00000000000000001000000000010000 RW
csi_tadp_tx_0_LP_1_ERRCONTENTION_THRES_REG = hc0017904 0 8 h10 RW HEX
; Desc_csi_tadp_tx_0_LP_1_ERRCONTENTION_THRES_REG 
csi_tadp_tx_0_LP_1_LPTX_PON_TIMER_REG = hc0017904 8 8 h80 RW HEX
; Desc_csi_tadp_tx_0_LP_1_LPTX_PON_TIMER_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_RX_0_reg Address hc0017a00
_csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_RX_0_reg = 3221322240 0 16 b00000000000000000000000110010111 RW
csi_tadp_tx_0_HS_RX_0_HS_CDR_UPDATE_SETTINGS_REG = hc0017a00 0 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_0_HS_CDR_UPDATE_SETTINGS_REG 
csi_tadp_tx_0_HS_RX_0_HS_CDR_FEEDBACK_ENABLED_REG = hc0017a00 1 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_0_HS_CDR_FEEDBACK_ENABLED_REG 
csi_tadp_tx_0_HSACTIVERX_DLY_REG = hc0017a00 2 5 h5 RW HEX
; Desc_csi_tadp_tx_0_HSACTIVERX_DLY_REG 
csi_tadp_tx_0_HSRX_CPHY_CDR_FBK_EN_DLY_REG = hc0017a00 7 3 h3 RW HEX
; Desc_csi_tadp_tx_0_HSRX_CPHY_CDR_FBK_EN_DLY_REG 
csi_tadp_tx_0_RESERVED_15_10 = hc0017a00 10 6 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_RX_1_reg Address hc0017a04
_csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_RX_1_reg = 3221322244 0 16 b00000000000000000000000000010100 RW
csi_tadp_tx_0_HS_RX_1_HS_CDR_TIMEBASE_TARGET_REG = hc0017a04 0 16 h14 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_1_HS_CDR_TIMEBASE_TARGET_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_RX_2_reg Address hc0017a08
_csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_RX_2_reg = 3221322248 0 16 b00000000000000000000000000010100 RW
csi_tadp_tx_0_HS_RX_2_HS_CDR_COARSE_TARGET_REG = hc0017a08 0 16 h14 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_2_HS_CDR_COARSE_TARGET_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_RX_3_reg Address hc0017a0c
_csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_RX_3_reg = 3221322252 0 16 b00000000000000000000000001111110 RW
csi_tadp_tx_0_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_REG = hc0017a0c 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_REG 
csi_tadp_tx_0_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_DLY_REG = hc0017a0c 1 6 h3f RW HEX
; Desc_csi_tadp_tx_0_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_DLY_REG 
csi_tadp_tx_0_RESERVED_15_7 = hc0017a0c 7 9 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_7 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_RX_4_reg Address hc0017a10
_csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_RX_4_reg = 3221322256 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_RX_3_HS_CDR_COARSE_OBS_SEL_REG = hc0017a10 0 4 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_3_HS_CDR_COARSE_OBS_SEL_REG default value for the msio_data_tx before receiving the first packet
csi_tadp_tx_0_RESERVED_15_4 = hc0017a10 4 12 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_4 default value for the msio_data_tx before receiving the first packet



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_RX_5_reg Address hc0017a14
_csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_RX_5_reg = 3221322260 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_RX_5_HS_CDR_INIT_WAIT_TARGET_REG = hc0017a14 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_5_HS_CDR_INIT_WAIT_TARGET_REG Rx FIFO used



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_RX_6_reg Address hc0017a18
_csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_RX_6_reg = 3221322264 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_RX_6_HS_CDR_STUCK_THRESH_REG = hc0017a18 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_6_HS_CDR_STUCK_THRESH_REG safety status for each safety register



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_0_reg Address hc0017c00
_csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_0_reg = 3221322752 0 16 b00000000000000000000000000010100 RW
csi_tadp_tx_0_HS_TX_0_THSEXIT_DCO_REG = hc0017c00 0 16 h14 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_0_THSEXIT_DCO_REG fail status for each SM unit inside MsioTadp



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_1_reg Address hc0017c04
_csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_1_reg = 3221322756 0 16 b00000000000000000000000000000011 RW
csi_tadp_tx_0_HS_TX_1_TPOST_REG = hc0017c04 0 16 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_1_TPOST_REG ts_err counter, clear the counter on write for this register



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_2_reg Address hc0017c08
_csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_2_reg = 3221322760 0 16 b00000000000000000000000000000011 RW
csi_tadp_tx_0_HS_TX_2_TCALPREAMBLE_REG = hc0017c08 0 16 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_2_TCALPREAMBLE_REG drop count for packets that were dropped due to crc/length error, clear the counter on write



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_3_reg Address hc0017c0c
_csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_3_reg = 3221322764 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_TX_3_STATE_OVR_REG = hc0017c0c 0 4 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_3_STATE_OVR_REG threshold for timestamp, if recived packet is far away from local timer (by this threshold) the data will be trashed 
csi_tadp_tx_0_HS_TX_3_STATE_OVR_EN_REG = hc0017c0c 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_STATE_OVR_EN_REG threshold for timestamp, if recived packet is far away from local timer (by this threshold) the data will be trashed 
csi_tadp_tx_0_HS_TX_3_BURST_TYPE_REG = hc0017c0c 5 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_3_BURST_TYPE_REG threshold for timestamp, if recived packet is far away from local timer (by this threshold) the data will be trashed 
csi_tadp_tx_0_HS_TX_3_HSDIRECT_REG = hc0017c0c 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_HSDIRECT_REG threshold for timestamp, if recived packet is far away from local timer (by this threshold) the data will be trashed 
csi_tadp_tx_0_HS_TX_3_INVORDER_REG = hc0017c0c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_INVORDER_REG threshold for timestamp, if recived packet is far away from local timer (by this threshold) the data will be trashed 
csi_tadp_tx_0_HS_TX_3_STATE_DCO_VR_EN_REG = hc0017c0c 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_STATE_DCO_VR_EN_REG threshold for timestamp, if recived packet is far away from local timer (by this threshold) the data will be trashed 
csi_tadp_tx_0_HS_TX_3_STATE_DCO_OVR_VAL_REG = hc0017c0c 11 4 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_3_STATE_DCO_OVR_VAL_REG threshold for timestamp, if recived packet is far away from local timer (by this threshold) the data will be trashed 
csi_tadp_tx_0_RESERVED_15_15 = hc0017c0c 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 threshold for timestamp, if recived packet is far away from local timer (by this threshold) the data will be trashed 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_4_reg Address hc0017c10
_csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_4_reg = 3221322768 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB0_REG = hc0017c10 0 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB0_REG interrupt mask
csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB1_REG = hc0017c10 3 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB1_REG interrupt mask
csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB2_REG = hc0017c10 6 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB2_REG interrupt mask
csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB3_REG = hc0017c10 9 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB3_REG interrupt mask
csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB4_REG = hc0017c10 12 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB4_REG interrupt mask
csi_tadp_tx_0_RESERVED_15_15 = hc0017c10 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 interrupt mask



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_5_reg Address hc0017c14
_csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_5_reg = 3221322772 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB5_REG = hc0017c14 0 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB5_REG interrupt status register
csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB6_REG = hc0017c14 3 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB6_REG interrupt status register
csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB7_REG = hc0017c14 6 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB7_REG interrupt status register
csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB8_REG = hc0017c14 9 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB8_REG interrupt status register
csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB9_REG = hc0017c14 12 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB9_REG interrupt status register
csi_tadp_tx_0_RESERVED_15_15 = hc0017c14 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 interrupt status register



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_6_reg Address hc0017c18
_csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_6_reg = 3221322776 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_TX_6_PROGSEQSYMB10_REG = hc0017c18 0 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_6_PROGSEQSYMB10_REG the msio_data_tx as output for MsioAdaptor - for debug
csi_tadp_tx_0_HS_TX_6_PROGSEQSYMB11_REG = hc0017c18 3 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_6_PROGSEQSYMB11_REG the msio_data_tx as output for MsioAdaptor - for debug
csi_tadp_tx_0_HS_TX_6_PROGSEQSYMB12_REG = hc0017c18 6 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_6_PROGSEQSYMB12_REG the msio_data_tx as output for MsioAdaptor - for debug
csi_tadp_tx_0_HS_TX_6_PROGSEQSYMB13_REG = hc0017c18 9 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_6_PROGSEQSYMB13_REG the msio_data_tx as output for MsioAdaptor - for debug
csi_tadp_tx_0_HS_TX_6_PIN_SWAP_REG = hc0017c18 12 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_6_PIN_SWAP_REG the msio_data_tx as output for MsioAdaptor - for debug
csi_tadp_tx_0_RESERVED_15_15 = hc0017c18 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 the msio_data_tx as output for MsioAdaptor - for debug



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_7_reg Address hc0017c1c
_csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_7_reg = 3221322780 0 16 b00000000000000000000000000001101 RW
csi_tadp_tx_0_HS_TX_7_T3PRPR_DCO_REG = hc0017c1c 0 16 hd RW HEX
; Desc_csi_tadp_tx_0_HS_TX_7_T3PRPR_DCO_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_8_reg Address hc0017c20
_csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_8_reg = 3221322784 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_HS_TX_8_TLP11END_DCO_REG = hc0017c20 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_HS_TX_8_TLP11END_DCO_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_9_reg Address hc0017c24
_csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_9_reg = 3221322788 0 16 b00000000000000000000000000000110 RW
csi_tadp_tx_0_HS_TX_9_T3POST_DCO_REG = hc0017c24 0 16 h6 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_9_T3POST_DCO_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_10_reg Address hc0017c28
_csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_10_reg = 3221322792 0 16 b00000000000000000000000000000010 RW
csi_tadp_tx_0_HS_TX_10_TPREBEGIN_REG = hc0017c28 0 16 h2 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_10_TPREBEGIN_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_11_reg Address hc0017c2c
_csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_11_reg = 3221322796 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_HS_TX_11_TLPX_DCO_REG = hc0017c2c 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_HS_TX_11_TLPX_DCO_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_12_reg Address hc0017c30
_csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_12_reg = 3221322800 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_HS_TX_12_TLP11INIT_DCO_REG = hc0017c30 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_HS_TX_12_TLP11INIT_DCO_REG 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_13_reg Address hc0017c34
_csi_tadp_tx_0_CORE_DIG_CLANE_1_RW_HS_TX_13_reg = 3221322804 0 16 b00000000000000000000000000000110 RW
csi_tadp_tx_0_HS_TX_13_TLPTXOVERLAP_REG = hc0017c34 0 8 h6 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_13_TLPTXOVERLAP_REG 
csi_tadp_tx_0_RESERVED_15_8 = hc0017c34 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_CFG_0_reg Address hc0018000
_csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_CFG_0_reg = 3221323776 0 16 b00000000000000000000000011110000 RW
csi_tadp_tx_0_CFG_0_LP_PIN_SWAP_REG = hc0018000 0 3 h0 RW HEX
; Desc_csi_tadp_tx_0_CFG_0_LP_PIN_SWAP_REG The version of ACMP
csi_tadp_tx_0_CFG_0_HS_PIN_SWAP_REG = hc0018000 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_HS_PIN_SWAP_REG The version of ACMP
csi_tadp_tx_0_CFG_0_HS_ORDER_SWAP_REG = hc0018000 4 1 h1 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_HS_ORDER_SWAP_REG The version of ACMP
csi_tadp_tx_0_CFG_0_HS_DECODE_SWAP_REG = hc0018000 5 1 h1 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_HS_DECODE_SWAP_REG The version of ACMP
csi_tadp_tx_0_CFG_0_HS_ALIGNER_SWAP_REG = hc0018000 6 1 h1 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_HS_ALIGNER_SWAP_REG The version of ACMP
csi_tadp_tx_0_CFG_0_HS_SYNC_DET_SWAP_REG = hc0018000 7 1 h1 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_HS_SYNC_DET_SWAP_REG The version of ACMP
csi_tadp_tx_0_CFG_0_ALP_ENABLE_REG = hc0018000 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_ALP_ENABLE_REG The version of ACMP
csi_tadp_tx_0_CFG_0_SWAP_ENCODE_REG = hc0018000 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_CFG_0_SWAP_ENCODE_REG The version of ACMP
csi_tadp_tx_0_LOOPBACK_MODE_EN = hc0018000 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_LOOPBACK_MODE_EN The version of ACMP
csi_tadp_tx_0_RESERVED_15_11 = hc0018000 11 5 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_11 The version of ACMP



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_CFG_2_reg Address hc0018008
_csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_CFG_2_reg = 3221323784 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_CFG_2_SPARE = hc0018008 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_CFG_2_SPARE values (0  to 2^32 -1)



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_LP_0_reg Address hc0018100
_csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_LP_0_reg = 3221324032 0 16 b00000000000000000100011000111100 RW
csi_tadp_tx_0_LP_0_TTAGET_REG = hc0018100 0 4 hc RW HEX
; Desc_csi_tadp_tx_0_LP_0_TTAGET_REG values (0  to 2^16 -1)
csi_tadp_tx_0_LP_0_TTASURE_REG = hc0018100 4 4 h3 RW HEX
; Desc_csi_tadp_tx_0_LP_0_TTASURE_REG values (0  to 2^16 -1)
csi_tadp_tx_0_LP_0_TTAGO_REG = hc0018100 8 4 h6 RW HEX
; Desc_csi_tadp_tx_0_LP_0_TTAGO_REG values (0  to 2^16 -1)
csi_tadp_tx_0_LP_0_ITMINRX_REG = hc0018100 12 4 h4 RW HEX
; Desc_csi_tadp_tx_0_LP_0_ITMINRX_REG values (0  to 2^16 -1)



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_LP_1_reg Address hc0018104
_csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_LP_1_reg = 3221324036 0 16 b00000000000000001000000000010000 RW
csi_tadp_tx_0_LP_1_ERRCONTENTION_THRES_REG = hc0018104 0 8 h10 RW HEX
; Desc_csi_tadp_tx_0_LP_1_ERRCONTENTION_THRES_REG MIPI Alliance Manufacturer ID, values (0  to 2^16 -1)
csi_tadp_tx_0_LP_1_LPTX_PON_TIMER_REG = hc0018104 8 8 h80 RW HEX
; Desc_csi_tadp_tx_0_LP_1_LPTX_PON_TIMER_REG MIPI Alliance Manufacturer ID, values (0  to 2^16 -1)



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_RX_0_reg Address hc0018200
_csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_RX_0_reg = 3221324288 0 16 b00000000000000000000000110010111 RW
csi_tadp_tx_0_HS_RX_0_HS_CDR_UPDATE_SETTINGS_REG = hc0018200 0 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_0_HS_CDR_UPDATE_SETTINGS_REG The native interface in use for ACMP , valuse0:SW 1:i2c 3:i3c 3 – 15: Reserved, Value 0value 0 represents an internal sw base interface
csi_tadp_tx_0_HS_RX_0_HS_CDR_FEEDBACK_ENABLED_REG = hc0018200 1 1 h1 RW BIN
; Desc_csi_tadp_tx_0_HS_RX_0_HS_CDR_FEEDBACK_ENABLED_REG The native interface in use for ACMP , valuse0:SW 1:i2c 3:i3c 3 – 15: Reserved, Value 0value 0 represents an internal sw base interface
csi_tadp_tx_0_HSACTIVERX_DLY_REG = hc0018200 2 5 h5 RW HEX
; Desc_csi_tadp_tx_0_HSACTIVERX_DLY_REG The native interface in use for ACMP , valuse0:SW 1:i2c 3:i3c 3 – 15: Reserved, Value 0value 0 represents an internal sw base interface
csi_tadp_tx_0_HSRX_CPHY_CDR_FBK_EN_DLY_REG = hc0018200 7 3 h3 RW HEX
; Desc_csi_tadp_tx_0_HSRX_CPHY_CDR_FBK_EN_DLY_REG The native interface in use for ACMP , valuse0:SW 1:i2c 3:i3c 3 – 15: Reserved, Value 0value 0 represents an internal sw base interface
csi_tadp_tx_0_RESERVED_15_10 = hc0018200 10 6 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_10 The native interface in use for ACMP , valuse0:SW 1:i2c 3:i3c 3 – 15: Reserved, Value 0value 0 represents an internal sw base interface



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_RX_1_reg Address hc0018204
_csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_RX_1_reg = 3221324292 0 16 b00000000000000000000000000010100 RW
csi_tadp_tx_0_HS_RX_1_HS_CDR_TIMEBASE_TARGET_REG = hc0018204 0 16 h14 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_1_HS_CDR_TIMEBASE_TARGET_REG Base Address (BA) of the next Instance  value: 0 – (2^16−1): 0x9000



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_RX_2_reg Address hc0018208
_csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_RX_2_reg = 3221324296 0 16 b00000000000000000000000000010100 RW
csi_tadp_tx_0_HS_RX_2_HS_CDR_COARSE_TARGET_REG = hc0018208 0 16 h14 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_2_HS_CDR_COARSE_TARGET_REG All Gears up to and including this Gear are supported values 0:reserved ,1-5: gearX ,6-7 reserved



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_RX_3_reg Address hc001820c
_csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_RX_3_reg = 3221324300 0 16 b00000000000000000000000001111110 RW
csi_tadp_tx_0_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_REG = hc001820c 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_REG 0: Infinite 1 – 15: Maximum number of Start Up failures
csi_tadp_tx_0_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_DLY_REG = hc001820c 1 6 h3f RW HEX
; Desc_csi_tadp_tx_0_HSRX_CPHY_CDR_FBK_FAST_LOCK_EN_DLY_REG 0: Infinite 1 – 15: Maximum number of Start Up failures
csi_tadp_tx_0_RESERVED_15_7 = hc001820c 7 9 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_7 0: Infinite 1 – 15: Maximum number of Start Up failures



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_RX_4_reg Address hc0018210
_csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_RX_4_reg = 3221324304 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_RX_3_HS_CDR_COARSE_OBS_SEL_REG = hc0018210 0 4 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_3_HS_CDR_COARSE_OBS_SEL_REG Indicate the Link Quality Level defined in the A-PHY Spec. 6 Levels: 0=NoLink, 1=Bad, 2=MarginalBad, 3=MarginalGood, 4=Good, 5=Excellent
csi_tadp_tx_0_RESERVED_15_4 = hc0018210 4 12 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_4 Indicate the Link Quality Level defined in the A-PHY Spec. 6 Levels: 0=NoLink, 1=Bad, 2=MarginalBad, 3=MarginalGood, 4=Good, 5=Excellent



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_RX_5_reg Address hc0018214
_csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_RX_5_reg = 3221324308 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_RX_5_HS_CDR_INIT_WAIT_TARGET_REG = hc0018214 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_5_HS_CDR_INIT_WAIT_TARGET_REG Define the number of KEPALVT periods before error indication (NoKpAlvErr)



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_RX_6_reg Address hc0018218
_csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_RX_6_reg = 3221324312 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_RX_6_HS_CDR_STUCK_THRESH_REG = hc0018218 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_RX_6_HS_CDR_STUCK_THRESH_REG While this bit is set, all DIAG_CNTx counters shall hold their values and shall not continue to count. 0: Counting1: Stop Counting



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_0_reg Address hc0018400
_csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_0_reg = 3221324800 0 16 b00000000000000000000000000010100 RW
csi_tadp_tx_0_HS_TX_0_THSEXIT_DCO_REG = hc0018400 0 16 h14 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_0_THSEXIT_DCO_REG Number of packets without error indication (i.e., with A-Header subfield BAD cleared to 1’b0) that were delivered to the Upper Layers (i.e., to the APDLL) value 0 - (2^32 -1)



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_1_reg Address hc0018404
_csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_1_reg = 3221324804 0 16 b00000000000000000000000000000011 RW
csi_tadp_tx_0_HS_TX_1_TPOST_REG = hc0018404 0 16 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_1_TPOST_REG value 0 - (2^32 -1)



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_2_reg Address hc0018408
_csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_2_reg = 3221324808 0 16 b00000000000000000000000000000011 RW
csi_tadp_tx_0_HS_TX_2_TCALPREAMBLE_REG = hc0018408 0 16 h3 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_2_TCALPREAMBLE_REG value 0 - (2^32 -1)



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_3_reg Address hc001840c
_csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_3_reg = 3221324812 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_TX_3_STATE_OVR_REG = hc001840c 0 4 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_3_STATE_OVR_REG value 0 - (2^32 -1)
csi_tadp_tx_0_HS_TX_3_STATE_OVR_EN_REG = hc001840c 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_STATE_OVR_EN_REG value 0 - (2^32 -1)
csi_tadp_tx_0_HS_TX_3_BURST_TYPE_REG = hc001840c 5 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_3_BURST_TYPE_REG value 0 - (2^32 -1)
csi_tadp_tx_0_HS_TX_3_HSDIRECT_REG = hc001840c 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_HSDIRECT_REG value 0 - (2^32 -1)
csi_tadp_tx_0_HS_TX_3_INVORDER_REG = hc001840c 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_INVORDER_REG value 0 - (2^32 -1)
csi_tadp_tx_0_HS_TX_3_STATE_DCO_VR_EN_REG = hc001840c 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_HS_TX_3_STATE_DCO_VR_EN_REG value 0 - (2^32 -1)
csi_tadp_tx_0_HS_TX_3_STATE_DCO_OVR_VAL_REG = hc001840c 11 4 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_3_STATE_DCO_OVR_VAL_REG value 0 - (2^32 -1)
csi_tadp_tx_0_RESERVED_15_15 = hc001840c 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 value 0 - (2^32 -1)



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_4_reg Address hc0018410
_csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_4_reg = 3221324816 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB0_REG = hc0018410 0 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB0_REG value 0 - (2^32 -1)
csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB1_REG = hc0018410 3 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB1_REG value 0 - (2^32 -1)
csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB2_REG = hc0018410 6 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB2_REG value 0 - (2^32 -1)
csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB3_REG = hc0018410 9 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB3_REG value 0 - (2^32 -1)
csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB4_REG = hc0018410 12 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_4_PROGSEQSYMB4_REG value 0 - (2^32 -1)
csi_tadp_tx_0_RESERVED_15_15 = hc0018410 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 value 0 - (2^32 -1)



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_5_reg Address hc0018414
_csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_5_reg = 3221324820 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB5_REG = hc0018414 0 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB5_REG value 0 - (2^32 -1)
csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB6_REG = hc0018414 3 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB6_REG value 0 - (2^32 -1)
csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB7_REG = hc0018414 6 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB7_REG value 0 - (2^32 -1)
csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB8_REG = hc0018414 9 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB8_REG value 0 - (2^32 -1)
csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB9_REG = hc0018414 12 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_5_PROGSEQSYMB9_REG value 0 - (2^32 -1)
csi_tadp_tx_0_RESERVED_15_15 = hc0018414 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 value 0 - (2^32 -1)



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_6_reg Address hc0018418
_csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_6_reg = 3221324824 0 16 b00000000000000000000000000000000 RW
csi_tadp_tx_0_HS_TX_6_PROGSEQSYMB10_REG = hc0018418 0 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_6_PROGSEQSYMB10_REG value 0 - (2^32 -1)
csi_tadp_tx_0_HS_TX_6_PROGSEQSYMB11_REG = hc0018418 3 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_6_PROGSEQSYMB11_REG value 0 - (2^32 -1)
csi_tadp_tx_0_HS_TX_6_PROGSEQSYMB12_REG = hc0018418 6 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_6_PROGSEQSYMB12_REG value 0 - (2^32 -1)
csi_tadp_tx_0_HS_TX_6_PROGSEQSYMB13_REG = hc0018418 9 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_6_PROGSEQSYMB13_REG value 0 - (2^32 -1)
csi_tadp_tx_0_HS_TX_6_PIN_SWAP_REG = hc0018418 12 3 h0 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_6_PIN_SWAP_REG value 0 - (2^32 -1)
csi_tadp_tx_0_RESERVED_15_15 = hc0018418 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_RESERVED_15_15 value 0 - (2^32 -1)



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_7_reg Address hc001841c
_csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_7_reg = 3221324828 0 16 b00000000000000000000000000001101 RW
csi_tadp_tx_0_HS_TX_7_T3PRPR_DCO_REG = hc001841c 0 16 hd RW HEX
; Desc_csi_tadp_tx_0_HS_TX_7_T3PRPR_DCO_REG value 0 - (2^32 -1)



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_8_reg Address hc0018420
_csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_8_reg = 3221324832 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_HS_TX_8_TLP11END_DCO_REG = hc0018420 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_HS_TX_8_TLP11END_DCO_REG value 0 - (2^32 -1)



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_9_reg Address hc0018424
_csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_9_reg = 3221324836 0 16 b00000000000000000000000000000110 RW
csi_tadp_tx_0_HS_TX_9_T3POST_DCO_REG = hc0018424 0 16 h6 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_9_T3POST_DCO_REG value 0 - (2^32 -1)



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_10_reg Address hc0018428
_csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_10_reg = 3221324840 0 16 b00000000000000000000000000000010 RW
csi_tadp_tx_0_HS_TX_10_TPREBEGIN_REG = hc0018428 0 16 h2 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_10_TPREBEGIN_REG value 0 - (2^32 -1)



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_11_reg Address hc001842c
_csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_11_reg = 3221324844 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_HS_TX_11_TLPX_DCO_REG = hc001842c 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_HS_TX_11_TLPX_DCO_REG value 0 - (2^32 -1)



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_12_reg Address hc0018430
_csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_12_reg = 3221324848 0 16 b00000000000000000000000000001010 RW
csi_tadp_tx_0_HS_TX_12_TLP11INIT_DCO_REG = hc0018430 0 16 ha RW HEX
; Desc_csi_tadp_tx_0_HS_TX_12_TLP11INIT_DCO_REG Host Request to Restart the A-PHY Link. 2b10: Soft-Warm Reset, 2b11: Soft-Cold Reset. sAP-FSM shall Reset the bit when perform soft Reset, indicating the Host " command done".



; REGISTER csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_13_reg Address hc0018434
_csi_tadp_tx_0_CORE_DIG_CLANE_2_RW_HS_TX_13_reg = 3221324852 0 16 b00000000000000000000000000000110 RW
csi_tadp_tx_0_HS_TX_13_TLPTXOVERLAP_REG = hc0018434 0 8 h6 RW HEX
; Desc_csi_tadp_tx_0_HS_TX_13_TLPTXOVERLAP_REG The Host write value to this register to indicate "end of ACMD Register Update". The value in this register identify the Configuration Version of the Sticky ACMD Registers. The AP-FSM shall take action to apply the new ACMD register values.  Zero ID is reserved for the Default ACMD, written by AP-FSM at Cold Reset. When Host write values only to ACMD non-Sticky registers, the Update ID value is not incremented. 
csi_tadp_tx_0_RESERVED_15_8 = hc0018434 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_RESERVED_15_8 The Host write value to this register to indicate "end of ACMD Register Update". The value in this register identify the Configuration Version of the Sticky ACMD Registers. The AP-FSM shall take action to apply the new ACMD register values.  Zero ID is reserved for the Default ACMD, written by AP-FSM at Cold Reset. When Host write values only to ACMD non-Sticky registers, the Update ID value is not incremented. 



; REGISTER csi_tadp_tx_0_N_LANES_reg Address hc0019004
_csi_tadp_tx_0_N_LANES_reg = 3221327876 0 32 b00000000000000000000000000000011 RW
csi_tadp_tx_0_n_lanes = hc0019004 0 3 h3 RW HEX
; Desc_csi_tadp_tx_0_n_lanes Used to be the UTP Bit, but replaced with GL3P2OPT bits
csi_tadp_tx_0_reserved_31_3 = hc0019004 3 29 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_3 Used to be the UTP Bit, but replaced with GL3P2OPT bits



; REGISTER csi_tadp_tx_0_CSI2_RESETN_reg Address hc0019008
_csi_tadp_tx_0_CSI2_RESETN_reg = 3221327880 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_csi2_resetn = hc0019008 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_csi2_resetn Select Standard or Extended RTS Timeout Params for the Active Gears0: For PAM-X modulation Select standard parameters for a PER of 10-3s     For B/10B NRZ modulation,  Select standard parameters for a PER of 10-9 (DL)/10-10(UL)s1: For PAM-X modulation Select standard parameters for a PER of 10-2s     For  B/10B NRZ modulation,  Select standard parameters for a PER of 10-?
csi_tadp_tx_0_reserved_31_1 = hc0019008 1 31 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_1 Select Standard or Extended RTS Timeout Params for the Active Gears0: For PAM-X modulation Select standard parameters for a PER of 10-3s     For B/10B NRZ modulation,  Select standard parameters for a PER of 10-9 (DL)/10-10(UL)s1: For PAM-X modulation Select standard parameters for a PER of 10-2s     For  B/10B NRZ modulation,  Select standard parameters for a PER of 10-?



; REGISTER csi_tadp_tx_0_DATA_IDS_1_reg Address hc0019010
_csi_tadp_tx_0_DATA_IDS_1_reg = 3221327888 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_di0_dt = hc0019010 0 6 h0 RW HEX
; Desc_csi_tadp_tx_0_di0_dt 32-LSBits of the Threshold 
csi_tadp_tx_0_reserved_7_6 = hc0019010 6 2 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_7_6 32-LSBits of the Threshold 
csi_tadp_tx_0_di1_dt = hc0019010 8 6 h0 RW HEX
; Desc_csi_tadp_tx_0_di1_dt 32-LSBits of the Threshold 
csi_tadp_tx_0_reserved_15_14 = hc0019010 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_15_14 32-LSBits of the Threshold 
csi_tadp_tx_0_di2_dt = hc0019010 16 6 h0 RW HEX
; Desc_csi_tadp_tx_0_di2_dt 32-LSBits of the Threshold 
csi_tadp_tx_0_reserved_23_22 = hc0019010 22 2 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_23_22 32-LSBits of the Threshold 
csi_tadp_tx_0_di3_dt = hc0019010 24 6 h0 RW HEX
; Desc_csi_tadp_tx_0_di3_dt 32-LSBits of the Threshold 
csi_tadp_tx_0_reserved_31_30 = hc0019010 30 2 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_30 32-LSBits of the Threshold 



; REGISTER csi_tadp_tx_0_DATA_IDS_2_reg Address hc0019014
_csi_tadp_tx_0_DATA_IDS_2_reg = 3221327892 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_di4_dt = hc0019014 0 6 h0 RW HEX
; Desc_csi_tadp_tx_0_di4_dt 32-MSBits of the Threshold 
csi_tadp_tx_0_reserved_7_6 = hc0019014 6 2 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_7_6 32-MSBits of the Threshold 
csi_tadp_tx_0_di5_dt = hc0019014 8 6 h0 RW HEX
; Desc_csi_tadp_tx_0_di5_dt 32-MSBits of the Threshold 
csi_tadp_tx_0_reserved_15_14 = hc0019014 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_15_14 32-MSBits of the Threshold 
csi_tadp_tx_0_di6_dt = hc0019014 16 6 h0 RW HEX
; Desc_csi_tadp_tx_0_di6_dt 32-MSBits of the Threshold 
csi_tadp_tx_0_reserved_23_22 = hc0019014 22 2 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_23_22 32-MSBits of the Threshold 
csi_tadp_tx_0_di7_dt = hc0019014 24 6 h0 RW HEX
; Desc_csi_tadp_tx_0_di7_dt 32-MSBits of the Threshold 
csi_tadp_tx_0_reserved_31_30 = hc0019014 30 2 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_30 32-MSBits of the Threshold 



; REGISTER csi_tadp_tx_0_PHY_CFG_reg Address hc0019018
_csi_tadp_tx_0_PHY_CFG_reg = 3221327896 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_dphyppi16 = hc0019018 0 2 h0 RW HEX
; Desc_csi_tadp_tx_0_dphyppi16 Indicate the type of Cable Diagnostic Required. The Register content is valid only when the CableDiagEn=1. s=0: NoCabDiag, =1: DetOpenShortFault, =2: DetAccurateFaultLocation, =3: DeepCableDiag
csi_tadp_tx_0_reserved_31_2 = hc0019018 2 30 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_2 Indicate the type of Cable Diagnostic Required. The Register content is valid only when the CableDiagEn=1. s=0: NoCabDiag, =1: DetOpenShortFault, =2: DetAccurateFaultLocation, =3: DeepCableDiag



; REGISTER csi_tadp_tx_0_PHY_MODE_reg Address hc001901c
_csi_tadp_tx_0_PHY_MODE_reg = 3221327900 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_phy_mode = hc001901c 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_phy_mode Cable Diagnostics have detected Open Loop. For Coax, the result indicate the Exact Open Type
csi_tadp_tx_0_reserved_31_1 = hc001901c 1 31 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_1 Cable Diagnostics have detected Open Loop. For Coax, the result indicate the Exact Open Type



; REGISTER csi_tadp_tx_0_DATA_IDS_VC_1_reg Address hc0019030
_csi_tadp_tx_0_DATA_IDS_VC_1_reg = 3221327920 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_di0_vc = hc0019030 0 2 h0 RW HEX
; Desc_csi_tadp_tx_0_di0_vc Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [2] (Marginal Bad) and LNKQUALLEVEL [1] (Bad)
csi_tadp_tx_0_di0_vcx_0_1 = hc0019030 2 2 h0 RW HEX
; Desc_csi_tadp_tx_0_di0_vcx_0_1 Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [2] (Marginal Bad) and LNKQUALLEVEL [1] (Bad)
csi_tadp_tx_0_di0_vcx_2 = hc0019030 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_di0_vcx_2 Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [2] (Marginal Bad) and LNKQUALLEVEL [1] (Bad)
csi_tadp_tx_0_reserved_7_5 = hc0019030 5 3 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_7_5 Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [2] (Marginal Bad) and LNKQUALLEVEL [1] (Bad)
csi_tadp_tx_0_di1_vc = hc0019030 8 2 h0 RW HEX
; Desc_csi_tadp_tx_0_di1_vc Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [2] (Marginal Bad) and LNKQUALLEVEL [1] (Bad)
csi_tadp_tx_0_di1_vcx_0_1 = hc0019030 10 2 h0 RW HEX
; Desc_csi_tadp_tx_0_di1_vcx_0_1 Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [2] (Marginal Bad) and LNKQUALLEVEL [1] (Bad)
csi_tadp_tx_0_di1_vcx_2 = hc0019030 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_di1_vcx_2 Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [2] (Marginal Bad) and LNKQUALLEVEL [1] (Bad)
csi_tadp_tx_0_reserved_15_13 = hc0019030 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_15_13 Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [2] (Marginal Bad) and LNKQUALLEVEL [1] (Bad)
csi_tadp_tx_0_di2_vc = hc0019030 16 2 h0 RW HEX
; Desc_csi_tadp_tx_0_di2_vc Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [2] (Marginal Bad) and LNKQUALLEVEL [1] (Bad)
csi_tadp_tx_0_di2_vcx_0_1 = hc0019030 18 2 h0 RW HEX
; Desc_csi_tadp_tx_0_di2_vcx_0_1 Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [2] (Marginal Bad) and LNKQUALLEVEL [1] (Bad)
csi_tadp_tx_0_di2_vcx_2 = hc0019030 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_di2_vcx_2 Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [2] (Marginal Bad) and LNKQUALLEVEL [1] (Bad)
csi_tadp_tx_0_reserved_23_21 = hc0019030 21 3 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_23_21 Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [2] (Marginal Bad) and LNKQUALLEVEL [1] (Bad)
csi_tadp_tx_0_di3_vc = hc0019030 24 2 h0 RW HEX
; Desc_csi_tadp_tx_0_di3_vc Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [2] (Marginal Bad) and LNKQUALLEVEL [1] (Bad)
csi_tadp_tx_0_di3_vcx_0_1 = hc0019030 26 2 h0 RW HEX
; Desc_csi_tadp_tx_0_di3_vcx_0_1 Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [2] (Marginal Bad) and LNKQUALLEVEL [1] (Bad)
csi_tadp_tx_0_di3_vcx_2 = hc0019030 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_di3_vcx_2 Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [2] (Marginal Bad) and LNKQUALLEVEL [1] (Bad)
csi_tadp_tx_0_reserved_31_29 = hc0019030 29 3 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_29 Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [2] (Marginal Bad) and LNKQUALLEVEL [1] (Bad)



; REGISTER csi_tadp_tx_0_DATA_IDS_VC_2_reg Address hc0019034
_csi_tadp_tx_0_DATA_IDS_VC_2_reg = 3221327924 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_di4_vc = hc0019034 0 2 h0 RW HEX
; Desc_csi_tadp_tx_0_di4_vc Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [3] (Marginal Good) and LNKQUALLEVEL [1] (Marginal Bad). Default Value=0
csi_tadp_tx_0_di4_vcx_0_1 = hc0019034 2 2 h0 RW HEX
; Desc_csi_tadp_tx_0_di4_vcx_0_1 Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [3] (Marginal Good) and LNKQUALLEVEL [1] (Marginal Bad). Default Value=0
csi_tadp_tx_0_di4_vcx_2 = hc0019034 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_di4_vcx_2 Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [3] (Marginal Good) and LNKQUALLEVEL [1] (Marginal Bad). Default Value=0
csi_tadp_tx_0_reserved_7_5 = hc0019034 5 3 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_7_5 Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [3] (Marginal Good) and LNKQUALLEVEL [1] (Marginal Bad). Default Value=0
csi_tadp_tx_0_di5_vc = hc0019034 8 2 h0 RW HEX
; Desc_csi_tadp_tx_0_di5_vc Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [3] (Marginal Good) and LNKQUALLEVEL [1] (Marginal Bad). Default Value=0
csi_tadp_tx_0_di5_vcx_0_1 = hc0019034 10 2 h0 RW HEX
; Desc_csi_tadp_tx_0_di5_vcx_0_1 Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [3] (Marginal Good) and LNKQUALLEVEL [1] (Marginal Bad). Default Value=0
csi_tadp_tx_0_di5_vcx_2 = hc0019034 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_di5_vcx_2 Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [3] (Marginal Good) and LNKQUALLEVEL [1] (Marginal Bad). Default Value=0
csi_tadp_tx_0_reserved_15_13 = hc0019034 13 3 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_15_13 Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [3] (Marginal Good) and LNKQUALLEVEL [1] (Marginal Bad). Default Value=0
csi_tadp_tx_0_di6_vc = hc0019034 16 2 h0 RW HEX
; Desc_csi_tadp_tx_0_di6_vc Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [3] (Marginal Good) and LNKQUALLEVEL [1] (Marginal Bad). Default Value=0
csi_tadp_tx_0_di6_vcx_0_1 = hc0019034 18 2 h0 RW HEX
; Desc_csi_tadp_tx_0_di6_vcx_0_1 Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [3] (Marginal Good) and LNKQUALLEVEL [1] (Marginal Bad). Default Value=0
csi_tadp_tx_0_di6_vcx_2 = hc0019034 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_di6_vcx_2 Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [3] (Marginal Good) and LNKQUALLEVEL [1] (Marginal Bad). Default Value=0
csi_tadp_tx_0_reserved_23_21 = hc0019034 21 3 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_23_21 Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [3] (Marginal Good) and LNKQUALLEVEL [1] (Marginal Bad). Default Value=0
csi_tadp_tx_0_di7_vc = hc0019034 24 2 h0 RW HEX
; Desc_csi_tadp_tx_0_di7_vc Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [3] (Marginal Good) and LNKQUALLEVEL [1] (Marginal Bad). Default Value=0
csi_tadp_tx_0_di7_vcx_0_1 = hc0019034 26 2 h0 RW HEX
; Desc_csi_tadp_tx_0_di7_vcx_0_1 Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [3] (Marginal Good) and LNKQUALLEVEL [1] (Marginal Bad). Default Value=0
csi_tadp_tx_0_di7_vcx_2 = hc0019034 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_di7_vcx_2 Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [3] (Marginal Good) and LNKQUALLEVEL [1] (Marginal Bad). Default Value=0
csi_tadp_tx_0_reserved_31_29 = hc0019034 29 3 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_29 Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [3] (Marginal Good) and LNKQUALLEVEL [1] (Marginal Bad). Default Value=0



; REGISTER csi_tadp_tx_0_PHY_SHUTDOWNZ_reg Address hc0019040
_csi_tadp_tx_0_PHY_SHUTDOWNZ_reg = 3221327936 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_phy_shutdownz = hc0019040 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_phy_shutdownz Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [3] (Marginal Good) and LNKQUALLEVEL [1] (Marginal Bad). Default Value=0
csi_tadp_tx_0_reserved_31_1 = hc0019040 1 31 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_1 Thresholds for number of erroneous deliverd Packets (Bad or Missing), setting the border between LNKQUALLEVEL [3] (Marginal Good) and LNKQUALLEVEL [1] (Marginal Bad). Default Value=0



; REGISTER csi_tadp_tx_0_DPHY_RSTZ_reg Address hc0019044
_csi_tadp_tx_0_DPHY_RSTZ_reg = 3221327940 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_dphy_rstz = hc0019044 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_dphy_rstz Thresholds for number of erroneous Received Packets (Bad or Missing), setting the border between LNKQUALLEVEL [4] (Good) and LNKQUALLEVEL [5] (Excelent)
csi_tadp_tx_0_reserved_31_1 = hc0019044 1 31 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_1 Thresholds for number of erroneous Received Packets (Bad or Missing), setting the border between LNKQUALLEVEL [4] (Good) and LNKQUALLEVEL [5] (Excelent)



; REGISTER csi_tadp_tx_0_PHY_TEST_CTRL0_reg Address hc0019050
_csi_tadp_tx_0_PHY_TEST_CTRL0_reg = 3221327952 0 32 b00000000000000000000000000000001 RW
csi_tadp_tx_0_phy_testclr = hc0019050 0 1 h1 RW BIN
; Desc_csi_tadp_tx_0_phy_testclr Thresholds for average number of ReTx Retries used while trying to recover bad or missing received Packet. Used as an additionalcondition to QRcvLvlThr[3] threshold, indicating that for 'Marginal Good' Link Quality, the number of ReTx retries must be below QRcvLvlThr[5]
csi_tadp_tx_0_phy_testclk = hc0019050 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_phy_testclk Thresholds for average number of ReTx Retries used while trying to recover bad or missing received Packet. Used as an additionalcondition to QRcvLvlThr[3] threshold, indicating that for 'Marginal Good' Link Quality, the number of ReTx retries must be below QRcvLvlThr[5]
csi_tadp_tx_0_reserved_31_2 = hc0019050 2 30 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_2 Thresholds for average number of ReTx Retries used while trying to recover bad or missing received Packet. Used as an additionalcondition to QRcvLvlThr[3] threshold, indicating that for 'Marginal Good' Link Quality, the number of ReTx retries must be below QRcvLvlThr[5]



; REGISTER csi_tadp_tx_0_PHY_TEST_CTRL1_reg Address hc0019054
_csi_tadp_tx_0_PHY_TEST_CTRL1_reg = 3221327956 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_phy_testdin = hc0019054 0 8 h0 RW HEX
; Desc_csi_tadp_tx_0_phy_testdin Enable the Host to configure the Number of Delivered A-Packets (Good, Bad CRC-32 or Missing), in each period.
csi_tadp_tx_0_phy_testdout = hc0019054 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_phy_testdout Enable the Host to configure the Number of Delivered A-Packets (Good, Bad CRC-32 or Missing), in each period.
csi_tadp_tx_0_phy_testen = hc0019054 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_phy_testen Enable the Host to configure the Number of Delivered A-Packets (Good, Bad CRC-32 or Missing), in each period.
csi_tadp_tx_0_reserved_31_17 = hc0019054 17 15 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_17 Enable the Host to configure the Number of Delivered A-Packets (Good, Bad CRC-32 or Missing), in each period.



; REGISTER csi_tadp_tx_0_PPI_PG_PATTERN_VRES_reg Address hc0019060
_csi_tadp_tx_0_PPI_PG_PATTERN_VRES_reg = 3221327968 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_ppi_pg_pattern_vres = hc0019060 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_ppi_pg_pattern_vres 32 LSBits
csi_tadp_tx_0_reserved_31_16 = hc0019060 16 16 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_16 32 LSBits



; REGISTER csi_tadp_tx_0_PPI_PG_PATTERN_HRES_reg Address hc0019064
_csi_tadp_tx_0_PPI_PG_PATTERN_HRES_reg = 3221327972 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_ppi_pg_pattern_hres = hc0019064 0 16 h0 RW HEX
; Desc_csi_tadp_tx_0_ppi_pg_pattern_hres 32 MSBits
csi_tadp_tx_0_reserved_31_16 = hc0019064 16 16 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_16 32 MSBits



; REGISTER csi_tadp_tx_0_PPI_PG_CONFIG_reg Address hc0019068
_csi_tadp_tx_0_PPI_PG_CONFIG_reg = 3221327976 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_ppi_pg_pattern = hc0019068 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_ppi_pg_pattern 32 LSBits
csi_tadp_tx_0_reserved_7_1 = hc0019068 1 7 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_7_1 32 LSBits
csi_tadp_tx_0_ppi_pg_datatype = hc0019068 8 6 h0 RW HEX
; Desc_csi_tadp_tx_0_ppi_pg_datatype 32 LSBits
csi_tadp_tx_0_ppi_pg_vc = hc0019068 14 2 h0 RW HEX
; Desc_csi_tadp_tx_0_ppi_pg_vc 32 LSBits
csi_tadp_tx_0_ppi_pg_vcx_0_1 = hc0019068 16 2 h0 RW HEX
; Desc_csi_tadp_tx_0_ppi_pg_vcx_0_1 32 LSBits
csi_tadp_tx_0_ppi_pg_vcx_2 = hc0019068 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_ppi_pg_vcx_2 32 LSBits
csi_tadp_tx_0_reserved_31_19 = hc0019068 19 13 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_19 32 LSBits



; REGISTER csi_tadp_tx_0_PPI_PG_ENABLE_reg Address hc001906c
_csi_tadp_tx_0_PPI_PG_ENABLE_reg = 3221327980 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_ppi_pg_enable = hc001906c 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_ppi_pg_enable 32 MSBits
csi_tadp_tx_0_reserved_31_1 = hc001906c 1 31 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_1 32 MSBits



; REGISTER csi_tadp_tx_0_VC_EXTENSION_reg Address hc00190c8
_csi_tadp_tx_0_VC_EXTENSION_reg = 3221328072 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_vcx = hc00190c8 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_vcx 32 LSBits
csi_tadp_tx_0_reserved_31_1 = hc00190c8 1 31 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_1 32 LSBits



; REGISTER csi_tadp_tx_0_INT_MSK_PHY_FATAL_reg Address hc00190e4
_csi_tadp_tx_0_INT_MSK_PHY_FATAL_reg = 3221328100 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_mask_phy_errsotsynchs_0 = hc00190e4 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_errsotsynchs_0 32 MSBits
csi_tadp_tx_0_mask_phy_errsotsynchs_1 = hc00190e4 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_errsotsynchs_1 32 MSBits
csi_tadp_tx_0_mask_phy_errsotsynchs_2 = hc00190e4 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_errsotsynchs_2 32 MSBits
csi_tadp_tx_0_mask_phy_errsotsynchs_3 = hc00190e4 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_errsotsynchs_3 32 MSBits
csi_tadp_tx_0_reserved_4 = hc00190e4 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_4 32 MSBits
csi_tadp_tx_0_reserved_5 = hc00190e4 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_5 32 MSBits
csi_tadp_tx_0_reserved_6 = hc00190e4 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_6 32 MSBits
csi_tadp_tx_0_reserved_7 = hc00190e4 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_7 32 MSBits
csi_tadp_tx_0_err_deskew = hc00190e4 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_deskew 32 MSBits
csi_tadp_tx_0_reserved_15_9 = hc00190e4 9 7 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_15_9 32 MSBits
csi_tadp_tx_0_mask_phy_rxinvalidcodehs_0 = hc00190e4 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_rxinvalidcodehs_0 32 MSBits
csi_tadp_tx_0_mask_phy_rxinvalidcodehs_1 = hc00190e4 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_rxinvalidcodehs_1 32 MSBits
csi_tadp_tx_0_mask_phy_rxinvalidcodehs_2 = hc00190e4 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_rxinvalidcodehs_2 32 MSBits
csi_tadp_tx_0_reserved_31_19 = hc00190e4 19 13 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_19 32 MSBits



; REGISTER csi_tadp_tx_0_INT_FORCE_PHY_FATAL_reg Address hc00190e8
_csi_tadp_tx_0_INT_FORCE_PHY_FATAL_reg = 3221328104 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_force_phy_errsotsynchs_0 = hc00190e8 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_errsotsynchs_0 Number of Link Down Events Occurred
csi_tadp_tx_0_force_phy_errsotsynchs_1 = hc00190e8 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_errsotsynchs_1 Number of Link Down Events Occurred
csi_tadp_tx_0_force_phy_errsotsynchs_2 = hc00190e8 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_errsotsynchs_2 Number of Link Down Events Occurred
csi_tadp_tx_0_force_phy_errsotsynchs_3 = hc00190e8 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_errsotsynchs_3 Number of Link Down Events Occurred
csi_tadp_tx_0_reserved_4 = hc00190e8 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_4 Number of Link Down Events Occurred
csi_tadp_tx_0_reserved_5 = hc00190e8 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_5 Number of Link Down Events Occurred
csi_tadp_tx_0_reserved_6 = hc00190e8 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_6 Number of Link Down Events Occurred
csi_tadp_tx_0_reserved_7 = hc00190e8 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_7 Number of Link Down Events Occurred
csi_tadp_tx_0_err_deskew = hc00190e8 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_deskew Number of Link Down Events Occurred
csi_tadp_tx_0_reserved_15_9 = hc00190e8 9 7 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_15_9 Number of Link Down Events Occurred
csi_tadp_tx_0_force_phy_rxinvalidcodehs_0 = hc00190e8 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_rxinvalidcodehs_0 Number of Link Down Events Occurred
csi_tadp_tx_0_force_phy_rxinvalidcodehs_1 = hc00190e8 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_rxinvalidcodehs_1 Number of Link Down Events Occurred
csi_tadp_tx_0_force_phy_rxinvalidcodehs_2 = hc00190e8 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_rxinvalidcodehs_2 Number of Link Down Events Occurred
csi_tadp_tx_0_reserved_31_19 = hc00190e8 19 13 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_19 Number of Link Down Events Occurred



; REGISTER csi_tadp_tx_0_INT_MSK_PKT_FATAL_reg Address hc00190f4
_csi_tadp_tx_0_INT_MSK_PKT_FATAL_reg = 3221328116 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_mask_err_ecc_double = hc00190f4 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_ecc_double Last Startup or On-Going Startup Iteration Count. if CurrentState=Startup means that Startup is on-going 
csi_tadp_tx_0_mask_shorter_payload = hc00190f4 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_shorter_payload Last Startup or On-Going Startup Iteration Count. if CurrentState=Startup means that Startup is on-going 
csi_tadp_tx_0_reserved_31_2 = hc00190f4 2 30 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_2 Last Startup or On-Going Startup Iteration Count. if CurrentState=Startup means that Startup is on-going 



; REGISTER csi_tadp_tx_0_INT_FORCE_PKT_FATAL_reg Address hc00190f8
_csi_tadp_tx_0_INT_FORCE_PKT_FATAL_reg = 3221328120 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_force_err_ecc_double = hc00190f8 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_ecc_double FW Reports the last Startup Time duration. Time units in us
csi_tadp_tx_0_force_shorter_payload = hc00190f8 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_shorter_payload FW Reports the last Startup Time duration. Time units in us
csi_tadp_tx_0_reserved_31_2 = hc00190f8 2 30 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_2 FW Reports the last Startup Time duration. Time units in us



; REGISTER csi_tadp_tx_0_INT_MSK_PHY_reg Address hc0019114
_csi_tadp_tx_0_INT_MSK_PHY_reg = 3221328148 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_mask_phy_errsoths_0 = hc0019114 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_errsoths_0 Bit array, where each bit indicate that an exception event have occurred. Associate each bit with an exception event is TBD. The register is set to zero on each Readsb0: NormalPERReady, b1: BISTPERReady, b2: BISTBERReady, b3: CabDiagDone, b4: Read all Patch Commands, b5: Re-Train Not Recovered
csi_tadp_tx_0_mask_phy_errsoths_1 = hc0019114 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_errsoths_1 Bit array, where each bit indicate that an exception event have occurred. Associate each bit with an exception event is TBD. The register is set to zero on each Readsb0: NormalPERReady, b1: BISTPERReady, b2: BISTBERReady, b3: CabDiagDone, b4: Read all Patch Commands, b5: Re-Train Not Recovered
csi_tadp_tx_0_mask_phy_errsoths_2 = hc0019114 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_errsoths_2 Bit array, where each bit indicate that an exception event have occurred. Associate each bit with an exception event is TBD. The register is set to zero on each Readsb0: NormalPERReady, b1: BISTPERReady, b2: BISTBERReady, b3: CabDiagDone, b4: Read all Patch Commands, b5: Re-Train Not Recovered
csi_tadp_tx_0_mask_phy_errsoths_3 = hc0019114 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_errsoths_3 Bit array, where each bit indicate that an exception event have occurred. Associate each bit with an exception event is TBD. The register is set to zero on each Readsb0: NormalPERReady, b1: BISTPERReady, b2: BISTBERReady, b3: CabDiagDone, b4: Read all Patch Commands, b5: Re-Train Not Recovered
csi_tadp_tx_0_reserved_4 = hc0019114 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_4 Bit array, where each bit indicate that an exception event have occurred. Associate each bit with an exception event is TBD. The register is set to zero on each Readsb0: NormalPERReady, b1: BISTPERReady, b2: BISTBERReady, b3: CabDiagDone, b4: Read all Patch Commands, b5: Re-Train Not Recovered
csi_tadp_tx_0_reserved_5 = hc0019114 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_5 Bit array, where each bit indicate that an exception event have occurred. Associate each bit with an exception event is TBD. The register is set to zero on each Readsb0: NormalPERReady, b1: BISTPERReady, b2: BISTBERReady, b3: CabDiagDone, b4: Read all Patch Commands, b5: Re-Train Not Recovered
csi_tadp_tx_0_reserved_6 = hc0019114 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_6 Bit array, where each bit indicate that an exception event have occurred. Associate each bit with an exception event is TBD. The register is set to zero on each Readsb0: NormalPERReady, b1: BISTPERReady, b2: BISTBERReady, b3: CabDiagDone, b4: Read all Patch Commands, b5: Re-Train Not Recovered
csi_tadp_tx_0_reserved_7 = hc0019114 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_7 Bit array, where each bit indicate that an exception event have occurred. Associate each bit with an exception event is TBD. The register is set to zero on each Readsb0: NormalPERReady, b1: BISTPERReady, b2: BISTBERReady, b3: CabDiagDone, b4: Read all Patch Commands, b5: Re-Train Not Recovered
csi_tadp_tx_0_reserved_15_8 = hc0019114 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_15_8 Bit array, where each bit indicate that an exception event have occurred. Associate each bit with an exception event is TBD. The register is set to zero on each Readsb0: NormalPERReady, b1: BISTPERReady, b2: BISTBERReady, b3: CabDiagDone, b4: Read all Patch Commands, b5: Re-Train Not Recovered
csi_tadp_tx_0_mask_phy_erresc_0 = hc0019114 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_erresc_0 Bit array, where each bit indicate that an exception event have occurred. Associate each bit with an exception event is TBD. The register is set to zero on each Readsb0: NormalPERReady, b1: BISTPERReady, b2: BISTBERReady, b3: CabDiagDone, b4: Read all Patch Commands, b5: Re-Train Not Recovered
csi_tadp_tx_0_mask_phy_erresc_1 = hc0019114 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_erresc_1 Bit array, where each bit indicate that an exception event have occurred. Associate each bit with an exception event is TBD. The register is set to zero on each Readsb0: NormalPERReady, b1: BISTPERReady, b2: BISTBERReady, b3: CabDiagDone, b4: Read all Patch Commands, b5: Re-Train Not Recovered
csi_tadp_tx_0_mask_phy_erresc_2 = hc0019114 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_erresc_2 Bit array, where each bit indicate that an exception event have occurred. Associate each bit with an exception event is TBD. The register is set to zero on each Readsb0: NormalPERReady, b1: BISTPERReady, b2: BISTBERReady, b3: CabDiagDone, b4: Read all Patch Commands, b5: Re-Train Not Recovered
csi_tadp_tx_0_mask_phy_erresc_3 = hc0019114 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_erresc_3 Bit array, where each bit indicate that an exception event have occurred. Associate each bit with an exception event is TBD. The register is set to zero on each Readsb0: NormalPERReady, b1: BISTPERReady, b2: BISTBERReady, b3: CabDiagDone, b4: Read all Patch Commands, b5: Re-Train Not Recovered
csi_tadp_tx_0_reserved_20 = hc0019114 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_20 Bit array, where each bit indicate that an exception event have occurred. Associate each bit with an exception event is TBD. The register is set to zero on each Readsb0: NormalPERReady, b1: BISTPERReady, b2: BISTBERReady, b3: CabDiagDone, b4: Read all Patch Commands, b5: Re-Train Not Recovered
csi_tadp_tx_0_reserved_21 = hc0019114 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_21 Bit array, where each bit indicate that an exception event have occurred. Associate each bit with an exception event is TBD. The register is set to zero on each Readsb0: NormalPERReady, b1: BISTPERReady, b2: BISTBERReady, b3: CabDiagDone, b4: Read all Patch Commands, b5: Re-Train Not Recovered
csi_tadp_tx_0_reserved_22 = hc0019114 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_22 Bit array, where each bit indicate that an exception event have occurred. Associate each bit with an exception event is TBD. The register is set to zero on each Readsb0: NormalPERReady, b1: BISTPERReady, b2: BISTBERReady, b3: CabDiagDone, b4: Read all Patch Commands, b5: Re-Train Not Recovered
csi_tadp_tx_0_reserved_23 = hc0019114 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_23 Bit array, where each bit indicate that an exception event have occurred. Associate each bit with an exception event is TBD. The register is set to zero on each Readsb0: NormalPERReady, b1: BISTPERReady, b2: BISTBERReady, b3: CabDiagDone, b4: Read all Patch Commands, b5: Re-Train Not Recovered
csi_tadp_tx_0_reserved_31_24 = hc0019114 24 8 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_24 Bit array, where each bit indicate that an exception event have occurred. Associate each bit with an exception event is TBD. The register is set to zero on each Readsb0: NormalPERReady, b1: BISTPERReady, b2: BISTBERReady, b3: CabDiagDone, b4: Read all Patch Commands, b5: Re-Train Not Recovered



; REGISTER csi_tadp_tx_0_INT_FORCE_PHY_reg Address hc0019118
_csi_tadp_tx_0_INT_FORCE_PHY_reg = 3221328152 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_force_phy_errsoths_0 = hc0019118 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_errsoths_0 FSM Increase 'Min Link RTD' by DeltaRTD, before config to RTS
csi_tadp_tx_0_force_phy_errsoths_1 = hc0019118 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_errsoths_1 FSM Increase 'Min Link RTD' by DeltaRTD, before config to RTS
csi_tadp_tx_0_force_phy_errsoths_2 = hc0019118 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_errsoths_2 FSM Increase 'Min Link RTD' by DeltaRTD, before config to RTS
csi_tadp_tx_0_force_phy_errsoths_3 = hc0019118 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_errsoths_3 FSM Increase 'Min Link RTD' by DeltaRTD, before config to RTS
csi_tadp_tx_0_reserved_4 = hc0019118 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_4 FSM Increase 'Min Link RTD' by DeltaRTD, before config to RTS
csi_tadp_tx_0_reserved_5 = hc0019118 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_5 FSM Increase 'Min Link RTD' by DeltaRTD, before config to RTS
csi_tadp_tx_0_reserved_6 = hc0019118 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_6 FSM Increase 'Min Link RTD' by DeltaRTD, before config to RTS
csi_tadp_tx_0_reserved_7 = hc0019118 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_7 FSM Increase 'Min Link RTD' by DeltaRTD, before config to RTS
csi_tadp_tx_0_reserved_15_8 = hc0019118 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_15_8 FSM Increase 'Min Link RTD' by DeltaRTD, before config to RTS
csi_tadp_tx_0_force_phy_erresc_0 = hc0019118 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_erresc_0 FSM Increase 'Min Link RTD' by DeltaRTD, before config to RTS
csi_tadp_tx_0_force_phy_erresc_1 = hc0019118 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_erresc_1 FSM Increase 'Min Link RTD' by DeltaRTD, before config to RTS
csi_tadp_tx_0_force_phy_erresc_2 = hc0019118 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_erresc_2 FSM Increase 'Min Link RTD' by DeltaRTD, before config to RTS
csi_tadp_tx_0_force_phy_erresc_3 = hc0019118 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_erresc_3 FSM Increase 'Min Link RTD' by DeltaRTD, before config to RTS
csi_tadp_tx_0_reserved_20 = hc0019118 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_20 FSM Increase 'Min Link RTD' by DeltaRTD, before config to RTS
csi_tadp_tx_0_reserved_21 = hc0019118 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_21 FSM Increase 'Min Link RTD' by DeltaRTD, before config to RTS
csi_tadp_tx_0_reserved_22 = hc0019118 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_22 FSM Increase 'Min Link RTD' by DeltaRTD, before config to RTS
csi_tadp_tx_0_reserved_23 = hc0019118 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_23 FSM Increase 'Min Link RTD' by DeltaRTD, before config to RTS
csi_tadp_tx_0_reserved_31_24 = hc0019118 24 8 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_24 FSM Increase 'Min Link RTD' by DeltaRTD, before config to RTS



; REGISTER csi_tadp_tx_0_INT_MSK_LINE_reg Address hc0019134
_csi_tadp_tx_0_INT_MSK_LINE_reg = 3221328180 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_mask_err_l_bndry_match_di0 = hc0019134 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_bndry_match_di0 TX PCS & PMD Fixed Latency, provided in ns units (used to init TxAddFixedDelay TX RTS Reg)
csi_tadp_tx_0_mask_err_l_bndry_match_di1 = hc0019134 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_bndry_match_di1 TX PCS & PMD Fixed Latency, provided in ns units (used to init TxAddFixedDelay TX RTS Reg)
csi_tadp_tx_0_mask_err_l_bndry_match_di2 = hc0019134 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_bndry_match_di2 TX PCS & PMD Fixed Latency, provided in ns units (used to init TxAddFixedDelay TX RTS Reg)
csi_tadp_tx_0_mask_err_l_bndry_match_di3 = hc0019134 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_bndry_match_di3 TX PCS & PMD Fixed Latency, provided in ns units (used to init TxAddFixedDelay TX RTS Reg)
csi_tadp_tx_0_mask_err_l_bndry_match_di4 = hc0019134 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_bndry_match_di4 TX PCS & PMD Fixed Latency, provided in ns units (used to init TxAddFixedDelay TX RTS Reg)
csi_tadp_tx_0_mask_err_l_bndry_match_di5 = hc0019134 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_bndry_match_di5 TX PCS & PMD Fixed Latency, provided in ns units (used to init TxAddFixedDelay TX RTS Reg)
csi_tadp_tx_0_mask_err_l_bndry_match_di6 = hc0019134 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_bndry_match_di6 TX PCS & PMD Fixed Latency, provided in ns units (used to init TxAddFixedDelay TX RTS Reg)
csi_tadp_tx_0_mask_err_l_bndry_match_di7 = hc0019134 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_bndry_match_di7 TX PCS & PMD Fixed Latency, provided in ns units (used to init TxAddFixedDelay TX RTS Reg)
csi_tadp_tx_0_reserved_15_8 = hc0019134 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_15_8 TX PCS & PMD Fixed Latency, provided in ns units (used to init TxAddFixedDelay TX RTS Reg)
csi_tadp_tx_0_mask_err_l_seq_di0 = hc0019134 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_seq_di0 TX PCS & PMD Fixed Latency, provided in ns units (used to init TxAddFixedDelay TX RTS Reg)
csi_tadp_tx_0_mask_err_l_seq_di1 = hc0019134 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_seq_di1 TX PCS & PMD Fixed Latency, provided in ns units (used to init TxAddFixedDelay TX RTS Reg)
csi_tadp_tx_0_mask_err_l_seq_di2 = hc0019134 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_seq_di2 TX PCS & PMD Fixed Latency, provided in ns units (used to init TxAddFixedDelay TX RTS Reg)
csi_tadp_tx_0_mask_err_l_seq_di3 = hc0019134 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_seq_di3 TX PCS & PMD Fixed Latency, provided in ns units (used to init TxAddFixedDelay TX RTS Reg)
csi_tadp_tx_0_mask_err_l_seq_di4 = hc0019134 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_seq_di4 TX PCS & PMD Fixed Latency, provided in ns units (used to init TxAddFixedDelay TX RTS Reg)
csi_tadp_tx_0_mask_err_l_seq_di5 = hc0019134 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_seq_di5 TX PCS & PMD Fixed Latency, provided in ns units (used to init TxAddFixedDelay TX RTS Reg)
csi_tadp_tx_0_mask_err_l_seq_di6 = hc0019134 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_seq_di6 TX PCS & PMD Fixed Latency, provided in ns units (used to init TxAddFixedDelay TX RTS Reg)
csi_tadp_tx_0_mask_err_l_seq_di7 = hc0019134 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_seq_di7 TX PCS & PMD Fixed Latency, provided in ns units (used to init TxAddFixedDelay TX RTS Reg)
csi_tadp_tx_0_reserved_31_24 = hc0019134 24 8 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_24 TX PCS & PMD Fixed Latency, provided in ns units (used to init TxAddFixedDelay TX RTS Reg)



; REGISTER csi_tadp_tx_0_INT_FORCE_LINE_reg Address hc0019138
_csi_tadp_tx_0_INT_FORCE_LINE_reg = 3221328184 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_force_err_l_bndry_match_di0 = hc0019138 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_bndry_match_di0 Uplink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_err_l_bndry_match_di1 = hc0019138 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_bndry_match_di1 Uplink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_err_l_bndry_match_di2 = hc0019138 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_bndry_match_di2 Uplink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_err_l_bndry_match_di3 = hc0019138 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_bndry_match_di3 Uplink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_err_l_bndry_match_di4 = hc0019138 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_bndry_match_di4 Uplink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_err_l_bndry_match_di5 = hc0019138 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_bndry_match_di5 Uplink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_err_l_bndry_match_di6 = hc0019138 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_bndry_match_di6 Uplink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_err_l_bndry_match_di7 = hc0019138 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_bndry_match_di7 Uplink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_reserved_15_8 = hc0019138 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_15_8 Uplink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_err_l_seq_di0 = hc0019138 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_seq_di0 Uplink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_err_l_seq_di1 = hc0019138 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_seq_di1 Uplink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_err_l_seq_di2 = hc0019138 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_seq_di2 Uplink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_err_l_seq_di3 = hc0019138 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_seq_di3 Uplink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_err_l_seq_di4 = hc0019138 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_seq_di4 Uplink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_err_l_seq_di5 = hc0019138 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_seq_di5 Uplink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_err_l_seq_di6 = hc0019138 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_seq_di6 Uplink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_err_l_seq_di7 = hc0019138 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_seq_di7 Uplink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_reserved_31_24 = hc0019138 24 8 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_24 Uplink [Max RTS Delay] provided in ns units (as defined by the standard)



; REGISTER csi_tadp_tx_0_INT_MSK_AP_GENERIC_reg Address hc0019184
_csi_tadp_tx_0_INT_MSK_AP_GENERIC_reg = 3221328260 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_msk_apb_ap_err = hc0019184 0 2 h0 RW HEX
; Desc_csi_tadp_tx_0_msk_apb_ap_err Uplink [ReTxReqWait] provided in ns units (as defined by the standard)
csi_tadp_tx_0_msk_reg_bank_ap_err = hc0019184 2 2 h0 RW HEX
; Desc_csi_tadp_tx_0_msk_reg_bank_ap_err Uplink [ReTxReqWait] provided in ns units (as defined by the standard)
csi_tadp_tx_0_msk_de_skew_ap_err = hc0019184 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_msk_de_skew_ap_err Uplink [ReTxReqWait] provided in ns units (as defined by the standard)
csi_tadp_tx_0_reserved_5 = hc0019184 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_5 Uplink [ReTxReqWait] provided in ns units (as defined by the standard)
csi_tadp_tx_0_msk_descrambler_ap_err = hc0019184 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_msk_descrambler_ap_err Uplink [ReTxReqWait] provided in ns units (as defined by the standard)
csi_tadp_tx_0_msk_phy_adapter_ap_err = hc0019184 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_msk_phy_adapter_ap_err Uplink [ReTxReqWait] provided in ns units (as defined by the standard)
csi_tadp_tx_0_msk_packet_analyzer_ap_err = hc0019184 8 2 h0 RW HEX
; Desc_csi_tadp_tx_0_msk_packet_analyzer_ap_err Uplink [ReTxReqWait] provided in ns units (as defined by the standard)
csi_tadp_tx_0_msk_prep_outs_ap_err = hc0019184 10 2 h0 RW HEX
; Desc_csi_tadp_tx_0_msk_prep_outs_ap_err Uplink [ReTxReqWait] provided in ns units (as defined by the standard)
csi_tadp_tx_0_msk_err_msgr_ap_err = hc0019184 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_msk_err_msgr_ap_err Uplink [ReTxReqWait] provided in ns units (as defined by the standard)
csi_tadp_tx_0_msk_err_handler_ap_err = hc0019184 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_msk_err_handler_ap_err Uplink [ReTxReqWait] provided in ns units (as defined by the standard)
csi_tadp_tx_0_msk_synchronizer_fpclk_ap_err = hc0019184 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_msk_synchronizer_fpclk_ap_err Uplink [ReTxReqWait] provided in ns units (as defined by the standard)
csi_tadp_tx_0_msk_synchronizer_rxbyteclkhs_ap_err = hc0019184 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_msk_synchronizer_rxbyteclkhs_ap_err Uplink [ReTxReqWait] provided in ns units (as defined by the standard)
csi_tadp_tx_0_reserved_16 = hc0019184 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_16 Uplink [ReTxReqWait] provided in ns units (as defined by the standard)
csi_tadp_tx_0_reserved_17 = hc0019184 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_17 Uplink [ReTxReqWait] provided in ns units (as defined by the standard)
csi_tadp_tx_0_reserved_18 = hc0019184 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_18 Uplink [ReTxReqWait] provided in ns units (as defined by the standard)
csi_tadp_tx_0_reserved_19 = hc0019184 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_19 Uplink [ReTxReqWait] provided in ns units (as defined by the standard)
csi_tadp_tx_0_reserved_20 = hc0019184 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_20 Uplink [ReTxReqWait] provided in ns units (as defined by the standard)
csi_tadp_tx_0_reserved_21 = hc0019184 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_21 Uplink [ReTxReqWait] provided in ns units (as defined by the standard)
csi_tadp_tx_0_reserved_22 = hc0019184 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_22 Uplink [ReTxReqWait] provided in ns units (as defined by the standard)
csi_tadp_tx_0_reserved_23 = hc0019184 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_23 Uplink [ReTxReqWait] provided in ns units (as defined by the standard)
csi_tadp_tx_0_msk_cphy_ap_err = hc0019184 24 2 h0 RW HEX
; Desc_csi_tadp_tx_0_msk_cphy_ap_err Uplink [ReTxReqWait] provided in ns units (as defined by the standard)
csi_tadp_tx_0_reserved_31_26 = hc0019184 26 6 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_26 Uplink [ReTxReqWait] provided in ns units (as defined by the standard)



; REGISTER csi_tadp_tx_0_INT_FORCE_AP_GENERIC_reg Address hc0019188
_csi_tadp_tx_0_INT_FORCE_AP_GENERIC_reg = 3221328264 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_force_apb_ap_err = hc0019188 0 2 h0 RW HEX
; Desc_csi_tadp_tx_0_force_apb_ap_err Downlink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_reg_bank_ap_err = hc0019188 2 2 h0 RW HEX
; Desc_csi_tadp_tx_0_force_reg_bank_ap_err Downlink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_de_skew_ap_err = hc0019188 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_de_skew_ap_err Downlink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_reserved_5 = hc0019188 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_5 Downlink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_descrambler_ap_err = hc0019188 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_descrambler_ap_err Downlink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_phy_adapter_ap_err = hc0019188 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_adapter_ap_err Downlink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_packet_analyzer_ap_err = hc0019188 8 2 h0 RW HEX
; Desc_csi_tadp_tx_0_force_packet_analyzer_ap_err Downlink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_prep_outs_ap_err = hc0019188 10 2 h0 RW HEX
; Desc_csi_tadp_tx_0_force_prep_outs_ap_err Downlink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_err_msgr_ap_err = hc0019188 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_msgr_ap_err Downlink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_err_handler_ap_err = hc0019188 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_handler_ap_err Downlink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_synchronizer_fpclk_ap_err = hc0019188 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_synchronizer_fpclk_ap_err Downlink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_synchronizer_rxbyteclkhs_ap_err = hc0019188 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_synchronizer_rxbyteclkhs_ap_err Downlink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_reserved_16 = hc0019188 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_16 Downlink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_reserved_17 = hc0019188 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_17 Downlink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_reserved_18 = hc0019188 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_18 Downlink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_reserved_19 = hc0019188 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_19 Downlink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_reserved_20 = hc0019188 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_20 Downlink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_reserved_21 = hc0019188 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_21 Downlink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_reserved_22 = hc0019188 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_22 Downlink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_reserved_23 = hc0019188 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_23 Downlink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_force_cphy_ap_err = hc0019188 24 2 h0 RW HEX
; Desc_csi_tadp_tx_0_force_cphy_ap_err Downlink [Max RTS Delay] provided in ns units (as defined by the standard)
csi_tadp_tx_0_reserved_31_26 = hc0019188 26 6 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_26 Downlink [Max RTS Delay] provided in ns units (as defined by the standard)



; REGISTER csi_tadp_tx_0_INT_MSK_LOGGER_ERR_reg Address hc00191d4
_csi_tadp_tx_0_INT_MSK_LOGGER_ERR_reg = 3221328340 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_msk_adv_log_ap_underflow = hc00191d4 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_msk_adv_log_ap_underflow Downlink [ReTxReqWait] provided in ns units (as defined by the standard)
csi_tadp_tx_0_msk_adv_log_ap_overflow = hc00191d4 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_msk_adv_log_ap_overflow Downlink [ReTxReqWait] provided in ns units (as defined by the standard)
csi_tadp_tx_0_reserved_31_2 = hc00191d4 2 30 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_2 Downlink [ReTxReqWait] provided in ns units (as defined by the standard)



; REGISTER csi_tadp_tx_0_INT_FORCE_LOGGER_ERR_reg Address hc00191d8
_csi_tadp_tx_0_INT_FORCE_LOGGER_ERR_reg = 3221328344 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_force_adv_log_ap_underflow = hc00191d8 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_adv_log_ap_underflow OpCode:  Replace/And/Or
csi_tadp_tx_0_force_adv_log_ap_overflow = hc00191d8 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_adv_log_ap_overflow OpCode:  Replace/And/Or
csi_tadp_tx_0_reserved_31_2 = hc00191d8 2 30 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_2 OpCode:  Replace/And/Or



; REGISTER csi_tadp_tx_0_INT_MSK_BNDRY_FRAME_FATAL_reg Address hc0019284
_csi_tadp_tx_0_INT_MSK_BNDRY_FRAME_FATAL_reg = 3221328516 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_err_f_bndry_match_vc0 = hc0019284 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc0 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc1 = hc0019284 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc1 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc2 = hc0019284 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc2 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc3 = hc0019284 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc3 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc4 = hc0019284 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc4 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc5 = hc0019284 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc5 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc6 = hc0019284 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc6 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc7 = hc0019284 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc7 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc8 = hc0019284 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc8 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc9 = hc0019284 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc9 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc10 = hc0019284 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc10 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc11 = hc0019284 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc11 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc12 = hc0019284 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc12 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc13 = hc0019284 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc13 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc14 = hc0019284 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc14 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc15 = hc0019284 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc15 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc16 = hc0019284 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc16 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc17 = hc0019284 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc17 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc18 = hc0019284 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc18 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc19 = hc0019284 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc19 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc20 = hc0019284 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc20 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc21 = hc0019284 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc21 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc22 = hc0019284 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc22 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc23 = hc0019284 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc23 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc24 = hc0019284 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc24 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc25 = hc0019284 25 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc25 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc26 = hc0019284 26 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc26 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc27 = hc0019284 27 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc27 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc28 = hc0019284 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc28 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc29 = hc0019284 29 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc29 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc30 = hc0019284 30 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc30 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_bndry_match_vc31 = hc0019284 31 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc31 Command Operand, i.e. the value used for the Replace/And/Or operation 



; REGISTER csi_tadp_tx_0_INT_FORCE_BNDRY_FRAME_FATAL_reg Address hc0019288
_csi_tadp_tx_0_INT_FORCE_BNDRY_FRAME_FATAL_reg = 3221328520 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_err_f_bndry_match_vc0 = hc0019288 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc0 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc1 = hc0019288 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc1 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc2 = hc0019288 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc2 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc3 = hc0019288 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc3 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc4 = hc0019288 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc4 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc5 = hc0019288 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc5 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc6 = hc0019288 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc6 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc7 = hc0019288 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc7 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc8 = hc0019288 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc8 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc9 = hc0019288 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc9 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc10 = hc0019288 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc10 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc11 = hc0019288 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc11 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc12 = hc0019288 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc12 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc13 = hc0019288 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc13 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc14 = hc0019288 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc14 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc15 = hc0019288 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc15 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc16 = hc0019288 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc16 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc17 = hc0019288 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc17 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc18 = hc0019288 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc18 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc19 = hc0019288 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc19 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc20 = hc0019288 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc20 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc21 = hc0019288 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc21 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc22 = hc0019288 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc22 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc23 = hc0019288 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc23 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc24 = hc0019288 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc24 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc25 = hc0019288 25 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc25 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc26 = hc0019288 26 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc26 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc27 = hc0019288 27 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc27 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc28 = hc0019288 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc28 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc29 = hc0019288 29 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc29 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc30 = hc0019288 30 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc30 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_bndry_match_vc31 = hc0019288 31 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc31 OpCode:  Replace/And/Or



; REGISTER csi_tadp_tx_0_INT_MSK_SEQ_FRAME_FATAL_reg Address hc0019294
_csi_tadp_tx_0_INT_MSK_SEQ_FRAME_FATAL_reg = 3221328532 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_err_f_seq_vc0 = hc0019294 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc0 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc1 = hc0019294 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc1 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc2 = hc0019294 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc2 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc3 = hc0019294 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc3 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc4 = hc0019294 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc4 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc5 = hc0019294 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc5 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc6 = hc0019294 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc6 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc7 = hc0019294 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc7 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc8 = hc0019294 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc8 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc9 = hc0019294 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc9 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc10 = hc0019294 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc10 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc11 = hc0019294 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc11 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc12 = hc0019294 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc12 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc13 = hc0019294 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc13 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc14 = hc0019294 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc14 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc15 = hc0019294 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc15 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc16 = hc0019294 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc16 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc17 = hc0019294 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc17 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc18 = hc0019294 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc18 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc19 = hc0019294 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc19 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc20 = hc0019294 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc20 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc21 = hc0019294 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc21 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc22 = hc0019294 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc22 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc23 = hc0019294 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc23 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc24 = hc0019294 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc24 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc25 = hc0019294 25 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc25 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc26 = hc0019294 26 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc26 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc27 = hc0019294 27 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc27 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc28 = hc0019294 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc28 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc29 = hc0019294 29 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc29 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc30 = hc0019294 30 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc30 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_f_seq_vc31 = hc0019294 31 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc31 Command Operand, i.e. the value used for the Replace/And/Or operation 



; REGISTER csi_tadp_tx_0_INT_FORCE_SEQ_FRAME_FATAL_reg Address hc0019298
_csi_tadp_tx_0_INT_FORCE_SEQ_FRAME_FATAL_reg = 3221328536 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_err_f_seq_vc0 = hc0019298 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc0 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc1 = hc0019298 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc1 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc2 = hc0019298 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc2 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc3 = hc0019298 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc3 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc4 = hc0019298 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc4 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc5 = hc0019298 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc5 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc6 = hc0019298 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc6 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc7 = hc0019298 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc7 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc8 = hc0019298 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc8 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc9 = hc0019298 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc9 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc10 = hc0019298 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc10 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc11 = hc0019298 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc11 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc12 = hc0019298 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc12 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc13 = hc0019298 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc13 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc14 = hc0019298 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc14 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc15 = hc0019298 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc15 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc16 = hc0019298 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc16 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc17 = hc0019298 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc17 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc18 = hc0019298 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc18 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc19 = hc0019298 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc19 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc20 = hc0019298 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc20 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc21 = hc0019298 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc21 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc22 = hc0019298 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc22 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc23 = hc0019298 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc23 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc24 = hc0019298 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc24 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc25 = hc0019298 25 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc25 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc26 = hc0019298 26 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc26 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc27 = hc0019298 27 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc27 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc28 = hc0019298 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc28 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc29 = hc0019298 29 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc29 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc30 = hc0019298 30 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc30 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_f_seq_vc31 = hc0019298 31 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc31 OpCode:  Replace/And/Or



; REGISTER csi_tadp_tx_0_INT_MSK_CRC_FRAME_FATAL_reg Address hc00192a4
_csi_tadp_tx_0_INT_MSK_CRC_FRAME_FATAL_reg = 3221328548 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_err_frame_data_vc0 = hc00192a4 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc0 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc1 = hc00192a4 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc1 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc2 = hc00192a4 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc2 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc3 = hc00192a4 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc3 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc4 = hc00192a4 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc4 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc5 = hc00192a4 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc5 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc6 = hc00192a4 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc6 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc7 = hc00192a4 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc7 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc8 = hc00192a4 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc8 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc9 = hc00192a4 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc9 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc10 = hc00192a4 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc10 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc11 = hc00192a4 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc11 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc12 = hc00192a4 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc12 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc13 = hc00192a4 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc13 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc14 = hc00192a4 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc14 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc15 = hc00192a4 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc15 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc16 = hc00192a4 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc16 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc17 = hc00192a4 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc17 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc18 = hc00192a4 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc18 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc19 = hc00192a4 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc19 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc20 = hc00192a4 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc20 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc21 = hc00192a4 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc21 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc22 = hc00192a4 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc22 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc23 = hc00192a4 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc23 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc24 = hc00192a4 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc24 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc25 = hc00192a4 25 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc25 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc26 = hc00192a4 26 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc26 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc27 = hc00192a4 27 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc27 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc28 = hc00192a4 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc28 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc29 = hc00192a4 29 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc29 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc30 = hc00192a4 30 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc30 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_frame_data_vc31 = hc00192a4 31 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc31 Command Operand, i.e. the value used for the Replace/And/Or operation 



; REGISTER csi_tadp_tx_0_INT_FORCE_CRC_FRAME_FATAL_reg Address hc00192a8
_csi_tadp_tx_0_INT_FORCE_CRC_FRAME_FATAL_reg = 3221328552 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_err_frame_data_vc0 = hc00192a8 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc0 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc1 = hc00192a8 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc1 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc2 = hc00192a8 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc2 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc3 = hc00192a8 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc3 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc4 = hc00192a8 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc4 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc5 = hc00192a8 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc5 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc6 = hc00192a8 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc6 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc7 = hc00192a8 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc7 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc8 = hc00192a8 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc8 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc9 = hc00192a8 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc9 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc10 = hc00192a8 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc10 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc11 = hc00192a8 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc11 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc12 = hc00192a8 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc12 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc13 = hc00192a8 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc13 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc14 = hc00192a8 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc14 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc15 = hc00192a8 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc15 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc16 = hc00192a8 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc16 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc17 = hc00192a8 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc17 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc18 = hc00192a8 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc18 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc19 = hc00192a8 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc19 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc20 = hc00192a8 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc20 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc21 = hc00192a8 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc21 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc22 = hc00192a8 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc22 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc23 = hc00192a8 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc23 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc24 = hc00192a8 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc24 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc25 = hc00192a8 25 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc25 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc26 = hc00192a8 26 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc26 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc27 = hc00192a8 27 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc27 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc28 = hc00192a8 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc28 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc29 = hc00192a8 29 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc29 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc30 = hc00192a8 30 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc30 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_frame_data_vc31 = hc00192a8 31 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc31 OpCode:  Replace/And/Or



; REGISTER csi_tadp_tx_0_INT_MSK_PLD_CRC_FATAL_reg Address hc00192b4
_csi_tadp_tx_0_INT_MSK_PLD_CRC_FATAL_reg = 3221328564 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_err_crc_vc0 = hc00192b4 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc0 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc1 = hc00192b4 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc1 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc2 = hc00192b4 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc2 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc3 = hc00192b4 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc3 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc4 = hc00192b4 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc4 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc5 = hc00192b4 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc5 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc6 = hc00192b4 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc6 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc7 = hc00192b4 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc7 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc8 = hc00192b4 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc8 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc9 = hc00192b4 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc9 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc10 = hc00192b4 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc10 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc11 = hc00192b4 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc11 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc12 = hc00192b4 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc12 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc13 = hc00192b4 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc13 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc14 = hc00192b4 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc14 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc15 = hc00192b4 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc15 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc16 = hc00192b4 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc16 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc17 = hc00192b4 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc17 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc18 = hc00192b4 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc18 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc19 = hc00192b4 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc19 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc20 = hc00192b4 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc20 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc21 = hc00192b4 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc21 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc22 = hc00192b4 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc22 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc23 = hc00192b4 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc23 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc24 = hc00192b4 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc24 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc25 = hc00192b4 25 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc25 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc26 = hc00192b4 26 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc26 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc27 = hc00192b4 27 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc27 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc28 = hc00192b4 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc28 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc29 = hc00192b4 29 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc29 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc30 = hc00192b4 30 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc30 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_crc_vc31 = hc00192b4 31 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc31 Command Operand, i.e. the value used for the Replace/And/Or operation 



; REGISTER csi_tadp_tx_0_INT_FORCE_PLD_CRC_FATAL_reg Address hc00192b8
_csi_tadp_tx_0_INT_FORCE_PLD_CRC_FATAL_reg = 3221328568 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_err_crc_vc0 = hc00192b8 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc0 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc1 = hc00192b8 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc1 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc2 = hc00192b8 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc2 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc3 = hc00192b8 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc3 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc4 = hc00192b8 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc4 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc5 = hc00192b8 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc5 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc6 = hc00192b8 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc6 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc7 = hc00192b8 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc7 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc8 = hc00192b8 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc8 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc9 = hc00192b8 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc9 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc10 = hc00192b8 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc10 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc11 = hc00192b8 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc11 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc12 = hc00192b8 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc12 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc13 = hc00192b8 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc13 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc14 = hc00192b8 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc14 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc15 = hc00192b8 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc15 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc16 = hc00192b8 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc16 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc17 = hc00192b8 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc17 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc18 = hc00192b8 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc18 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc19 = hc00192b8 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc19 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc20 = hc00192b8 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc20 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc21 = hc00192b8 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc21 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc22 = hc00192b8 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc22 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc23 = hc00192b8 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc23 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc24 = hc00192b8 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc24 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc25 = hc00192b8 25 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc25 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc26 = hc00192b8 26 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc26 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc27 = hc00192b8 27 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc27 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc28 = hc00192b8 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc28 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc29 = hc00192b8 29 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc29 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc30 = hc00192b8 30 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc30 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_crc_vc31 = hc00192b8 31 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc31 OpCode:  Replace/And/Or



; REGISTER csi_tadp_tx_0_INT_MSK_DATA_ID_reg Address hc00192c4
_csi_tadp_tx_0_INT_MSK_DATA_ID_reg = 3221328580 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_err_id_vc0 = hc00192c4 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc0 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc1 = hc00192c4 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc1 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc2 = hc00192c4 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc2 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc3 = hc00192c4 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc3 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc4 = hc00192c4 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc4 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc5 = hc00192c4 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc5 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc6 = hc00192c4 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc6 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc7 = hc00192c4 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc7 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc8 = hc00192c4 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc8 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc9 = hc00192c4 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc9 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc10 = hc00192c4 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc10 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc11 = hc00192c4 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc11 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc12 = hc00192c4 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc12 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc13 = hc00192c4 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc13 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc14 = hc00192c4 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc14 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc15 = hc00192c4 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc15 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc16 = hc00192c4 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc16 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc17 = hc00192c4 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc17 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc18 = hc00192c4 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc18 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc19 = hc00192c4 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc19 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc20 = hc00192c4 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc20 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc21 = hc00192c4 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc21 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc22 = hc00192c4 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc22 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc23 = hc00192c4 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc23 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc24 = hc00192c4 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc24 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc25 = hc00192c4 25 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc25 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc26 = hc00192c4 26 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc26 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc27 = hc00192c4 27 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc27 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc28 = hc00192c4 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc28 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc29 = hc00192c4 29 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc29 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc30 = hc00192c4 30 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc30 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_id_vc31 = hc00192c4 31 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc31 Command Operand, i.e. the value used for the Replace/And/Or operation 



; REGISTER csi_tadp_tx_0_INT_FORCE_DATA_ID_reg Address hc00192c8
_csi_tadp_tx_0_INT_FORCE_DATA_ID_reg = 3221328584 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_err_id_vc0 = hc00192c8 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc0 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc1 = hc00192c8 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc1 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc2 = hc00192c8 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc2 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc3 = hc00192c8 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc3 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc4 = hc00192c8 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc4 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc5 = hc00192c8 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc5 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc6 = hc00192c8 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc6 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc7 = hc00192c8 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc7 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc8 = hc00192c8 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc8 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc9 = hc00192c8 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc9 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc10 = hc00192c8 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc10 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc11 = hc00192c8 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc11 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc12 = hc00192c8 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc12 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc13 = hc00192c8 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc13 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc14 = hc00192c8 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc14 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc15 = hc00192c8 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc15 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc16 = hc00192c8 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc16 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc17 = hc00192c8 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc17 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc18 = hc00192c8 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc18 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc19 = hc00192c8 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc19 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc20 = hc00192c8 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc20 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc21 = hc00192c8 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc21 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc22 = hc00192c8 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc22 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc23 = hc00192c8 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc23 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc24 = hc00192c8 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc24 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc25 = hc00192c8 25 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc25 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc26 = hc00192c8 26 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc26 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc27 = hc00192c8 27 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc27 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc28 = hc00192c8 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc28 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc29 = hc00192c8 29 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc29 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc30 = hc00192c8 30 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc30 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_id_vc31 = hc00192c8 31 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc31 OpCode:  Replace/And/Or



; REGISTER csi_tadp_tx_0_INT_MSK_ECC_CORRECTED_reg Address hc00192d4
_csi_tadp_tx_0_INT_MSK_ECC_CORRECTED_reg = 3221328596 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_err_ecc_corrected_vc0 = hc00192d4 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc0 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected_vc1 = hc00192d4 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc1 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected_vc2 = hc00192d4 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc2 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected_vc3 = hc00192d4 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc3 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected_vc4 = hc00192d4 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc4 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected_vc5 = hc00192d4 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc5 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected_vc6 = hc00192d4 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc6 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected_vc7 = hc00192d4 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc7 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected_vc8 = hc00192d4 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc8 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected_vc9 = hc00192d4 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc9 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected_vc10 = hc00192d4 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc10 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected_vc11 = hc00192d4 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc11 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected_vc12 = hc00192d4 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc12 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected_vc13 = hc00192d4 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc13 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected_vc14 = hc00192d4 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc14 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected_vc15 = hc00192d4 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc15 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected16 = hc00192d4 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected16 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected17 = hc00192d4 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected17 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected18 = hc00192d4 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected18 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected19 = hc00192d4 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected19 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected20 = hc00192d4 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected20 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected21 = hc00192d4 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected21 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected22 = hc00192d4 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected22 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected23 = hc00192d4 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected23 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected24 = hc00192d4 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected24 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected25 = hc00192d4 25 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected25 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected26 = hc00192d4 26 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected26 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected27 = hc00192d4 27 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected27 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected28 = hc00192d4 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected28 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected29 = hc00192d4 29 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected29 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected30 = hc00192d4 30 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected30 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_err_ecc_corrected31 = hc00192d4 31 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected31 Command Operand, i.e. the value used for the Replace/And/Or operation 



; REGISTER csi_tadp_tx_0_INT_FORCE_ECC_CORRECTED_reg Address hc00192d8
_csi_tadp_tx_0_INT_FORCE_ECC_CORRECTED_reg = 3221328600 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_err_ecc_corrected_vc0 = hc00192d8 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc0 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected_vc1 = hc00192d8 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc1 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected_vc2 = hc00192d8 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc2 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected_vc3 = hc00192d8 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc3 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected_vc4 = hc00192d8 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc4 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected_vc5 = hc00192d8 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc5 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected_vc6 = hc00192d8 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc6 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected_vc7 = hc00192d8 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc7 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected_vc8 = hc00192d8 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc8 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected_vc9 = hc00192d8 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc9 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected_vc10 = hc00192d8 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc10 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected_vc11 = hc00192d8 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc11 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected_vc12 = hc00192d8 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc12 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected_vc13 = hc00192d8 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc13 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected_vc14 = hc00192d8 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc14 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected_vc15 = hc00192d8 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc15 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected16 = hc00192d8 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected16 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected17 = hc00192d8 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected17 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected18 = hc00192d8 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected18 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected19 = hc00192d8 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected19 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected20 = hc00192d8 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected20 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected21 = hc00192d8 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected21 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected22 = hc00192d8 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected22 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected23 = hc00192d8 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected23 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected24 = hc00192d8 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected24 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected25 = hc00192d8 25 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected25 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected26 = hc00192d8 26 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected26 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected27 = hc00192d8 27 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected27 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected28 = hc00192d8 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected28 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected29 = hc00192d8 29 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected29 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected30 = hc00192d8 30 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected30 OpCode:  Replace/And/Or
csi_tadp_tx_0_err_ecc_corrected31 = hc00192d8 31 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected31 OpCode:  Replace/And/Or



; REGISTER csi_tadp_tx_0_SCRAMBLING_reg Address hc0019300
_csi_tadp_tx_0_SCRAMBLING_reg = 3221328640 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_scramble_enable = hc0019300 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_scramble_enable Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_reserved_31_1 = hc0019300 1 31 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_1 Command Operand, i.e. the value used for the Replace/And/Or operation 



; REGISTER csi_tadp_tx_0_SCRAMBLING_SEED1_reg Address hc0019304
_csi_tadp_tx_0_SCRAMBLING_SEED1_reg = 3221328644 0 32 b00000000000000000001000000001000 RW
csi_tadp_tx_0_scramble_seed_lane1 = hc0019304 0 16 h1008 RW HEX
; Desc_csi_tadp_tx_0_scramble_seed_lane1 OpCode:  Replace/And/Or
csi_tadp_tx_0_reserved_31_16 = hc0019304 16 16 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_16 OpCode:  Replace/And/Or



; REGISTER csi_tadp_tx_0_SCRAMBLING_SEED2_reg Address hc0019308
_csi_tadp_tx_0_SCRAMBLING_SEED2_reg = 3221328648 0 32 b00000000000000000001000110001000 RW
csi_tadp_tx_0_scramble_seed_lane2 = hc0019308 0 16 h1188 RW HEX
; Desc_csi_tadp_tx_0_scramble_seed_lane2 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_reserved_31_16 = hc0019308 16 16 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_16 Command Operand, i.e. the value used for the Replace/And/Or operation 



; REGISTER csi_tadp_tx_0_SCRAMBLING_SEED3_reg Address hc001930c
_csi_tadp_tx_0_SCRAMBLING_SEED3_reg = 3221328652 0 32 b00000000000000000001001001001000 RW
csi_tadp_tx_0_scramble_seed_lane3 = hc001930c 0 16 h1248 RW HEX
; Desc_csi_tadp_tx_0_scramble_seed_lane3 OpCode:  Replace/And/Or
csi_tadp_tx_0_reserved_31_16 = hc001930c 16 16 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_16 OpCode:  Replace/And/Or



; REGISTER csi_tadp_tx_0_SCRAMBLING_SEED4_reg Address hc0019310
_csi_tadp_tx_0_SCRAMBLING_SEED4_reg = 3221328656 0 32 b00000000000000000001001111001000 RW
csi_tadp_tx_0_scramble_seed_lane4 = hc0019310 0 16 h13c8 RW HEX
; Desc_csi_tadp_tx_0_scramble_seed_lane4 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_reserved_31_16 = hc0019310 16 16 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_16 Command Operand, i.e. the value used for the Replace/And/Or operation 



; REGISTER csi_tadp_tx_0_N_SYNC_reg Address hc0019340
_csi_tadp_tx_0_N_SYNC_reg = 3221328704 0 32 b00000000000000000000000000000100 RW
csi_tadp_tx_0_n_max_sync = hc0019340 0 3 h4 RW HEX
; Desc_csi_tadp_tx_0_n_max_sync OpCode:  Replace/And/Or
csi_tadp_tx_0_reserved_31_3 = hc0019340 3 29 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_3 OpCode:  Replace/And/Or



; REGISTER csi_tadp_tx_0_INT_MSK_FAP_PHY_FATAL_reg Address hc0019364
_csi_tadp_tx_0_INT_MSK_FAP_PHY_FATAL_reg = 3221328740 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_mask_phy_errsotsynchs_0 = hc0019364 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_errsotsynchs_0 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_phy_errsotsynchs_1 = hc0019364 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_errsotsynchs_1 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_phy_errsotsynchs_2 = hc0019364 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_errsotsynchs_2 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_phy_errsotsynchs_3 = hc0019364 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_errsotsynchs_3 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_reserved_4 = hc0019364 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_4 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_reserved_5 = hc0019364 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_5 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_reserved_6 = hc0019364 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_6 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_reserved_7 = hc0019364 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_7 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_err_deskew = hc0019364 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_deskew Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_reserved_15_9 = hc0019364 9 7 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_15_9 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_phy_rxinvalidcodehs_0 = hc0019364 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_rxinvalidcodehs_0 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_phy_rxinvalidcodehs_1 = hc0019364 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_rxinvalidcodehs_1 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_phy_rxinvalidcodehs_2 = hc0019364 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_rxinvalidcodehs_2 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_reserved_31_19 = hc0019364 19 13 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_19 Command Operand, i.e. the value used for the Replace/And/Or operation 



; REGISTER csi_tadp_tx_0_INT_FORCE_FAP_PHY_FATAL_reg Address hc0019368
_csi_tadp_tx_0_INT_FORCE_FAP_PHY_FATAL_reg = 3221328744 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_force_phy_errsotsynchs_0 = hc0019368 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_errsotsynchs_0 OpCode:  Replace/And/Or
csi_tadp_tx_0_force_phy_errsotsynchs_1 = hc0019368 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_errsotsynchs_1 OpCode:  Replace/And/Or
csi_tadp_tx_0_force_phy_errsotsynchs_2 = hc0019368 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_errsotsynchs_2 OpCode:  Replace/And/Or
csi_tadp_tx_0_force_phy_errsotsynchs_3 = hc0019368 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_errsotsynchs_3 OpCode:  Replace/And/Or
csi_tadp_tx_0_reserved_4 = hc0019368 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_4 OpCode:  Replace/And/Or
csi_tadp_tx_0_reserved_5 = hc0019368 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_5 OpCode:  Replace/And/Or
csi_tadp_tx_0_reserved_6 = hc0019368 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_6 OpCode:  Replace/And/Or
csi_tadp_tx_0_reserved_7 = hc0019368 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_7 OpCode:  Replace/And/Or
csi_tadp_tx_0_force_err_deskew = hc0019368 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_deskew OpCode:  Replace/And/Or
csi_tadp_tx_0_reserved_15_9 = hc0019368 9 7 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_15_9 OpCode:  Replace/And/Or
csi_tadp_tx_0_force_phy_rxinvalidcodehs_0 = hc0019368 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_rxinvalidcodehs_0 OpCode:  Replace/And/Or
csi_tadp_tx_0_force_phy_rxinvalidcodehs_1 = hc0019368 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_rxinvalidcodehs_1 OpCode:  Replace/And/Or
csi_tadp_tx_0_force_phy_rxinvalidcodehs_2 = hc0019368 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_rxinvalidcodehs_2 OpCode:  Replace/And/Or
csi_tadp_tx_0_reserved_31_19 = hc0019368 19 13 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_19 OpCode:  Replace/And/Or



; REGISTER csi_tadp_tx_0_INT_MSK_FAP_PKT_FATAL_reg Address hc0019374
_csi_tadp_tx_0_INT_MSK_FAP_PKT_FATAL_reg = 3221328756 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_mask_err_ecc_double = hc0019374 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_ecc_double Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_shorter_payload = hc0019374 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_shorter_payload Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_reserved_31_2 = hc0019374 2 30 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_2 Command Operand, i.e. the value used for the Replace/And/Or operation 



; REGISTER csi_tadp_tx_0_INT_FORCE_FAP_PKT_FATAL_reg Address hc0019378
_csi_tadp_tx_0_INT_FORCE_FAP_PKT_FATAL_reg = 3221328760 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_force_err_ecc_double = hc0019378 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_ecc_double OpCode:  Replace/And/Or
csi_tadp_tx_0_force_shorter_payload = hc0019378 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_shorter_payload OpCode:  Replace/And/Or
csi_tadp_tx_0_reserved_31_2 = hc0019378 2 30 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_2 OpCode:  Replace/And/Or



; REGISTER csi_tadp_tx_0_INT_MSK_FAP_PHY_reg Address hc0019394
_csi_tadp_tx_0_INT_MSK_FAP_PHY_reg = 3221328788 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_mask_phy_errsoths_0 = hc0019394 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_errsoths_0 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_phy_errsoths_1 = hc0019394 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_errsoths_1 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_phy_errsoths_2 = hc0019394 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_errsoths_2 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_phy_errsoths_3 = hc0019394 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_errsoths_3 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_reserved_4 = hc0019394 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_4 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_reserved_5 = hc0019394 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_5 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_reserved_6 = hc0019394 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_6 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_reserved_7 = hc0019394 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_7 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_reserved_15_8 = hc0019394 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_15_8 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_phy_erresc_0 = hc0019394 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_erresc_0 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_phy_erresc_1 = hc0019394 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_erresc_1 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_phy_erresc_2 = hc0019394 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_erresc_2 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_phy_erresc_3 = hc0019394 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_phy_erresc_3 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_reserved_20 = hc0019394 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_20 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_reserved_21 = hc0019394 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_21 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_reserved_22 = hc0019394 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_22 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_reserved_23 = hc0019394 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_23 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_reserved_31_24 = hc0019394 24 8 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_24 Command Operand, i.e. the value used for the Replace/And/Or operation 



; REGISTER csi_tadp_tx_0_INT_FORCE_FAP_PHY_reg Address hc0019398
_csi_tadp_tx_0_INT_FORCE_FAP_PHY_reg = 3221328792 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_force_phy_errsoths_0 = hc0019398 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_errsoths_0 
csi_tadp_tx_0_force_phy_errsoths_1 = hc0019398 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_errsoths_1 
csi_tadp_tx_0_force_phy_errsoths_2 = hc0019398 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_errsoths_2 
csi_tadp_tx_0_force_phy_errsoths_3 = hc0019398 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_errsoths_3 
csi_tadp_tx_0_reserved_4 = hc0019398 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_4 
csi_tadp_tx_0_reserved_5 = hc0019398 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_5 
csi_tadp_tx_0_reserved_6 = hc0019398 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_6 
csi_tadp_tx_0_reserved_7 = hc0019398 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_7 
csi_tadp_tx_0_reserved_15_8 = hc0019398 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_15_8 
csi_tadp_tx_0_force_phy_erresc_0 = hc0019398 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_erresc_0 
csi_tadp_tx_0_force_phy_erresc_1 = hc0019398 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_erresc_1 
csi_tadp_tx_0_force_phy_erresc_2 = hc0019398 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_erresc_2 
csi_tadp_tx_0_force_phy_erresc_3 = hc0019398 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_phy_erresc_3 
csi_tadp_tx_0_reserved_20 = hc0019398 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_20 
csi_tadp_tx_0_reserved_21 = hc0019398 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_21 
csi_tadp_tx_0_reserved_22 = hc0019398 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_22 
csi_tadp_tx_0_reserved_23 = hc0019398 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_reserved_23 
csi_tadp_tx_0_reserved_31_24 = hc0019398 24 8 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_24 



; REGISTER csi_tadp_tx_0_INT_MSK_FAP_LINE_reg Address hc00193b4
_csi_tadp_tx_0_INT_MSK_FAP_LINE_reg = 3221328820 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_mask_err_l_bndry_match_di0 = hc00193b4 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_bndry_match_di0 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_err_l_bndry_match_di1 = hc00193b4 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_bndry_match_di1 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_err_l_bndry_match_di2 = hc00193b4 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_bndry_match_di2 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_err_l_bndry_match_di3 = hc00193b4 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_bndry_match_di3 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_err_l_bndry_match_di4 = hc00193b4 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_bndry_match_di4 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_err_l_bndry_match_di5 = hc00193b4 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_bndry_match_di5 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_err_l_bndry_match_di6 = hc00193b4 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_bndry_match_di6 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_err_l_bndry_match_di7 = hc00193b4 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_bndry_match_di7 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_reserved_15_8 = hc00193b4 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_15_8 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_err_l_seq_di0 = hc00193b4 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_seq_di0 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_err_l_seq_di1 = hc00193b4 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_seq_di1 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_err_l_seq_di2 = hc00193b4 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_seq_di2 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_err_l_seq_di3 = hc00193b4 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_seq_di3 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_err_l_seq_di4 = hc00193b4 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_seq_di4 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_err_l_seq_di5 = hc00193b4 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_seq_di5 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_err_l_seq_di6 = hc00193b4 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_seq_di6 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_mask_err_l_seq_di7 = hc00193b4 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_mask_err_l_seq_di7 Command Operand, i.e. the value used for the Replace/And/Or operation 
csi_tadp_tx_0_reserved_31_24 = hc00193b4 24 8 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_24 Command Operand, i.e. the value used for the Replace/And/Or operation 



; REGISTER csi_tadp_tx_0_INT_FORCE_FAP_LINE_reg Address hc00193b8
_csi_tadp_tx_0_INT_FORCE_FAP_LINE_reg = 3221328824 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_force_err_l_bndry_match_di0 = hc00193b8 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_bndry_match_di0 OpCode:  Replace/And/Or
csi_tadp_tx_0_force_err_l_bndry_match_di1 = hc00193b8 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_bndry_match_di1 OpCode:  Replace/And/Or
csi_tadp_tx_0_force_err_l_bndry_match_di2 = hc00193b8 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_bndry_match_di2 OpCode:  Replace/And/Or
csi_tadp_tx_0_force_err_l_bndry_match_di3 = hc00193b8 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_bndry_match_di3 OpCode:  Replace/And/Or
csi_tadp_tx_0_force_err_l_bndry_match_di4 = hc00193b8 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_bndry_match_di4 OpCode:  Replace/And/Or
csi_tadp_tx_0_force_err_l_bndry_match_di5 = hc00193b8 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_bndry_match_di5 OpCode:  Replace/And/Or
csi_tadp_tx_0_force_err_l_bndry_match_di6 = hc00193b8 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_bndry_match_di6 OpCode:  Replace/And/Or
csi_tadp_tx_0_force_err_l_bndry_match_di7 = hc00193b8 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_bndry_match_di7 OpCode:  Replace/And/Or
csi_tadp_tx_0_reserved_15_8 = hc00193b8 8 8 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_15_8 OpCode:  Replace/And/Or
csi_tadp_tx_0_force_err_l_seq_di0 = hc00193b8 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_seq_di0 OpCode:  Replace/And/Or
csi_tadp_tx_0_force_err_l_seq_di1 = hc00193b8 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_seq_di1 OpCode:  Replace/And/Or
csi_tadp_tx_0_force_err_l_seq_di2 = hc00193b8 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_seq_di2 OpCode:  Replace/And/Or
csi_tadp_tx_0_force_err_l_seq_di3 = hc00193b8 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_seq_di3 OpCode:  Replace/And/Or
csi_tadp_tx_0_force_err_l_seq_di4 = hc00193b8 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_seq_di4 OpCode:  Replace/And/Or
csi_tadp_tx_0_force_err_l_seq_di5 = hc00193b8 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_seq_di5 OpCode:  Replace/And/Or
csi_tadp_tx_0_force_err_l_seq_di6 = hc00193b8 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_seq_di6 OpCode:  Replace/And/Or
csi_tadp_tx_0_force_err_l_seq_di7 = hc00193b8 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_force_err_l_seq_di7 OpCode:  Replace/And/Or
csi_tadp_tx_0_reserved_31_24 = hc00193b8 24 8 h0 RW HEX
; Desc_csi_tadp_tx_0_reserved_31_24 OpCode:  Replace/And/Or



; REGISTER csi_tadp_tx_0_INT_MSK_FAP_BNDRY_FRAME_FATAL_reg Address hc0019424
_csi_tadp_tx_0_INT_MSK_FAP_BNDRY_FRAME_FATAL_reg = 3221328932 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_err_f_bndry_match_vc0 = hc0019424 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc0  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc1 = hc0019424 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc1  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc2 = hc0019424 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc2  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc3 = hc0019424 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc3  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc4 = hc0019424 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc4  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc5 = hc0019424 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc5  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc6 = hc0019424 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc6  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc7 = hc0019424 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc7  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc8 = hc0019424 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc8  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc9 = hc0019424 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc9  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc10 = hc0019424 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc10  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc11 = hc0019424 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc11  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc12 = hc0019424 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc12  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc13 = hc0019424 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc13  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc14 = hc0019424 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc14  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc15 = hc0019424 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc15  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc16 = hc0019424 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc16  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc17 = hc0019424 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc17  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc18 = hc0019424 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc18  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc19 = hc0019424 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc19  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc20 = hc0019424 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc20  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc21 = hc0019424 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc21  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc22 = hc0019424 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc22  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc23 = hc0019424 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc23  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc24 = hc0019424 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc24  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc25 = hc0019424 25 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc25  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc26 = hc0019424 26 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc26  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc27 = hc0019424 27 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc27  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc28 = hc0019424 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc28  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc29 = hc0019424 29 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc29  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc30 = hc0019424 30 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc30  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side
csi_tadp_tx_0_err_f_bndry_match_vc31 = hc0019424 31 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc31  32 MSBits of the Good BIST Packet counter sensed at the RX BIST side



; REGISTER csi_tadp_tx_0_INT_FORCE_FAP_BNDRY_FRAME_FATAL_reg Address hc0019428
_csi_tadp_tx_0_INT_FORCE_FAP_BNDRY_FRAME_FATAL_reg = 3221328936 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_err_f_bndry_match_vc0 = hc0019428 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc0  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc1 = hc0019428 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc1  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc2 = hc0019428 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc2  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc3 = hc0019428 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc3  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc4 = hc0019428 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc4  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc5 = hc0019428 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc5  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc6 = hc0019428 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc6  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc7 = hc0019428 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc7  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc8 = hc0019428 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc8  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc9 = hc0019428 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc9  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc10 = hc0019428 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc10  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc11 = hc0019428 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc11  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc12 = hc0019428 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc12  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc13 = hc0019428 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc13  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc14 = hc0019428 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc14  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc15 = hc0019428 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc15  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc16 = hc0019428 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc16  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc17 = hc0019428 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc17  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc18 = hc0019428 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc18  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc19 = hc0019428 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc19  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc20 = hc0019428 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc20  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc21 = hc0019428 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc21  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc22 = hc0019428 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc22  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc23 = hc0019428 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc23  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc24 = hc0019428 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc24  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc25 = hc0019428 25 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc25  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc26 = hc0019428 26 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc26  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc27 = hc0019428 27 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc27  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc28 = hc0019428 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc28  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc29 = hc0019428 29 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc29  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc30 = hc0019428 30 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc30  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)
csi_tadp_tx_0_err_f_bndry_match_vc31 = hc0019428 31 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_bndry_match_vc31  16 (32) MSBits of theTotal BIST Packet Received at the RX BIST side with Bad CRC32 (After RTS)



; REGISTER csi_tadp_tx_0_INT_MSK_FAP_SEQ_FRAME_FATAL_reg Address hc0019434
_csi_tadp_tx_0_INT_MSK_FAP_SEQ_FRAME_FATAL_reg = 3221328948 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_err_f_seq_vc0 = hc0019434 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc0 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc1 = hc0019434 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc1 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc2 = hc0019434 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc2 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc3 = hc0019434 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc3 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc4 = hc0019434 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc4 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc5 = hc0019434 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc5 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc6 = hc0019434 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc6 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc7 = hc0019434 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc7 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc8 = hc0019434 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc8 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc9 = hc0019434 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc9 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc10 = hc0019434 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc10 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc11 = hc0019434 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc11 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc12 = hc0019434 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc12 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc13 = hc0019434 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc13 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc14 = hc0019434 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc14 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc15 = hc0019434 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc15 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc16 = hc0019434 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc16 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc17 = hc0019434 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc17 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc18 = hc0019434 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc18 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc19 = hc0019434 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc19 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc20 = hc0019434 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc20 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc21 = hc0019434 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc21 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc22 = hc0019434 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc22 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc23 = hc0019434 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc23 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc24 = hc0019434 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc24 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc25 = hc0019434 25 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc25 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc26 = hc0019434 26 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc26 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc27 = hc0019434 27 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc27 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc28 = hc0019434 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc28 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc29 = hc0019434 29 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc29 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc30 = hc0019434 30 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc30 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets
csi_tadp_tx_0_err_f_seq_vc31 = hc0019434 31 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc31 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, i.e. not including payload bits of missing Packets



; REGISTER csi_tadp_tx_0_INT_FORCE_FAP_SEQ_FRAME_FATAL_reg Address hc0019438
_csi_tadp_tx_0_INT_FORCE_FAP_SEQ_FRAME_FATAL_reg = 3221328952 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_err_f_seq_vc0 = hc0019438 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc0  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc1 = hc0019438 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc1  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc2 = hc0019438 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc2  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc3 = hc0019438 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc3  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc4 = hc0019438 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc4  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc5 = hc0019438 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc5  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc6 = hc0019438 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc6  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc7 = hc0019438 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc7  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc8 = hc0019438 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc8  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc9 = hc0019438 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc9  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc10 = hc0019438 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc10  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc11 = hc0019438 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc11  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc12 = hc0019438 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc12  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc13 = hc0019438 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc13  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc14 = hc0019438 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc14  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc15 = hc0019438 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc15  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc16 = hc0019438 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc16  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc17 = hc0019438 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc17  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc18 = hc0019438 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc18  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc19 = hc0019438 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc19  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc20 = hc0019438 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc20  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc21 = hc0019438 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc21  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc22 = hc0019438 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc22  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc23 = hc0019438 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc23  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc24 = hc0019438 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc24  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc25 = hc0019438 25 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc25  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc26 = hc0019438 26 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc26  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc27 = hc0019438 27 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc27  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc28 = hc0019438 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc28  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc29 = hc0019438 29 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc29  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc30 = hc0019438 30 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc30  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)
csi_tadp_tx_0_err_f_seq_vc31 = hc0019438 31 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_f_seq_vc31  16 (32) MSBits of the Total BIST Packet Missing at the RX BIST (After RTS)



; REGISTER csi_tadp_tx_0_INT_MSK_FAP_CRC_FRAME_FATAL_reg Address hc0019444
_csi_tadp_tx_0_INT_MSK_FAP_CRC_FRAME_FATAL_reg = 3221328964 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_err_frame_data_vc0 = hc0019444 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc0 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc1 = hc0019444 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc1 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc2 = hc0019444 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc2 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc3 = hc0019444 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc3 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc4 = hc0019444 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc4 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc5 = hc0019444 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc5 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc6 = hc0019444 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc6 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc7 = hc0019444 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc7 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc8 = hc0019444 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc8 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc9 = hc0019444 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc9 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc10 = hc0019444 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc10 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc11 = hc0019444 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc11 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc12 = hc0019444 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc12 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc13 = hc0019444 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc13 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc14 = hc0019444 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc14 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc15 = hc0019444 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc15 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc16 = hc0019444 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc16 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc17 = hc0019444 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc17 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc18 = hc0019444 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc18 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc19 = hc0019444 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc19 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc20 = hc0019444 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc20 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc21 = hc0019444 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc21 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc22 = hc0019444 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc22 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc23 = hc0019444 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc23 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc24 = hc0019444 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc24 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc25 = hc0019444 25 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc25 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc26 = hc0019444 26 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc26 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc27 = hc0019444 27 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc27 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc28 = hc0019444 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc28 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc29 = hc0019444 29 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc29 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc30 = hc0019444 30 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc30 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value
csi_tadp_tx_0_err_frame_data_vc31 = hc0019444 31 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc31 32 MSBits of the Total BIST bits received in BIST Packet Payload at the RX BIST side, that are not matching the expected value



; REGISTER csi_tadp_tx_0_INT_FORCE_FAP_CRC_FRAME_FATAL_reg Address hc0019448
_csi_tadp_tx_0_INT_FORCE_FAP_CRC_FRAME_FATAL_reg = 3221328968 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_err_frame_data_vc0 = hc0019448 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc0 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc1 = hc0019448 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc1 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc2 = hc0019448 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc2 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc3 = hc0019448 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc3 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc4 = hc0019448 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc4 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc5 = hc0019448 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc5 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc6 = hc0019448 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc6 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc7 = hc0019448 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc7 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc8 = hc0019448 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc8 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc9 = hc0019448 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc9 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc10 = hc0019448 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc10 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc11 = hc0019448 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc11 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc12 = hc0019448 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc12 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc13 = hc0019448 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc13 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc14 = hc0019448 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc14 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc15 = hc0019448 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc15 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc16 = hc0019448 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc16 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc17 = hc0019448 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc17 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc18 = hc0019448 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc18 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc19 = hc0019448 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc19 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc20 = hc0019448 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc20 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc21 = hc0019448 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc21 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc22 = hc0019448 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc22 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc23 = hc0019448 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc23 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc24 = hc0019448 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc24 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc25 = hc0019448 25 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc25 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc26 = hc0019448 26 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc26 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc27 = hc0019448 27 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc27 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc28 = hc0019448 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc28 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc29 = hc0019448 29 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc29 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc30 = hc0019448 30 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc30 QoS for generated BIST A-Packets
csi_tadp_tx_0_err_frame_data_vc31 = hc0019448 31 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_frame_data_vc31 QoS for generated BIST A-Packets



; REGISTER csi_tadp_tx_0_INT_MSK_FAP_PLD_CRC_FATAL_reg Address hc0019454
_csi_tadp_tx_0_INT_MSK_FAP_PLD_CRC_FATAL_reg = 3221328980 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_err_crc_vc0 = hc0019454 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc0 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc1 = hc0019454 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc1 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc2 = hc0019454 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc2 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc3 = hc0019454 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc3 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc4 = hc0019454 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc4 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc5 = hc0019454 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc5 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc6 = hc0019454 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc6 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc7 = hc0019454 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc7 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc8 = hc0019454 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc8 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc9 = hc0019454 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc9 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc10 = hc0019454 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc10 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc11 = hc0019454 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc11 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc12 = hc0019454 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc12 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc13 = hc0019454 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc13 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc14 = hc0019454 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc14 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc15 = hc0019454 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc15 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc16 = hc0019454 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc16 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc17 = hc0019454 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc17 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc18 = hc0019454 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc18 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc19 = hc0019454 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc19 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc20 = hc0019454 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc20 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc21 = hc0019454 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc21 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc22 = hc0019454 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc22 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc23 = hc0019454 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc23 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc24 = hc0019454 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc24 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc25 = hc0019454 25 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc25 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc26 = hc0019454 26 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc26 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc27 = hc0019454 27 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc27 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc28 = hc0019454 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc28 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc29 = hc0019454 29 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc29 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc30 = hc0019454 30 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc30 Odd Byte indication for generated BIST A-Packets
csi_tadp_tx_0_err_crc_vc31 = hc0019454 31 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc31 Odd Byte indication for generated BIST A-Packets



; REGISTER csi_tadp_tx_0_INT_FORCE_FAP_PLD_CRC_FATAL_reg Address hc0019458
_csi_tadp_tx_0_INT_FORCE_FAP_PLD_CRC_FATAL_reg = 3221328984 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_err_crc_vc0 = hc0019458 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc0 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc1 = hc0019458 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc1 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc2 = hc0019458 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc2 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc3 = hc0019458 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc3 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc4 = hc0019458 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc4 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc5 = hc0019458 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc5 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc6 = hc0019458 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc6 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc7 = hc0019458 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc7 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc8 = hc0019458 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc8 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc9 = hc0019458 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc9 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc10 = hc0019458 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc10 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc11 = hc0019458 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc11 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc12 = hc0019458 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc12 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc13 = hc0019458 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc13 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc14 = hc0019458 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc14 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc15 = hc0019458 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc15 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc16 = hc0019458 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc16 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc17 = hc0019458 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc17 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc18 = hc0019458 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc18 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc19 = hc0019458 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc19 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc20 = hc0019458 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc20 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc21 = hc0019458 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc21 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc22 = hc0019458 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc22 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc23 = hc0019458 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc23 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc24 = hc0019458 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc24 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc25 = hc0019458 25 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc25 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc26 = hc0019458 26 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc26 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc27 = hc0019458 27 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc27 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc28 = hc0019458 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc28 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc29 = hc0019458 29 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc29 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc30 = hc0019458 30 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc30 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 
csi_tadp_tx_0_err_crc_vc31 = hc0019458 31 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_crc_vc31 Instructions to TX BIST how to set the Order A-Header field (Basic & Extended) for A-Packets generation.sOrder=0: the Order bits of all BIST A-Packets shall be set to 2'b00sOrder=1: the Order bits of all BIST A-Packets shall be set to 2'b01 sOrder=2: the Order bits of all BIST A-Packets shall be set to 2'b10 sOrder=3: the Order bits of all BIST A-Packets shall be set to 2'b11 



; REGISTER csi_tadp_tx_0_INT_MSK_FAP_DATA_ID_reg Address hc0019464
_csi_tadp_tx_0_INT_MSK_FAP_DATA_ID_reg = 3221328996 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_err_id_vc0 = hc0019464 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc0 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc1 = hc0019464 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc1 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc2 = hc0019464 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc2 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc3 = hc0019464 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc3 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc4 = hc0019464 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc4 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc5 = hc0019464 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc5 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc6 = hc0019464 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc6 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc7 = hc0019464 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc7 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc8 = hc0019464 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc8 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc9 = hc0019464 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc9 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc10 = hc0019464 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc10 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc11 = hc0019464 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc11 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc12 = hc0019464 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc12 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc13 = hc0019464 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc13 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc14 = hc0019464 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc14 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc15 = hc0019464 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc15 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc16 = hc0019464 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc16 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc17 = hc0019464 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc17 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc18 = hc0019464 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc18 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc19 = hc0019464 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc19 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc20 = hc0019464 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc20 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc21 = hc0019464 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc21 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc22 = hc0019464 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc22 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc23 = hc0019464 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc23 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc24 = hc0019464 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc24 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc25 = hc0019464 25 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc25 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc26 = hc0019464 26 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc26 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc27 = hc0019464 27 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc27 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc28 = hc0019464 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc28 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc29 = hc0019464 29 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc29 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc30 = hc0019464 30 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc30 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 
csi_tadp_tx_0_err_id_vc31 = hc0019464 31 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc31 Max Time Pacing between BIST Pkts (number of 250MHz Cycles). Fixed pacing If bistR_Max=bistR_Min, otherwize, random pacing 



; REGISTER csi_tadp_tx_0_INT_FORCE_FAP_DATA_ID_reg Address hc0019468
_csi_tadp_tx_0_INT_FORCE_FAP_DATA_ID_reg = 3221329000 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_err_id_vc0 = hc0019468 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc0 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc1 = hc0019468 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc1 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc2 = hc0019468 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc2 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc3 = hc0019468 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc3 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc4 = hc0019468 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc4 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc5 = hc0019468 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc5 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc6 = hc0019468 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc6 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc7 = hc0019468 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc7 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc8 = hc0019468 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc8 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc9 = hc0019468 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc9 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc10 = hc0019468 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc10 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc11 = hc0019468 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc11 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc12 = hc0019468 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc12 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc13 = hc0019468 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc13 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc14 = hc0019468 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc14 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc15 = hc0019468 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc15 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc16 = hc0019468 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc16 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc17 = hc0019468 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc17 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc18 = hc0019468 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc18 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc19 = hc0019468 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc19 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc20 = hc0019468 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc20 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc21 = hc0019468 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc21 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc22 = hc0019468 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc22 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc23 = hc0019468 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc23 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc24 = hc0019468 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc24 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc25 = hc0019468 25 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc25 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc26 = hc0019468 26 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc26 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc27 = hc0019468 27 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc27 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc28 = hc0019468 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc28 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc29 = hc0019468 29 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc29 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc30 = hc0019468 30 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc30 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us
csi_tadp_tx_0_err_id_vc31 = hc0019468 31 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_id_vc31 FW Sample all BIST Reg once in a period, and store them in Sticky memory. The Timeout units are us



; REGISTER csi_tadp_tx_0_INT_MSK_FAP_ECC_CORRECTED_reg Address hc0019474
_csi_tadp_tx_0_INT_MSK_FAP_ECC_CORRECTED_reg = 3221329012 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_err_ecc_corrected_vc0 = hc0019474 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc0 32-LSBits
csi_tadp_tx_0_err_ecc_corrected_vc1 = hc0019474 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc1 32-LSBits
csi_tadp_tx_0_err_ecc_corrected_vc2 = hc0019474 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc2 32-LSBits
csi_tadp_tx_0_err_ecc_corrected_vc3 = hc0019474 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc3 32-LSBits
csi_tadp_tx_0_err_ecc_corrected_vc4 = hc0019474 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc4 32-LSBits
csi_tadp_tx_0_err_ecc_corrected_vc5 = hc0019474 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc5 32-LSBits
csi_tadp_tx_0_err_ecc_corrected_vc6 = hc0019474 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc6 32-LSBits
csi_tadp_tx_0_err_ecc_corrected_vc7 = hc0019474 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc7 32-LSBits
csi_tadp_tx_0_err_ecc_corrected_vc8 = hc0019474 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc8 32-LSBits
csi_tadp_tx_0_err_ecc_corrected_vc9 = hc0019474 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc9 32-LSBits
csi_tadp_tx_0_err_ecc_corrected_vc10 = hc0019474 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc10 32-LSBits
csi_tadp_tx_0_err_ecc_corrected_vc11 = hc0019474 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc11 32-LSBits
csi_tadp_tx_0_err_ecc_corrected_vc12 = hc0019474 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc12 32-LSBits
csi_tadp_tx_0_err_ecc_corrected_vc13 = hc0019474 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc13 32-LSBits
csi_tadp_tx_0_err_ecc_corrected_vc14 = hc0019474 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc14 32-LSBits
csi_tadp_tx_0_err_ecc_corrected_vc15 = hc0019474 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc15 32-LSBits
csi_tadp_tx_0_err_ecc_corrected16 = hc0019474 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected16 32-LSBits
csi_tadp_tx_0_err_ecc_corrected17 = hc0019474 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected17 32-LSBits
csi_tadp_tx_0_err_ecc_corrected18 = hc0019474 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected18 32-LSBits
csi_tadp_tx_0_err_ecc_corrected19 = hc0019474 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected19 32-LSBits
csi_tadp_tx_0_err_ecc_corrected20 = hc0019474 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected20 32-LSBits
csi_tadp_tx_0_err_ecc_corrected21 = hc0019474 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected21 32-LSBits
csi_tadp_tx_0_err_ecc_corrected22 = hc0019474 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected22 32-LSBits
csi_tadp_tx_0_err_ecc_corrected23 = hc0019474 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected23 32-LSBits
csi_tadp_tx_0_err_ecc_corrected24 = hc0019474 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected24 32-LSBits
csi_tadp_tx_0_err_ecc_corrected25 = hc0019474 25 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected25 32-LSBits
csi_tadp_tx_0_err_ecc_corrected26 = hc0019474 26 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected26 32-LSBits
csi_tadp_tx_0_err_ecc_corrected27 = hc0019474 27 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected27 32-LSBits
csi_tadp_tx_0_err_ecc_corrected28 = hc0019474 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected28 32-LSBits
csi_tadp_tx_0_err_ecc_corrected29 = hc0019474 29 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected29 32-LSBits
csi_tadp_tx_0_err_ecc_corrected30 = hc0019474 30 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected30 32-LSBits
csi_tadp_tx_0_err_ecc_corrected31 = hc0019474 31 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected31 32-LSBits



; REGISTER csi_tadp_tx_0_INT_FORCE_FAP_ECC_CORRECTED_reg Address hc0019478
_csi_tadp_tx_0_INT_FORCE_FAP_ECC_CORRECTED_reg = 3221329016 0 32 b00000000000000000000000000000000 RW
csi_tadp_tx_0_err_ecc_corrected_vc0 = hc0019478 0 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc0 32-MSBits
csi_tadp_tx_0_err_ecc_corrected_vc1 = hc0019478 1 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc1 32-MSBits
csi_tadp_tx_0_err_ecc_corrected_vc2 = hc0019478 2 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc2 32-MSBits
csi_tadp_tx_0_err_ecc_corrected_vc3 = hc0019478 3 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc3 32-MSBits
csi_tadp_tx_0_err_ecc_corrected_vc4 = hc0019478 4 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc4 32-MSBits
csi_tadp_tx_0_err_ecc_corrected_vc5 = hc0019478 5 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc5 32-MSBits
csi_tadp_tx_0_err_ecc_corrected_vc6 = hc0019478 6 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc6 32-MSBits
csi_tadp_tx_0_err_ecc_corrected_vc7 = hc0019478 7 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc7 32-MSBits
csi_tadp_tx_0_err_ecc_corrected_vc8 = hc0019478 8 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc8 32-MSBits
csi_tadp_tx_0_err_ecc_corrected_vc9 = hc0019478 9 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc9 32-MSBits
csi_tadp_tx_0_err_ecc_corrected_vc10 = hc0019478 10 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc10 32-MSBits
csi_tadp_tx_0_err_ecc_corrected_vc11 = hc0019478 11 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc11 32-MSBits
csi_tadp_tx_0_err_ecc_corrected_vc12 = hc0019478 12 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc12 32-MSBits
csi_tadp_tx_0_err_ecc_corrected_vc13 = hc0019478 13 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc13 32-MSBits
csi_tadp_tx_0_err_ecc_corrected_vc14 = hc0019478 14 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc14 32-MSBits
csi_tadp_tx_0_err_ecc_corrected_vc15 = hc0019478 15 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected_vc15 32-MSBits
csi_tadp_tx_0_err_ecc_corrected16 = hc0019478 16 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected16 32-MSBits
csi_tadp_tx_0_err_ecc_corrected17 = hc0019478 17 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected17 32-MSBits
csi_tadp_tx_0_err_ecc_corrected18 = hc0019478 18 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected18 32-MSBits
csi_tadp_tx_0_err_ecc_corrected19 = hc0019478 19 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected19 32-MSBits
csi_tadp_tx_0_err_ecc_corrected20 = hc0019478 20 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected20 32-MSBits
csi_tadp_tx_0_err_ecc_corrected21 = hc0019478 21 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected21 32-MSBits
csi_tadp_tx_0_err_ecc_corrected22 = hc0019478 22 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected22 32-MSBits
csi_tadp_tx_0_err_ecc_corrected23 = hc0019478 23 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected23 32-MSBits
csi_tadp_tx_0_err_ecc_corrected24 = hc0019478 24 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected24 32-MSBits
csi_tadp_tx_0_err_ecc_corrected25 = hc0019478 25 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected25 32-MSBits
csi_tadp_tx_0_err_ecc_corrected26 = hc0019478 26 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected26 32-MSBits
csi_tadp_tx_0_err_ecc_corrected27 = hc0019478 27 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected27 32-MSBits
csi_tadp_tx_0_err_ecc_corrected28 = hc0019478 28 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected28 32-MSBits
csi_tadp_tx_0_err_ecc_corrected29 = hc0019478 29 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected29 32-MSBits
csi_tadp_tx_0_err_ecc_corrected30 = hc0019478 30 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected30 32-MSBits
csi_tadp_tx_0_err_ecc_corrected31 = hc0019478 31 1 h0 RW BIN
; Desc_csi_tadp_tx_0_err_ecc_corrected31 32-MSBits



